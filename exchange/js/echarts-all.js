! function(f) {
	var d, h;
	! function() {
		function m(x, z) {
			if (!z) {
				return x
			}
			if (0 === x.indexOf(".")) {
				var u = z.split("/"),
					w = x.split("/"),
					y = u.length - 1,
					q = w.length,
					p = 0,
					A = 0;
				x: for (var v = 0; q > v; v++) {
					switch (w[v]) {
						case "..":
							if (!(y > p)) {
								break x
							}
							p++, A++;
							break;
						case ".":
							A++;
							break;
						default:
							break x
					}
				}
				return u.length = y - p, w = w.slice(A), u.concat(w).join("/")
			}
			return x
		}

		function k(e) {
			function o(q, p) {
				if ("string" == typeof q) {
					var i = a[q];
					return i || (i = n(m(q, e)), a[q] = i), i
				}
				q instanceof Array && (p = p || function() {}, p.apply(this, j(q, p, e)))
			}
			var a = {};
			return o
		}

		function j(e, t, v) {
			for (var w = [], r = l[v], u = 0, p = Math.min(e.length, t.length); p > u; u++) {
				var o, q = m(e[u], v);
				switch (q) {
					case "require":
						o = r && r.require || d;
						break;
					case "exports":
						o = r.exports;
						break;
					case "module":
						o = r;
						break;
					default:
						o = n(q)
				}
				w.push(o)
			}
			return w
		}

		function n(p) {
			var o = l[p];
			if (!o) {
				throw new Error("No " + p)
			}
			if (!o.defined) {
				var q = o.factory,
					a = q.apply(this, j(o.deps || [], q, p));
				"undefined" != typeof a && (o.exports = a), o.defined = 1
			}
			return o.exports
		}
		var l = {};
		h = function(i, a, o) {
			l[i] = {
				id: i,
				deps: a,
				factory: o,
				defined: 0,
				exports: {},
				require: k(i)
			}
		}, d = k("")
	}(), h("echarts", ["echarts/echarts"], function(a) {
		return a
	}), h("echarts/echarts", ["require", "./config", "zrender/tool/util", "zrender/tool/event", "zrender/tool/env", "zrender", "zrender/config", "./chart/island", "./component/toolbox", "./component", "./component/title", "./component/tooltip", "./component/legend", "./util/ecData", "./chart", "zrender/tool/color", "./component/timeline", "zrender/shape/Image", "zrender/loadingEffect/Bar", "zrender/loadingEffect/Bubble", "zrender/loadingEffect/DynamicLine", "zrender/loadingEffect/Ring", "zrender/loadingEffect/Spin", "zrender/loadingEffect/Whirling", "./theme/macarons", "./theme/infographic"], function(z) {
		function C() {
			j.Dispatcher.call(this)
		}

		function p(a) {
			a.innerHTML = "", this._themeConfig = {}, this.dom = a, this._connected = !1, this._status = {
				dragIn: !1,
				dragOut: !1,
				needRefresh: !1
			}, this._curEventType = !1, this._chartList = [], this._messageCenter = new C, this._messageCenterOutSide = new C, this.resize = this.resize(), this._init()
		}

		function x(H, E, J, m, l) {
			for (var I = H._chartList, G = I.length; G--;) {
				var F = I[G];
				"function" == typeof F[E] && F[E](J, m, l)
			}
		}
		var B = z("./config"),
			k = z("zrender/tool/util"),
			j = z("zrender/tool/event"),
			D = {},
			w = z("zrender/tool/env").canvasSupported,
			y = new Date - 0,
			u = {},
			q = "_echarts_instance_";
		D.version = "2.2.0", D.dependencies = {
			zrender: "2.0.7"
		}, D.init = function(m, l) {
			var e = z("zrender");
			e.version.replace(".", "") - 0 < D.dependencies.zrender.replace(".", "") - 0 && console.error("ZRender " + e.version + " is too old for ECharts " + D.version + ". Current version need ZRender " + D.dependencies.zrender + "+"), m = m instanceof Array ? m[0] : m;
			var n = m.getAttribute(q);
			return n || (n = y++, m.setAttribute(q, n)), u[n] && u[n].dispose(), u[n] = new p(m), u[n].id = n, u[n].canvasSupported = w, u[n].setTheme(l), u[n]
		}, D.getInstanceById = function(a) {
			return u[a]
		}, k.merge(C.prototype, j.Dispatcher.prototype, !0);
		var v = z("zrender/config").EVENT,
			A = ["CLICK", "DBLCLICK", "MOUSEOVER", "MOUSEOUT", "DRAGSTART", "DRAGEND", "DRAGENTER", "DRAGOVER", "DRAGLEAVE", "DROP"];
		return p.prototype = {
			_init: function() {
				var L = this,
					F = z("zrender").init(this.dom);
				this._zr = F, this._messageCenter.dispatch = function(o, r, m, l) {
					m = m || {}, m.type = o, m.event = r, L._messageCenter.dispatchWithContext(o, m, l), "HOVER" != o && "MOUSEOUT" != o ? setTimeout(function() {
						L._messageCenterOutSide.dispatchWithContext(o, m, l)
					}, 50) : L._messageCenterOutSide.dispatchWithContext(o, m, l)
				}, this._onevent = function(i) {
					return L.__onevent(i)
				};
				for (var J in B.EVENT) {
					"CLICK" != J && "DBLCLICK" != J && "HOVER" != J && "MOUSEOUT" != J && "MAP_ROAM" != J && this._messageCenter.bind(B.EVENT[J], this._onevent, this)
				}
				var E = {};
				this._onzrevent = function(i) {
					return L[E[i.type]](i)
				};
				for (var a = 0, M = A.length; M > a; a++) {
					var I = A[a],
						K = v[I];
					E[K] = "_on" + I.toLowerCase(), F.on(K, this._onzrevent)
				}
				this.chart = {}, this.component = {};
				var H = z("./chart/island");
				this._island = new H(this._themeConfig, this._messageCenter, F, {}, this), this.chart.island = this._island;
				var G = z("./component/toolbox");
				this._toolbox = new G(this._themeConfig, this._messageCenter, F, {}, this), this.component.toolbox = this._toolbox;
				var e = z("./component");
				e.define("title", z("./component/title")), e.define("tooltip", z("./component/tooltip")), e.define("legend", z("./component/legend")), (0 === F.getWidth() || 0 === F.getHeight()) && console.error("Dom’s width & height should be ready before init.")
			},
			__onevent: function(s) {
				s.__echartsId = s.__echartsId || this.id;
				var l = s.__echartsId === this.id;
				switch (this._curEventType || (this._curEventType = s.type), s.type) {
					case B.EVENT.LEGEND_SELECTED:
						this._onlegendSelected(s);
						break;
					case B.EVENT.DATA_ZOOM:
						if (!l) {
							var F = this.component.dataZoom;
							F && (F.silence(!0), F.absoluteZoom(s.zoom), F.silence(!1))
						}
						this._ondataZoom(s);
						break;
					case B.EVENT.DATA_RANGE:
						l && this._ondataRange(s);
						break;
					case B.EVENT.MAGIC_TYPE_CHANGED:
						if (!l) {
							var a = this.component.toolbox;
							a && (a.silence(!0), a.setMagicType(s.magicType), a.silence(!1))
						}
						this._onmagicTypeChanged(s);
						break;
					case B.EVENT.DATA_VIEW_CHANGED:
						l && this._ondataViewChanged(s);
						break;
					case B.EVENT.TOOLTIP_HOVER:
						l && this._tooltipHover(s);
						break;
					case B.EVENT.RESTORE:
						this._onrestore();
						break;
					case B.EVENT.REFRESH:
						l && this._onrefresh(s);
						break;
					case B.EVENT.TOOLTIP_IN_GRID:
					case B.EVENT.TOOLTIP_OUT_GRID:
						if (l) {
							if (this._connected) {
								var E = this.component.grid;
								E && (s.x = (s.event.zrenderX - E.getX()) / E.getWidth(), s.y = (s.event.zrenderY - E.getY()) / E.getHeight())
							}
						} else {
							var E = this.component.grid;
							E && this._zr.trigger("mousemove", {
								connectTrigger: !0,
								zrenderX: E.getX() + s.x * E.getWidth(),
								zrenderY: E.getY() + s.y * E.getHeight()
							})
						}
				}
				if (this._connected && l && this._curEventType === s.type) {
					for (var m in this._connected) {
						this._connected[m].connectedEventHandler(s)
					}
					this._curEventType = null
				}(!l || !this._connected && l) && (this._curEventType = null)
			},
			_onclick: function(i) {
				if (x(this, "onclick", i), i.target) {
					var a = this._eventPackage(i.target);
					a && null != a.seriesIndex && this._messageCenter.dispatch(B.EVENT.CLICK, i.event, a, this)
				}
			},
			_ondblclick: function(i) {
				if (x(this, "ondblclick", i), i.target) {
					var a = this._eventPackage(i.target);
					a && null != a.seriesIndex && this._messageCenter.dispatch(B.EVENT.DBLCLICK, i.event, a, this)
				}
			},
			_onmouseover: function(i) {
				if (i.target) {
					var a = this._eventPackage(i.target);
					a && null != a.seriesIndex && this._messageCenter.dispatch(B.EVENT.HOVER, i.event, a, this)
				}
			},
			_onmouseout: function(i) {
				if (i.target) {
					var a = this._eventPackage(i.target);
					a && null != a.seriesIndex && this._messageCenter.dispatch(B.EVENT.MOUSEOUT, i.event, a, this)
				}
			},
			_ondragstart: function(a) {
				this._status = {
					dragIn: !1,
					dragOut: !1,
					needRefresh: !1
				}, x(this, "ondragstart", a)
			},
			_ondragenter: function(a) {
				x(this, "ondragenter", a)
			},
			_ondragover: function(a) {
				x(this, "ondragover", a)
			},
			_ondragleave: function(a) {
				x(this, "ondragleave", a)
			},
			_ondrop: function(a) {
				x(this, "ondrop", a, this._status), this._island.ondrop(a, this._status)
			},
			_ondragend: function(i) {
				if (x(this, "ondragend", i, this._status), this._timeline && this._timeline.ondragend(i, this._status), this._island.ondragend(i, this._status), this._status.needRefresh) {
					this._syncBackupData(this._option);
					var a = this._messageCenter;
					a.dispatch(B.EVENT.DATA_CHANGED, i.event, this._eventPackage(i.target), this), a.dispatch(B.EVENT.REFRESH, null, null, this)
				}
			},
			_onlegendSelected: function(a) {
				this._status.needRefresh = !1, x(this, "onlegendSelected", a, this._status), this._status.needRefresh && this._messageCenter.dispatch(B.EVENT.REFRESH, null, null, this)
			},
			_ondataZoom: function(a) {
				this._status.needRefresh = !1, x(this, "ondataZoom", a, this._status), this._status.needRefresh && this._messageCenter.dispatch(B.EVENT.REFRESH, null, null, this)
			},
			_ondataRange: function(a) {
				this._clearEffect(), this._status.needRefresh = !1, x(this, "ondataRange", a, this._status), this._status.needRefresh && this._zr.refreshNextFrame()
			},
			_onmagicTypeChanged: function() {
				this._clearEffect(), this._render(this._toolbox.getMagicOption())
			},
			_ondataViewChanged: function(a) {
				this._syncBackupData(a.option), this._messageCenter.dispatch(B.EVENT.DATA_CHANGED, null, a, this), this._messageCenter.dispatch(B.EVENT.REFRESH, null, null, this)
			},
			_tooltipHover: function(i) {
				var a = [];
				x(this, "ontooltipHover", i, a)
			},
			_onrestore: function() {
				this.restore()
			},
			_onrefresh: function(a) {
				this._refreshInside = !0, this.refresh(a), this._refreshInside = !1
			},
			_syncBackupData: function(a) {
				this.component.dataZoom && this.component.dataZoom.syncBackupData(a)
			},
			_eventPackage: function(m) {
				if (m) {
					var o = z("./util/ecData"),
						l = o.get(m, "seriesIndex"),
						e = o.get(m, "dataIndex");
					return e = -1 != l && this.component.dataZoom ? this.component.dataZoom.getRealDataIndex(l, e) : e, {
						seriesIndex: l,
						seriesName: (o.get(m, "series") || {}).name,
						dataIndex: e,
						data: o.get(m, "data"),
						name: o.get(m, "name"),
						value: o.get(m, "value"),
						special: o.get(m, "special")
					}
				}
			},
			_noDataCheck: function(m) {
				for (var l = m.series, s = 0, a = l.length; a > s; s++) {
					if (l[s].type == B.CHART_TYPE_MAP || l[s].data && l[s].data.length > 0 || l[s].markPoint && l[s].markPoint.data && l[s].markPoint.data.length > 0 || l[s].markLine && l[s].markLine.data && l[s].markLine.data.length > 0 || l[s].nodes && l[s].nodes.length > 0 || l[s].links && l[s].links.length > 0 || l[s].matrix && l[s].matrix.length > 0 || l[s].eventList && l[s].eventList.length > 0) {
						return !1
					}
				}
				this.clear();
				var r = this._option && this._option.noDataLoadingOption || this._themeConfig.noDataLoadingOption || B.noDataLoadingOption || {
					text: this._option && this._option.noDataText || this._themeConfig.noDataText || B.noDataText,
					effect: this._option && this._option.noDataEffect || this._themeConfig.noDataEffect || B.noDataEffect
				};
				return this.showLoading(r), !0
			},
			_render: function(Q) {
				if (this._mergeGlobalConifg(Q), !this._noDataCheck(Q)) {
					var E = Q.backgroundColor;
					if (E) {
						if (w || -1 == E.indexOf("rgba")) {
							this.dom.style.backgroundColor = E
						} else {
							var I = E.split(",");
							this.dom.style.filter = "alpha(opacity=" + 100 * I[3].substring(0, I[3].lastIndexOf(")")) + ")", I.length = 3, I[0] = I[0].replace("a", ""), this.dom.style.backgroundColor = I.join(",") + ")"
						}
					}
					this._zr.clearAnimation(), this._chartList = [];
					var l = z("./chart"),
						a = z("./component");
					(Q.xAxis || Q.yAxis) && (Q.grid = Q.grid || {}, Q.dataZoom = Q.dataZoom || {});
					for (var R, J, G, F = ["title", "legend", "tooltip", "dataRange", "roamController", "grid", "dataZoom", "xAxis", "yAxis", "polar"], H = 0, L = F.length; L > H; H++) {
						J = F[H], G = this.component[J], Q[J] ? (G ? G.refresh && G.refresh(Q) : (R = a.get(/^[xy]Axis$/.test(J) ? "axis" : J), G = new R(this._themeConfig, this._messageCenter, this._zr, Q, this, J), this.component[J] = G), this._chartList.push(G)) : G && (G.dispose(), this.component[J] = null, delete this.component[J])
					}
					for (var e, M, P, O = {}, H = 0, L = Q.series.length; L > H; H++) {
						M = Q.series[H].type, M ? O[M] || (O[M] = !0, e = l.get(M), e ? (this.chart[M] ? (P = this.chart[M], P.refresh(Q)) : P = new e(this._themeConfig, this._messageCenter, this._zr, Q, this), this._chartList.push(P), this.chart[M] = P) : console.error(M + " has not been required.")) : console.error("series[" + H + "] chart type has not been defined.")
					}
					for (M in this.chart) {
						M == B.CHART_TYPE_ISLAND || O[M] || (this.chart[M].dispose(), this.chart[M] = null, delete this.chart[M])
					}
					this.component.grid && this.component.grid.refixAxisShape(this.component), this._island.refresh(Q), this._toolbox.refresh(Q), Q.animation && !Q.renderAsImage ? this._zr.refresh() : this._zr.render();
					var K = "IMG" + this.id,
						N = document.getElementById(K);
					Q.renderAsImage && w ? (N ? N.src = this.getDataURL(Q.renderAsImage) : (N = this.getImage(Q.renderAsImage), N.id = K, N.style.position = "absolute", N.style.left = 0, N.style.top = 0, this.dom.firstChild.appendChild(N)), this.un(), this._zr.un(), this._disposeChartList(), this._zr.clear()) : N && N.parentNode.removeChild(N), N = null, this._option = Q
				}
			},
			restore: function() {
				this._clearEffect(), this._option = k.clone(this._optionRestore), this._disposeChartList(), this._island.clear(), this._toolbox.reset(this._option, !0), this._render(this._option)
			},
			refresh: function(m) {
				this._clearEffect(), m = m || {};
				var l = m.option;
				!this._refreshInside && l && (l = this.getOption(), k.merge(l, m.option, !0), k.merge(this._optionRestore, m.option, !0), this._toolbox.reset(l)), this._island.refresh(l), this._toolbox.refresh(l), this._zr.clearAnimation();
				for (var o = 0, a = this._chartList.length; a > o; o++) {
					this._chartList[o].refresh && this._chartList[o].refresh(l)
				}
				this.component.grid && this.component.grid.refixAxisShape(this.component), this._zr.refresh()
			},
			_disposeChartList: function() {
				this._clearEffect(), this._zr.clearAnimation();
				for (var i = this._chartList.length; i--;) {
					var a = this._chartList[i];
					if (a) {
						var l = a.type;
						this.chart[l] && delete this.chart[l], this.component[l] && delete this.component[l], a.dispose && a.dispose()
					}
				}
				this._chartList = []
			},
			_mergeGlobalConifg: function(e) {
				for (var s = ["backgroundColor", "calculable", "calculableColor", "calculableHolderColor", "nameConnector", "valueConnector", "animation", "animationThreshold", "animationDuration", "animationDurationUpdate", "animationEasing", "addDataAnimation", "symbolList", "DRAG_ENABLE_TIME"], a = s.length; a--;) {
					var m = s[a];
					null == e[m] && (e[m] = null != this._themeConfig[m] ? this._themeConfig[m] : B[m])
				}
				var l = e.color;
				l && l.length || (l = this._themeConfig.color || B.color), this._zr.getColor = function(i) {
					var o = z("zrender/tool/color");
					return o.getColor(i, l)
				}, w || (e.animation = !1, e.addDataAnimation = !1)
			},
			setOption: function(i, a) {
				return i.timeline ? this._setTimelineOption(i) : this._setOption(i, a)
			},
			_setOption: function(i, a) {
				return this._option = !a && this._option ? k.merge(this.getOption(), k.clone(i), !0) : k.clone(i), this._optionRestore = k.clone(this._option), this._option.series && 0 !== this._option.series.length ? (this.component.dataZoom && (this._option.dataZoom || this._option.toolbox && this._option.toolbox.feature && this._option.toolbox.feature.dataZoom && this._option.toolbox.feature.dataZoom.show) && this.component.dataZoom.syncOption(this._option), this._toolbox.reset(this._option), this._render(this._option), this) : void this._zr.clear()
			},
			getOption: function() {
				function i(o) {
					var n = l._optionRestore[o];
					if (n) {
						if (n instanceof Array) {
							for (var m = n.length; m--;) {
								a[o][m].data = k.clone(n[m].data)
							}
						} else {
							a[o].data = k.clone(n.data)
						}
					}
				}
				var a = k.clone(this._option),
					l = this;
				return i("xAxis"), i("yAxis"), i("series"), a
			},
			setSeries: function(i, a) {
				return a ? (this._option.series = i, this.setOption(this._option, a)) : this.setOption({
					series: i
				}), this
			},
			getSeries: function() {
				return this.getOption().series
			},
			_setTimelineOption: function(e) {
				this._timeline && this._timeline.dispose();
				var l = z("./component/timeline"),
					a = new l(this._themeConfig, this._messageCenter, this._zr, e, this);
				return this._timeline = a, this.component.timeline = this._timeline, this
			},
			addData: function(Z, J, O, S, M) {
				for (var K = Z instanceof Array ? Z : [
						[Z, J, O, S, M]
					], Q = this.getOption(), T = this._optionRestore, P = 0, o = K.length; o > P; P++) {
					Z = K[P][0], J = K[P][1], O = K[P][2], S = K[P][3], M = K[P][4];
					var E = T.series[Z],
						aa = O ? "unshift" : "push",
						N = O ? "pop" : "shift";
					if (E) {
						var ab = E.data,
							I = Q.series[Z].data;
						if (ab[aa](J), I[aa](J), S || (ab[N](), J = I[N]()), null != M) {
							var G, X;
							if (E.type === B.CHART_TYPE_PIE && (G = T.legend) && (X = G.data)) {
								var ac = Q.legend.data;
								if (X[aa](M), ac[aa](M), !S) {
									var Y = k.indexOf(X, J.name); - 1 != Y && X.splice(Y, 1), Y = k.indexOf(ac, J.name), -1 != Y && ac.splice(Y, 1)
								}
							} else {
								if (null != T.xAxis && null != T.yAxis) {
									var R, H, ad = E.xAxisIndex || 0;
									(null == T.xAxis[ad].type || "category" === T.xAxis[ad].type) && (R = T.xAxis[ad].data, H = Q.xAxis[ad].data, R[aa](M), H[aa](M), S || (R[N](), H[N]())), ad = E.yAxisIndex || 0, "category" === T.yAxis[ad].type && (R = T.yAxis[ad].data, H = Q.yAxis[ad].data, R[aa](M), H[aa](M), S || (R[N](), H[N]()))
								}
							}
						}
						this._option.series[Z].data = Q.series[Z].data
					}
				}
				this._zr.clearAnimation();
				for (var F = this._chartList, P = 0, o = F.length; o > P; P++) {
					Q.addDataAnimation && F[P].addDataAnimation && F[P].addDataAnimation(K)
				}
				this.component.dataZoom && this.component.dataZoom.syncOption(Q), this._option = Q;
				var a = this;
				return setTimeout(function() {
					if (a._zr) {
						a._zr.clearAnimation();
						for (var l = 0, i = F.length; i > l; l++) {
							F[l].motionlessOnce = Q.addDataAnimation && F[l].addDataAnimation
						}
						a._messageCenter.dispatch(B.EVENT.REFRESH, null, {
							option: Q
						}, a)
					}
				}, Q.addDataAnimation ? Q.animationDurationUpdate : 0), this
			},
			addMarkPoint: function(i, a) {
				return this._addMark(i, a, "markPoint")
			},
			addMarkLine: function(i, a) {
				return this._addMark(i, a, "markLine")
			},
			_addMark: function(K, M, E) {
				var I, L = this._option.series;
				if (L && (I = L[K])) {
					var o = this._optionRestore.series,
						N = o[K],
						H = I[E],
						J = N[E];
					H = I[E] = H || {
						data: []
					}, J = N[E] = J || {
						data: []
					};
					for (var G in M) {
						"data" === G ? (H.data = H.data.concat(M.data), J.data = J.data.concat(M.data)) : "object" != typeof M[G] || null == H[G] ? H[G] = J[G] = M[G] : (k.merge(H[G], M[G], !0), k.merge(J[G], M[G], !0))
					}
					var F = this.chart[I.type];
					F && F.addMark(K, M, E)
				}
				return this
			},
			delMarkPoint: function(i, a) {
				return this._delMark(i, a, "markPoint")
			},
			delMarkLine: function(i, a) {
				return this._delMark(i, a, "markLine")
			},
			_delMark: function(M, O, G) {
				var K, N, F, E = this._option.series;
				if (!(E && (K = E[M]) && (N = K[G]) && (F = N.data))) {
					return this
				}
				O = O.split(" > ");
				for (var P = -1, J = 0, L = F.length; L > J; J++) {
					var I = F[J];
					if (I instanceof Array) {
						if (I[0].name === O[0] && I[1].name === O[1]) {
							P = J;
							break
						}
					} else {
						if (I.name === O[0]) {
							P = J;
							break
						}
					}
				}
				if (P > -1) {
					F.splice(P, 1), this._optionRestore.series[M][G].data.splice(P, 1);
					var H = this.chart[K.type];
					H && H.delMark(M, O.join(" > "), G)
				}
				return this
			},
			getDom: function() {
				return this.dom
			},
			getZrender: function() {
				return this._zr
			},
			getDataURL: function(r) {
				if (!w) {
					return ""
				}
				if (0 === this._chartList.length) {
					var o = "IMG" + this.id,
						s = document.getElementById(o);
					if (s) {
						return s.src
					}
				}
				var m = this.component.tooltip;
				switch (m && m.hideTip(), r) {
					case "jpeg":
						break;
					default:
						r = "png"
				}
				var l = this._option.backgroundColor;
				return l && "rgba(0,0,0,0)" === l.replace(" ", "") && (l = "#fff"), this._zr.toDataURL("image/" + r, l)
			},
			getImage: function(i) {
				var a = this._optionRestore.title,
					l = document.createElement("img");
				return l.src = this.getDataURL(i), l.title = a && a.text || "ECharts", l
			},
			getConnectedDataURL: function(O) {
				if (!this.isConnected()) {
					return this.getDataURL(O)
				}
				var F = this.dom,
					K = {
						self: {
							img: this.getDataURL(O),
							left: F.offsetLeft,
							top: F.offsetTop,
							right: F.offsetLeft + F.offsetWidth,
							bottom: F.offsetTop + F.offsetHeight
						}
					},
					N = K.self.left,
					E = K.self.top,
					e = K.self.right,
					P = K.self.bottom;
				for (var J in this._connected) {
					F = this._connected[J].getDom(), K[J] = {
						img: this._connected[J].getDataURL(O),
						left: F.offsetLeft,
						top: F.offsetTop,
						right: F.offsetLeft + F.offsetWidth,
						bottom: F.offsetTop + F.offsetHeight
					}, N = Math.min(N, K[J].left), E = Math.min(E, K[J].top), e = Math.max(e, K[J].right), P = Math.max(P, K[J].bottom)
				}
				var L = document.createElement("div");
				L.style.position = "absolute", L.style.left = "-4000px", L.style.width = e - N + "px", L.style.height = P - E + "px", document.body.appendChild(L);
				var H = z("zrender").init(L),
					G = z("zrender/shape/Image");
				for (var J in K) {
					H.addShape(new G({
						style: {
							x: K[J].left - N,
							y: K[J].top - E,
							image: K[J].img
						}
					}))
				}
				H.render();
				var I = this._option.backgroundColor;
				I && "rgba(0,0,0,0)" === I.replace(/ /g, "") && (I = "#fff");
				var M = H.toDataURL("image/png", I);
				return setTimeout(function() {
					H.dispose(), L.parentNode.removeChild(L), L = null
				}, 100), M
			},
			getConnectedImage: function(i) {
				var a = this._optionRestore.title,
					l = document.createElement("img");
				return l.src = this.getConnectedDataURL(i), l.title = a && a.text || "ECharts", l
			},
			on: function(i, a) {
				return this._messageCenterOutSide.bind(i, a, this), this
			},
			un: function(i, a) {
				return this._messageCenterOutSide.unbind(i, a), this
			},
			connect: function(i) {
				if (!i) {
					return this
				}
				if (this._connected || (this._connected = {}), i instanceof Array) {
					for (var a = 0, l = i.length; l > a; a++) {
						this._connected[i[a].id] = i[a]
					}
				} else {
					this._connected[i.id] = i
				}
				return this
			},
			disConnect: function(m) {
				if (!m || !this._connected) {
					return this
				}
				if (m instanceof Array) {
					for (var l = 0, o = m.length; o > l; l++) {
						delete this._connected[m[l].id]
					}
				} else {
					delete this._connected[m.id]
				}
				for (var a in this._connected) {
					return this
				}
				return this._connected = !1, this
			},
			connectedEventHandler: function(a) {
				a.__echartsId != this.id && this._onevent(a)
			},
			isConnected: function() {
				return !!this._connected
			},
			showLoading: function(e) {
				var o = {
					bar: z("zrender/loadingEffect/Bar"),
					bubble: z("zrender/loadingEffect/Bubble"),
					dynamicLine: z("zrender/loadingEffect/DynamicLine"),
					ring: z("zrender/loadingEffect/Ring"),
					spin: z("zrender/loadingEffect/Spin"),
					whirling: z("zrender/loadingEffect/Whirling")
				};
				this._toolbox.hideDataView(), e = e || {};
				var a = e.textStyle || {};
				e.textStyle = a;
				var m = k.merge(k.merge(k.clone(a), this._themeConfig.textStyle), B.textStyle);
				a.textFont = m.fontStyle + " " + m.fontWeight + " " + m.fontSize + "px " + m.fontFamily, a.text = e.text || this._option && this._option.loadingText || this._themeConfig.loadingText || B.loadingText, null != e.x && (a.x = e.x), null != e.y && (a.y = e.y), e.effectOption = e.effectOption || {}, e.effectOption.textStyle = a;
				var l = e.effect;
				return ("string" == typeof l || null == l) && (l = o[e.effect || this._option && this._option.loadingEffect || this._themeConfig.loadingEffect || B.loadingEffect] || o.spin), this._zr.showLoading(new l(e.effectOption)), this
			},
			hideLoading: function() {
				return this._zr.hideLoading(), this
			},
			setTheme: function(a) {
				if (a) {
					if ("string" == typeof a) {
						switch (a) {
							case "macarons":
								a = z("./theme/macarons");
								break;
							case "infographic":
								a = z("./theme/infographic");
								break;
							default:
								a = {}
						}
					} else {
						a = a || {}
					}
					this._themeConfig = a
				}
				if (!w) {
					var e = this._themeConfig.textStyle;
					e && e.fontFamily && e.fontFamily2 && (e.fontFamily = e.fontFamily2), e = B.textStyle, e.fontFamily = e.fontFamily2
				}
				this._timeline && this._timeline.setTheme(!0), this._optionRestore && this.restore()
			},
			resize: function() {
				var a = this;
				return function() {
					if (a._clearEffect(), a._zr.resize(), a._option && a._option.renderAsImage && w) {
						return a._render(a._option), a
					}
					a._zr.clearAnimation(), a._island.resize(), a._toolbox.resize(), a._timeline && a._timeline.resize();
					for (var e = 0, i = a._chartList.length; i > e; e++) {
						a._chartList[e].resize && a._chartList[e].resize()
					}
					return a.component.grid && a.component.grid.refixAxisShape(a.component), a._zr.refresh(), a._messageCenter.dispatch(B.EVENT.RESIZE, null, null, a), a
				}
			},
			_clearEffect: function() {
				this._zr.modLayer(B.EFFECT_ZLEVEL, {
					motionBlur: !1
				}), this._zr.painter.clearLayer(B.EFFECT_ZLEVEL)
			},
			clear: function() {
				return this._disposeChartList(), this._zr.clear(), this._option = {}, this._optionRestore = {}, this.dom.style.backgroundColor = null, this
			},
			dispose: function() {
				var a = this.dom.getAttribute(q);
				a && delete u[a], this._island.dispose(), this._toolbox.dispose(), this._timeline && this._timeline.dispose(), this._messageCenter.unbind(), this.clear(), this._zr.dispose(), this._zr = null
			}
		}, D
	}), h("echarts/config", [], function() {
		var a = {
			CHART_TYPE_LINE: "line",
			CHART_TYPE_BAR: "bar",
			CHART_TYPE_SCATTER: "scatter",
			CHART_TYPE_PIE: "pie",
			CHART_TYPE_RADAR: "radar",
			CHART_TYPE_MAP: "map",
			CHART_TYPE_K: "k",
			CHART_TYPE_ISLAND: "island",
			CHART_TYPE_FORCE: "force",
			CHART_TYPE_CHORD: "chord",
			CHART_TYPE_GAUGE: "gauge",
			CHART_TYPE_FUNNEL: "funnel",
			CHART_TYPE_EVENTRIVER: "eventRiver",
			COMPONENT_TYPE_TITLE: "title",
			COMPONENT_TYPE_LEGEND: "legend",
			COMPONENT_TYPE_DATARANGE: "dataRange",
			COMPONENT_TYPE_DATAVIEW: "dataView",
			COMPONENT_TYPE_DATAZOOM: "dataZoom",
			COMPONENT_TYPE_TOOLBOX: "toolbox",
			COMPONENT_TYPE_TOOLTIP: "tooltip",
			COMPONENT_TYPE_GRID: "grid",
			COMPONENT_TYPE_AXIS: "axis",
			COMPONENT_TYPE_POLAR: "polar",
			COMPONENT_TYPE_X_AXIS: "xAxis",
			COMPONENT_TYPE_Y_AXIS: "yAxis",
			COMPONENT_TYPE_AXIS_CATEGORY: "categoryAxis",
			COMPONENT_TYPE_AXIS_VALUE: "valueAxis",
			COMPONENT_TYPE_TIMELINE: "timeline",
			COMPONENT_TYPE_ROAMCONTROLLER: "roamController",
			backgroundColor: "rgba(0,0,0,0)",
			color: ["#ff7f50", "#87cefa", "#da70d6", "#32cd32", "#6495ed", "#ff69b4", "#ba55d3", "#cd5c5c", "#ffa500", "#40e0d0", "#1e90ff", "#ff6347", "#7b68ee", "#00fa9a", "#ffd700", "#6699FF", "#ff6666", "#3cb371", "#b8860b", "#30e0e0"],
			markPoint: {
				clickable: !0,
				symbol: "pin",
				symbolSize: 10,
				large: !1,
				effect: {
					show: !1,
					loop: !0,
					period: 15,
					type: "scale",
					scaleSize: 2,
					bounceDistance: 10
				},
				itemStyle: {
					normal: {
						borderWidth: 2,
						label: {
							show: !0,
							position: "inside"
						}
					},
					emphasis: {
						label: {
							show: !0
						}
					}
				}
			},
			markLine: {
				clickable: !0,
				symbol: ["circle", "arrow"],
				symbolSize: [2, 4],
				smoothRadian: 0.2,
				precision: 2,
				effect: {
					show: !1,
					loop: !0,
					period: 15,
					scaleSize: 2
				},
				itemStyle: {
					normal: {
						borderWidth: 1.5,
						label: {
							show: !0,
							position: "end"
						},
						lineStyle: {
							type: "dashed"
						}
					},
					emphasis: {
						label: {
							show: !1
						},
						lineStyle: {}
					}
				}
			},
			textStyle: {
				decoration: "none",
				fontFamily: "Arial, Verdana, sans-serif",
				fontFamily2: "微软雅黑",
				fontSize: 12,
				fontStyle: "normal",
				fontWeight: "normal"
			},
			EVENT: {
				REFRESH: "refresh",
				RESTORE: "restore",
				RESIZE: "resize",
				CLICK: "click",
				DBLCLICK: "dblclick",
				HOVER: "hover",
				MOUSEOUT: "mouseout",
				DATA_CHANGED: "dataChanged",
				DATA_ZOOM: "dataZoom",
				DATA_RANGE: "dataRange",
				DATA_RANGE_SELECTED: "dataRangeSelected",
				DATA_RANGE_HOVERLINK: "dataRangeHoverLink",
				LEGEND_SELECTED: "legendSelected",
				LEGEND_HOVERLINK: "legendHoverLink",
				MAP_SELECTED: "mapSelected",
				PIE_SELECTED: "pieSelected",
				MAGIC_TYPE_CHANGED: "magicTypeChanged",
				DATA_VIEW_CHANGED: "dataViewChanged",
				TIMELINE_CHANGED: "timelineChanged",
				MAP_ROAM: "mapRoam",
				FORCE_LAYOUT_END: "forceLayoutEnd",
				TOOLTIP_HOVER: "tooltipHover",
				TOOLTIP_IN_GRID: "tooltipInGrid",
				TOOLTIP_OUT_GRID: "tooltipOutGrid",
				ROAMCONTROLLER: "roamController"
			},
			DRAG_ENABLE_TIME: 120,
			EFFECT_ZLEVEL: 10,
			symbolList: ["circle", "rectangle", "triangle", "diamond", "emptyCircle", "emptyRectangle", "emptyTriangle", "emptyDiamond"],
			loadingEffect: "spin",
			loadingText: "数据读取中...",
			noDataEffect: "bubble",
			noDataText: "暂无数据",
			calculable: !1,
			calculableColor: "rgba(255,165,0,0.6)",
			calculableHolderColor: "#ccc",
			nameConnector: " & ",
			valueConnector: ": ",
			animation: !0,
			addDataAnimation: !0,
			animationThreshold: 2000,
			animationDuration: 2000,
			animationDurationUpdate: 500,
			animationEasing: "ExponentialOut"
		};
		return a
	}), h("zrender/tool/util", ["require", "../dep/excanvas"], function(I) {
		function w(a) {
			return a && 1 === a.nodeType && "string" == typeof a.nodeName
		}

		function C(p) {
			if ("object" == typeof p && null !== p) {
				var m = p;
				if (p instanceof Array) {
					m = [];
					for (var l = 0, s = p.length; s > l; l++) {
						m[l] = C(p[l])
					}
				} else {
					if (!v[q.call(p)] && !w(p)) {
						m = {};
						for (var n in p) {
							p.hasOwnProperty(n) && (m[n] = C(p[n]))
						}
					}
				}
				return m
			}
			return p
		}

		function F(m, s, a, p) {
			if (s.hasOwnProperty(a)) {
				var l = m[a];
				"object" != typeof l || v[q.call(l)] || w(l) ? !p && a in m || (m[a] = s[a]) : M(m[a], s[a], p)
			}
		}

		function M(m, l, o) {
			for (var i in l) {
				F(m, l, i, o)
			}
			return m
		}

		function B() {
			if (!j) {
				if (I("../dep/excanvas"), window.G_vmlCanvasManager) {
					var a = document.createElement("div");
					a.style.position = "absolute", a.style.top = "-1000px", document.body.appendChild(a), j = G_vmlCanvasManager.initElement(a).getContext("2d")
				} else {
					j = document.createElement("canvas").getContext("2d")
				}
			}
			return j
		}

		function z() {
			return J || (k = document.createElement("canvas"), A = k.width, K = k.height, J = k.getContext("2d")), J
		}

		function x(m, l) {
			var o, a = 100;
			m + H > A && (A = m + H + a, k.width = A, o = !0), l + L > K && (K = l + L + a, k.height = K, o = !0), -H > m && (H = Math.ceil(-m / a) * a, A += H, k.width = A, o = !0), -L > l && (L = Math.ceil(-l / a) * a, K += L, k.height = K, o = !0), o && J.translate(H, L)
		}

		function E() {
			return {
				x: H,
				y: L
			}
		}

		function G(m, l) {
			if (m.indexOf) {
				return m.indexOf(l)
			}
			for (var o = 0, a = m.length; a > o; o++) {
				if (m[o] === l) {
					return o
				}
			}
			return -1
		}

		function D(p, o) {
			function r() {}
			var m = p.prototype;
			r.prototype = o.prototype, p.prototype = new r;
			for (var l in m) {
				p.prototype[l] = m[l]
			}
			p.constructor = p
		}
		var j, k, J, A, K, v = {
				"[object Function]": 1,
				"[object RegExp]": 1,
				"[object Date]": 1,
				"[object Error]": 1,
				"[object CanvasGradient]": 1
			},
			q = Object.prototype.toString,
			H = 0,
			L = 0;
		return {
			inherits: D,
			clone: C,
			merge: M,
			getContext: B,
			getPixelContext: z,
			getPixelOffset: E,
			adjustCanvasSize: x,
			indexOf: G
		}
	}), h("zrender/tool/event", ["require", "../mixin/Eventful"], function(m) {
		function l(a) {
			return "undefined" != typeof a.zrenderX && a.zrenderX || "undefined" != typeof a.offsetX && a.offsetX || "undefined" != typeof a.layerX && a.layerX || "undefined" != typeof a.clientX && a.clientX
		}

		function q(a) {
			return "undefined" != typeof a.zrenderY && a.zrenderY || "undefined" != typeof a.offsetY && a.offsetY || "undefined" != typeof a.layerY && a.layerY || "undefined" != typeof a.clientY && a.clientY
		}

		function k(a) {
			return "undefined" != typeof a.zrenderDelta && a.zrenderDelta || "undefined" != typeof a.wheelDelta && a.wheelDelta || "undefined" != typeof a.detail && -a.detail
		}
		var j = m("../mixin/Eventful"),
			p = "function" == typeof window.addEventListener ? function(a) {
				a.preventDefault(), a.stopPropagation(), a.cancelBubble = !0
			} : function(a) {
				a.returnValue = !1, a.cancelBubble = !0
			};
		return {
			getX: l,
			getY: q,
			getDelta: k,
			stop: p,
			Dispatcher: j
		}
	}), h("zrender/tool/env", [], function() {
		function a(J) {
			var w = this.os = {},
				C = this.browser = {},
				F = J.match(/Web[kK]it[\/]{0,1}([\d.]+)/),
				N = J.match(/(Android);?[\s\/]+([\d.]+)?/),
				B = J.match(/(iPad).*OS\s([\d_]+)/),
				z = J.match(/(iPod)(.*OS\s([\d_]+))?/),
				x = !B && J.match(/(iPhone\sOS)\s([\d_]+)/),
				E = J.match(/(webOS|hpwOS)[\s\/]([\d.]+)/),
				G = E && J.match(/TouchPad/),
				D = J.match(/Kindle\/([\d.]+)/),
				j = J.match(/Silk\/([\d._]+)/),
				k = J.match(/(BlackBerry).*Version\/([\d.]+)/),
				K = J.match(/(BB10).*Version\/([\d.]+)/),
				A = J.match(/(RIM\sTablet\sOS)\s([\d.]+)/),
				L = J.match(/PlayBook/),
				v = J.match(/Chrome\/([\d.]+)/) || J.match(/CriOS\/([\d.]+)/),
				q = J.match(/Firefox\/([\d.]+)/),
				H = J.match(/MSIE ([\d.]+)/),
				M = F && J.match(/Mobile\//) && !v,
				I = J.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !v,
				H = J.match(/MSIE\s([\d.]+)/);
			return (C.webkit = !!F) && (C.version = F[1]), N && (w.android = !0, w.version = N[2]), x && !z && (w.ios = w.iphone = !0, w.version = x[2].replace(/_/g, ".")), B && (w.ios = w.ipad = !0, w.version = B[2].replace(/_/g, ".")), z && (w.ios = w.ipod = !0, w.version = z[3] ? z[3].replace(/_/g, ".") : null), E && (w.webos = !0, w.version = E[2]), G && (w.touchpad = !0), k && (w.blackberry = !0, w.version = k[2]), K && (w.bb10 = !0, w.version = K[2]), A && (w.rimtabletos = !0, w.version = A[2]), L && (C.playbook = !0), D && (w.kindle = !0, w.version = D[1]), j && (C.silk = !0, C.version = j[1]), !j && w.android && J.match(/Kindle Fire/) && (C.silk = !0), v && (C.chrome = !0, C.version = v[1]), q && (C.firefox = !0, C.version = q[1]), H && (C.ie = !0, C.version = H[1]), M && (J.match(/Safari/) || w.ios) && (C.safari = !0), I && (C.webview = !0), H && (C.ie = !0, C.version = H[1]), w.tablet = !!(B || L || N && !J.match(/Mobile/) || q && J.match(/Tablet/) || H && !J.match(/Phone/) && J.match(/Touch/)), w.phone = !(w.tablet || w.ipod || !(N || x || E || k || K || v && J.match(/Android/) || v && J.match(/CriOS\/([\d.]+)/) || q && J.match(/Mobile/) || H && J.match(/Touch/))), {
				browser: C,
				os: w,
				canvasSupported: document.createElement("canvas").getContext ? !0 : !1
			}
		}
		return a(navigator.userAgent)
	}), h("zrender", ["zrender/zrender"], function(a) {
		return a
	}), h("zrender/zrender", ["require", "./dep/excanvas", "./tool/util", "./tool/log", "./tool/guid", "./Handler", "./Painter", "./Storage", "./animation/Animation", "./tool/env"], function(y) {
		function A(a) {
			return function() {
				for (var l = a.animatingElements, m = 0, e = l.length; e > m; m++) {
					a.storage.mod(l[m].id)
				}(l.length || a._needsRefreshNextFrame) && a.refresh()
			}
		}
		y("./dep/excanvas");
		var p = y("./tool/util"),
			w = y("./tool/log"),
			z = y("./tool/guid"),
			k = y("./Handler"),
			j = y("./Painter"),
			B = y("./Storage"),
			v = y("./animation/Animation"),
			x = {},
			u = {};
		u.version = "2.0.7", u.init = function(i) {
			var a = new q(z(), i);
			return x[a.id] = a, a
		}, u.dispose = function(i) {
			if (i) {
				i.dispose()
			} else {
				for (var a in x) {
					x[a].dispose()
				}
				x = {}
			}
			return u
		}, u.getInstance = function(a) {
			return x[a]
		}, u.delInstance = function(a) {
			return delete x[a], u
		};
		var q = function(m, l) {
			this.id = m, this.env = y("./tool/env"), this.storage = new B, this.painter = new j(l, this.storage), this.handler = new k(l, this.storage, this.painter), this.animatingElements = [], this.animation = new v({
				stage: {
					update: A(this)
				}
			}), this.animation.start();
			var e = this;
			this.painter.refreshNextFrame = function() {
				e.refreshNextFrame()
			}, this._needsRefreshNextFrame = !1
		};
		return q.prototype.getId = function() {
			return this.id
		}, q.prototype.addShape = function(a) {
			return this.storage.addRoot(a), this
		}, q.prototype.addGroup = function(a) {
			return this.storage.addRoot(a), this
		}, q.prototype.delShape = function(a) {
			return this.storage.delRoot(a), this
		}, q.prototype.delGroup = function(a) {
			return this.storage.delRoot(a), this
		}, q.prototype.modShape = function(i, a) {
			return this.storage.mod(i, a), this
		}, q.prototype.modGroup = function(i, a) {
			return this.storage.mod(i, a), this
		}, q.prototype.modLayer = function(i, a) {
			return this.painter.modLayer(i, a), this
		}, q.prototype.addHoverShape = function(a) {
			return this.storage.addHover(a), this
		}, q.prototype.render = function(a) {
			return this.painter.render(a), this._needsRefreshNextFrame = !1, this
		}, q.prototype.refresh = function(a) {
			return this.painter.refresh(a), this._needsRefreshNextFrame = !1, this
		}, q.prototype.refreshNextFrame = function() {
			return this._needsRefreshNextFrame = !0, this
		}, q.prototype.refreshHover = function(a) {
			return this.painter.refreshHover(a), this
		}, q.prototype.refreshShapes = function(i, a) {
			return this.painter.refreshShapes(i, a), this
		}, q.prototype.resize = function() {
			return this.painter.resize(), this
		}, q.prototype.animate = function(F, H, G) {
			if ("string" == typeof F && (F = this.storage.get(F)), F) {
				var n;
				if (H) {
					for (var i = H.split("."), I = F, D = 0, E = i.length; E > D; D++) {
						I && (I = I[i[D]])
					}
					I && (n = I)
				} else {
					n = F
				}
				if (!n) {
					return void w('Property "' + H + '" is not existed in element ' + F.id)
				}
				var C = this.animatingElements;
				return "undefined" == typeof F.__aniCount && (F.__aniCount = 0), 0 === F.__aniCount && C.push(F), F.__aniCount++, this.animation.animate(n, {
					loop: G
				}).done(function() {
					if (F.__aniCount--, 0 === F.__aniCount) {
						var a = p.indexOf(C, F);
						C.splice(a, 1)
					}
				})
			}
			w("Element not existed")
		}, q.prototype.clearAnimation = function() {
			this.animation.clear()
		}, q.prototype.showLoading = function(a) {
			return this.painter.showLoading(a), this
		}, q.prototype.hideLoading = function() {
			return this.painter.hideLoading(), this
		}, q.prototype.getWidth = function() {
			return this.painter.getWidth()
		}, q.prototype.getHeight = function() {
			return this.painter.getHeight()
		}, q.prototype.toDataURL = function(i, a, l) {
			return this.painter.toDataURL(i, a, l)
		}, q.prototype.shapeToImage = function(m, l, o) {
			var a = z();
			return this.painter.shapeToImage(a, m, l, o)
		}, q.prototype.on = function(i, a, l) {
			return this.handler.on(i, a, l), this
		}, q.prototype.un = function(i, a) {
			return this.handler.un(i, a), this
		}, q.prototype.trigger = function(i, a) {
			return this.handler.trigger(i, a), this
		}, q.prototype.clear = function() {
			return this.storage.delRoot(), this.painter.clear(), this
		}, q.prototype.dispose = function() {
			this.animation.stop(), this.clear(), this.storage.dispose(), this.painter.dispose(), this.handler.dispose(), this.animation = this.animatingElements = this.storage = this.painter = this.handler = null, u.delInstance(this.id)
		}, u
	}), h("zrender/config", [], function() {
		var a = {
			EVENT: {
				RESIZE: "resize",
				CLICK: "click",
				DBLCLICK: "dblclick",
				MOUSEWHEEL: "mousewheel",
				MOUSEMOVE: "mousemove",
				MOUSEOVER: "mouseover",
				MOUSEOUT: "mouseout",
				MOUSEDOWN: "mousedown",
				MOUSEUP: "mouseup",
				GLOBALOUT: "globalout",
				DRAGSTART: "dragstart",
				DRAGEND: "dragend",
				DRAGENTER: "dragenter",
				DRAGOVER: "dragover",
				DRAGLEAVE: "dragleave",
				DROP: "drop",
				touchClickDelay: 300
			},
			catchBrushException: !1,
			debugMode: 0,
			devicePixelRatio: Math.max(window.devicePixelRatio || 1, 1)
		};
		return a
	}), h("echarts/chart/island", ["require", "./base", "zrender/shape/Circle", "../config", "../util/ecData", "zrender/tool/util", "zrender/tool/event", "zrender/tool/color", "../util/accMath", "../chart"], function(q) {
		function l(y, w, s, o, x) {
			v.call(this, y, w, s, o, x), this._nameConnector, this._valueConnector, this._zrHeight = this.zr.getHeight(), this._zrWidth = this.zr.getWidth();
			var n = this;
			n.shapeHandler.onmousewheel = function(E) {
				var B = E.target,
					F = E.event,
					A = m.getDelta(F);
				A = A > 0 ? -1 : 1, B.style.r -= A, B.style.r = B.style.r < 5 ? 5 : B.style.r;
				var z = u.get(B, "value"),
					D = z * n.option.island.calculateStep;
				z = D > 1 ? Math.round(z - D * A) : +(z - D * A).toFixed(2);
				var C = u.get(B, "name");
				B.style.text = C + ":" + z, u.set(B, "value", z), u.set(B, "name", C), n.zr.modShape(B.id), n.zr.refreshNextFrame(), m.stop(F)
			}
		}
		var v = q("./base"),
			k = q("zrender/shape/Circle"),
			j = q("../config");
		j.island = {
			zlevel: 0,
			z: 5,
			r: 15,
			calculateStep: 0.1
		};
		var u = q("../util/ecData"),
			p = q("zrender/tool/util"),
			m = q("zrender/tool/event");
		return l.prototype = {
			type: j.CHART_TYPE_ISLAND,
			_combine: function(w, z) {
				var o = q("zrender/tool/color"),
					e = q("../util/accMath"),
					y = e.accAdd(u.get(w, "value"), u.get(z, "value")),
					x = u.get(w, "name") + this._nameConnector + u.get(z, "name");
				w.style.text = x + this._valueConnector + y, u.set(w, "value", y), u.set(w, "name", x), w.style.r = this.option.island.r, w.style.color = o.mix(w.style.color, z.style.color)
			},
			refresh: function(a) {
				a && (a.island = this.reformOption(a.island), this.option = a, this._nameConnector = this.option.nameConnector, this._valueConnector = this.option.valueConnector)
			},
			getOption: function() {
				return this.option
			},
			resize: function() {
				var x = this.zr.getWidth(),
					w = this.zr.getHeight(),
					z = x / (this._zrWidth || x),
					s = w / (this._zrHeight || w);
				if (1 !== z || 1 !== s) {
					this._zrWidth = x, this._zrHeight = w;
					for (var r = 0, y = this.shapeList.length; y > r; r++) {
						this.zr.modShape(this.shapeList[r].id, {
							style: {
								x: Math.round(this.shapeList[r].style.x * z),
								y: Math.round(this.shapeList[r].style.y * s)
							}
						})
					}
				}
			},
			add: function(y) {
				var o = u.get(y, "name"),
					z = u.get(y, "value"),
					i = null != u.get(y, "series") ? u.get(y, "series").name : "",
					x = this.getFont(this.option.island.textStyle),
					w = {
						zlevel: this.getZlevelBase(),
						z: this.getZBase(),
						style: {
							x: y.style.x,
							y: y.style.y,
							r: this.option.island.r,
							color: y.style.color || y.style.strokeColor,
							text: o + this._valueConnector + z,
							textFont: x
						},
						draggable: !0,
						hoverable: !0,
						onmousewheel: this.shapeHandler.onmousewheel,
						_type: "island"
					};
				"#fff" === w.style.color && (w.style.color = y.style.strokeColor), this.setCalculable(w), w.dragEnableTime = 0, u.pack(w, {
					name: i
				}, -1, z, -1, o), w = new k(w), this.shapeList.push(w), this.zr.addShape(w)
			},
			del: function(r) {
				this.zr.delShape(r.id);
				for (var o = [], s = 0, a = this.shapeList.length; a > s; s++) {
					this.shapeList[s].id != r.id && o.push(this.shapeList[s])
				}
				this.shapeList = o
			},
			ondrop: function(r, o) {
				if (this.isDrop && r.target) {
					var s = r.target,
						a = r.dragged;
					this._combine(s, a), this.zr.modShape(s.id), o.dragIn = !0, this.isDrop = !1
				}
			},
			ondragend: function(i, a) {
				var o = i.target;
				this.isDragend ? a.dragIn && (this.del(o), a.needRefresh = !0) : a.dragIn || (o.style.x = m.getX(i.event), o.style.y = m.getY(i.event), this.add(o), a.needRefresh = !0), this.isDragend = !1
			}
		}, p.inherits(l, v), q("../chart").define("island", l), l
	}), h("echarts/component/toolbox", ["require", "./base", "zrender/shape/Line", "zrender/shape/Image", "zrender/shape/Rectangle", "../util/shape/Icon", "../config", "zrender/tool/util", "zrender/config", "zrender/tool/event", "./dataView", "../component"], function(z) {
		function B(D, n, m, l, E) {
			p.call(this, D, n, m, l, E), this.dom = E.dom, this._magicType = {}, this._magicMap = {}, this._isSilence = !1, this._iconList, this._iconShapeMap = {}, this._featureTitle = {}, this._featureIcon = {}, this._featureColor = {}, this._featureOption = {}, this._enableColor = "red", this._disableColor = "#ccc", this._markShapeList = [];
			var s = this;
			s._onMark = function(a) {
				s.__onMark(a)
			}, s._onMarkUndo = function(a) {
				s.__onMarkUndo(a)
			}, s._onMarkClear = function(a) {
				s.__onMarkClear(a)
			}, s._onDataZoom = function(a) {
				s.__onDataZoom(a)
			}, s._onDataZoomReset = function(a) {
				s.__onDataZoomReset(a)
			}, s._onDataView = function(a) {
				s.__onDataView(a)
			}, s._onRestore = function(a) {
				s.__onRestore(a)
			}, s._onSaveAsImage = function(a) {
				s.__onSaveAsImage(a)
			}, s._onMagicType = function(a) {
				s.__onMagicType(a)
			}, s._onCustomHandler = function(a) {
				s.__onCustomHandler(a)
			}, s._onmousemove = function(a) {
				return s.__onmousemove(a)
			}, s._onmousedown = function(a) {
				return s.__onmousedown(a)
			}, s._onmouseup = function(a) {
				return s.__onmouseup(a)
			}, s._onclick = function(a) {
				return s.__onclick(a)
			}
		}
		var p = z("./base"),
			x = z("zrender/shape/Line"),
			A = z("zrender/shape/Image"),
			k = z("zrender/shape/Rectangle"),
			j = z("../util/shape/Icon"),
			C = z("../config");
		C.toolbox = {
			zlevel: 0,
			z: 6,
			show: !1,
			orient: "horizontal",
			x: "right",
			y: "top",
			color: ["#1e90ff", "#22bb22", "#4b0082", "#d2691e"],
			disableColor: "#ddd",
			effectiveColor: "red",
			backgroundColor: "rgba(0,0,0,0)",
			borderColor: "#ccc",
			borderWidth: 0,
			padding: 5,
			itemGap: 10,
			itemSize: 16,
			showTitle: !0,
			feature: {
				mark: {
					show: !1,
					title: {
						mark: "辅助线开关",
						markUndo: "删除辅助线",
						markClear: "清空辅助线"
					},
					lineStyle: {
						width: 1,
						color: "#1e90ff",
						type: "dashed"
					}
				},
				dataZoom: {
					show: !1,
					title: {
						dataZoom: "区域缩放",
						dataZoomReset: "区域缩放后退"
					}
				},
				dataView: {
					show: !1,
					title: "数据视图",
					readOnly: !1,
					lang: ["数据视图", "关闭", "刷新"]
				},
				magicType: {
					show: !1,
					title: {
						line: "折线图切换",
						bar: "柱形图切换",
						stack: "堆积",
						tiled: "平铺",
						force: "力导向布局图切换",
						chord: "和弦图切换",
						pie: "饼图切换",
						funnel: "漏斗图切换"
					},
					type: []
				},
				restore: {
					show: !1,
					title: "还原"
				},
				saveAsImage: {
					show: !1,
					title: "保存为图片",
					type: "png",
					lang: ["点击保存"]
				}
			}
		};
		var w = z("zrender/tool/util"),
			y = z("zrender/config"),
			u = z("zrender/tool/event"),
			q = "stack",
			v = "tiled";
		return B.prototype = {
			type: C.COMPONENT_TYPE_TOOLBOX,
			_buildShape: function() {
				this._iconList = [];
				var E = this.option.toolbox;
				this._enableColor = E.effectiveColor, this._disableColor = E.disableColor;
				var s = E.feature,
					G = [];
				for (var m in s) {
					if (s[m].show) {
						switch (m) {
							case "mark":
								G.push({
									key: m,
									name: "mark"
								}), G.push({
									key: m,
									name: "markUndo"
								}), G.push({
									key: m,
									name: "markClear"
								});
								break;
							case "magicType":
								for (var l = 0, F = s[m].type.length; F > l; l++) {
									s[m].title[s[m].type[l] + "Chart"] = s[m].title[s[m].type[l]], s[m].option && (s[m].option[s[m].type[l] + "Chart"] = s[m].option[s[m].type[l]]), G.push({
										key: m,
										name: s[m].type[l] + "Chart"
									})
								}
								break;
							case "dataZoom":
								G.push({
									key: m,
									name: "dataZoom"
								}), G.push({
									key: m,
									name: "dataZoomReset"
								});
								break;
							case "saveAsImage":
								this.canvasSupported && G.push({
									key: m,
									name: "saveAsImage"
								});
								break;
							default:
								G.push({
									key: m,
									name: m
								})
						}
					}
				}
				if (G.length > 0) {
					for (var D, m, l = 0, F = G.length; F > l; l++) {
						D = G[l].name, m = G[l].key, this._iconList.push(D), this._featureTitle[D] = s[m].title[D] || s[m].title, s[m].icon && (this._featureIcon[D] = s[m].icon[D] || s[m].icon), s[m].color && (this._featureColor[D] = s[m].color[D] || s[m].color), s[m].option && (this._featureOption[D] = s[m].option[D] || s[m].option)
					}
					this._itemGroupLocation = this._getItemGroupLocation(), this._buildBackground(), this._buildItem();
					for (var l = 0, F = this.shapeList.length; F > l; l++) {
						this.zr.addShape(this.shapeList[l])
					}
					this._iconShapeMap.mark && (this._iconDisable(this._iconShapeMap.markUndo), this._iconDisable(this._iconShapeMap.markClear)), this._iconShapeMap.dataZoomReset && 0 === this._zoomQueue.length && this._iconDisable(this._iconShapeMap.dataZoomReset)
				}
			},
			_buildItem: function() {
				var N, r, H, e, O = this.option.toolbox,
					G = this._iconList.length,
					I = this._itemGroupLocation.x,
					E = this._itemGroupLocation.y,
					D = O.itemSize,
					F = O.itemGap,
					J = O.color instanceof Array ? O.color : [O.color],
					a = this.getFont(O.textStyle);
				"horizontal" === O.orient ? (r = this._itemGroupLocation.y / this.zr.getHeight() < 0.5 ? "bottom" : "top", H = this._itemGroupLocation.x / this.zr.getWidth() < 0.5 ? "left" : "right", e = this._itemGroupLocation.y / this.zr.getHeight() < 0.5 ? "top" : "bottom") : r = this._itemGroupLocation.x / this.zr.getWidth() < 0.5 ? "right" : "left", this._iconShapeMap = {};
				for (var K = this, M = 0; G > M; M++) {
					switch (N = {
						type: "icon",
						zlevel: this.getZlevelBase(),
						z: this.getZBase(),
						style: {
							x: I,
							y: E,
							width: D,
							height: D,
							iconType: this._iconList[M],
							lineWidth: 1,
							strokeColor: this._featureColor[this._iconList[M]] || J[M % J.length],
							brushType: "stroke"
						},
						highlightStyle: {
							lineWidth: 1,
							text: O.showTitle ? this._featureTitle[this._iconList[M]] : void 0,
							textFont: a,
							textPosition: r,
							strokeColor: this._featureColor[this._iconList[M]] || J[M % J.length]
						},
						hoverable: !0,
						clickable: !0
					}, this._featureIcon[this._iconList[M]] && (N.style.image = this._featureIcon[this._iconList[M]].replace(new RegExp("^image:\\/\\/"), ""), N.style.opacity = 0.8, N.highlightStyle.opacity = 1, N.type = "image"), "horizontal" === O.orient && (0 === M && "left" === H && (N.highlightStyle.textPosition = "specific", N.highlightStyle.textAlign = H, N.highlightStyle.textBaseline = e, N.highlightStyle.textX = I, N.highlightStyle.textY = "top" === e ? E + D + 10 : E - 10), M === G - 1 && "right" === H && (N.highlightStyle.textPosition = "specific", N.highlightStyle.textAlign = H, N.highlightStyle.textBaseline = e, N.highlightStyle.textX = I + D, N.highlightStyle.textY = "top" === e ? E + D + 10 : E - 10)), this._iconList[M]) {
						case "mark":
							N.onclick = K._onMark;
							break;
						case "markUndo":
							N.onclick = K._onMarkUndo;
							break;
						case "markClear":
							N.onclick = K._onMarkClear;
							break;
						case "dataZoom":
							N.onclick = K._onDataZoom;
							break;
						case "dataZoomReset":
							N.onclick = K._onDataZoomReset;
							break;
						case "dataView":
							if (!this._dataView) {
								var L = z("./dataView");
								this._dataView = new L(this.ecTheme, this.messageCenter, this.zr, this.option, this.myChart)
							}
							N.onclick = K._onDataView;
							break;
						case "restore":
							N.onclick = K._onRestore;
							break;
						case "saveAsImage":
							N.onclick = K._onSaveAsImage;
							break;
						default:
							this._iconList[M].match("Chart") ? (N._name = this._iconList[M].replace("Chart", ""), N.onclick = K._onMagicType) : N.onclick = K._onCustomHandler
					}
					"icon" === N.type ? N = new j(N) : "image" === N.type && (N = new A(N)), this.shapeList.push(N), this._iconShapeMap[this._iconList[M]] = N, "horizontal" === O.orient ? I += D + F : E += D + F
				}
			},
			_buildBackground: function() {
				var i = this.option.toolbox,
					a = this.reformCssArray(this.option.toolbox.padding);
				this.shapeList.push(new k({
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					hoverable: !1,
					style: {
						x: this._itemGroupLocation.x - a[3],
						y: this._itemGroupLocation.y - a[0],
						width: this._itemGroupLocation.width + a[3] + a[1],
						height: this._itemGroupLocation.height + a[0] + a[2],
						brushType: 0 === i.borderWidth ? "fill" : "both",
						color: i.backgroundColor,
						strokeColor: i.borderColor,
						lineWidth: i.borderWidth
					}
				}))
			},
			_getItemGroupLocation: function() {
				var K = this.option.toolbox,
					M = this.reformCssArray(this.option.toolbox.padding),
					F = this._iconList.length,
					I = K.itemGap,
					L = K.itemSize,
					E = 0,
					D = 0;
				"horizontal" === K.orient ? (E = (L + I) * F - I, D = L) : (D = (L + I) * F - I, E = L);
				var N, H = this.zr.getWidth();
				switch (K.x) {
					case "center":
						N = Math.floor((H - E) / 2);
						break;
					case "left":
						N = M[3] + K.borderWidth;
						break;
					case "right":
						N = H - E - M[1] - K.borderWidth;
						break;
					default:
						N = K.x - 0, N = isNaN(N) ? 0 : N
				}
				var J, G = this.zr.getHeight();
				switch (K.y) {
					case "top":
						J = M[0] + K.borderWidth;
						break;
					case "bottom":
						J = G - D - M[2] - K.borderWidth;
						break;
					case "center":
						J = Math.floor((G - D) / 2);
						break;
					default:
						J = K.y - 0, J = isNaN(J) ? 0 : J
				}
				return {
					x: N,
					y: J,
					width: E,
					height: D
				}
			},
			__onmousemove: function(a) {
				this._marking && (this._markShape.style.xEnd = u.getX(a.event), this._markShape.style.yEnd = u.getY(a.event), this.zr.addHoverShape(this._markShape)), this._zooming && (this._zoomShape.style.width = u.getX(a.event) - this._zoomShape.style.x, this._zoomShape.style.height = u.getY(a.event) - this._zoomShape.style.y, this.zr.addHoverShape(this._zoomShape), this.dom.style.cursor = "crosshair", u.stop(a.event)), this._zoomStart && "pointer" != this.dom.style.cursor && "move" != this.dom.style.cursor && (this.dom.style.cursor = "crosshair")
			},
			__onmousedown: function(m) {
				if (!m.target) {
					this._zooming = !0;
					var l = u.getX(m.event),
						o = u.getY(m.event),
						a = this.option.dataZoom || {};
					return this._zoomShape = new k({
						zlevel: this.getZlevelBase(),
						z: this.getZBase(),
						style: {
							x: l,
							y: o,
							width: 1,
							height: 1,
							brushType: "both"
						},
						highlightStyle: {
							lineWidth: 2,
							color: a.fillerColor || C.dataZoom.fillerColor,
							strokeColor: a.handleColor || C.dataZoom.handleColor,
							brushType: "both"
						}
					}), this.zr.addHoverShape(this._zoomShape), !0
				}
			},
			__onmouseup: function() {
				if (!this._zoomShape || Math.abs(this._zoomShape.style.width) < 10 || Math.abs(this._zoomShape.style.height) < 10) {
					return this._zooming = !1, !0
				}
				if (this._zooming && this.component.dataZoom) {
					this._zooming = !1;
					var a = this.component.dataZoom.rectZoom(this._zoomShape.style);
					a && (this._zoomQueue.push({
						start: a.start,
						end: a.end,
						start2: a.start2,
						end2: a.end2
					}), this._iconEnable(this._iconShapeMap.dataZoomReset), this.zr.refreshNextFrame())
				}
				return !0
			},
			__onclick: function(i) {
				if (!i.target) {
					if (this._marking) {
						this._marking = !1, this._markShapeList.push(this._markShape), this._iconEnable(this._iconShapeMap.markUndo), this._iconEnable(this._iconShapeMap.markClear), this.zr.addShape(this._markShape), this.zr.refreshNextFrame()
					} else {
						if (this._markStart) {
							this._marking = !0;
							var a = u.getX(i.event),
								l = u.getY(i.event);
							this._markShape = new x({
								zlevel: this.getZlevelBase(),
								z: this.getZBase(),
								style: {
									xStart: a,
									yStart: l,
									xEnd: a,
									yEnd: l,
									lineWidth: this.query(this.option, "toolbox.feature.mark.lineStyle.width"),
									strokeColor: this.query(this.option, "toolbox.feature.mark.lineStyle.color"),
									lineType: this.query(this.option, "toolbox.feature.mark.lineStyle.type")
								}
							}), this.zr.addHoverShape(this._markShape)
						}
					}
				}
			},
			__onMark: function(i) {
				var a = i.target;
				if (this._marking || this._markStart) {
					this._resetMark(), this.zr.refreshNextFrame()
				} else {
					this._resetZoom(), this.zr.modShape(a.id, {
						style: {
							strokeColor: this._enableColor
						}
					}), this.zr.refreshNextFrame(), this._markStart = !0;
					var l = this;
					setTimeout(function() {
						l.zr && l.zr.on(y.EVENT.CLICK, l._onclick) && l.zr.on(y.EVENT.MOUSEMOVE, l._onmousemove)
					}, 10)
				}
				return !0
			},
			__onMarkUndo: function() {
				if (this._marking) {
					this._marking = !1
				} else {
					var i = this._markShapeList.length;
					if (i >= 1) {
						var a = this._markShapeList[i - 1];
						this.zr.delShape(a.id), this.zr.refreshNextFrame(), this._markShapeList.pop(), 1 === i && (this._iconDisable(this._iconShapeMap.markUndo), this._iconDisable(this._iconShapeMap.markClear))
					}
				}
				return !0
			},
			__onMarkClear: function() {
				this._marking && (this._marking = !1);
				var a = this._markShapeList.length;
				if (a > 0) {
					for (; a--;) {
						this.zr.delShape(this._markShapeList.pop().id)
					}
					this._iconDisable(this._iconShapeMap.markUndo), this._iconDisable(this._iconShapeMap.markClear), this.zr.refreshNextFrame()
				}
				return !0
			},
			__onDataZoom: function(i) {
				var a = i.target;
				if (this._zooming || this._zoomStart) {
					this._resetZoom(), this.zr.refreshNextFrame(), this.dom.style.cursor = "default"
				} else {
					this._resetMark(), this.zr.modShape(a.id, {
						style: {
							strokeColor: this._enableColor
						}
					}), this.zr.refreshNextFrame(), this._zoomStart = !0;
					var l = this;
					setTimeout(function() {
						l.zr && l.zr.on(y.EVENT.MOUSEDOWN, l._onmousedown) && l.zr.on(y.EVENT.MOUSEUP, l._onmouseup) && l.zr.on(y.EVENT.MOUSEMOVE, l._onmousemove)
					}, 10), this.dom.style.cursor = "crosshair"
				}
				return !0
			},
			__onDataZoomReset: function() {
				return this._zooming && (this._zooming = !1), this._zoomQueue.pop(), this._zoomQueue.length > 0 ? this.component.dataZoom.absoluteZoom(this._zoomQueue[this._zoomQueue.length - 1]) : (this.component.dataZoom.rectZoom(), this._iconDisable(this._iconShapeMap.dataZoomReset), this.zr.refreshNextFrame()), !0
			},
			_resetMark: function() {
				this._marking = !1, this._markStart && (this._markStart = !1, this._iconShapeMap.mark && this.zr.modShape(this._iconShapeMap.mark.id, {
					style: {
						strokeColor: this._iconShapeMap.mark.highlightStyle.strokeColor
					}
				}), this.zr.un(y.EVENT.CLICK, this._onclick), this.zr.un(y.EVENT.MOUSEMOVE, this._onmousemove))
			},
			_resetZoom: function() {
				this._zooming = !1, this._zoomStart && (this._zoomStart = !1, this._iconShapeMap.dataZoom && this.zr.modShape(this._iconShapeMap.dataZoom.id, {
					style: {
						strokeColor: this._iconShapeMap.dataZoom.highlightStyle.strokeColor
					}
				}), this.zr.un(y.EVENT.MOUSEDOWN, this._onmousedown), this.zr.un(y.EVENT.MOUSEUP, this._onmouseup), this.zr.un(y.EVENT.MOUSEMOVE, this._onmousemove))
			},
			_iconDisable: function(a) {
				"image" != a.type ? this.zr.modShape(a.id, {
					hoverable: !1,
					clickable: !1,
					style: {
						strokeColor: this._disableColor
					}
				}) : this.zr.modShape(a.id, {
					hoverable: !1,
					clickable: !1,
					style: {
						opacity: 0.3
					}
				})
			},
			_iconEnable: function(a) {
				"image" != a.type ? this.zr.modShape(a.id, {
					hoverable: !0,
					clickable: !0,
					style: {
						strokeColor: a.highlightStyle.strokeColor
					}
				}) : this.zr.modShape(a.id, {
					hoverable: !0,
					clickable: !0,
					style: {
						opacity: 0.8
					}
				})
			},
			__onDataView: function() {
				return this._dataView.show(this.option), !0
			},
			__onRestore: function() {
				return this._resetMark(), this._resetZoom(), this.messageCenter.dispatch(C.EVENT.RESTORE, null, null, this.myChart), !0
			},
			__onSaveAsImage: function() {
				var r = this.option.toolbox.feature.saveAsImage,
					o = r.type || "png";
				"png" != o && "jpeg" != o && (o = "png");
				var s;
				s = this.myChart.isConnected() ? this.myChart.getConnectedDataURL(o) : this.zr.toDataURL("image/" + o, this.option.backgroundColor && "rgba(0,0,0,0)" === this.option.backgroundColor.replace(" ", "") ? "#fff" : this.option.backgroundColor);
				var m = document.createElement("div");
				m.id = "__echarts_download_wrap__", m.style.cssText = "position:fixed;z-index:99999;display:block;top:0;left:0;background-color:rgba(33,33,33,0.5);text-align:center;width:100%;height:100%;line-height:" + document.documentElement.clientHeight + "px;";
				var l = document.createElement("a");
				l.href = s, l.setAttribute("download", (r.name ? r.name : this.option.title && (this.option.title.text || this.option.title.subtext) ? this.option.title.text || this.option.title.subtext : "ECharts") + "." + o), l.innerHTML = '<img style="vertical-align:middle" src="' + s + '" title="' + (window.ActiveXObject || "ActiveXObject" in window ? "右键->图片另存为" : r.lang ? r.lang[0] : "点击保存") + '"/>', m.appendChild(l), document.body.appendChild(m), l = null, m = null, setTimeout(function() {
					var a = document.getElementById("__echarts_download_wrap__");
					a && (a.onclick = function() {
						var i = document.getElementById("__echarts_download_wrap__");
						i.onclick = null, i.innerHTML = "", document.body.removeChild(i), i = null
					}, a = null)
				}, 500)
			},
			__onMagicType: function(i) {
				this._resetMark();
				var a = i.target._name;
				return this._magicType[a] || (this._magicType[a] = !0, a === C.CHART_TYPE_LINE ? this._magicType[C.CHART_TYPE_BAR] = !1 : a === C.CHART_TYPE_BAR && (this._magicType[C.CHART_TYPE_LINE] = !1), a === C.CHART_TYPE_PIE ? this._magicType[C.CHART_TYPE_FUNNEL] = !1 : a === C.CHART_TYPE_FUNNEL && (this._magicType[C.CHART_TYPE_PIE] = !1), a === C.CHART_TYPE_FORCE ? this._magicType[C.CHART_TYPE_CHORD] = !1 : a === C.CHART_TYPE_CHORD && (this._magicType[C.CHART_TYPE_FORCE] = !1), a === q ? this._magicType[v] = !1 : a === v && (this._magicType[q] = !1), this.messageCenter.dispatch(C.EVENT.MAGIC_TYPE_CHANGED, i.event, {
					magicType: this._magicType
				}, this.myChart)), !0
			},
			setMagicType: function(a) {
				this._resetMark(), this._magicType = a, !this._isSilence && this.messageCenter.dispatch(C.EVENT.MAGIC_TYPE_CHANGED, null, {
					magicType: this._magicType
				}, this.myChart)
			},
			__onCustomHandler: function(i) {
				var a = i.target.style.iconType,
					l = this.option.toolbox.feature[a].onclick;
				"function" == typeof l && l.call(this, this.option)
			},
			reset: function(I, K) {
				if (K && this.clear(), this.query(I, "toolbox.show") && this.query(I, "toolbox.feature.magicType.show")) {
					var E = I.toolbox.feature.magicType.type,
						G = E.length;
					for (this._magicMap = {}; G--;) {
						this._magicMap[E[G]] = !0
					}
					G = I.series.length;
					for (var J, D; G--;) {
						J = I.series[G].type, this._magicMap[J] && (D = I.xAxis instanceof Array ? I.xAxis[I.series[G].xAxisIndex || 0] : I.xAxis, D && "category" === (D.type || "category") && (D.__boundaryGap = null != D.boundaryGap ? D.boundaryGap : !0), D = I.yAxis instanceof Array ? I.yAxis[I.series[G].yAxisIndex || 0] : I.yAxis, D && "category" === D.type && (D.__boundaryGap = null != D.boundaryGap ? D.boundaryGap : !0), I.series[G].__type = J, I.series[G].__itemStyle = w.clone(I.series[G].itemStyle || {})), (this._magicMap[q] || this._magicMap[v]) && (I.series[G].__stack = I.series[G].stack)
					}
				}
				this._magicType = K ? {} : this._magicType || {};
				for (var l in this._magicType) {
					if (this._magicType[l]) {
						this.option = I, this.getMagicOption();
						break
					}
				}
				var L = I.dataZoom;
				if (L && L.show) {
					var H = null != L.start && L.start >= 0 && L.start <= 100 ? L.start : 0,
						F = null != L.end && L.end >= 0 && L.end <= 100 ? L.end : 100;
					H > F && (H += F, F = H - F, H -= F), this._zoomQueue = [{
						start: H,
						end: F,
						start2: 0,
						end2: 100
					}]
				} else {
					this._zoomQueue = []
				}
			},
			getMagicOption: function() {
				var r, o;
				if (this._magicType[C.CHART_TYPE_LINE] || this._magicType[C.CHART_TYPE_BAR]) {
					for (var s = this._magicType[C.CHART_TYPE_LINE] ? !1 : !0, m = 0, l = this.option.series.length; l > m; m++) {
						o = this.option.series[m].type, (o == C.CHART_TYPE_LINE || o == C.CHART_TYPE_BAR) && (r = this.option.xAxis instanceof Array ? this.option.xAxis[this.option.series[m].xAxisIndex || 0] : this.option.xAxis, r && "category" === (r.type || "category") && (r.boundaryGap = s ? !0 : r.__boundaryGap), r = this.option.yAxis instanceof Array ? this.option.yAxis[this.option.series[m].yAxisIndex || 0] : this.option.yAxis, r && "category" === r.type && (r.boundaryGap = s ? !0 : r.__boundaryGap))
					}
					this._defaultMagic(C.CHART_TYPE_LINE, C.CHART_TYPE_BAR)
				}
				if (this._defaultMagic(C.CHART_TYPE_CHORD, C.CHART_TYPE_FORCE), this._defaultMagic(C.CHART_TYPE_PIE, C.CHART_TYPE_FUNNEL), this._magicType[q] || this._magicType[v]) {
					for (var m = 0, l = this.option.series.length; l > m; m++) {
						this._magicType[q] ? (this.option.series[m].stack = "_ECHARTS_STACK_KENER_2014_", o = q) : this._magicType[v] && (this.option.series[m].stack = null, o = v), this._featureOption[o + "Chart"] && w.merge(this.option.series[m], this._featureOption[o + "Chart"] || {}, !0)
					}
				}
				return this.option
			},
			_defaultMagic: function(r, o) {
				if (this._magicType[r] || this._magicType[o]) {
					for (var s = 0, m = this.option.series.length; m > s; s++) {
						var l = this.option.series[s].type;
						(l == r || l == o) && (this.option.series[s].type = this._magicType[r] ? r : o, this.option.series[s].itemStyle = w.clone(this.option.series[s].__itemStyle), l = this.option.series[s].type, this._featureOption[l + "Chart"] && w.merge(this.option.series[s], this._featureOption[l + "Chart"] || {}, !0))
					}
				}
			},
			silence: function(a) {
				this._isSilence = a
			},
			resize: function() {
				this._resetMark(), this.clear(), this.option && this.option.toolbox && this.option.toolbox.show && this._buildShape(), this._dataView && this._dataView.resize()
			},
			hideDataView: function() {
				this._dataView && this._dataView.hide()
			},
			clear: function(a) {
				this.zr && (this.zr.delShape(this.shapeList), this.shapeList = [], a || (this.zr.delShape(this._markShapeList), this._markShapeList = []))
			},
			onbeforDispose: function() {
				this._dataView && (this._dataView.dispose(), this._dataView = null), this._markShapeList = null
			},
			refresh: function(a) {
				a && (this._resetMark(), this._resetZoom(), a.toolbox = this.reformOption(a.toolbox), this.option = a, this.clear(!0), a.toolbox.show && this._buildShape(), this.hideDataView())
			}
		}, w.inherits(B, p), z("../component").define("toolbox", B), B
	}), h("echarts/component", [], function() {
		var i = {},
			a = {};
		return i.define = function(j, e) {
			return a[j] = e, i
		}, i.get = function(j) {
			return a[j]
		}, i
	}), h("echarts/component/title", ["require", "./base", "zrender/shape/Text", "zrender/shape/Rectangle", "../config", "zrender/tool/util", "zrender/tool/area", "zrender/tool/color", "../component"], function(u) {
		function w(s, r, n, l, y) {
			m.call(this, s, r, n, l, y), this.refresh(l)
		}
		var m = u("./base"),
			q = u("zrender/shape/Text"),
			v = u("zrender/shape/Rectangle"),
			k = u("../config");
		k.title = {
			zlevel: 0,
			z: 6,
			show: !0,
			text: "",
			subtext: "",
			x: "left",
			y: "top",
			backgroundColor: "rgba(0,0,0,0)",
			borderColor: "#ccc",
			borderWidth: 0,
			padding: 5,
			itemGap: 5,
			textStyle: {
				fontSize: 18,
				fontWeight: "bolder",
				color: "#333"
			},
			subtextStyle: {
				color: "#aaa"
			}
		};
		var j = u("zrender/tool/util"),
			x = u("zrender/tool/area"),
			p = u("zrender/tool/color");
		return w.prototype = {
			type: k.COMPONENT_TYPE_TITLE,
			_buildShape: function() {
				if (this.titleOption.show) {
					this._itemGroupLocation = this._getItemGroupLocation(), this._buildBackground(), this._buildItem();
					for (var i = 0, a = this.shapeList.length; a > i; i++) {
						this.zr.addShape(this.shapeList[i])
					}
				}
			},
			_buildItem: function() {
				var E = this.titleOption.text,
					I = this.titleOption.link,
					z = this.titleOption.target,
					H = this.titleOption.subtext,
					y = this.titleOption.sublink,
					i = this.titleOption.subtarget,
					J = this.getFont(this.titleOption.textStyle),
					D = this.getFont(this.titleOption.subtextStyle),
					B = this._itemGroupLocation.x,
					A = this._itemGroupLocation.y,
					C = this._itemGroupLocation.width,
					F = this._itemGroupLocation.height,
					l = {
						zlevel: this.getZlevelBase(),
						z: this.getZBase(),
						style: {
							y: A,
							color: this.titleOption.textStyle.color,
							text: E,
							textFont: J,
							textBaseline: "top"
						},
						highlightStyle: {
							color: p.lift(this.titleOption.textStyle.color, 1),
							brushType: "fill"
						},
						hoverable: !1
					};
				I && (l.hoverable = !0, l.clickable = !0, l.onclick = function() {
					z && "self" == z ? window.location = I : window.open(I)
				});
				var G = {
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					style: {
						y: A + F,
						color: this.titleOption.subtextStyle.color,
						text: H,
						textFont: D,
						textBaseline: "bottom"
					},
					highlightStyle: {
						color: p.lift(this.titleOption.subtextStyle.color, 1),
						brushType: "fill"
					},
					hoverable: !1
				};
				switch (y && (G.hoverable = !0, G.clickable = !0, G.onclick = function() {
					i && "self" == i ? window.location = y : window.open(y)
				}), this.titleOption.x) {
					case "center":
						l.style.x = G.style.x = B + C / 2, l.style.textAlign = G.style.textAlign = "center";
						break;
					case "left":
						l.style.x = G.style.x = B, l.style.textAlign = G.style.textAlign = "left";
						break;
					case "right":
						l.style.x = G.style.x = B + C, l.style.textAlign = G.style.textAlign = "right";
						break;
					default:
						B = this.titleOption.x - 0, B = isNaN(B) ? 0 : B, l.style.x = G.style.x = B
				}
				this.titleOption.textAlign && (l.style.textAlign = G.style.textAlign = this.titleOption.textAlign), this.shapeList.push(new q(l)), "" !== H && this.shapeList.push(new q(G))
			},
			_buildBackground: function() {
				var a = this.reformCssArray(this.titleOption.padding);
				this.shapeList.push(new v({
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					hoverable: !1,
					style: {
						x: this._itemGroupLocation.x - a[3],
						y: this._itemGroupLocation.y - a[0],
						width: this._itemGroupLocation.width + a[3] + a[1],
						height: this._itemGroupLocation.height + a[0] + a[2],
						brushType: 0 === this.titleOption.borderWidth ? "fill" : "both",
						color: this.titleOption.backgroundColor,
						strokeColor: this.titleOption.borderColor,
						lineWidth: this.titleOption.borderWidth
					}
				}))
			},
			_getItemGroupLocation: function() {
				var F, H = this.reformCssArray(this.titleOption.padding),
					z = this.titleOption.text,
					D = this.titleOption.subtext,
					G = this.getFont(this.titleOption.textStyle),
					y = this.getFont(this.titleOption.subtextStyle),
					s = Math.max(x.getTextWidth(z, G), x.getTextWidth(D, y)),
					C = x.getTextHeight(z, G) + ("" === D ? 0 : this.titleOption.itemGap + x.getTextHeight(D, y)),
					E = this.zr.getWidth();
				switch (this.titleOption.x) {
					case "center":
						F = Math.floor((E - s) / 2);
						break;
					case "left":
						F = H[3] + this.titleOption.borderWidth;
						break;
					case "right":
						F = E - s - H[1] - this.titleOption.borderWidth;
						break;
					default:
						F = this.titleOption.x - 0, F = isNaN(F) ? 0 : F
				}
				var B, A = this.zr.getHeight();
				switch (this.titleOption.y) {
					case "top":
						B = H[0] + this.titleOption.borderWidth;
						break;
					case "bottom":
						B = A - C - H[2] - this.titleOption.borderWidth;
						break;
					case "center":
						B = Math.floor((A - C) / 2);
						break;
					default:
						B = this.titleOption.y - 0, B = isNaN(B) ? 0 : B
				}
				return {
					x: F,
					y: B,
					width: s,
					height: C
				}
			},
			refresh: function(a) {
				a && (this.option = a, this.option.title = this.reformOption(this.option.title), this.titleOption = this.option.title, this.titleOption.textStyle = this.getTextStyle(this.titleOption.textStyle), this.titleOption.subtextStyle = this.getTextStyle(this.titleOption.subtextStyle)), this.clear(), this._buildShape()
			}
		}, j.inherits(w, m), u("../component").define("title", w), w
	}), h("echarts/component/tooltip", ["require", "./base", "../util/shape/Cross", "zrender/shape/Line", "zrender/shape/Rectangle", "../config", "../util/ecData", "zrender/config", "zrender/tool/event", "zrender/tool/area", "zrender/tool/color", "zrender/tool/util", "zrender/shape/Base", "../component"], function(B) {
		function E(p, i, G, n, m) {
			u.call(this, p, i, G, n, m), this.dom = m.dom;
			var a = this;
			a._onmousemove = function(l) {
				return a.__onmousemove(l)
			}, a._onglobalout = function(l) {
				return a.__onglobalout(l)
			}, this.zr.on(A.EVENT.MOUSEMOVE, a._onmousemove), this.zr.on(A.EVENT.GLOBALOUT, a._onglobalout), a._hide = function(l) {
				return a.__hide(l)
			}, a._tryShow = function(l) {
				return a.__tryShow(l)
			}, a._refixed = function(l) {
				return a.__refixed(l)
			}, a._setContent = function(o, l) {
				return a.__setContent(o, l)
			}, this._tDom = this._tDom || document.createElement("div"), this._tDom.onselectstart = function() {
				return !1
			}, this._tDom.onmouseover = function() {
				a._mousein = !0
			}, this._tDom.onmouseout = function() {
				a._mousein = !1
			}, this._tDom.className = "echarts-tooltip", this._tDom.style.position = "absolute", this.hasAppend = !1, this._axisLineShape && this.zr.delShape(this._axisLineShape.id), this._axisLineShape = new D({
				zlevel: this.getZlevelBase(),
				z: this.getZBase(),
				invisible: !0,
				hoverable: !1
			}), this.shapeList.push(this._axisLineShape), this.zr.addShape(this._axisLineShape), this._axisShadowShape && this.zr.delShape(this._axisShadowShape.id), this._axisShadowShape = new D({
				zlevel: this.getZlevelBase(),
				z: 1,
				invisible: !0,
				hoverable: !1
			}), this.shapeList.push(this._axisShadowShape), this.zr.addShape(this._axisShadowShape), this._axisCrossShape && this.zr.delShape(this._axisCrossShape.id), this._axisCrossShape = new z({
				zlevel: this.getZlevelBase(),
				z: this.getZBase(),
				invisible: !0,
				hoverable: !1
			}), this.shapeList.push(this._axisCrossShape), this.zr.addShape(this._axisCrossShape), this.showing = !1, this.refresh(n)
		}
		var u = B("./base"),
			z = B("../util/shape/Cross"),
			D = B("zrender/shape/Line"),
			q = B("zrender/shape/Rectangle"),
			j = new q({}),
			F = B("../config");
		F.tooltip = {
			zlevel: 1,
			z: 8,
			show: !0,
			showContent: !0,
			trigger: "item",
			islandFormatter: "{a} <br/>{b} : {c}",
			showDelay: 20,
			hideDelay: 100,
			transitionDuration: 0.4,
			enterable: !1,
			backgroundColor: "rgba(0,0,0,0.7)",
			borderColor: "#333",
			borderRadius: 4,
			borderWidth: 0,
			padding: 5,
			axisPointer: {
				type: "line",
				lineStyle: {
					color: "#48b",
					width: 2,
					type: "solid"
				},
				crossStyle: {
					color: "#1e90ff",
					width: 1,
					type: "dashed"
				},
				shadowStyle: {
					color: "rgba(150,150,150,0.3)",
					width: "auto",
					type: "default"
				}
			},
			textStyle: {
				color: "#fff"
			}
		};
		var y = B("../util/ecData"),
			A = B("zrender/config"),
			w = B("zrender/tool/event"),
			v = B("zrender/tool/area"),
			x = B("zrender/tool/color"),
			C = B("zrender/tool/util"),
			k = B("zrender/shape/Base");
		return E.prototype = {
			type: F.COMPONENT_TYPE_TOOLTIP,
			_gCssText: "position:absolute;display:block;border-style:solid;white-space:nowrap;",
			_style: function(p) {
				if (!p) {
					return ""
				}
				var o = [];
				if (p.transitionDuration) {
					var r = "left " + p.transitionDuration + "s,top " + p.transitionDuration + "s";
					o.push("transition:" + r), o.push("-moz-transition:" + r), o.push("-webkit-transition:" + r), o.push("-o-transition:" + r)
				}
				p.backgroundColor && (o.push("background-Color:" + x.toHex(p.backgroundColor)), o.push("filter:alpha(opacity=70)"), o.push("background-Color:" + p.backgroundColor)), null != p.borderWidth && o.push("border-width:" + p.borderWidth + "px"), null != p.borderColor && o.push("border-color:" + p.borderColor), null != p.borderRadius && (o.push("border-radius:" + p.borderRadius + "px"), o.push("-moz-border-radius:" + p.borderRadius + "px"), o.push("-webkit-border-radius:" + p.borderRadius + "px"), o.push("-o-border-radius:" + p.borderRadius + "px"));
				var m = p.textStyle;
				m && (m.color && o.push("color:" + m.color), m.decoration && o.push("text-decoration:" + m.decoration), m.align && o.push("text-align:" + m.align), m.fontFamily && o.push("font-family:" + m.fontFamily), m.fontSize && o.push("font-size:" + m.fontSize + "px"), m.fontSize && o.push("line-height:" + Math.round(3 * m.fontSize / 2) + "px"), m.fontStyle && o.push("font-style:" + m.fontStyle), m.fontWeight && o.push("font-weight:" + m.fontWeight));
				var l = p.padding;
				return null != l && (l = this.reformCssArray(l), o.push("padding:" + l[0] + "px " + l[1] + "px " + l[2] + "px " + l[3] + "px")), o = o.join(";") + ";"
			},
			__hide: function() {
				this._lastDataIndex = -1, this._lastSeriesIndex = -1, this._lastItemTriggerId = -1, this._tDom && (this._tDom.style.display = "none");
				var a = !1;
				this._axisLineShape.invisible || (this._axisLineShape.invisible = !0, this.zr.modShape(this._axisLineShape.id), a = !0), this._axisShadowShape.invisible || (this._axisShadowShape.invisible = !0, this.zr.modShape(this._axisShadowShape.id), a = !0), this._axisCrossShape.invisible || (this._axisCrossShape.invisible = !0, this.zr.modShape(this._axisCrossShape.id), a = !0), this._lastTipShape && this._lastTipShape.tipShape.length > 0 && (this.zr.delShape(this._lastTipShape.tipShape), this._lastTipShape = !1, this.shapeList.length = 2), a && this.zr.refreshNextFrame(), this.showing = !1
			},
			_show: function(r, p, G, m) {
				var l = this._tDom.offsetHeight,
					s = this._tDom.offsetWidth;
				r && ("function" == typeof r && (r = r([p, G])), r instanceof Array && (p = r[0], G = r[1])), p + s > this._zrWidth && (p -= s + 40), G + l > this._zrHeight && (G -= l - 20), 20 > G && (G = 0), this._tDom.style.cssText = this._gCssText + this._defaultCssText + (m ? m : "") + "left:" + p + "px;top:" + G + "px;", (10 > l || 10 > s) && setTimeout(this._refixed, 20), this.showing = !0
			},
			__refixed: function() {
				if (this._tDom) {
					var i = "",
						a = this._tDom.offsetHeight,
						l = this._tDom.offsetWidth;
					this._tDom.offsetLeft + l > this._zrWidth && (i += "left:" + (this._zrWidth - l - 20) + "px;"), this._tDom.offsetTop + a > this._zrHeight && (i += "top:" + (this._zrHeight - a - 10) + "px;"), "" !== i && (this._tDom.style.cssText += i)
				}
			},
			__tryShow: function() {
				var m, l;
				if (this._curTarget) {
					if ("island" === this._curTarget._type && this.option.tooltip.show) {
						return void this._showItemTrigger()
					}
					var o = y.get(this._curTarget, "series"),
						a = y.get(this._curTarget, "data");
					m = this.deepQuery([a, o, this.option], "tooltip.show"), null != o && null != a && m ? (l = this.deepQuery([a, o, this.option], "tooltip.trigger"), "axis" === l ? this._showAxisTrigger(o.xAxisIndex, o.yAxisIndex, y.get(this._curTarget, "dataIndex")) : this._showItemTrigger()) : (clearTimeout(this._hidingTicket), clearTimeout(this._showingTicket), this._hidingTicket = setTimeout(this._hide, this._hideDelay))
				} else {
					this._findPolarTrigger() || this._findAxisTrigger()
				}
			},
			_findAxisTrigger: function() {
				if (!this.component.xAxis || !this.component.yAxis) {
					return void(this._hidingTicket = setTimeout(this._hide, this._hideDelay))
				}
				for (var p, o, r = this.option.series, m = 0, l = r.length; l > m; m++) {
					if ("axis" === this.deepQuery([r[m], this.option], "tooltip.trigger")) {
						return p = r[m].xAxisIndex || 0, o = r[m].yAxisIndex || 0, this.component.xAxis.getAxis(p) && this.component.xAxis.getAxis(p).type === F.COMPONENT_TYPE_AXIS_CATEGORY ? void this._showAxisTrigger(p, o, this._getNearestDataIndex("x", this.component.xAxis.getAxis(p))) : this.component.yAxis.getAxis(o) && this.component.yAxis.getAxis(o).type === F.COMPONENT_TYPE_AXIS_CATEGORY ? void this._showAxisTrigger(p, o, this._getNearestDataIndex("y", this.component.yAxis.getAxis(o))) : void this._showAxisTrigger(p, o, -1)
					}
				}
				"cross" === this.option.tooltip.axisPointer.type && this._showAxisTrigger(-1, -1, -1)
			},
			_findPolarTrigger: function() {
				if (!this.component.polar) {
					return !1
				}
				var m, l = w.getX(this._event),
					o = w.getY(this._event),
					a = this.component.polar.getNearestIndex([l, o]);
				return a ? (m = a.valueIndex, a = a.polarIndex) : a = -1, -1 != a ? this._showPolarTrigger(a, m) : !1
			},
			_getNearestDataIndex: function(M, O) {
				var G = -1,
					K = w.getX(this._event),
					N = w.getY(this._event);
				if ("x" === M) {
					for (var p, m, P = this.component.grid.getXend(), J = O.getCoordByIndex(G); P > J && (m = J, K >= J);) {
						p = J, J = O.getCoordByIndex(++G)
					}
					return 0 >= G ? G = 0 : m - K >= K - p ? G -= 1 : null == O.getNameByIndex(G) && (G -= 1), G
				}
				for (var L, H, I = this.component.grid.getY(), J = O.getCoordByIndex(G); J > I && (L = J, J >= N);) {
					H = J, J = O.getCoordByIndex(++G)
				}
				return 0 >= G ? G = 0 : N - L >= H - N ? G -= 1 : null == O.getNameByIndex(G) && (G -= 1), G
			},
			_showAxisTrigger: function(W, J, N) {
				if (!this._event.connectTrigger && this.messageCenter.dispatch(F.EVENT.TOOLTIP_IN_GRID, this._event, null, this.myChart), null == this.component.xAxis || null == this.component.yAxis || null == W || null == J) {
					return clearTimeout(this._hidingTicket), clearTimeout(this._showingTicket), void(this._hidingTicket = setTimeout(this._hide, this._hideDelay))
				}
				var Q, aa, M, K, O = this.option.series,
					R = [],
					m = [],
					s = "";
				if ("axis" === this.option.tooltip.trigger) {
					if (!this.option.tooltip.show) {
						return
					}
					aa = this.option.tooltip.formatter, M = this.option.tooltip.position
				}
				var X, L, Y = -1 != W && this.component.xAxis.getAxis(W).type === F.COMPONENT_TYPE_AXIS_CATEGORY ? "xAxis" : -1 != J && this.component.yAxis.getAxis(J).type === F.COMPONENT_TYPE_AXIS_CATEGORY ? "yAxis" : !1;
				if (Y) {
					var I = "xAxis" == Y ? W : J;
					Q = this.component[Y].getAxis(I);
					for (var G = 0, S = O.length; S > G; G++) {
						this._isSelected(O[G].name) && O[G][Y + "Index"] === I && "axis" === this.deepQuery([O[G], this.option], "tooltip.trigger") && (K = this.query(O[G], "tooltip.showContent") || K, aa = this.query(O[G], "tooltip.formatter") || aa, M = this.query(O[G], "tooltip.position") || M, s += this._style(this.query(O[G], "tooltip")), null != O[G].stack && "xAxis" == Y ? (R.unshift(O[G]), m.unshift(G)) : (R.push(O[G]), m.push(G)))
					}
					this.messageCenter.dispatch(F.EVENT.TOOLTIP_HOVER, this._event, {
						seriesIndex: m,
						dataIndex: N
					}, this.myChart);
					var Z;
					"xAxis" == Y ? (X = this.subPixelOptimize(Q.getCoordByIndex(N), this._axisLineWidth), L = w.getY(this._event), Z = [X, this.component.grid.getY(), X, this.component.grid.getYend()]) : (X = w.getX(this._event), L = this.subPixelOptimize(Q.getCoordByIndex(N), this._axisLineWidth), Z = [this.component.grid.getX(), L, this.component.grid.getXend(), L]), this._styleAxisPointer(R, Z[0], Z[1], Z[2], Z[3], Q.getGap(), X, L)
				} else {
					X = w.getX(this._event), L = w.getY(this._event), this._styleAxisPointer(O, this.component.grid.getX(), L, this.component.grid.getXend(), L, 0, X, L), N >= 0 ? this._showItemTrigger(!0) : (clearTimeout(this._hidingTicket), clearTimeout(this._showingTicket), this._tDom.style.display = "none")
				}
				if (R.length > 0) {
					if (this._lastItemTriggerId = -1, this._lastDataIndex != N || this._lastSeriesIndex != m[0]) {
						this._lastDataIndex = N, this._lastSeriesIndex = m[0];
						var T, P;
						if ("function" == typeof aa) {
							for (var H = [], G = 0, S = R.length; S > G; G++) {
								T = R[G].data[N], P = this.getDataFromOption(T, "-"), H.push({
									seriesIndex: m[G],
									seriesName: R[G].name || "",
									series: R[G],
									dataIndex: N,
									data: T,
									name: Q.getNameByIndex(N),
									value: P,
									0: R[G].name || "",
									1: Q.getNameByIndex(N),
									2: P,
									3: T
								})
							}
							this._curTicket = "axis:" + N, this._tDom.innerHTML = aa.call(this.myChart, H, this._curTicket, this._setContent)
						} else {
							if ("string" == typeof aa) {
								this._curTicket = 0 / 0, aa = aa.replace("{a}", "{a0}").replace("{b}", "{b0}").replace("{c}", "{c0}");
								for (var G = 0, S = R.length; S > G; G++) {
									aa = aa.replace("{a" + G + "}", this._encodeHTML(R[G].name || "")), aa = aa.replace("{b" + G + "}", this._encodeHTML(Q.getNameByIndex(N))), T = R[G].data[N], T = this.getDataFromOption(T, "-"), aa = aa.replace("{c" + G + "}", T instanceof Array ? T : this.numAddCommas(T))
								}
								this._tDom.innerHTML = aa
							} else {
								this._curTicket = 0 / 0, aa = this._encodeHTML(Q.getNameByIndex(N));
								for (var G = 0, S = R.length; S > G; G++) {
									aa += "<br/>" + this._encodeHTML(R[G].name || "") + " : ", T = R[G].data[N], T = this.getDataFromOption(T, "-"), aa += T instanceof Array ? T : this.numAddCommas(T)
								}
								this._tDom.innerHTML = aa
							}
						}
					}
					if (K === !1 || !this.option.tooltip.showContent) {
						return
					}
					this.hasAppend || (this._tDom.style.left = this._zrWidth / 2 + "px", this._tDom.style.top = this._zrHeight / 2 + "px", this.dom.firstChild.appendChild(this._tDom), this.hasAppend = !0), this._show(M, X + 10, L + 10, s)
				}
			},
			_showPolarTrigger: function(T, J) {
				if (null == this.component.polar || null == T || null == J || 0 > J) {
					return !1
				}
				var O, Q, Y, N = this.option.series,
					L = [],
					K = [],
					P = "";
				if ("axis" === this.option.tooltip.trigger) {
					if (!this.option.tooltip.show) {
						return !1
					}
					O = this.option.tooltip.formatter, Q = this.option.tooltip.position
				}
				for (var R = this.option.polar[T].indicator[J].text, m = 0, G = N.length; G > m; m++) {
					this._isSelected(N[m].name) && N[m].polarIndex === T && "axis" === this.deepQuery([N[m], this.option], "tooltip.trigger") && (Y = this.query(N[m], "tooltip.showContent") || Y, O = this.query(N[m], "tooltip.formatter") || O, Q = this.query(N[m], "tooltip.position") || Q, P += this._style(this.query(N[m], "tooltip")), L.push(N[m]), K.push(m))
				}
				if (L.length > 0) {
					for (var W, M, X, I = [], m = 0, G = L.length; G > m; m++) {
						W = L[m].data;
						for (var H = 0, S = W.length; S > H; H++) {
							M = W[H], this._isSelected(M.name) && (M = null != M ? M : {
								name: "",
								value: {
									dataIndex: "-"
								}
							}, X = this.getDataFromOption(M.value[J]), I.push({
								seriesIndex: K[m],
								seriesName: L[m].name || "",
								series: L[m],
								dataIndex: J,
								data: M,
								name: M.name,
								indicator: R,
								value: X,
								0: L[m].name || "",
								1: M.name,
								2: X,
								3: R
							}))
						}
					}
					if (I.length <= 0) {
						return
					}
					if (this._lastItemTriggerId = -1, this._lastDataIndex != J || this._lastSeriesIndex != K[0]) {
						if (this._lastDataIndex = J, this._lastSeriesIndex = K[0], "function" == typeof O) {
							this._curTicket = "axis:" + J, this._tDom.innerHTML = O.call(this.myChart, I, this._curTicket, this._setContent)
						} else {
							if ("string" == typeof O) {
								O = O.replace("{a}", "{a0}").replace("{b}", "{b0}").replace("{c}", "{c0}").replace("{d}", "{d0}");
								for (var m = 0, G = I.length; G > m; m++) {
									O = O.replace("{a" + m + "}", this._encodeHTML(I[m].seriesName)), O = O.replace("{b" + m + "}", this._encodeHTML(I[m].name)), O = O.replace("{c" + m + "}", this.numAddCommas(I[m].value)), O = O.replace("{d" + m + "}", this._encodeHTML(I[m].indicator))
								}
								this._tDom.innerHTML = O
							} else {
								O = this._encodeHTML(I[0].name) + "<br/>" + this._encodeHTML(I[0].indicator) + " : " + this.numAddCommas(I[0].value);
								for (var m = 1, G = I.length; G > m; m++) {
									O += "<br/>" + this._encodeHTML(I[m].name) + "<br/>", O += this._encodeHTML(I[m].indicator) + " : " + this.numAddCommas(I[m].value)
								}
								this._tDom.innerHTML = O
							}
						}
					}
					if (Y === !1 || !this.option.tooltip.showContent) {
						return
					}
					return this.hasAppend || (this._tDom.style.left = this._zrWidth / 2 + "px", this._tDom.style.top = this._zrHeight / 2 + "px", this.dom.firstChild.appendChild(this._tDom), this.hasAppend = !0), this._show(Q, w.getX(this._event), w.getY(this._event), P), !0
				}
			},
			_showItemTrigger: function(M) {
				if (this._curTarget) {
					var T, G, J, R = y.get(this._curTarget, "series"),
						s = y.get(this._curTarget, "seriesIndex"),
						l = y.get(this._curTarget, "data"),
						K = y.get(this._curTarget, "dataIndex"),
						H = y.get(this._curTarget, "name"),
						I = y.get(this._curTarget, "value"),
						N = y.get(this._curTarget, "special"),
						m = y.get(this._curTarget, "special2"),
						O = [l, R, this.option],
						S = "";
					if ("island" != this._curTarget._type) {
						var Q = M ? "axis" : "item";
						this.option.tooltip.trigger === Q && (T = this.option.tooltip.formatter, G = this.option.tooltip.position), this.query(R, "tooltip.trigger") === Q && (J = this.query(R, "tooltip.showContent") || J, T = this.query(R, "tooltip.formatter") || T, G = this.query(R, "tooltip.position") || G, S += this._style(this.query(R, "tooltip"))), J = this.query(l, "tooltip.showContent") || J, T = this.query(l, "tooltip.formatter") || T, G = this.query(l, "tooltip.position") || G, S += this._style(this.query(l, "tooltip"))
					} else {
						this._lastItemTriggerId = 0 / 0, J = this.deepQuery(O, "tooltip.showContent"), T = this.deepQuery(O, "tooltip.islandFormatter"), G = this.deepQuery(O, "tooltip.islandPosition")
					}
					this._lastDataIndex = -1, this._lastSeriesIndex = -1, this._lastItemTriggerId !== this._curTarget.id && (this._lastItemTriggerId = this._curTarget.id, "function" == typeof T ? (this._curTicket = (R.name || "") + ":" + K, this._tDom.innerHTML = T.call(this.myChart, {
						seriesIndex: s,
						seriesName: R.name || "",
						series: R,
						dataIndex: K,
						data: l,
						name: H,
						value: I,
						percent: N,
						indicator: N,
						value2: m,
						indicator2: m,
						0: R.name || "",
						1: H,
						2: I,
						3: N,
						4: m,
						5: l,
						6: s,
						7: K
					}, this._curTicket, this._setContent)) : "string" == typeof T ? (this._curTicket = 0 / 0, T = T.replace("{a}", "{a0}").replace("{b}", "{b0}").replace("{c}", "{c0}"), T = T.replace("{a0}", this._encodeHTML(R.name || "")).replace("{b0}", this._encodeHTML(H)).replace("{c0}", I instanceof Array ? I : this.numAddCommas(I)), T = T.replace("{d}", "{d0}").replace("{d0}", N || ""), T = T.replace("{e}", "{e0}").replace("{e0}", y.get(this._curTarget, "special2") || ""), this._tDom.innerHTML = T) : (this._curTicket = 0 / 0, this._tDom.innerHTML = R.type === F.CHART_TYPE_RADAR && N ? this._itemFormatter.radar.call(this, R, H, I, N) : R.type === F.CHART_TYPE_EVENTRIVER ? this._itemFormatter.eventRiver.call(this, R, H, I, l) : "" + (null != R.name ? this._encodeHTML(R.name) + "<br/>" : "") + ("" === H ? "" : this._encodeHTML(H) + " : ") + (I instanceof Array ? I : this.numAddCommas(I))));
					var L = w.getX(this._event),
						P = w.getY(this._event);
					this.deepQuery(O, "tooltip.axisPointer.show") && this.component.grid && this._styleAxisPointer([R], this.component.grid.getX(), P, this.component.grid.getXend(), P, 0, L, P), J !== !1 && this.option.tooltip.showContent && (this.hasAppend || (this._tDom.style.left = this._zrWidth / 2 + "px", this._tDom.style.top = this._zrHeight / 2 + "px", this.dom.firstChild.appendChild(this._tDom), this.hasAppend = !0), this._show(G, L + 20, P - 20, S))
				}
			},
			_itemFormatter: {
				radar: function(r, p, G, m) {
					var l = "";
					l += this._encodeHTML("" === p ? r.name || "" : p), l += "" === l ? "" : "<br />";
					for (var s = 0; s < m.length; s++) {
						l += this._encodeHTML(m[s].text) + " : " + this.numAddCommas(G[s]) + "<br />"
					}
					return l
				},
				chord: function(G, p, I, m, l) {
					if (null == l) {
						return this._encodeHTML(p) + " (" + this.numAddCommas(I) + ")"
					}
					var H = this._encodeHTML(p),
						s = this._encodeHTML(m);
					return "" + (null != G.name ? this._encodeHTML(G.name) + "<br/>" : "") + H + " -> " + s + " (" + this.numAddCommas(I) + ")<br />" + s + " -> " + H + " (" + this.numAddCommas(l) + ")"
				},
				eventRiver: function(G, p, I, m) {
					var l = "";
					l += this._encodeHTML("" === G.name ? "" : G.name + " : "), l += this._encodeHTML(p), l += "" === l ? "" : "<br />", m = m.evolution;
					for (var H = 0, s = m.length; s > H; H++) {
						l += '<div style="padding-top:5px;">', m[H].detail && (m[H].detail.img && (l += '<img src="' + m[H].detail.img + '" style="float:left;width:40px;height:40px;">'), l += '<div style="margin-left:45px;">' + m[H].time + "<br/>", l += '<a href="' + m[H].detail.link + '" target="_blank">', l += m[H].detail.text + "</a></div>", l += "</div>")
					}
					return l
				}
			},
			_styleAxisPointer: function(X, K, P, S, aa, O, M, L) {
				if (X.length > 0) {
					var R, T, Q = this.option.tooltip.axisPointer,
						G = Q.type,
						H = {
							line: {},
							cross: {},
							shadow: {}
						};
					for (var Y in H) {
						H[Y].color = Q[Y + "Style"].color, H[Y].width = Q[Y + "Style"].width, H[Y].type = Q[Y + "Style"].type
					}
					for (var N = 0, Z = X.length; Z > N; N++) {
						R = X[N], T = this.query(R, "tooltip.axisPointer.type"), G = T || G, T && (H[T].color = this.query(R, "tooltip.axisPointer." + T + "Style.color") || H[T].color, H[T].width = this.query(R, "tooltip.axisPointer." + T + "Style.width") || H[T].width, H[T].type = this.query(R, "tooltip.axisPointer." + T + "Style.type") || H[T].type)
					}
					if ("line" === G) {
						var J = H.line.width,
							I = K == S;
						this._axisLineShape.style = {
							xStart: I ? this.subPixelOptimize(K, J) : K,
							yStart: I ? P : this.subPixelOptimize(P, J),
							xEnd: I ? this.subPixelOptimize(S, J) : S,
							yEnd: I ? aa : this.subPixelOptimize(aa, J),
							strokeColor: H.line.color,
							lineWidth: J,
							lineType: H.line.type
						}, this._axisLineShape.invisible = !1, this.zr.modShape(this._axisLineShape.id)
					} else {
						if ("cross" === G) {
							var W = H.cross.width;
							this._axisCrossShape.style = {
								brushType: "stroke",
								rect: this.component.grid.getArea(),
								x: this.subPixelOptimize(M, W),
								y: this.subPixelOptimize(L, W),
								text: ("( " + this.component.xAxis.getAxis(0).getValueFromCoord(M) + " , " + this.component.yAxis.getAxis(0).getValueFromCoord(L) + " )").replace("  , ", " ").replace(" ,  ", " "),
								textPosition: "specific",
								strokeColor: H.cross.color,
								lineWidth: W,
								lineType: H.cross.type
							}, this.component.grid.getXend() - M > 100 ? (this._axisCrossShape.style.textAlign = "left", this._axisCrossShape.style.textX = M + 10) : (this._axisCrossShape.style.textAlign = "right", this._axisCrossShape.style.textX = M - 10), L - this.component.grid.getY() > 50 ? (this._axisCrossShape.style.textBaseline = "bottom", this._axisCrossShape.style.textY = L - 10) : (this._axisCrossShape.style.textBaseline = "top", this._axisCrossShape.style.textY = L + 10), this._axisCrossShape.invisible = !1, this.zr.modShape(this._axisCrossShape.id)
						} else {
							"shadow" === G && ((null == H.shadow.width || "auto" === H.shadow.width || isNaN(H.shadow.width)) && (H.shadow.width = O), K === S ? Math.abs(this.component.grid.getX() - K) < 2 ? (H.shadow.width /= 2, K = S += H.shadow.width / 2) : Math.abs(this.component.grid.getXend() - K) < 2 && (H.shadow.width /= 2, K = S -= H.shadow.width / 2) : P === aa && (Math.abs(this.component.grid.getY() - P) < 2 ? (H.shadow.width /= 2, P = aa += H.shadow.width / 2) : Math.abs(this.component.grid.getYend() - P) < 2 && (H.shadow.width /= 2, P = aa -= H.shadow.width / 2)), this._axisShadowShape.style = {
								xStart: K,
								yStart: P,
								xEnd: S,
								yEnd: aa,
								strokeColor: H.shadow.color,
								lineWidth: H.shadow.width
							}, this._axisShadowShape.invisible = !1, this.zr.modShape(this._axisShadowShape.id))
						}
					}
					this.zr.refreshNextFrame()
				}
			},
			__onmousemove: function(H) {
				if (clearTimeout(this._hidingTicket), clearTimeout(this._showingTicket), !this._mousein || !this._enterable) {
					var s = H.target,
						J = w.getX(H.event),
						r = w.getY(H.event);
					if (s) {
						this._curTarget = s, this._event = H.event, this._event.zrenderX = J, this._event.zrenderY = r;
						var p;
						if (this._needAxisTrigger && this.component.polar && -1 != (p = this.component.polar.isInside([J, r]))) {
							for (var I = this.option.series, m = 0, G = I.length; G > m; m++) {
								if (I[m].polarIndex === p && "axis" === this.deepQuery([I[m], this.option], "tooltip.trigger")) {
									this._curTarget = null;
									break
								}
							}
						}
						this._showingTicket = setTimeout(this._tryShow, this._showDelay)
					} else {
						this._curTarget = !1, this._event = H.event, this._event.zrenderX = J, this._event.zrenderY = r, this._needAxisTrigger && this.component.grid && v.isInside(j, this.component.grid.getArea(), J, r) ? this._showingTicket = setTimeout(this._tryShow, this._showDelay) : this._needAxisTrigger && this.component.polar && -1 != this.component.polar.isInside([J, r]) ? this._showingTicket = setTimeout(this._tryShow, this._showDelay) : (!this._event.connectTrigger && this.messageCenter.dispatch(F.EVENT.TOOLTIP_OUT_GRID, this._event, null, this.myChart), this._hidingTicket = setTimeout(this._hide, this._hideDelay))
					}
				}
			},
			__onglobalout: function() {
				clearTimeout(this._hidingTicket), clearTimeout(this._showingTicket), this._hidingTicket = setTimeout(this._hide, this._hideDelay)
			},
			__setContent: function(i, a) {
				this._tDom && (i === this._curTicket && (this._tDom.innerHTML = a), setTimeout(this._refixed, 20))
			},
			ontooltipHover: function(m, l) {
				if (!this._lastTipShape || this._lastTipShape && this._lastTipShape.dataIndex != m.dataIndex) {
					this._lastTipShape && this._lastTipShape.tipShape.length > 0 && (this.zr.delShape(this._lastTipShape.tipShape), this.shapeList.length = 2);
					for (var o = 0, a = l.length; a > o; o++) {
						l[o].zlevel = this.getZlevelBase(), l[o].z = this.getZBase(), l[o].style = k.prototype.getHighlightStyle(l[o].style, l[o].highlightStyle), l[o].draggable = !1, l[o].hoverable = !1, l[o].clickable = !1, l[o].ondragend = null, l[o].ondragover = null, l[o].ondrop = null, this.shapeList.push(l[o]), this.zr.addShape(l[o])
					}
					this._lastTipShape = {
						dataIndex: m.dataIndex,
						tipShape: l
					}
				}
			},
			ondragend: function() {
				this._hide()
			},
			onlegendSelected: function(a) {
				this._selectedMap = a.selected
			},
			_setSelectedMap: function() {
				this._selectedMap = this.component.legend ? C.clone(this.component.legend.getSelectedMap()) : {}
			},
			_isSelected: function(a) {
				return null != this._selectedMap[a] ? this._selectedMap[a] : !0
			},
			showTip: function(T) {
				if (T) {
					var J, N = this.option.series;
					if (null != T.seriesIndex) {
						J = T.seriesIndex
					} else {
						for (var Q = T.seriesName, Z = 0, M = N.length; M > Z; Z++) {
							if (N[Z].name === Q) {
								J = Z;
								break
							}
						}
					}
					var K = N[J];
					if (null != K) {
						var O = this.myChart.chart[K.type],
							l = "axis" === this.deepQuery([K, this.option], "tooltip.trigger");
						if (O) {
							if (l) {
								var s = T.dataIndex;
								switch (O.type) {
									case F.CHART_TYPE_LINE:
									case F.CHART_TYPE_BAR:
									case F.CHART_TYPE_K:
										if (null == this.component.xAxis || null == this.component.yAxis || K.data.length <= s) {
											return
										}
										var W = K.xAxisIndex || 0,
											L = K.yAxisIndex || 0;
										this._event = this.component.xAxis.getAxis(W).type === F.COMPONENT_TYPE_AXIS_CATEGORY ? {
											zrenderX: this.component.xAxis.getAxis(W).getCoordByIndex(s),
											zrenderY: this.component.grid.getY() + (this.component.grid.getYend() - this.component.grid.getY()) / 4
										} : {
											zrenderX: this.component.grid.getX() + (this.component.grid.getXend() - this.component.grid.getX()) / 4,
											zrenderY: this.component.yAxis.getAxis(L).getCoordByIndex(s)
										}, this._showAxisTrigger(W, L, s);
										break;
									case F.CHART_TYPE_RADAR:
										if (null == this.component.polar || K.data[0].value.length <= s) {
											return
										}
										var X = K.polarIndex || 0,
											I = this.component.polar.getVector(X, s, "max");
										this._event = {
											zrenderX: I[0],
											zrenderY: I[1]
										}, this._showPolarTrigger(X, s)
								}
							} else {
								var G, R, Y = O.shapeList;
								switch (O.type) {
									case F.CHART_TYPE_LINE:
									case F.CHART_TYPE_BAR:
									case F.CHART_TYPE_K:
									case F.CHART_TYPE_SCATTER:
										for (var s = T.dataIndex, Z = 0, M = Y.length; M > Z; Z++) {
											if (null == Y[Z]._mark && y.get(Y[Z], "seriesIndex") == J && y.get(Y[Z], "dataIndex") == s) {
												this._curTarget = Y[Z], G = Y[Z].style.x, R = O.type != F.CHART_TYPE_K ? Y[Z].style.y : Y[Z].style.y[0];
												break
											}
										}
										break;
									case F.CHART_TYPE_RADAR:
										for (var s = T.dataIndex, Z = 0, M = Y.length; M > Z; Z++) {
											if ("polygon" === Y[Z].type && y.get(Y[Z], "seriesIndex") == J && y.get(Y[Z], "dataIndex") == s) {
												this._curTarget = Y[Z];
												var I = this.component.polar.getCenter(K.polarIndex || 0);
												G = I[0], R = I[1];
												break
											}
										}
										break;
									case F.CHART_TYPE_PIE:
										for (var S = T.name, Z = 0, M = Y.length; M > Z; Z++) {
											if ("sector" === Y[Z].type && y.get(Y[Z], "seriesIndex") == J && y.get(Y[Z], "name") == S) {
												this._curTarget = Y[Z];
												var P = this._curTarget.style,
													H = (P.startAngle + P.endAngle) / 2 * Math.PI / 180;
												G = this._curTarget.style.x + Math.cos(H) * P.r / 1.5, R = this._curTarget.style.y - Math.sin(H) * P.r / 1.5;
												break
											}
										}
										break;
									case F.CHART_TYPE_MAP:
										for (var S = T.name, aa = K.mapType, Z = 0, M = Y.length; M > Z; Z++) {
											if ("text" === Y[Z].type && Y[Z]._mapType === aa && Y[Z].style._name === S) {
												this._curTarget = Y[Z], G = this._curTarget.style.x + this._curTarget.position[0], R = this._curTarget.style.y + this._curTarget.position[1];
												break
											}
										}
										break;
									case F.CHART_TYPE_CHORD:
										for (var S = T.name, Z = 0, M = Y.length; M > Z; Z++) {
											if ("sector" === Y[Z].type && y.get(Y[Z], "name") == S) {
												this._curTarget = Y[Z];
												var P = this._curTarget.style,
													H = (P.startAngle + P.endAngle) / 2 * Math.PI / 180;
												return G = this._curTarget.style.x + Math.cos(H) * (P.r - 2), R = this._curTarget.style.y - Math.sin(H) * (P.r - 2), void this.zr.trigger(A.EVENT.MOUSEMOVE, {
													zrenderX: G,
													zrenderY: R
												})
											}
										}
										break;
									case F.CHART_TYPE_FORCE:
										for (var S = T.name, Z = 0, M = Y.length; M > Z; Z++) {
											if ("circle" === Y[Z].type && y.get(Y[Z], "name") == S) {
												this._curTarget = Y[Z], G = this._curTarget.position[0], R = this._curTarget.position[1];
												break
											}
										}
								}
								null != G && null != R && (this._event = {
									zrenderX: G,
									zrenderY: R
								}, this.zr.addHoverShape(this._curTarget), this.zr.refreshHover(), this._showItemTrigger())
							}
						}
					}
				}
			},
			hideTip: function() {
				this._hide()
			},
			refresh: function(p) {
				if (this._zrHeight = this.zr.getHeight(), this._zrWidth = this.zr.getWidth(), this._lastTipShape && this._lastTipShape.tipShape.length > 0 && this.zr.delShape(this._lastTipShape.tipShape), this._lastTipShape = !1, this.shapeList.length = 2, this._lastDataIndex = -1, this._lastSeriesIndex = -1, this._lastItemTriggerId = -1, p) {
					this.option = p, this.option.tooltip = this.reformOption(this.option.tooltip), this.option.tooltip.textStyle = C.merge(this.option.tooltip.textStyle, this.ecTheme.textStyle), this._needAxisTrigger = !1, "axis" === this.option.tooltip.trigger && (this._needAxisTrigger = !0);
					for (var o = this.option.series, r = 0, m = o.length; m > r; r++) {
						if ("axis" === this.query(o[r], "tooltip.trigger")) {
							this._needAxisTrigger = !0;
							break
						}
					}
					this._showDelay = this.option.tooltip.showDelay, this._hideDelay = this.option.tooltip.hideDelay, this._defaultCssText = this._style(this.option.tooltip), this._setSelectedMap(), this._axisLineWidth = this.option.tooltip.axisPointer.lineStyle.width, this._enterable = this.option.tooltip.enterable
				}
				if (this.showing) {
					var l = this;
					setTimeout(function() {
						l.zr.trigger(A.EVENT.MOUSEMOVE, l.zr.handler._event)
					}, 50)
				}
			},
			onbeforDispose: function() {
				this._lastTipShape && this._lastTipShape.tipShape.length > 0 && this.zr.delShape(this._lastTipShape.tipShape), clearTimeout(this._hidingTicket), clearTimeout(this._showingTicket), this.zr.un(A.EVENT.MOUSEMOVE, this._onmousemove), this.zr.un(A.EVENT.GLOBALOUT, this._onglobalout), this.hasAppend && this.dom.firstChild && this.dom.firstChild.removeChild(this._tDom), this._tDom = null
			},
			_encodeHTML: function(a) {
				return String(a).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#39;")
			}
		}, C.inherits(E, u), B("../component").define("tooltip", E), E
	}), h("echarts/component/legend", ["require", "./base", "zrender/shape/Text", "zrender/shape/Rectangle", "zrender/shape/Sector", "../util/shape/Icon", "../util/shape/Candle", "../config", "zrender/tool/util", "zrender/tool/area", "../component"], function(z) {
		function B(D, n, m, l, E) {
			if (!this.query(l, "legend.data")) {
				return void console.error("option.legend.data has not been defined.")
			}
			p.call(this, D, n, m, l, E);
			var s = this;
			s._legendSelected = function(a) {
				s.__legendSelected(a)
			}, s._dispatchHoverLink = function(a) {
				return s.__dispatchHoverLink(a)
			}, this._colorIndex = 0, this._colorMap = {}, this._selectedMap = {}, this._hasDataMap = {}, this.refresh(l)
		}
		var p = z("./base"),
			x = z("zrender/shape/Text"),
			A = z("zrender/shape/Rectangle"),
			k = z("zrender/shape/Sector"),
			j = z("../util/shape/Icon"),
			C = z("../util/shape/Candle"),
			w = z("../config");
		w.legend = {
			zlevel: 0,
			z: 4,
			show: !0,
			orient: "horizontal",
			x: "center",
			y: "top",
			backgroundColor: "rgba(0,0,0,0)",
			borderColor: "#ccc",
			borderWidth: 0,
			padding: 5,
			itemGap: 10,
			itemWidth: 20,
			itemHeight: 14,
			textStyle: {
				color: "#333"
			},
			selectedMode: !0
		};
		var y = z("zrender/tool/util"),
			u = z("zrender/tool/area");
		B.prototype = {
			type: w.COMPONENT_TYPE_LEGEND,
			_buildShape: function() {
				if (this.legendOption.show) {
					this._itemGroupLocation = this._getItemGroupLocation(), this._buildBackground(), this._buildItem();
					for (var i = 0, a = this.shapeList.length; a > i; i++) {
						this.zr.addShape(this.shapeList[i])
					}
				}
			},
			_buildItem: function() {
				var O, F, J, S, I, G, K, i, m = this.legendOption.data,
					P = m.length,
					H = this.legendOption.textStyle,
					Q = this.zr.getWidth(),
					E = this.zr.getHeight(),
					r = this._itemGroupLocation.x,
					M = this._itemGroupLocation.y,
					R = this.legendOption.itemWidth,
					N = this.legendOption.itemHeight,
					L = this.legendOption.itemGap;
				"vertical" === this.legendOption.orient && "right" === this.legendOption.x && (r = this._itemGroupLocation.x + this._itemGroupLocation.width - R);
				for (var D = 0; P > D; D++) {
					I = y.merge(m[D].textStyle || {}, H), G = this.getFont(I), O = this._getName(m[D]), K = this._getFormatterName(O), "" !== O ? (F = m[D].icon || this._getSomethingByName(O).type, i = this.getColor(O), "horizontal" === this.legendOption.orient ? 200 > Q - r && R + 5 + u.getTextWidth(K, G) + (D === P - 1 || "" === m[D + 1] ? 0 : L) >= Q - r && (r = this._itemGroupLocation.x, M += N + L) : 200 > E - M && N + (D === P - 1 || "" === m[D + 1] ? 0 : L) >= E - M && ("right" === this.legendOption.x ? r -= this._itemGroupLocation.maxWidth + L : r += this._itemGroupLocation.maxWidth + L, M = this._itemGroupLocation.y), J = this._getItemShapeByType(r, M, R, N, this._selectedMap[O] && this._hasDataMap[O] ? i : "#ccc", F, i), J._name = O, J = new j(J), S = {
						zlevel: this.getZlevelBase(),
						z: this.getZBase(),
						style: {
							x: r + R + 5,
							y: M + N / 2,
							color: this._selectedMap[O] ? "auto" === I.color ? i : I.color : "#ccc",
							text: K,
							textFont: G,
							textBaseline: "middle"
						},
						highlightStyle: {
							color: i,
							brushType: "fill"
						},
						hoverable: !!this.legendOption.selectedMode,
						clickable: !!this.legendOption.selectedMode
					}, "vertical" === this.legendOption.orient && "right" === this.legendOption.x && (S.style.x -= R + 10, S.style.textAlign = "right"), S._name = O, S = new x(S), this.legendOption.selectedMode && (J.onclick = S.onclick = this._legendSelected, J.onmouseover = S.onmouseover = this._dispatchHoverLink, J.hoverConnect = S.id, S.hoverConnect = J.id), this.shapeList.push(J), this.shapeList.push(S), "horizontal" === this.legendOption.orient ? r += R + 5 + u.getTextWidth(K, G) + L : M += N + L) : "horizontal" === this.legendOption.orient ? (r = this._itemGroupLocation.x, M += N + L) : ("right" === this.legendOption.x ? r -= this._itemGroupLocation.maxWidth + L : r += this._itemGroupLocation.maxWidth + L, M = this._itemGroupLocation.y)
				}
				"horizontal" === this.legendOption.orient && "center" === this.legendOption.x && M != this._itemGroupLocation.y && this._mLineOptimize()
			},
			_getName: function(a) {
				return "undefined" != typeof a.name ? a.name : a
			},
			_getFormatterName: function(i) {
				var a, l = this.legendOption.formatter;
				return a = "function" == typeof l ? l.call(this.myChart, i) : "string" == typeof l ? l.replace("{name}", i) : i
			},
			_getFormatterNameFromData: function(i) {
				var a = this._getName(i);
				return this._getFormatterName(a)
			},
			_mLineOptimize: function() {
				for (var r = [], o = this._itemGroupLocation.x, s = 2, m = this.shapeList.length; m > s; s++) {
					this.shapeList[s].style.x === o ? r.push((this._itemGroupLocation.width - (this.shapeList[s - 1].style.x + u.getTextWidth(this.shapeList[s - 1].style.text, this.shapeList[s - 1].style.textFont) - o)) / 2) : s === m - 1 && r.push((this._itemGroupLocation.width - (this.shapeList[s].style.x + u.getTextWidth(this.shapeList[s].style.text, this.shapeList[s].style.textFont) - o)) / 2)
				}
				for (var l = -1, s = 1, m = this.shapeList.length; m > s; s++) {
					this.shapeList[s].style.x === o && l++, 0 !== r[l] && (this.shapeList[s].style.x += r[l])
				}
			},
			_buildBackground: function() {
				var a = this.reformCssArray(this.legendOption.padding);
				this.shapeList.push(new A({
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					hoverable: !1,
					style: {
						x: this._itemGroupLocation.x - a[3],
						y: this._itemGroupLocation.y - a[0],
						width: this._itemGroupLocation.width + a[3] + a[1],
						height: this._itemGroupLocation.height + a[0] + a[2],
						brushType: 0 === this.legendOption.borderWidth ? "fill" : "both",
						color: this.legendOption.backgroundColor,
						strokeColor: this.legendOption.borderColor,
						lineWidth: this.legendOption.borderWidth
					}
				}))
			},
			_getItemGroupLocation: function() {
				var P = this.legendOption.data,
					G = P.length,
					L = this.legendOption.itemGap,
					N = this.legendOption.itemWidth + 5,
					T = this.legendOption.itemHeight,
					K = this.legendOption.textStyle,
					I = this.getFont(K),
					H = 0,
					M = 0,
					m = this.reformCssArray(this.legendOption.padding),
					D = this.zr.getWidth() - m[1] - m[3],
					Q = this.zr.getHeight() - m[0] - m[2],
					J = 0,
					R = 0;
				if ("horizontal" === this.legendOption.orient) {
					M = T;
					for (var F = 0; G > F; F++) {
						if ("" !== this._getName(P[F])) {
							var E = u.getTextWidth(this._getFormatterNameFromData(P[F]), P[F].textStyle ? this.getFont(y.merge(P[F].textStyle || {}, K)) : I);
							J + N + E + L > D ? (J -= L, H = Math.max(H, J), M += T + L, J = 0) : (J += N + E + L, H = Math.max(H, J - L))
						} else {
							J -= L, H = Math.max(H, J), M += T + L, J = 0
						}
					}
				} else {
					for (var F = 0; G > F; F++) {
						R = Math.max(R, u.getTextWidth(this._getFormatterNameFromData(P[F]), P[F].textStyle ? this.getFont(y.merge(P[F].textStyle || {}, K)) : I))
					}
					R += N, H = R;
					for (var F = 0; G > F; F++) {
						"" !== this._getName(P[F]) ? J + T + L > Q ? (H += R + L, J -= L, M = Math.max(M, J), J = 0) : (J += T + L, M = Math.max(M, J - L)) : (H += R + L, J -= L, M = Math.max(M, J), J = 0)
					}
				}
				D = this.zr.getWidth(), Q = this.zr.getHeight();
				var O;
				switch (this.legendOption.x) {
					case "center":
						O = Math.floor((D - H) / 2);
						break;
					case "left":
						O = m[3] + this.legendOption.borderWidth;
						break;
					case "right":
						O = D - H - m[1] - m[3] - 2 * this.legendOption.borderWidth;
						break;
					default:
						O = this.parsePercent(this.legendOption.x, D)
				}
				var S;
				switch (this.legendOption.y) {
					case "top":
						S = m[0] + this.legendOption.borderWidth;
						break;
					case "bottom":
						S = Q - M - m[0] - m[2] - 2 * this.legendOption.borderWidth;
						break;
					case "center":
						S = Math.floor((Q - M) / 2);
						break;
					default:
						S = this.parsePercent(this.legendOption.y, Q)
				}
				return {
					x: O,
					y: S,
					width: H,
					height: M,
					maxWidth: R
				}
			},
			_getSomethingByName: function(E) {
				for (var s, G = this.option.series, m = 0, l = G.length; l > m; m++) {
					if (G[m].name === E) {
						return {
							type: G[m].type,
							series: G[m],
							seriesIndex: m,
							data: null,
							dataIndex: -1
						}
					}
					if (G[m].type === w.CHART_TYPE_PIE || G[m].type === w.CHART_TYPE_RADAR || G[m].type === w.CHART_TYPE_CHORD || G[m].type === w.CHART_TYPE_FORCE || G[m].type === w.CHART_TYPE_FUNNEL) {
						s = G[m].categories || G[m].data || G[m].nodes;
						for (var F = 0, D = s.length; D > F; F++) {
							if (s[F].name === E) {
								return {
									type: G[m].type,
									series: G[m],
									seriesIndex: m,
									data: s[F],
									dataIndex: F
								}
							}
						}
					}
				}
				return {
					type: "bar",
					series: null,
					seriesIndex: -1,
					data: null,
					dataIndex: -1
				}
			},
			_getItemShapeByType: function(I, K, E, G, J, D, l) {
				var L, H = "#ccc" === J ? l : J,
					F = {
						zlevel: this.getZlevelBase(),
						z: this.getZBase(),
						style: {
							iconType: "legendicon" + D,
							x: I,
							y: K,
							width: E,
							height: G,
							color: J,
							strokeColor: J,
							lineWidth: 2
						},
						highlightStyle: {
							color: H,
							strokeColor: H,
							lineWidth: 1
						},
						hoverable: this.legendOption.selectedMode,
						clickable: this.legendOption.selectedMode
					};
				if (D.match("image")) {
					var L = D.replace(new RegExp("^image:\\/\\/"), "");
					D = "image"
				}
				switch (D) {
					case "line":
						F.style.brushType = "stroke", F.highlightStyle.lineWidth = 3;
						break;
					case "radar":
					case "scatter":
						F.highlightStyle.lineWidth = 3;
						break;
					case "k":
						F.style.brushType = "both", F.highlightStyle.lineWidth = 3, F.highlightStyle.color = F.style.color = this.deepQuery([this.ecTheme, w], "k.itemStyle.normal.color") || "#fff", F.style.strokeColor = "#ccc" != J ? this.deepQuery([this.ecTheme, w], "k.itemStyle.normal.lineStyle.color") || "#ff3200" : J;
						break;
					case "image":
						F.style.iconType = "image", F.style.image = L, "#ccc" === J && (F.style.opacity = 0.5)
				}
				return F
			},
			__legendSelected: function(i) {
				var a = i.target._name;
				if ("single" === this.legendOption.selectedMode) {
					for (var l in this._selectedMap) {
						this._selectedMap[l] = !1
					}
				}
				this._selectedMap[a] = !this._selectedMap[a], this.messageCenter.dispatch(w.EVENT.LEGEND_SELECTED, i.event, {
					selected: this._selectedMap,
					target: a
				}, this.myChart)
			},
			__dispatchHoverLink: function(a) {
				this.messageCenter.dispatch(w.EVENT.LEGEND_HOVERLINK, a.event, {
					target: a.target._name
				}, this.myChart)
			},
			refresh: function(G) {
				if (G) {
					this.option = G || this.option, this.option.legend = this.reformOption(this.option.legend), this.legendOption = this.option.legend;
					var I, D, E, H, m = this.legendOption.data || [];
					if (this.legendOption.selected) {
						for (var l in this.legendOption.selected) {
							this._selectedMap[l] = "undefined" != typeof this._selectedMap[l] ? this._selectedMap[l] : this.legendOption.selected[l]
						}
					}
					for (var J = 0, F = m.length; F > J; J++) {
						I = this._getName(m[J]), "" !== I && (D = this._getSomethingByName(I), D.series ? (this._hasDataMap[I] = !0, H = !D.data || D.type !== w.CHART_TYPE_PIE && D.type !== w.CHART_TYPE_FORCE && D.type !== w.CHART_TYPE_FUNNEL ? [D.series] : [D.data, D.series], E = this.getItemStyleColor(this.deepQuery(H, "itemStyle.normal.color"), D.seriesIndex, D.dataIndex, D.data), E && D.type != w.CHART_TYPE_K && this.setColor(I, E), this._selectedMap[I] = null != this._selectedMap[I] ? this._selectedMap[I] : !0) : this._hasDataMap[I] = !1)
					}
				}
				this.clear(), this._buildShape()
			},
			getRelatedAmount: function(G) {
				for (var D, I = 0, m = this.option.series, l = 0, H = m.length; H > l; l++) {
					if (m[l].name === G && I++, m[l].type === w.CHART_TYPE_PIE || m[l].type === w.CHART_TYPE_RADAR || m[l].type === w.CHART_TYPE_CHORD || m[l].type === w.CHART_TYPE_FORCE || m[l].type === w.CHART_TYPE_FUNNEL) {
						D = m[l].type != w.CHART_TYPE_FORCE ? m[l].data : m[l].categories;
						for (var F = 0, E = D.length; E > F; F++) {
							D[F].name === G && "-" != D[F].value && I++
						}
					}
				}
				return I
			},
			setColor: function(i, a) {
				this._colorMap[i] = a
			},
			getColor: function(a) {
				return this._colorMap[a] || (this._colorMap[a] = this.zr.getColor(this._colorIndex++)), this._colorMap[a]
			},
			hasColor: function(a) {
				return this._colorMap[a] ? this._colorMap[a] : !1
			},
			add: function(r, o) {
				for (var s = this.legendOption.data, m = 0, l = s.length; l > m; m++) {
					if (this._getName(s[m]) === r) {
						return
					}
				}
				this.legendOption.data.push(r), this.setColor(r, o), this._selectedMap[r] = !0, this._hasDataMap[r] = !0
			},
			del: function(m) {
				for (var l = this.legendOption.data, o = 0, a = l.length; a > o; o++) {
					if (this._getName(l[o]) === m) {
						return this.legendOption.data.splice(o, 1)
					}
				}
			},
			getItemShape: function(m) {
				if (null != m) {
					for (var l, o = 0, a = this.shapeList.length; a > o; o++) {
						if (l = this.shapeList[o], l._name === m && "text" != l.type) {
							return l
						}
					}
				}
			},
			setItemShape: function(r, o) {
				for (var s, m = 0, l = this.shapeList.length; l > m; m++) {
					s = this.shapeList[m], s._name === r && "text" != s.type && (this._selectedMap[r] || (o.style.color = "#ccc", o.style.strokeColor = "#ccc"), this.zr.modShape(s.id, o))
				}
			},
			isSelected: function(a) {
				return "undefined" != typeof this._selectedMap[a] ? this._selectedMap[a] : !0
			},
			getSelectedMap: function() {
				return this._selectedMap
			},
			setSelected: function(i, a) {
				if ("single" === this.legendOption.selectedMode) {
					for (var l in this._selectedMap) {
						this._selectedMap[l] = !1
					}
				}
				this._selectedMap[i] = a, this.messageCenter.dispatch(w.EVENT.LEGEND_SELECTED, null, {
					selected: this._selectedMap,
					target: i
				}, this.myChart)
			},
			onlegendSelected: function(m, l) {
				var o = m.selected;
				for (var a in o) {
					this._selectedMap[a] != o[a] && (l.needRefresh = !0), this._selectedMap[a] = o[a]
				}
			}
		};
		var q = {
			line: function(i, a) {
				var l = a.height / 2;
				i.moveTo(a.x, a.y + l), i.lineTo(a.x + a.width, a.y + l)
			},
			pie: function(D, o) {
				var E = o.x,
					m = o.y,
					l = o.width,
					s = o.height;
				k.prototype.buildPath(D, {
					x: E + l / 2,
					y: m + s + 2,
					r: s,
					r0: 6,
					startAngle: 45,
					endAngle: 135
				})
			},
			eventRiver: function(s, r) {
				var E = r.x,
					m = r.y,
					l = r.width,
					D = r.height;
				s.moveTo(E, m + D), s.bezierCurveTo(E + l, m + D, E, m + 4, E + l, m + 4), s.lineTo(E + l, m), s.bezierCurveTo(E, m, E + l, m + D - 4, E, m + D - 4), s.lineTo(E, m + D)
			},
			k: function(s, r) {
				var E = r.x,
					m = r.y,
					l = r.width,
					D = r.height;
				C.prototype.buildPath(s, {
					x: E + l / 2,
					y: [m + 1, m + 1, m + D - 6, m + D],
					width: l - 6
				})
			},
			bar: function(E, s) {
				var G = s.x,
					m = s.y + 1,
					l = s.width,
					F = s.height - 2,
					D = 3;
				E.moveTo(G + D, m), E.lineTo(G + l - D, m), E.quadraticCurveTo(G + l, m, G + l, m + D), E.lineTo(G + l, m + F - D), E.quadraticCurveTo(G + l, m + F, G + l - D, m + F), E.lineTo(G + D, m + F), E.quadraticCurveTo(G, m + F, G, m + F - D), E.lineTo(G, m + D), E.quadraticCurveTo(G, m, G + D, m)
			},
			force: function(i, a) {
				j.prototype.iconLibrary.circle(i, a)
			},
			radar: function(L, N) {
				var F = 6,
					J = N.x + N.width / 2,
					M = N.y + N.height / 2,
					E = N.height / 2,
					D = 2 * Math.PI / F,
					O = -Math.PI / 2,
					I = J + E * Math.cos(O),
					K = M + E * Math.sin(O);
				L.moveTo(I, K), O += D;
				for (var H = 0, G = F - 1; G > H; H++) {
					L.lineTo(J + E * Math.cos(O), M + E * Math.sin(O)), O += D
				}
				L.lineTo(I, K)
			}
		};
		q.chord = q.pie, q.map = q.bar;
		for (var v in q) {
			j.prototype.iconLibrary["legendicon" + v] = q[v]
		}
		return y.inherits(B, p), z("../component").define("legend", B), B
	}), h("echarts/util/ecData", [], function() {
		function k(w, y, q, v, x, p, m, z) {
			var u;
			return "undefined" != typeof v && (u = null == v.value ? v : v.value), w._echartsData = {
				_series: y,
				_seriesIndex: q,
				_data: v,
				_dataIndex: x,
				_name: p,
				_value: u,
				_special: m,
				_special2: z
			}, w._echartsData
		}

		function j(m, i) {
			var o = m._echartsData;
			if (!i) {
				return o
			}
			switch (i) {
				case "series":
				case "seriesIndex":
				case "data":
				case "dataIndex":
				case "name":
				case "value":
				case "special":
				case "special2":
					return o && o["_" + i]
			}
			return null
		}

		function l(m, i, o) {
			switch (m._echartsData = m._echartsData || {}, i) {
				case "series":
				case "seriesIndex":
				case "data":
				case "dataIndex":
				case "name":
				case "value":
				case "special":
				case "special2":
					m._echartsData["_" + i] = o
			}
		}

		function a(m, i) {
			i._echartsData = {
				_series: m._echartsData._series,
				_seriesIndex: m._echartsData._seriesIndex,
				_data: m._echartsData._data,
				_dataIndex: m._echartsData._dataIndex,
				_name: m._echartsData._name,
				_value: m._echartsData._value,
				_special: m._echartsData._special,
				_special2: m._echartsData._special2
			}
		}
		return {
			pack: k,
			set: l,
			get: j,
			clone: a
		}
	}), h("echarts/chart", [], function() {
		var i = {},
			a = {};
		return i.define = function(j, e) {
			return a[j] = e, i
		}, i.get = function(j) {
			return a[j]
		}, i
	}), h("zrender/tool/color", ["require", "../tool/util"], function(aM) {
		function az(a) {
			ac = a
		}

		function aE() {
			ac = ae
		}

		function aI(i, a) {
			return i = 0 | i, a = a || ac, a[i % a.length]
		}

		function aQ(a) {
			aq = a
		}

		function aD() {
			ak = aq
		}

		function aB() {
			return aq
		}

		function aA(x, z, p, v, y, m, k) {
			ad || (ad = ao.getContext());
			for (var A = ad.createRadialGradient(x, z, p, v, y, m), u = 0, w = k.length; w > u; u++) {
				A.addColorStop(k[u][0], k[u][1])
			}
			return A.__nonRecursion = !0, A
		}

		function aG(v, m, x, l, k) {
			ad || (ad = ao.getContext());
			for (var w = ad.createLinearGradient(v, m, x, l), u = 0, p = k.length; p > u; u++) {
				w.addColorStop(k[u][0], k[u][1])
			}
			return w.__nonRecursion = !0, w
		}

		function aJ(A, D, u) {
			A = aC(A), D = aC(D), A = ax(A), D = ax(D);
			for (var y = [], C = (D[0] - A[0]) / u, p = (D[1] - A[1]) / u, k = (D[2] - A[2]) / u, E = (D[3] - A[3]) / u, x = 0, z = A[0], v = A[1], w = A[2], B = A[3]; u > x; x++) {
				y[x] = Q([aa(Math.floor(z), [0, 255]), aa(Math.floor(v), [0, 255]), aa(Math.floor(w), [0, 255]), B.toFixed(4) - 0], "rgba"), z += C, v += p, w += k, B += E
			}
			return z = D[0], v = D[1], w = D[2], B = D[3], y[x] = Q([z, v, w, B], "rgba"), y
		}

		function aF(s, m) {
			var v = [],
				l = s.length;
			if (void 0 === m && (m = 20), 1 === l) {
				v = aJ(s[0], s[0], m)
			} else {
				if (l > 1) {
					for (var k = 0, u = l - 1; u > k; k++) {
						var p = aJ(s[k], s[k + 1], m);
						u - 1 > k && p.pop(), v = v.concat(p)
					}
				}
			}
			return v
		}

		function Q(i, a) {
			if (a = a || "rgb", i && (3 === i.length || 4 === i.length)) {
				if (i = ap(i, function(l) {
						return l > 1 ? Math.ceil(l) : l
					}), a.indexOf("hex") > -1) {
					return "#" + ((1 << 24) + (i[0] << 16) + (i[1] << 8) + +i[2]).toString(16).slice(1)
				}
				if (a.indexOf("hs") > -1) {
					var k = ap(i.slice(1, 3), function(l) {
						return l + "%"
					});
					i[1] = k[0], i[2] = k[1]
				}
				return a.indexOf("a") > -1 ? (3 === i.length && i.push(1), i[3] = aa(i[3], [0, 1]), a + "(" + i.slice(0, 4).join(",") + ")") : a + "(" + i.slice(0, 3).join(",") + ")"
			}
		}

		function Y(i) {
			i = ag(i), i.indexOf("rgba") < 0 && (i = aC(i));
			var a = [],
				k = 0;
			return i.replace(/[\d.]+/g, function(l) {
				l = 3 > k ? 0 | l : +l, a[k++] = l
			}), a
		}

		function aN(l, k) {
			if (!an(l)) {
				return l
			}
			var m = ax(l),
				a = m[3];
			return "undefined" == typeof a && (a = 1), l.indexOf("hsb") > -1 ? m = am(m) : l.indexOf("hsl") > -1 && (m = Z(m)), k.indexOf("hsb") > -1 || k.indexOf("hsv") > -1 ? m = af(m) : k.indexOf("hsl") > -1 && (m = at(m)), m[3] = a, Q(m, k)
		}

		function aC(a) {
			return aN(a, "rgba")
		}

		function aO(a) {
			return aN(a, "rgb")
		}

		function ay(a) {
			return aN(a, "hex")
		}

		function au(a) {
			return aN(a, "hsva")
		}

		function aK(a) {
			return aN(a, "hsv")
		}

		function aP(a) {
			return aN(a, "hsba")
		}

		function aL(a) {
			return aN(a, "hsb")
		}

		function aH(a) {
			return aN(a, "hsla")
		}

		function av(a) {
			return aN(a, "hsl")
		}

		function aR(i) {
			for (var a in al) {
				if (ay(al[a]) === ay(i)) {
					return a
				}
			}
			return null
		}

		function ag(a) {
			return String(a).replace(/\s+/g, "")
		}

		function q(l) {
			if (al[l] && (l = al[l]), l = ag(l), l = l.replace(/hsv/i, "hsb"), /^#[\da-f]{3}$/i.test(l)) {
				l = parseInt(l.slice(1), 16);
				var k = (3840 & l) << 8,
					m = (240 & l) << 4,
					a = 15 & l;
				l = "#" + ((1 << 24) + (k << 4) + k + (m << 4) + m + (a << 4) + a).toString(16).slice(1)
			}
			return l
		}

		function j(o, m) {
			if (!an(o)) {
				return o
			}
			var p = m > 0 ? 1 : -1;
			"undefined" == typeof m && (m = 0), m = Math.abs(m) > 1 ? 1 : Math.abs(m), o = aO(o);
			for (var l = ax(o), k = 0; 3 > k; k++) {
				l[k] = 1 === p ? l[k] * (1 - m) | 0 : (255 - l[k]) * m + l[k] | 0
			}
			return "rgb(" + l.join(",") + ")"
		}

		function ah(i) {
			if (!an(i)) {
				return i
			}
			var a = ax(aC(i));
			return a = ap(a, function(k) {
				return 255 - k
			}), Q(a, "rgb")
		}

		function aw(A, C, u) {
			if (!an(A) || !an(C)) {
				return A
			}
			"undefined" == typeof u && (u = 0.5), u = 1 - aa(u, [0, 1]);
			for (var y = 2 * u - 1, B = ax(aC(A)), p = ax(aC(C)), k = B[3] - p[3], D = ((y * k === -1 ? y : (y + k) / (1 + y * k)) + 1) / 2, x = 1 - D, z = [], v = 0; 3 > v; v++) {
				z[v] = B[v] * D + p[v] * x
			}
			var w = B[3] * u + p[3] * (1 - u);
			return w = Math.max(0, Math.min(1, w)), 1 === B[3] && 1 === p[3] ? Q(z, "rgb") : (z[3] = w, Q(z, "rgba"))
		}

		function aj() {
			return "#" + (Math.random().toString(16) + "0000").slice(2, 8)
		}

		function ax(z) {
			z = q(z);
			var B = z.match(ab);
			if (null === B) {
				throw new Error("The color format error")
			}
			var u, x, A, p = [];
			if (B[2]) {
				u = B[2].replace("#", "").split(""), A = [u[0] + u[1], u[2] + u[3], u[4] + u[5]], p = ap(A, function(a) {
					return aa(parseInt(a, 16), [0, 255])
				})
			} else {
				if (B[4]) {
					var k = B[4].split(",");
					x = k[3], A = k.slice(0, 3), p = ap(A, function(a) {
						return a = Math.floor(a.indexOf("%") > 0 ? 2.55 * parseInt(a, 0) : a), aa(a, [0, 255])
					}), "undefined" != typeof x && p.push(aa(parseFloat(x), [0, 1]))
				} else {
					if (B[5] || B[6]) {
						var C = (B[5] || B[6]).split(","),
							w = parseInt(C[0], 0) / 360,
							y = C[1],
							v = C[2];
						x = C[3], p = ap([y, v], function(a) {
							return aa(parseFloat(a) / 100, [0, 1])
						}), p.unshift(w), "undefined" != typeof x && p.push(aa(parseFloat(x), [0, 1]))
					}
				}
			}
			return p
		}

		function ai(i, a) {
			if (!an(i)) {
				return i
			}
			null === a && (a = 1);
			var k = ax(aC(i));
			return k[3] = aa(Number(a).toFixed(4), [0, 1]), Q(k, "rgba")
		}

		function ap(l, k) {
			if ("function" != typeof k) {
				throw new TypeError
			}
			for (var m = l ? l.length : 0, a = 0; m > a; a++) {
				l[a] = k(l[a])
			}
			return l
		}

		function aa(i, a) {
			return i <= a[0] ? i = a[0] : i >= a[1] && (i = a[1]), i
		}

		function an(a) {
			return a instanceof Array || "string" == typeof a
		}

		function am(D) {
			var G, w, B, F = D[0],
				v = D[1],
				k = D[2];
			if (0 === v) {
				G = 255 * k, w = 255 * k, B = 255 * k
			} else {
				var H = 6 * F;
				6 === H && (H = 0);
				var A = 0 | H,
					C = k * (1 - v),
					y = k * (1 - v * (H - A)),
					x = k * (1 - v * (1 - (H - A))),
					z = 0,
					E = 0,
					u = 0;
				0 === A ? (z = k, E = x, u = C) : 1 === A ? (z = y, E = k, u = C) : 2 === A ? (z = C, E = k, u = x) : 3 === A ? (z = C, E = y, u = k) : 4 === A ? (z = x, E = C, u = k) : (z = k, E = C, u = y), G = 255 * z, w = 255 * E, B = 255 * u
			}
			return [G, w, B]
		}

		function Z(w) {
			var y, p, v, x = w[0],
				m = w[1],
				k = w[2];
			if (0 === m) {
				y = 255 * k, p = 255 * k, v = 255 * k
			} else {
				var z;
				z = 0.5 > k ? k * (1 + m) : k + m - m * k;
				var u = 2 * k - z;
				y = 255 * ar(u, z, x + 1 / 3), p = 255 * ar(u, z, x), v = 255 * ar(u, z, x - 1 / 3)
			}
			return [y, p, v]
		}

		function ar(i, a, k) {
			return 0 > k && (k += 1), k > 1 && (k -= 1), 1 > 6 * k ? i + 6 * (a - i) * k : 1 > 2 * k ? a : 2 > 3 * k ? i + (a - i) * (2 / 3 - k) * 6 : i
		}

		function af(B) {
			var D, u, z = B[0] / 255,
				C = B[1] / 255,
				p = B[2] / 255,
				k = Math.min(z, C, p),
				E = Math.max(z, C, p),
				y = E - k,
				A = E;
			if (0 === y) {
				D = 0, u = 0
			} else {
				u = y / E;
				var w = ((E - z) / 6 + y / 2) / y,
					v = ((E - C) / 6 + y / 2) / y,
					x = ((E - p) / 6 + y / 2) / y;
				z === E ? D = x - v : C === E ? D = 1 / 3 + w - x : p === E && (D = 2 / 3 + v - w), 0 > D && (D += 1), D > 1 && (D -= 1)
			}
			return D = 360 * D, u = 100 * u, A = 100 * A, [D, u, A]
		}

		function at(B) {
			var D, u, z = B[0] / 255,
				C = B[1] / 255,
				p = B[2] / 255,
				k = Math.min(z, C, p),
				E = Math.max(z, C, p),
				y = E - k,
				A = (E + k) / 2;
			if (0 === y) {
				D = 0, u = 0
			} else {
				u = 0.5 > A ? y / (E + k) : y / (2 - E - k);
				var w = ((E - z) / 6 + y / 2) / y,
					v = ((E - C) / 6 + y / 2) / y,
					x = ((E - p) / 6 + y / 2) / y;
				z === E ? D = x - v : C === E ? D = 1 / 3 + w - x : p === E && (D = 2 / 3 + v - w), 0 > D && (D += 1), D > 1 && (D -= 1)
			}
			return D = 360 * D, u = 100 * u, A = 100 * A, [D, u, A]
		}
		var ad, ao = aM("../tool/util"),
			ac = ["#ff9277", " #dddd00", " #ffc877", " #bbe3ff", " #d5ffbb", "#bbbbff", " #ddb000", " #b0dd00", " #e2bbff", " #ffbbe3", "#ff7777", " #ff9900", " #83dd00", " #77e3ff", " #778fff", "#c877ff", " #ff77ab", " #ff6600", " #aa8800", " #77c7ff", "#ad77ff", " #ff77ff", " #dd0083", " #777700", " #00aa00", "#0088aa", " #8400dd", " #aa0088", " #dd0000", " #772e00"],
			ae = ac,
			aq = "rgba(255,255,0,0.5)",
			ak = aq,
			ab = /^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+)?)%?\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+)?)%?\s*\))\s*$/i,
			al = {
				aliceblue: "#f0f8ff",
				antiquewhite: "#faebd7",
				aqua: "#0ff",
				aquamarine: "#7fffd4",
				azure: "#f0ffff",
				beige: "#f5f5dc",
				bisque: "#ffe4c4",
				black: "#000",
				blanchedalmond: "#ffebcd",
				blue: "#00f",
				blueviolet: "#8a2be2",
				brown: "#a52a2a",
				burlywood: "#deb887",
				cadetblue: "#5f9ea0",
				chartreuse: "#7fff00",
				chocolate: "#d2691e",
				coral: "#ff7f50",
				cornflowerblue: "#6495ed",
				cornsilk: "#fff8dc",
				crimson: "#dc143c",
				cyan: "#0ff",
				darkblue: "#00008b",
				darkcyan: "#008b8b",
				darkgoldenrod: "#b8860b",
				darkgray: "#a9a9a9",
				darkgrey: "#a9a9a9",
				darkgreen: "#006400",
				darkkhaki: "#bdb76b",
				darkmagenta: "#8b008b",
				darkolivegreen: "#556b2f",
				darkorange: "#ff8c00",
				darkorchid: "#9932cc",
				darkred: "#8b0000",
				darksalmon: "#e9967a",
				darkseagreen: "#8fbc8f",
				darkslateblue: "#483d8b",
				darkslategray: "#2f4f4f",
				darkslategrey: "#2f4f4f",
				darkturquoise: "#00ced1",
				darkviolet: "#9400d3",
				deeppink: "#ff1493",
				deepskyblue: "#00bfff",
				dimgray: "#696969",
				dimgrey: "#696969",
				dodgerblue: "#1e90ff",
				firebrick: "#b22222",
				floralwhite: "#fffaf0",
				forestgreen: "#228b22",
				fuchsia: "#f0f",
				gainsboro: "#dcdcdc",
				ghostwhite: "#f8f8ff",
				gold: "#ffd700",
				goldenrod: "#daa520",
				gray: "#808080",
				grey: "#808080",
				green: "#008000",
				greenyellow: "#adff2f",
				honeydew: "#f0fff0",
				hotpink: "#ff69b4",
				indianred: "#cd5c5c",
				indigo: "#4b0082",
				ivory: "#fffff0",
				khaki: "#f0e68c",
				lavender: "#e6e6fa",
				lavenderblush: "#fff0f5",
				lawngreen: "#7cfc00",
				lemonchiffon: "#fffacd",
				lightblue: "#add8e6",
				lightcoral: "#f08080",
				lightcyan: "#e0ffff",
				lightgoldenrodyellow: "#fafad2",
				lightgray: "#d3d3d3",
				lightgrey: "#d3d3d3",
				lightgreen: "#90ee90",
				lightpink: "#ffb6c1",
				lightsalmon: "#ffa07a",
				lightseagreen: "#20b2aa",
				lightskyblue: "#87cefa",
				lightslategray: "#789",
				lightslategrey: "#789",
				lightsteelblue: "#b0c4de",
				lightyellow: "#ffffe0",
				lime: "#0f0",
				limegreen: "#32cd32",
				linen: "#faf0e6",
				magenta: "#f0f",
				maroon: "#800000",
				mediumaquamarine: "#66cdaa",
				mediumblue: "#0000cd",
				mediumorchid: "#ba55d3",
				mediumpurple: "#9370d8",
				mediumseagreen: "#3cb371",
				mediumslateblue: "#7b68ee",
				mediumspringgreen: "#00fa9a",
				mediumturquoise: "#48d1cc",
				mediumvioletred: "#c71585",
				midnightblue: "#191970",
				mintcream: "#f5fffa",
				mistyrose: "#ffe4e1",
				moccasin: "#ffe4b5",
				navajowhite: "#ffdead",
				navy: "#000080",
				oldlace: "#fdf5e6",
				olive: "#808000",
				olivedrab: "#6b8e23",
				orange: "#ffa500",
				orangered: "#ff4500",
				orchid: "#da70d6",
				palegoldenrod: "#eee8aa",
				palegreen: "#98fb98",
				paleturquoise: "#afeeee",
				palevioletred: "#d87093",
				papayawhip: "#ffefd5",
				peachpuff: "#ffdab9",
				peru: "#cd853f",
				pink: "#ffc0cb",
				plum: "#dda0dd",
				powderblue: "#b0e0e6",
				purple: "#800080",
				red: "#f00",
				rosybrown: "#bc8f8f",
				royalblue: "#4169e1",
				saddlebrown: "#8b4513",
				salmon: "#fa8072",
				sandybrown: "#f4a460",
				seagreen: "#2e8b57",
				seashell: "#fff5ee",
				sienna: "#a0522d",
				silver: "#c0c0c0",
				skyblue: "#87ceeb",
				slateblue: "#6a5acd",
				slategray: "#708090",
				slategrey: "#708090",
				snow: "#fffafa",
				springgreen: "#00ff7f",
				steelblue: "#4682b4",
				tan: "#d2b48c",
				teal: "#008080",
				thistle: "#d8bfd8",
				tomato: "#ff6347",
				turquoise: "#40e0d0",
				violet: "#ee82ee",
				wheat: "#f5deb3",
				white: "#fff",
				whitesmoke: "#f5f5f5",
				yellow: "#ff0",
				yellowgreen: "#9acd32"
			};
		return {
			customPalette: az,
			resetPalette: aE,
			getColor: aI,
			getHighlightColor: aB,
			customHighlight: aQ,
			resetHighlight: aD,
			getRadialGradient: aA,
			getLinearGradient: aG,
			getGradientColors: aF,
			getStepColors: aJ,
			reverse: ah,
			mix: aw,
			lift: j,
			trim: ag,
			random: aj,
			toRGB: aO,
			toRGBA: aC,
			toHex: ay,
			toHSL: av,
			toHSLA: aH,
			toHSB: aL,
			toHSBA: aP,
			toHSV: aK,
			toHSVA: au,
			toName: aR,
			toColor: Q,
			toArray: Y,
			alpha: ai,
			getData: ax
		}
	}), h("echarts/component/timeline", ["require", "./base", "zrender/shape/Rectangle", "../util/shape/Icon", "../util/shape/Chain", "../config", "zrender/tool/util", "zrender/tool/area", "zrender/tool/event", "../component"], function(x) {
		function z(s, l, C, i, B) {
			v.call(this, s, l, C, i, B);
			var m = this;
			if (m._onclick = function(a) {
					return m.__onclick(a)
				}, m._ondrift = function(n, a) {
					return m.__ondrift(this, n, a)
				}, m._ondragend = function() {
					return m.__ondragend()
				}, m._setCurrentOption = function() {
					var n = m.timelineOption;
					m.currentIndex %= n.data.length;
					var a = m.options[m.currentIndex] || {};
					m.myChart.setOption(a, n.notMerge), m.messageCenter.dispatch(A.EVENT.TIMELINE_CHANGED, null, {
						currentIndex: m.currentIndex,
						data: null != n.data[m.currentIndex].name ? n.data[m.currentIndex].name : n.data[m.currentIndex]
					}, m.myChart)
				}, m._onFrame = function() {
					m._setCurrentOption(), m._syncHandleShape(), m.timelineOption.autoPlay && (m.playTicket = setTimeout(function() {
						return m.currentIndex += 1, !m.timelineOption.loop && m.currentIndex >= m.timelineOption.data.length ? (m.currentIndex = m.timelineOption.data.length - 1, void m.stop()) : void m._onFrame()
					}, m.timelineOption.playInterval))
				}, this.setTheme(!1), this.options = this.option.options, this.currentIndex = this.timelineOption.currentIndex % this.timelineOption.data.length, this.timelineOption.notMerge || 0 === this.currentIndex || (this.options[this.currentIndex] = u.merge(this.options[this.currentIndex], this.options[0])), this.timelineOption.show && (this._buildShape(), this._syncHandleShape()), this._setCurrentOption(), this.timelineOption.autoPlay) {
				var m = this;
				this.playTicket = setTimeout(function() {
					m.play()
				}, null != this.ecTheme.animationDuration ? this.ecTheme.animationDuration : A.animationDuration)
			}
		}

		function p(G, I) {
			var B = 2,
				E = I.x + B,
				H = I.y + B + 2,
				o = I.width - B,
				J = I.height - B,
				D = I.symbol;
			if ("last" === D) {
				G.moveTo(E + o - 2, H + J / 3), G.lineTo(E + o - 2, H), G.lineTo(E + 2, H + J / 2), G.lineTo(E + o - 2, H + J), G.lineTo(E + o - 2, H + J / 3 * 2), G.moveTo(E, H), G.lineTo(E, H)
			} else {
				if ("next" === D) {
					G.moveTo(E + 2, H + J / 3), G.lineTo(E + 2, H), G.lineTo(E + o - 2, H + J / 2), G.lineTo(E + 2, H + J), G.lineTo(E + 2, H + J / 3 * 2), G.moveTo(E, H), G.lineTo(E, H)
				} else {
					if ("play" === D) {
						if ("stop" === I.status) {
							G.moveTo(E + 2, H), G.lineTo(E + o - 2, H + J / 2), G.lineTo(E + 2, H + J), G.lineTo(E + 2, H)
						} else {
							var F = "both" === I.brushType ? 2 : 3;
							G.rect(E + 2, H, F, J), G.rect(E + o - F - 2, H, F, J)
						}
					} else {
						if (D.match("image")) {
							var C = "";
							C = D.replace(new RegExp("^image:\\/\\/"), ""), D = k.prototype.iconLibrary.image, D(G, {
								x: E,
								y: H,
								width: o,
								height: J,
								image: C
							})
						}
					}
				}
			}
		}
		var v = x("./base"),
			y = x("zrender/shape/Rectangle"),
			k = x("../util/shape/Icon"),
			j = x("../util/shape/Chain"),
			A = x("../config");
		A.timeline = {
			zlevel: 0,
			z: 4,
			show: !0,
			type: "time",
			notMerge: !1,
			realtime: !0,
			x: 80,
			x2: 80,
			y2: 0,
			height: 50,
			backgroundColor: "rgba(0,0,0,0)",
			borderColor: "#ccc",
			borderWidth: 0,
			padding: 5,
			controlPosition: "left",
			autoPlay: !1,
			loop: !0,
			playInterval: 2000,
			lineStyle: {
				width: 1,
				color: "#666",
				type: "dashed"
			},
			label: {
				show: !0,
				interval: "auto",
				rotate: 0,
				textStyle: {
					color: "#333"
				}
			},
			checkpointStyle: {
				symbol: "auto",
				symbolSize: "auto",
				color: "auto",
				borderColor: "auto",
				borderWidth: "auto",
				label: {
					show: !1,
					textStyle: {
						color: "auto"
					}
				}
			},
			controlStyle: {
				itemSize: 15,
				itemGap: 5,
				normal: {
					color: "#333"
				},
				emphasis: {
					color: "#1e90ff"
				}
			},
			symbol: "emptyDiamond",
			symbolSize: 4,
			currentIndex: 0
		};
		var u = x("zrender/tool/util"),
			w = x("zrender/tool/area"),
			q = x("zrender/tool/event");
		return z.prototype = {
			type: A.COMPONENT_TYPE_TIMELINE,
			_buildShape: function() {
				if (this._location = this._getLocation(), this._buildBackground(), this._buildControl(), this._chainPoint = this._getChainPoint(), this.timelineOption.label.show) {
					for (var m = this._getInterval(), l = 0, o = this._chainPoint.length; o > l; l += m) {
						this._chainPoint[l].showLabel = !0
					}
				}
				this._buildChain(), this._buildHandle();
				for (var l = 0, a = this.shapeList.length; a > l; l++) {
					this.zr.addShape(this.shapeList[l])
				}
			},
			_getLocation: function() {
				var G, I = this.timelineOption,
					C = this.reformCssArray(this.timelineOption.padding),
					E = this.zr.getWidth(),
					H = this.parsePercent(I.x, E),
					B = this.parsePercent(I.x2, E);
				null == I.width ? (G = E - H - B, B = E - B) : (G = this.parsePercent(I.width, E), B = H + G);
				var m, J, D = this.zr.getHeight(),
					F = this.parsePercent(I.height, D);
				return null != I.y ? (m = this.parsePercent(I.y, D), J = m + F) : (J = D - this.parsePercent(I.y2, D), m = J - F), {
					x: H + C[3],
					y: m + C[0],
					x2: B - C[1],
					y2: J - C[2],
					width: G - C[1] - C[3],
					height: F - C[0] - C[2]
				}
			},
			_getReformedLabel: function(m) {
				var l = this.timelineOption,
					o = null != l.data[m].name ? l.data[m].name : l.data[m],
					a = l.data[m].formatter || l.label.formatter;
				return a && ("function" == typeof a ? o = a.call(this.myChart, o) : "string" == typeof a && (o = a.replace("{value}", o))), o
			},
			_getInterval: function() {
				var J = this._chainPoint,
					M = this.timelineOption,
					D = M.label.interval;
				if ("auto" === D) {
					var I = M.label.textStyle.fontSize,
						L = M.data,
						C = M.data.length;
					if (C > 3) {
						var B, N, H = !1;
						for (D = 0; !H && C > D;) {
							D++, H = !0;
							for (var F = D; C > F; F += D) {
								if (B = J[F].x - J[F - D].x, 0 !== M.label.rotate) {
									N = I
								} else {
									if (L[F].textStyle) {
										N = w.getTextWidth(J[F].name, J[F].textFont)
									} else {
										var E = J[F].name + "",
											G = (E.match(/\w/g) || "").length,
											K = E.length - G;
										N = G * I * 2 / 3 + K * I
									}
								}
								if (N > B) {
									H = !1;
									break
								}
							}
						}
					} else {
						D = 1
					}
				} else {
					D = D - 0 + 1
				}
				return D
			},
			_getChainPoint: function() {
				function R(a) {
					return null != O[a].name ? O[a].name : O[a] + ""
				}
				var F, K = this.timelineOption,
					N = K.symbol.toLowerCase(),
					X = K.symbolSize,
					J = K.label.rotate,
					H = K.label.textStyle,
					G = this.getFont(H),
					O = K.data,
					L = this._location.x,
					l = this._location.y + this._location.height / 4 * 3,
					B = this._location.x2 - this._location.x,
					S = O.length,
					I = [];
				if (S > 1) {
					var T = B / S;
					if (T = T > 50 ? 50 : 20 > T ? 5 : T, B -= 2 * T, "number" === K.type) {
						for (var E = 0; S > E; E++) {
							I.push(L + T + B / (S - 1) * E)
						}
					} else {
						I[0] = new Date(R(0).replace(/-/g, "/")), I[S - 1] = new Date(R(S - 1).replace(/-/g, "/")) - I[0];
						for (var E = 1; S > E; E++) {
							I[E] = L + T + B * (new Date(R(E).replace(/-/g, "/")) - I[0]) / I[S - 1]
						}
						I[0] = L + T
					}
				} else {
					I.push(L + B / 2)
				}
				for (var C, P, W, Q, M, D = [], E = 0; S > E; E++) {
					L = I[E], C = O[E].symbol && O[E].symbol.toLowerCase() || N, C.match("empty") ? (C = C.replace("empty", ""), W = !0) : W = !1, C.match("star") && (P = C.replace("star", "") - 0 || 5, C = "star"), F = O[E].textStyle ? u.merge(O[E].textStyle || {}, H) : H, Q = F.align || "center", J ? (Q = J > 0 ? "right" : "left", M = [J * Math.PI / 180, L, l - 5]) : M = !1, D.push({
						x: L,
						n: P,
						isEmpty: W,
						symbol: C,
						symbolSize: O[E].symbolSize || X,
						color: O[E].color,
						borderColor: O[E].borderColor,
						borderWidth: O[E].borderWidth,
						name: this._getReformedLabel(E),
						textColor: F.color,
						textAlign: Q,
						textBaseline: F.baseline || "middle",
						textX: L,
						textY: l - (J ? 5 : 0),
						textFont: O[E].textStyle ? this.getFont(F) : G,
						rotation: M,
						showLabel: !1
					})
				}
				return D
			},
			_buildBackground: function() {
				var m = this.timelineOption,
					l = this.reformCssArray(this.timelineOption.padding),
					o = this._location.width,
					a = this._location.height;
				(0 !== m.borderWidth || "rgba(0,0,0,0)" != m.backgroundColor.replace(/\s/g, "")) && this.shapeList.push(new y({
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					hoverable: !1,
					style: {
						x: this._location.x - l[3],
						y: this._location.y - l[0],
						width: o + l[1] + l[3],
						height: a + l[0] + l[2],
						brushType: 0 === m.borderWidth ? "fill" : "both",
						color: m.backgroundColor,
						strokeColor: m.borderColor,
						lineWidth: m.borderWidth
					}
				}))
			},
			_buildControl: function() {
				var E = this,
					G = this.timelineOption,
					o = G.lineStyle,
					C = G.controlStyle;
				if ("none" !== G.controlPosition) {
					var F, l = C.itemSize,
						H = C.itemGap;
					"left" === G.controlPosition ? (F = this._location.x, this._location.x += 3 * (l + H)) : (F = this._location.x2 - (3 * (l + H) - H), this._location.x2 -= 3 * (l + H));
					var D = this._location.y,
						B = {
							zlevel: this.getZlevelBase(),
							z: this.getZBase() + 1,
							style: {
								iconType: "timelineControl",
								symbol: "last",
								x: F,
								y: D,
								width: l,
								height: l,
								brushType: "stroke",
								color: C.normal.color,
								strokeColor: C.normal.color,
								lineWidth: o.width
							},
							highlightStyle: {
								color: C.emphasis.color,
								strokeColor: C.emphasis.color,
								lineWidth: o.width + 1
							},
							clickable: !0
						};
					this._ctrLastShape = new k(B), this._ctrLastShape.onclick = function() {
						E.last()
					}, this.shapeList.push(this._ctrLastShape), F += l + H, this._ctrPlayShape = new k(u.clone(B)), this._ctrPlayShape.style.brushType = "fill", this._ctrPlayShape.style.symbol = "play", this._ctrPlayShape.style.status = this.timelineOption.autoPlay ? "playing" : "stop", this._ctrPlayShape.style.x = F, this._ctrPlayShape.onclick = function() {
						"stop" === E._ctrPlayShape.style.status ? E.play() : E.stop()
					}, this.shapeList.push(this._ctrPlayShape), F += l + H, this._ctrNextShape = new k(u.clone(B)), this._ctrNextShape.style.symbol = "next", this._ctrNextShape.style.x = F, this._ctrNextShape.onclick = function() {
						E.next()
					}, this.shapeList.push(this._ctrNextShape)
				}
			},
			_buildChain: function() {
				var i = this.timelineOption,
					a = i.lineStyle;
				this._timelineShae = {
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					style: {
						x: this._location.x,
						y: this.subPixelOptimize(this._location.y, a.width),
						width: this._location.x2 - this._location.x,
						height: this._location.height,
						chainPoint: this._chainPoint,
						brushType: "both",
						strokeColor: a.color,
						lineWidth: a.width,
						lineType: a.type
					},
					hoverable: !1,
					clickable: !0,
					onclick: this._onclick
				}, this._timelineShae = new j(this._timelineShae), this.shapeList.push(this._timelineShae)
			},
			_buildHandle: function() {
				var i = this._chainPoint[this.currentIndex],
					a = i.symbolSize + 1;
				a = 5 > a ? 5 : a, this._handleShape = {
					zlevel: this.getZlevelBase(),
					z: this.getZBase() + 1,
					hoverable: !1,
					draggable: !0,
					style: {
						iconType: "diamond",
						n: i.n,
						x: i.x - a,
						y: this._location.y + this._location.height / 4 - a,
						width: 2 * a,
						height: 2 * a,
						brushType: "both",
						textPosition: "specific",
						textX: i.x,
						textY: this._location.y - this._location.height / 4,
						textAlign: "center",
						textBaseline: "middle"
					},
					highlightStyle: {},
					ondrift: this._ondrift,
					ondragend: this._ondragend
				}, this._handleShape = new k(this._handleShape), this.shapeList.push(this._handleShape)
			},
			_syncHandleShape: function() {
				if (this.timelineOption.show) {
					var m = this.timelineOption,
						l = m.checkpointStyle,
						o = this._chainPoint[this.currentIndex];
					this._handleShape.style.text = l.label.show ? o.name : "", this._handleShape.style.textFont = o.textFont, this._handleShape.style.n = o.n, "auto" === l.symbol ? this._handleShape.style.iconType = "none" != o.symbol ? o.symbol : "diamond" : (this._handleShape.style.iconType = l.symbol, l.symbol.match("star") && (this._handleShape.style.n = l.symbol.replace("star", "") - 0 || 5, this._handleShape.style.iconType = "star"));
					var a;
					"auto" === l.symbolSize ? (a = o.symbolSize + 2, a = 5 > a ? 5 : a) : a = l.symbolSize - 0, this._handleShape.style.color = "auto" === l.color ? o.color ? o.color : m.controlStyle.emphasis.color : l.color, this._handleShape.style.textColor = "auto" === l.label.textStyle.color ? this._handleShape.style.color : l.label.textStyle.color, this._handleShape.highlightStyle.strokeColor = this._handleShape.style.strokeColor = "auto" === l.borderColor ? o.borderColor ? o.borderColor : "#fff" : l.borderColor, this._handleShape.style.lineWidth = "auto" === l.borderWidth ? o.borderWidth ? o.borderWidth : 0 : l.borderWidth - 0, this._handleShape.highlightStyle.lineWidth = this._handleShape.style.lineWidth + 1, this.zr.animate(this._handleShape.id, "style").when(500, {
						x: o.x - a,
						textX: o.x,
						y: this._location.y + this._location.height / 4 - a,
						width: 2 * a,
						height: 2 * a
					}).start("ExponentialOut")
				}
			},
			_findChainIndex: function(m) {
				var l = this._chainPoint,
					o = l.length;
				if (m <= l[0].x) {
					return 0
				}
				if (m >= l[o - 1].x) {
					return o - 1
				}
				for (var a = 0; o - 1 > a; a++) {
					if (m >= l[a].x && m <= l[a + 1].x) {
						return Math.abs(m - l[a].x) < Math.abs(m - l[a + 1].x) ? a : a + 1
					}
				}
			},
			__onclick: function(i) {
				var a = q.getX(i.event),
					l = this._findChainIndex(a);
				return l === this.currentIndex ? !0 : (this.currentIndex = l, this.timelineOption.autoPlay && this.stop(), clearTimeout(this.playTicket), void this._onFrame())
			},
			__ondrift: function(E, B) {
				this.timelineOption.autoPlay && this.stop();
				var G, m = this._chainPoint,
					l = m.length;
				E.style.x + B <= m[0].x - m[0].symbolSize ? (E.style.x = m[0].x - m[0].symbolSize, G = 0) : E.style.x + B >= m[l - 1].x - m[l - 1].symbolSize ? (E.style.x = m[l - 1].x - m[l - 1].symbolSize, G = l - 1) : (E.style.x += B, G = this._findChainIndex(E.style.x));
				var F = m[G],
					D = F.symbolSize + 2;
				if (E.style.iconType = F.symbol, E.style.n = F.n, E.style.textX = E.style.x + D / 2, E.style.y = this._location.y + this._location.height / 4 - D, E.style.width = 2 * D, E.style.height = 2 * D, E.style.text = F.name, G === this.currentIndex) {
					return !0
				}
				if (this.currentIndex = G, this.timelineOption.realtime) {
					clearTimeout(this.playTicket);
					var C = this;
					this.playTicket = setTimeout(function() {
						C._setCurrentOption()
					}, 200)
				}
				return !0
			},
			__ondragend: function() {
				this.isDragend = !0
			},
			ondragend: function(i, a) {
				this.isDragend && i.target && (!this.timelineOption.realtime && this._setCurrentOption(), a.dragOut = !0, a.dragIn = !0, a.needRefresh = !1, this.isDragend = !1, this._syncHandleShape())
			},
			last: function() {
				return this.timelineOption.autoPlay && this.stop(), this.currentIndex -= 1, this.currentIndex < 0 && (this.currentIndex = this.timelineOption.data.length - 1), this._onFrame(), this.currentIndex
			},
			next: function() {
				return this.timelineOption.autoPlay && this.stop(), this.currentIndex += 1, this.currentIndex >= this.timelineOption.data.length && (this.currentIndex = 0), this._onFrame(), this.currentIndex
			},
			play: function(i, a) {
				return this._ctrPlayShape && "playing" != this._ctrPlayShape.style.status && (this._ctrPlayShape.style.status = "playing", this.zr.modShape(this._ctrPlayShape.id), this.zr.refreshNextFrame()), this.timelineOption.autoPlay = null != a ? a : !0, this.timelineOption.autoPlay || clearTimeout(this.playTicket), this.currentIndex = null != i ? i : this.currentIndex + 1, this.currentIndex >= this.timelineOption.data.length && (this.currentIndex = 0), this._onFrame(), this.currentIndex
			},
			stop: function() {
				return this._ctrPlayShape && "stop" != this._ctrPlayShape.style.status && (this._ctrPlayShape.style.status = "stop", this.zr.modShape(this._ctrPlayShape.id), this.zr.refreshNextFrame()), this.timelineOption.autoPlay = !1, clearTimeout(this.playTicket), this.currentIndex
			},
			resize: function() {
				this.timelineOption.show && (this.clear(), this._buildShape(), this._syncHandleShape())
			},
			setTheme: function(a) {
				this.timelineOption = this.reformOption(u.clone(this.option.timeline)), this.timelineOption.label.textStyle = this.getTextStyle(this.timelineOption.label.textStyle), this.timelineOption.checkpointStyle.label.textStyle = this.getTextStyle(this.timelineOption.checkpointStyle.label.textStyle), this.myChart.canvasSupported || (this.timelineOption.realtime = !1), this.timelineOption.show && a && (this.clear(), this._buildShape(), this._syncHandleShape())
			},
			onbeforDispose: function() {
				clearTimeout(this.playTicket)
			}
		}, k.prototype.iconLibrary.timelineControl = p, u.inherits(z, v), x("../component").define("timeline", z), z
	}), h("zrender/shape/Image", ["require", "./Base", "../tool/util"], function(i) {
		var a = i("./Base"),
			j = function(k) {
				a.call(this, k)
			};
		return j.prototype = {
			type: "image",
			brush: function(C, F, v) {
				var A = this.style || {};
				F && (A = this.getHighlightStyle(A, this.highlightStyle || {}));
				var E = A.image,
					u = this;
				if (this._imageCache || (this._imageCache = {}), "string" == typeof E) {
					var k = E;
					this._imageCache[k] ? E = this._imageCache[k] : (E = new Image, E.onload = function() {
						E.onload = null, u.modSelf(), v()
					}, E.src = k, this._imageCache[k] = E)
				}
				if (E) {
					if ("IMG" == E.nodeName.toUpperCase()) {
						if (window.ActiveXObject) {
							if ("complete" != E.readyState) {
								return
							}
						} else {
							if (!E.complete) {
								return
							}
						}
					}
					var G = A.width || E.width,
						z = A.height || E.height,
						B = A.x,
						x = A.y;
					if (!E.width || !E.height) {
						return
					}
					if (C.save(), this.doClip(C), this.setContext(C, A), this.setTransform(C), A.sWidth && A.sHeight) {
						var w = A.sx || 0,
							y = A.sy || 0;
						C.drawImage(E, w, y, A.sWidth, A.sHeight, B, x, G, z)
					} else {
						if (A.sx && A.sy) {
							var w = A.sx,
								y = A.sy,
								D = G - w,
								q = z - y;
							C.drawImage(E, w, y, D, q, B, x, G, z)
						} else {
							C.drawImage(E, B, x, G, z)
						}
					}
					A.width || (A.width = G), A.height || (A.height = z), this.style.width || (this.style.width = G), this.style.height || (this.style.height = z), this.drawText(C, A, this.style), C.restore()
				}
			},
			getRect: function(k) {
				return {
					x: k.x,
					y: k.y,
					width: k.width,
					height: k.height
				}
			},
			clearCache: function() {
				this._imageCache = {}
			}
		}, i("../tool/util").inherits(j, a), j
	}), h("zrender/loadingEffect/Bar", ["require", "./Base", "../tool/util", "../tool/color", "../shape/Rectangle"], function(m) {
		function l(a) {
			q.call(this, a)
		}
		var q = m("./Base"),
			k = m("../tool/util"),
			j = m("../tool/color"),
			p = m("../shape/Rectangle");
		return k.inherits(l, q), l.prototype._start = function(w, i) {
			var x = k.merge(this.options, {
					textStyle: {
						color: "#888"
					},
					backgroundColor: "rgba(250, 250, 250, 0.8)",
					effectOption: {
						x: 0,
						y: this.canvasHeight / 2 - 30,
						width: this.canvasWidth,
						height: 5,
						brushType: "fill",
						timeInterval: 100
					}
				}),
				v = this.createTextShape(x.textStyle),
				u = this.createBackgroundShape(x.backgroundColor),
				a = x.effectOption,
				o = new p({
					highlightStyle: k.clone(a)
				});
			return o.highlightStyle.color = a.color || j.getLinearGradient(a.x, a.y, a.x + a.width, a.y + a.height, [
				[0, "#ff6400"],
				[0.5, "#ffe100"],
				[1, "#b1ff00"]
			]), null != x.progress ? (w(u), o.highlightStyle.width = this.adjust(x.progress, [0, 1]) * x.effectOption.width, w(o), w(v), void i()) : (o.highlightStyle.width = 0, setInterval(function() {
				w(u), o.highlightStyle.width < a.width ? o.highlightStyle.width += 8 : o.highlightStyle.width = 0, w(o), w(v), i()
			}, a.timeInterval))
		}, l
	}), h("zrender/loadingEffect/Bubble", ["require", "./Base", "../tool/util", "../tool/color", "../shape/Circle"], function(m) {
		function l(a) {
			q.call(this, a)
		}
		var q = m("./Base"),
			k = m("../tool/util"),
			j = m("../tool/color"),
			p = m("../shape/Circle");
		return k.inherits(l, q), l.prototype._start = function(A, E) {
			for (var o = k.merge(this.options, {
					textStyle: {
						color: "#888"
					},
					backgroundColor: "rgba(250, 250, 250, 0.8)",
					effect: {
						n: 50,
						lineWidth: 2,
						brushType: "stroke",
						color: "random",
						timeInterval: 100
					}
				}), a = this.createTextShape(o.textStyle), F = this.createBackgroundShape(o.backgroundColor), y = o.effect, z = y.n, w = y.brushType, v = y.lineWidth, x = [], B = this.canvasWidth, i = this.canvasHeight, C = 0; z > C; C++) {
				var D = "random" == y.color ? j.alpha(j.random(), 0.3) : y.color;
				x[C] = new p({
					highlightStyle: {
						x: Math.ceil(Math.random() * B),
						y: Math.ceil(Math.random() * i),
						r: Math.ceil(40 * Math.random()),
						brushType: w,
						color: D,
						strokeColor: D,
						lineWidth: v
					},
					animationY: Math.ceil(20 * Math.random())
				})
			}
			return setInterval(function() {
				A(F);
				for (var r = 0; z > r; r++) {
					var e = x[r].highlightStyle;
					e.y - x[r].animationY + e.r <= 0 && (x[r].highlightStyle.y = i + e.r, x[r].highlightStyle.x = Math.ceil(Math.random() * B)), x[r].highlightStyle.y -= x[r].animationY, A(x[r])
				}
				A(a), E()
			}, y.timeInterval)
		}, l
	}), h("zrender/loadingEffect/DynamicLine", ["require", "./Base", "../tool/util", "../tool/color", "../shape/Line"], function(m) {
		function l(a) {
			q.call(this, a)
		}
		var q = m("./Base"),
			k = m("../tool/util"),
			j = m("../tool/color"),
			p = m("../shape/Line");
		return k.inherits(l, q), l.prototype._start = function(C, H) {
			for (var o = k.merge(this.options, {
					textStyle: {
						color: "#fff"
					},
					backgroundColor: "rgba(0, 0, 0, 0.8)",
					effectOption: {
						n: 30,
						lineWidth: 1,
						color: "random",
						timeInterval: 100
					}
				}), a = this.createTextShape(o.textStyle), I = this.createBackgroundShape(o.backgroundColor), z = o.effectOption, A = z.n, w = z.lineWidth, v = [], x = this.canvasWidth, D = this.canvasHeight, i = 0; A > i; i++) {
				var E = -Math.ceil(1000 * Math.random()),
					G = Math.ceil(400 * Math.random()),
					F = Math.ceil(Math.random() * D),
					B = "random" == z.color ? j.random() : z.color;
				v[i] = new p({
					highlightStyle: {
						xStart: E,
						yStart: F,
						xEnd: E + G,
						yEnd: F,
						strokeColor: B,
						lineWidth: w
					},
					animationX: Math.ceil(100 * Math.random()),
					len: G
				})
			}
			return setInterval(function() {
				C(I);
				for (var r = 0; A > r; r++) {
					var e = v[r].highlightStyle;
					e.xStart >= x && (v[r].len = Math.ceil(400 * Math.random()), e.xStart = -400, e.xEnd = -400 + v[r].len, e.yStart = Math.ceil(Math.random() * D), e.yEnd = e.yStart), e.xStart += v[r].animationX, e.xEnd += v[r].animationX, C(v[r])
				}
				C(a), H()
			}, z.timeInterval)
		}, l
	}), h("zrender/loadingEffect/Ring", ["require", "./Base", "../tool/util", "../tool/color", "../shape/Ring", "../shape/Sector"], function(p) {
		function l(a) {
			s.call(this, a)
		}
		var s = p("./Base"),
			k = p("../tool/util"),
			j = p("../tool/color"),
			q = p("../shape/Ring"),
			m = p("../shape/Sector");
		return k.inherits(l, s), l.prototype._start = function(I, w) {
			var B = k.merge(this.options, {
					textStyle: {
						color: "#07a"
					},
					backgroundColor: "rgba(250, 250, 250, 0.8)",
					effect: {
						x: this.canvasWidth / 2,
						y: this.canvasHeight / 2,
						r0: 60,
						r: 100,
						color: "#bbdcff",
						brushType: "fill",
						textPosition: "inside",
						textFont: "normal 30px verdana",
						textColor: "rgba(30, 144, 255, 0.6)",
						timeInterval: 100
					}
				}),
				z = B.effect,
				D = B.textStyle;
			null == D.x && (D.x = z.x), null == D.y && (D.y = z.y + (z.r0 + z.r) / 2 - 5);
			for (var F = this.createTextShape(B.textStyle), C = this.createBackgroundShape(B.backgroundColor), a = z.x, i = z.y, J = z.r0 + 6, A = z.r - 6, K = z.color, v = j.lift(K, 0.1), o = new q({
					highlightStyle: k.clone(z)
				}), G = [], L = j.getGradientColors(["#ff6400", "#ffe100", "#97ff00"], 25), H = 15, E = 240, r = 0; 16 > r; r++) {
				G.push(new m({
					highlightStyle: {
						x: a,
						y: i,
						r0: J,
						r: A,
						startAngle: E - H,
						endAngle: E,
						brushType: "fill",
						color: v
					},
					_color: j.getLinearGradient(a + J * Math.cos(E, !0), i - J * Math.sin(E, !0), a + J * Math.cos(E - H, !0), i - J * Math.sin(E - H, !0), [
						[0, L[2 * r]],
						[1, L[2 * r + 1]]
					])
				})), E -= H
			}
			E = 360;
			for (var r = 0; 4 > r; r++) {
				G.push(new m({
					highlightStyle: {
						x: a,
						y: i,
						r0: J,
						r: A,
						startAngle: E - H,
						endAngle: E,
						brushType: "fill",
						color: v
					},
					_color: j.getLinearGradient(a + J * Math.cos(E, !0), i - J * Math.sin(E, !0), a + J * Math.cos(E - H, !0), i - J * Math.sin(E - H, !0), [
						[0, L[2 * r + 32]],
						[1, L[2 * r + 33]]
					])
				})), E -= H
			}
			var M = 0;
			if (null != B.progress) {
				I(C), M = 100 * this.adjust(B.progress, [0, 1]).toFixed(2) / 5, o.highlightStyle.text = 5 * M + "%", I(o);
				for (var r = 0; 20 > r; r++) {
					G[r].highlightStyle.color = M > r ? G[r]._color : v, I(G[r])
				}
				return I(F), void w()
			}
			return setInterval(function() {
				I(C), M += M >= 20 ? -20 : 1, I(o);
				for (var e = 0; 20 > e; e++) {
					G[e].highlightStyle.color = M > e ? G[e]._color : v, I(G[e])
				}
				I(F), w()
			}, z.timeInterval)
		}, l
	}), h("zrender/loadingEffect/Spin", ["require", "./Base", "../tool/util", "../tool/color", "../tool/area", "../shape/Sector"], function(p) {
		function l(a) {
			s.call(this, a)
		}
		var s = p("./Base"),
			k = p("../tool/util"),
			j = p("../tool/color"),
			q = p("../tool/area"),
			m = p("../shape/Sector");
		return k.inherits(l, s), l.prototype._start = function(I, w) {
			var B = k.merge(this.options, {
					textStyle: {
						color: "#fff",
						textAlign: "start"
					},
					backgroundColor: "rgba(0, 0, 0, 0.8)"
				}),
				z = this.createTextShape(B.textStyle),
				D = 10,
				F = q.getTextWidth(z.highlightStyle.text, z.highlightStyle.textFont),
				C = q.getTextHeight(z.highlightStyle.text, z.highlightStyle.textFont),
				a = k.merge(this.options.effect || {}, {
					r0: 9,
					r: 15,
					n: 18,
					color: "#fff",
					timeInterval: 100
				}),
				i = this.getLocation(this.options.textStyle, F + D + 2 * a.r, Math.max(2 * a.r, C));
			a.x = i.x + a.r, a.y = z.highlightStyle.y = i.y + i.height / 2, z.highlightStyle.x = a.x + a.r + D;
			for (var J = this.createBackgroundShape(B.backgroundColor), A = a.n, K = a.x, v = a.y, o = a.r0, G = a.r, L = a.color, H = [], E = Math.round(180 / A), r = 0; A > r; r++) {
				H[r] = new m({
					highlightStyle: {
						x: K,
						y: v,
						r0: o,
						r: G,
						startAngle: E * r * 2,
						endAngle: E * r * 2 + E,
						color: j.alpha(L, (r + 1) / A),
						brushType: "fill"
					}
				})
			}
			var M = [0, K, v];
			return setInterval(function() {
				I(J), M[0] -= 0.3;
				for (var e = 0; A > e; e++) {
					H[e].rotation = M, I(H[e])
				}
				I(z), w()
			}, a.timeInterval)
		}, l
	}), h("zrender/loadingEffect/Whirling", ["require", "./Base", "../tool/util", "../tool/area", "../shape/Ring", "../shape/Droplet", "../shape/Circle"], function(q) {
		function l(a) {
			v.call(this, a)
		}
		var v = q("./Base"),
			k = q("../tool/util"),
			j = q("../tool/area"),
			u = q("../shape/Ring"),
			p = q("../shape/Droplet"),
			m = q("../shape/Circle");
		return k.inherits(l, v), l.prototype._start = function(A, F) {
			var i = k.merge(this.options, {
					textStyle: {
						color: "#888",
						textAlign: "start"
					},
					backgroundColor: "rgba(250, 250, 250, 0.8)"
				}),
				w = this.createTextShape(i.textStyle),
				x = 10,
				r = j.getTextWidth(w.highlightStyle.text, w.highlightStyle.textFont),
				o = j.getTextHeight(w.highlightStyle.text, w.highlightStyle.textFont),
				s = k.merge(this.options.effect || {}, {
					r: 18,
					colorIn: "#fff",
					colorOut: "#555",
					colorWhirl: "#6cf",
					timeInterval: 50
				}),
				B = this.getLocation(this.options.textStyle, r + x + 2 * s.r, Math.max(2 * s.r, o));
			s.x = B.x + s.r, s.y = w.highlightStyle.y = B.y + B.height / 2, w.highlightStyle.x = s.x + s.r + x;
			var a = this.createBackgroundShape(i.backgroundColor),
				C = new p({
					highlightStyle: {
						a: Math.round(s.r / 2),
						b: Math.round(s.r - s.r / 6),
						brushType: "fill",
						color: s.colorWhirl
					}
				}),
				E = new m({
					highlightStyle: {
						r: Math.round(s.r / 6),
						brushType: "fill",
						color: s.colorIn
					}
				}),
				D = new u({
					highlightStyle: {
						r0: Math.round(s.r - s.r / 3),
						r: s.r,
						brushType: "fill",
						color: s.colorOut
					}
				}),
				z = [0, s.x, s.y];
			return C.highlightStyle.x = E.highlightStyle.x = D.highlightStyle.x = z[1], C.highlightStyle.y = E.highlightStyle.y = D.highlightStyle.y = z[2], setInterval(function() {
				A(a), A(D), z[0] -= 0.3, C.rotation = z, A(C), A(E), A(w), F()
			}, s.timeInterval)
		}, l
	}), h("echarts/theme/macarons", [], function() {
		var a = {
			color: ["#2ec7c9", "#b6a2de", "#5ab1ef", "#ffb980", "#d87a80", "#8d98b3", "#e5cf0d", "#97b552", "#95706d", "#dc69aa", "#07a2a4", "#9a7fd1", "#588dd5", "#f5994e", "#c05050", "#59678c", "#c9ab00", "#7eb00a", "#6f5553", "#c14089"],
			title: {
				textStyle: {
					fontWeight: "normal",
					color: "#008acd"
				}
			},
			dataRange: {
				itemWidth: 15,
				color: ["#5ab1ef", "#e0ffff"]
			},
			toolbox: {
				color: ["#1e90ff", "#1e90ff", "#1e90ff", "#1e90ff"],
				effectiveColor: "#ff4500"
			},
			tooltip: {
				backgroundColor: "rgba(50,50,50,0.5)",
				axisPointer: {
					type: "line",
					lineStyle: {
						color: "#008acd"
					},
					crossStyle: {
						color: "#008acd"
					},
					shadowStyle: {
						color: "rgba(200,200,200,0.2)"
					}
				}
			},
			dataZoom: {
				dataBackgroundColor: "#efefff",
				fillerColor: "rgba(182,162,222,0.2)",
				handleColor: "#008acd"
			},
			grid: {
				borderColor: "#eee"
			},
			categoryAxis: {
				axisLine: {
					lineStyle: {
						color: "#008acd"
					}
				},
				splitLine: {
					lineStyle: {
						color: ["#eee"]
					}
				}
			},
			valueAxis: {
				axisLine: {
					lineStyle: {
						color: "#008acd"
					}
				},
				splitArea: {
					show: !0,
					areaStyle: {
						color: ["rgba(250,250,250,0.1)", "rgba(200,200,200,0.1)"]
					}
				},
				splitLine: {
					lineStyle: {
						color: ["#eee"]
					}
				}
			},
			polar: {
				axisLine: {
					lineStyle: {
						color: "#ddd"
					}
				},
				splitArea: {
					show: !0,
					areaStyle: {
						color: ["rgba(250,250,250,0.2)", "rgba(200,200,200,0.2)"]
					}
				},
				splitLine: {
					lineStyle: {
						color: "#ddd"
					}
				}
			},
			timeline: {
				lineStyle: {
					color: "#008acd"
				},
				controlStyle: {
					normal: {
						color: "#008acd"
					},
					emphasis: {
						color: "#008acd"
					}
				},
				symbol: "emptyCircle",
				symbolSize: 3
			},
			bar: {
				itemStyle: {
					normal: {
						barBorderRadius: 5
					},
					emphasis: {
						barBorderRadius: 5
					}
				}
			},
			line: {
				smooth: !0,
				symbol: "emptyCircle",
				symbolSize: 3
			},
			k: {
				itemStyle: {
					normal: {
						color: "#d87a80",
						color0: "#2ec7c9",
						lineStyle: {
							color: "#d87a80",
							color0: "#2ec7c9"
						}
					}
				}
			},
			scatter: {
				symbol: "circle",
				symbolSize: 4
			},
			radar: {
				symbol: "emptyCircle",
				symbolSize: 3
			},
			map: {
				itemStyle: {
					normal: {
						areaStyle: {
							color: "#ddd"
						},
						label: {
							textStyle: {
								color: "#d87a80"
							}
						}
					},
					emphasis: {
						areaStyle: {
							color: "#fe994e"
						}
					}
				}
			},
			force: {
				itemStyle: {
					normal: {
						linkStyle: {
							color: "#1e90ff"
						}
					}
				}
			},
			chord: {
				itemStyle: {
					normal: {
						borderWidth: 1,
						borderColor: "rgba(128, 128, 128, 0.5)",
						chordStyle: {
							lineStyle: {
								color: "rgba(128, 128, 128, 0.5)"
							}
						}
					},
					emphasis: {
						borderWidth: 1,
						borderColor: "rgba(128, 128, 128, 0.5)",
						chordStyle: {
							lineStyle: {
								color: "rgba(128, 128, 128, 0.5)"
							}
						}
					}
				}
			},
			gauge: {
				axisLine: {
					lineStyle: {
						color: [
							[0.2, "#2ec7c9"],
							[0.8, "#5ab1ef"],
							[1, "#d87a80"]
						],
						width: 10
					}
				},
				axisTick: {
					splitNumber: 10,
					length: 15,
					lineStyle: {
						color: "auto"
					}
				},
				splitLine: {
					length: 22,
					lineStyle: {
						color: "auto"
					}
				},
				pointer: {
					width: 5
				}
			},
			textStyle: {
				fontFamily: "微软雅黑, Arial, Verdana, sans-serif"
			}
		};
		return a
	}), h("echarts/theme/infographic", [], function() {
		var a = {
			color: ["#C1232B", "#B5C334", "#FCCE10", "#E87C25", "#27727B", "#FE8463", "#9BCA63", "#FAD860", "#F3A43B", "#60C0DD", "#D7504B", "#C6E579", "#F4E001", "#F0805A", "#26C0C0"],
			title: {
				textStyle: {
					fontWeight: "normal",
					color: "#27727B"
				}
			},
			dataRange: {
				x: "right",
				y: "center",
				itemWidth: 5,
				itemHeight: 25,
				color: ["#C1232B", "#FCCE10"]
			},
			toolbox: {
				color: ["#C1232B", "#B5C334", "#FCCE10", "#E87C25", "#27727B", "#FE8463", "#9BCA63", "#FAD860", "#F3A43B", "#60C0DD"],
				effectiveColor: "#ff4500"
			},
			tooltip: {
				backgroundColor: "rgba(50,50,50,0.5)",
				axisPointer: {
					type: "line",
					lineStyle: {
						color: "#27727B",
						type: "dashed"
					},
					crossStyle: {
						color: "#27727B"
					},
					shadowStyle: {
						color: "rgba(200,200,200,0.3)"
					}
				}
			},
			dataZoom: {
				dataBackgroundColor: "rgba(181,195,52,0.3)",
				fillerColor: "rgba(181,195,52,0.2)",
				handleColor: "#27727B"
			},
			grid: {
				borderWidth: 0
			},
			categoryAxis: {
				axisLine: {
					lineStyle: {
						color: "#27727B"
					}
				},
				splitLine: {
					show: !1
				}
			},
			valueAxis: {
				axisLine: {
					show: !1
				},
				splitArea: {
					show: !1
				},
				splitLine: {
					lineStyle: {
						color: ["#ccc"],
						type: "dashed"
					}
				}
			},
			polar: {
				axisLine: {
					lineStyle: {
						color: "#ddd"
					}
				},
				splitArea: {
					show: !0,
					areaStyle: {
						color: ["rgba(250,250,250,0.2)", "rgba(200,200,200,0.2)"]
					}
				},
				splitLine: {
					lineStyle: {
						color: "#ddd"
					}
				}
			},
			timeline: {
				lineStyle: {
					color: "#27727B"
				},
				controlStyle: {
					normal: {
						color: "#27727B"
					},
					emphasis: {
						color: "#27727B"
					}
				},
				symbol: "emptyCircle",
				symbolSize: 3
			},
			line: {
				itemStyle: {
					normal: {
						borderWidth: 2,
						borderColor: "#fff",
						lineStyle: {
							width: 3
						}
					},
					emphasis: {
						borderWidth: 0
					}
				},
				symbol: "circle",
				symbolSize: 3.5
			},
			k: {
				itemStyle: {
					normal: {
						color: "#C1232B",
						color0: "#B5C334",
						lineStyle: {
							width: 1,
							color: "#C1232B",
							color0: "#B5C334"
						}
					}
				}
			},
			scatter: {
				itemdStyle: {
					normal: {
						borderWidth: 1,
						borderColor: "rgba(200,200,200,0.5)"
					},
					emphasis: {
						borderWidth: 0
					}
				},
				symbol: "star4",
				symbolSize: 4
			},
			radar: {
				symbol: "emptyCircle",
				symbolSize: 3
			},
			map: {
				itemStyle: {
					normal: {
						areaStyle: {
							color: "#ddd"
						},
						label: {
							textStyle: {
								color: "#C1232B"
							}
						}
					},
					emphasis: {
						areaStyle: {
							color: "#fe994e"
						},
						label: {
							textStyle: {
								color: "rgb(100,0,0)"
							}
						}
					}
				}
			},
			force: {
				itemStyle: {
					normal: {
						linkStyle: {
							color: "#27727B"
						}
					}
				}
			},
			chord: {
				itemStyle: {
					normal: {
						borderWidth: 1,
						borderColor: "rgba(128, 128, 128, 0.5)",
						chordStyle: {
							lineStyle: {
								color: "rgba(128, 128, 128, 0.5)"
							}
						}
					},
					emphasis: {
						borderWidth: 1,
						borderColor: "rgba(128, 128, 128, 0.5)",
						chordStyle: {
							lineStyle: {
								color: "rgba(128, 128, 128, 0.5)"
							}
						}
					}
				}
			},
			gauge: {
				center: ["50%", "80%"],
				radius: "100%",
				startAngle: 180,
				endAngle: 0,
				axisLine: {
					show: !0,
					lineStyle: {
						color: [
							[0.2, "#B5C334"],
							[0.8, "#27727B"],
							[1, "#C1232B"]
						],
						width: "40%"
					}
				},
				axisTick: {
					splitNumber: 2,
					length: 5,
					lineStyle: {
						color: "#fff"
					}
				},
				axisLabel: {
					textStyle: {
						color: "#fff",
						fontWeight: "bolder"
					}
				},
				splitLine: {
					length: "5%",
					lineStyle: {
						color: "#fff"
					}
				},
				pointer: {
					width: "40%",
					length: "80%",
					color: "#fff"
				},
				title: {
					offsetCenter: [0, -20],
					textStyle: {
						color: "auto",
						fontSize: 20
					}
				},
				detail: {
					offsetCenter: [0, 0],
					textStyle: {
						color: "auto",
						fontSize: 40
					}
				}
			},
			textStyle: {
				fontFamily: "微软雅黑, Arial, Verdana, sans-serif"
			}
		};
		return a
	}), h("zrender/dep/excanvas", ["require"], function() {
		return document.createElement("canvas").getContext ? G_vmlCanvasManager = !1 : ! function() {
			function aU() {
				return this.context_ || (this.context_ = new aT(this))
			}

			function aG(i, a) {
				var k = ak.call(arguments, 2);
				return function() {
					return i.apply(a, k.concat(ak.call(arguments)))
				}
			}

			function aM(a) {
				return String(a).replace(/&/g, "&amp;").replace(/"/g, "&quot;")
			}

			function aQ(i, a, k) {
				i.namespaces[a] || i.namespaces.add(a, k, "#default#VML")
			}

			function aY(i) {
				if (aQ(i, "g_vml_", "urn:schemas-microsoft-com:vml"), aQ(i, "g_o_", "urn:schemas-microsoft-com:office:office"), !i.styleSheets.ex_canvas_) {
					var a = i.createStyleSheet();
					a.owningElement.id = "ex_canvas_", a.cssText = "canvas{display:inline-block;overflow:hidden;text-align:left;width:300px;height:150px}"
				}
			}

			function aL(i) {
				var a = i.srcElement;
				switch (i.propertyName) {
					case "width":
						a.getContext().clearRect(), a.style.width = a.attributes.width.nodeValue + "px", a.firstChild.style.width = a.clientWidth + "px";
						break;
					case "height":
						a.getContext().clearRect(), a.style.height = a.attributes.height.nodeValue + "px", a.firstChild.style.height = a.clientHeight + "px"
				}
			}

			function aI(i) {
				var a = i.srcElement;
				a.firstChild && (a.firstChild.style.width = a.clientWidth + "px", a.firstChild.style.height = a.clientHeight + "px")
			}

			function aH() {
				return [
					[1, 0, 0],
					[0, 1, 0],
					[0, 0, 1]
				]
			}

			function aO(q, m) {
				for (var u = aH(), l = 0; 3 > l; l++) {
					for (var k = 0; 3 > k; k++) {
						for (var s = 0, p = 0; 3 > p; p++) {
							s += q[l][p] * m[p][k]
						}
						u[l][k] = s
					}
				}
				return u
			}

			function aR(i, a) {
				a.fillStyle = i.fillStyle, a.lineCap = i.lineCap, a.lineJoin = i.lineJoin, a.lineWidth = i.lineWidth, a.miterLimit = i.miterLimit, a.shadowBlur = i.shadowBlur, a.shadowColor = i.shadowColor, a.shadowOffsetX = i.shadowOffsetX, a.shadowOffsetY = i.shadowOffsetY, a.strokeStyle = i.strokeStyle, a.globalAlpha = i.globalAlpha, a.font = i.font, a.textAlign = i.textAlign, a.textBaseline = i.textBaseline, a.scaleX_ = i.scaleX_, a.scaleY_ = i.scaleY_, a.lineScale_ = i.lineScale_
			}

			function aN(l) {
				var k = l.indexOf("(", 3),
					m = l.indexOf(")", k + 1),
					a = l.substring(k + 1, m).split(",");
				return (4 != a.length || "a" != l.charAt(3)) && (a[3] = 1), a
			}

			function ad(a) {
				return parseFloat(a) / 100
			}

			function ae(i, a, k) {
				return Math.min(k, Math.max(a, i))
			}

			function aV(v) {
				var x, p, u, w, m, k;
				if (w = parseFloat(v[0]) / 360 % 360, 0 > w && w++, m = ae(ad(v[1]), 0, 1), k = ae(ad(v[2]), 0, 1), 0 == m) {
					x = p = u = k
				} else {
					var y = 0.5 > k ? k * (1 + m) : k + m - k * m,
						q = 2 * k - y;
					x = aK(q, y, w + 1 / 3), p = aK(q, y, w), u = aK(q, y, w - 1 / 3)
				}
				return "#" + aj[Math.floor(255 * x)] + aj[Math.floor(255 * p)] + aj[Math.floor(255 * u)]
			}

			function aK(i, a, k) {
				return 0 > k && k++, k > 1 && k--, 1 > 6 * k ? i + 6 * (a - i) * k : 1 > 2 * k ? a : 2 > 3 * k ? i + (a - i) * (2 / 3 - k) * 6 : i
			}

			function aW(p) {
				if (p in ah) {
					return ah[p]
				}
				var m, r = 1;
				if (p = String(p), "#" == p.charAt(0)) {
					m = p
				} else {
					if (/^rgb/.test(p)) {
						for (var l, k = aN(p), m = "#", q = 0; 3 > q; q++) {
							l = -1 != k[q].indexOf("%") ? Math.floor(255 * ad(k[q])) : +k[q], m += aj[ae(l, 0, 255)]
						}
						r = +k[3]
					} else {
						if (/^hsl/.test(p)) {
							var k = aN(p);
							m = aV(k), r = k[3]
						} else {
							m = ar[p] || p
						}
					}
				}
				return ah[p] = {
					color: m,
					alpha: r
				}
			}

			function aF(o) {
				if (aa[o]) {
					return aa[o]
				}
				var m, p = document.createElement("div"),
					l = p.style;
				try {
					l.font = o, m = l.fontFamily.split(",")[0]
				} catch (k) {}
				return aa[o] = {
					style: l.fontStyle || at.style,
					variant: l.fontVariant || at.variant,
					weight: l.fontWeight || at.weight,
					size: l.fontSize || at.size,
					family: m || at.family
				}
			}

			function aB(p, m) {
				var r = {};
				for (var l in p) {
					r[l] = p[l]
				}
				var k = parseFloat(m.currentStyle.fontSize),
					q = parseFloat(p.size);
				return r.size = "number" == typeof p.size ? p.size : -1 != p.size.indexOf("px") ? q : -1 != p.size.indexOf("em") ? k * q : -1 != p.size.indexOf("%") ? k / 100 * q : -1 != p.size.indexOf("pt") ? q / 0.75 : k, r
			}

			function aS(a) {
				return a.style + " " + a.variant + " " + a.weight + " " + a.size + "px '" + a.family + "'"
			}

			function aX(a) {
				return ai[a] || "square"
			}

			function aT(l) {
				this.m_ = aH(), this.mStack_ = [], this.aStack_ = [], this.currentPath_ = [], this.strokeStyle = "#000", this.fillStyle = "#000", this.lineWidth = 1, this.lineJoin = "miter", this.lineCap = "butt", this.miterLimit = 1 * am, this.globalAlpha = 1, this.font = "12px 微软雅黑", this.textAlign = "left", this.textBaseline = "alphabetic", this.canvas = l;
				var k = "width:" + l.clientWidth + "px;height:" + l.clientHeight + "px;overflow:hidden;position:absolute",
					m = l.ownerDocument.createElement("div");
				m.style.cssText = k, l.appendChild(m);
				var a = m.cloneNode(!1);
				a.style.backgroundColor = "#fff", a.style.filter = "alpha(opacity=0)", l.appendChild(a), this.element_ = m, this.scaleX_ = 1, this.scaleY_ = 1, this.lineScale_ = 1
			}

			function aP(l, k, m, a) {
				l.currentPath_.push({
					type: "bezierCurveTo",
					cp1x: k.x,
					cp1y: k.y,
					cp2x: m.x,
					cp2y: m.y,
					x: a.x,
					y: a.y
				}), l.currentX_ = a.x, l.currentY_ = a.y
			}

			function aC(p, m) {
				var r = aW(p.strokeStyle),
					l = r.color,
					k = r.alpha * p.globalAlpha,
					q = p.lineScale_ * p.lineWidth;
				1 > q && (k *= q), m.push("<g_vml_:stroke", ' opacity="', k, '"', ' joinstyle="', p.lineJoin, '"', ' miterlimit="', p.miterLimit, '"', ' endcap="', aX(p.lineCap), '"', ' weight="', q, 'px"', ' color="', l, '" />')
			}

			function aZ(bg, a3, a8, bc) {
				var bj = bg.fillStyle,
					a7 = bg.scaleX_,
					a5 = bg.scaleY_,
					a4 = bc.x - a8.x,
					ba = bc.y - a8.y;
				if (bj instanceof ao) {
					var bd = 0,
						a9 = {
							x: 0,
							y: 0
						},
						B = 0,
						C = 1;
					if ("gradient" == bj.type_) {
						var bh = bj.x0_ / a7,
							a6 = bj.y0_ / a5,
							a2 = bj.x1_ / a7,
							Z = bj.y1_ / a5,
							be = an(bg, bh, a6),
							bi = an(bg, a2, Z),
							bf = bi.x - be.x,
							bb = bi.y - be.y;
						bd = 180 * Math.atan2(bf, bb) / Math.PI, 0 > bd && (bd += 360), 0.000001 > bd && (bd = 0)
					} else {
						var be = an(bg, bj.x0_, bj.y0_);
						a9 = {
							x: (be.x - a8.x) / a4,
							y: (be.y - a8.y) / ba
						}, a4 /= a7 * am, ba /= a5 * am;
						var a0 = ax.max(a4, ba);
						B = 2 * bj.r0_ / a0, C = 2 * bj.r1_ / a0 - B
					}
					var bk = bj.colors_;
					bk.sort(function(i, a) {
						return i.offset - a.offset
					});
					for (var w = bk.length, q = bk[0].color, M = bk[w - 1].color, a1 = bk[0].alpha * bg.globalAlpha, L = bk[w - 1].alpha * bg.globalAlpha, H = [], P = 0; w > P; P++) {
						var N = bk[P];
						H.push(N.offset * C + B + " " + N.color)
					}
					a3.push('<g_vml_:fill type="', bj.type_, '"', ' method="none" focus="100%"', ' color="', q, '"', ' color2="', M, '"', ' colors="', H.join(","), '"', ' opacity="', L, '"', ' g_o_:opacity2="', a1, '"', ' angle="', bd, '"', ' focusposition="', a9.x, ",", a9.y, '" />')
				} else {
					if (bj instanceof aD) {
						if (a4 && ba) {
							var G = -a8.x,
								R = -a8.y;
							a3.push("<g_vml_:fill", ' position="', G / a4 * a7 * a7, ",", R / ba * a5 * a5, '"', ' type="tile"', ' src="', bj.src_, '" />')
						}
					} else {
						var Y = aW(bg.fillStyle),
							K = Y.color,
							Q = Y.alpha * bg.globalAlpha;
						a3.push('<g_vml_:fill color="', K, '" opacity="', Q, '" />')
					}
				}
			}

			function an(l, k, m) {
				var a = l.m_;
				return {
					x: am * (k * a[0][0] + m * a[1][0] + a[2][0]) - aA,
					y: am * (k * a[0][1] + m * a[1][1] + a[2][1]) - aA
				}
			}

			function ac(a) {
				return isFinite(a[0][0]) && isFinite(a[0][1]) && isFinite(a[1][0]) && isFinite(a[1][1]) && isFinite(a[2][0]) && isFinite(a[2][1])
			}

			function ab(l, k, m) {
				if (ac(k) && (l.m_ = k, l.scaleX_ = Math.sqrt(k[0][0] * k[0][0] + k[0][1] * k[0][1]), l.scaleY_ = Math.sqrt(k[1][0] * k[1][0] + k[1][1] * k[1][1]), m)) {
					var a = k[0][0] * k[1][1] - k[0][1] * k[1][0];
					l.lineScale_ = az(af(a))
				}
			}

			function ao(a) {
				this.type_ = a, this.x0_ = 0, this.y0_ = 0, this.r0_ = 0, this.x1_ = 0, this.y1_ = 0, this.r1_ = 0, this.colors_ = []
			}

			function aD(i, a) {
				switch (aE(i), a) {
					case "repeat":
					case null:
					case "":
						this.repetition_ = "repeat";
						break;
					case "repeat-x":
					case "repeat-y":
					case "no-repeat":
						this.repetition_ = a;
						break;
					default:
						aq("SYNTAX_ERR")
				}
				this.src_ = i.src, this.width_ = i.width, this.height_ = i.height
			}

			function aq(a) {
				throw new ap(a)
			}

			function aE(a) {
				a && 1 == a.nodeType && "IMG" == a.tagName || aq("TYPE_MISMATCH_ERR"), "complete" != a.readyState && aq("INVALID_STATE_ERR")
			}

			function ap(a) {
				this.code = this[a], this.message = a + ": DOM Exception " + this.code
			}
			var ax = Math,
				ag = ax.round,
				av = ax.sin,
				au = ax.cos,
				af = ax.abs,
				az = ax.sqrt,
				am = 10,
				aA = am / 2,
				ak = (+navigator.userAgent.match(/MSIE ([\d.]+)?/)[1], Array.prototype.slice);
			aY(document);
			var aw = {
				init: function(a) {
					var i = a || document;
					i.createElement("canvas"), i.attachEvent("onreadystatechange", aG(this.init_, this, i))
				},
				init_: function(i) {
					for (var a = i.getElementsByTagName("canvas"), k = 0; k < a.length; k++) {
						this.initElement(a[k])
					}
				},
				initElement: function(a) {
					if (!a.getContext) {
						a.getContext = aU, aY(a.ownerDocument), a.innerHTML = "", a.attachEvent("onpropertychange", aL), a.attachEvent("onresize", aI);
						var e = a.attributes;
						e.width && e.width.specified ? a.style.width = e.width.nodeValue + "px" : a.width = a.clientWidth, e.height && e.height.specified ? a.style.height = e.height.nodeValue + "px" : a.height = a.clientHeight
					}
					return a
				}
			};
			aw.init();
			for (var aj = [], al = 0; 16 > al; al++) {
				for (var ay = 0; 16 > ay; ay++) {
					aj[16 * al + ay] = al.toString(16) + ay.toString(16)
				}
			}
			var ar = {
					aliceblue: "#F0F8FF",
					antiquewhite: "#FAEBD7",
					aquamarine: "#7FFFD4",
					azure: "#F0FFFF",
					beige: "#F5F5DC",
					bisque: "#FFE4C4",
					black: "#000000",
					blanchedalmond: "#FFEBCD",
					blueviolet: "#8A2BE2",
					brown: "#A52A2A",
					burlywood: "#DEB887",
					cadetblue: "#5F9EA0",
					chartreuse: "#7FFF00",
					chocolate: "#D2691E",
					coral: "#FF7F50",
					cornflowerblue: "#6495ED",
					cornsilk: "#FFF8DC",
					crimson: "#DC143C",
					cyan: "#00FFFF",
					darkblue: "#00008B",
					darkcyan: "#008B8B",
					darkgoldenrod: "#B8860B",
					darkgray: "#A9A9A9",
					darkgreen: "#006400",
					darkgrey: "#A9A9A9",
					darkkhaki: "#BDB76B",
					darkmagenta: "#8B008B",
					darkolivegreen: "#556B2F",
					darkorange: "#FF8C00",
					darkorchid: "#9932CC",
					darkred: "#8B0000",
					darksalmon: "#E9967A",
					darkseagreen: "#8FBC8F",
					darkslateblue: "#483D8B",
					darkslategray: "#2F4F4F",
					darkslategrey: "#2F4F4F",
					darkturquoise: "#00CED1",
					darkviolet: "#9400D3",
					deeppink: "#FF1493",
					deepskyblue: "#00BFFF",
					dimgray: "#696969",
					dimgrey: "#696969",
					dodgerblue: "#1E90FF",
					firebrick: "#B22222",
					floralwhite: "#FFFAF0",
					forestgreen: "#228B22",
					gainsboro: "#DCDCDC",
					ghostwhite: "#F8F8FF",
					gold: "#FFD700",
					goldenrod: "#DAA520",
					grey: "#808080",
					greenyellow: "#ADFF2F",
					honeydew: "#F0FFF0",
					hotpink: "#FF69B4",
					indianred: "#CD5C5C",
					indigo: "#4B0082",
					ivory: "#FFFFF0",
					khaki: "#F0E68C",
					lavender: "#E6E6FA",
					lavenderblush: "#FFF0F5",
					lawngreen: "#7CFC00",
					lemonchiffon: "#FFFACD",
					lightblue: "#ADD8E6",
					lightcoral: "#F08080",
					lightcyan: "#E0FFFF",
					lightgoldenrodyellow: "#FAFAD2",
					lightgreen: "#90EE90",
					lightgrey: "#D3D3D3",
					lightpink: "#FFB6C1",
					lightsalmon: "#FFA07A",
					lightseagreen: "#20B2AA",
					lightskyblue: "#87CEFA",
					lightslategray: "#778899",
					lightslategrey: "#778899",
					lightsteelblue: "#B0C4DE",
					lightyellow: "#FFFFE0",
					limegreen: "#32CD32",
					linen: "#FAF0E6",
					magenta: "#FF00FF",
					mediumaquamarine: "#66CDAA",
					mediumblue: "#0000CD",
					mediumorchid: "#BA55D3",
					mediumpurple: "#9370DB",
					mediumseagreen: "#3CB371",
					mediumslateblue: "#7B68EE",
					mediumspringgreen: "#00FA9A",
					mediumturquoise: "#48D1CC",
					mediumvioletred: "#C71585",
					midnightblue: "#191970",
					mintcream: "#F5FFFA",
					mistyrose: "#FFE4E1",
					moccasin: "#FFE4B5",
					navajowhite: "#FFDEAD",
					oldlace: "#FDF5E6",
					olivedrab: "#6B8E23",
					orange: "#FFA500",
					orangered: "#FF4500",
					orchid: "#DA70D6",
					palegoldenrod: "#EEE8AA",
					palegreen: "#98FB98",
					paleturquoise: "#AFEEEE",
					palevioletred: "#DB7093",
					papayawhip: "#FFEFD5",
					peachpuff: "#FFDAB9",
					peru: "#CD853F",
					pink: "#FFC0CB",
					plum: "#DDA0DD",
					powderblue: "#B0E0E6",
					rosybrown: "#BC8F8F",
					royalblue: "#4169E1",
					saddlebrown: "#8B4513",
					salmon: "#FA8072",
					sandybrown: "#F4A460",
					seagreen: "#2E8B57",
					seashell: "#FFF5EE",
					sienna: "#A0522D",
					skyblue: "#87CEEB",
					slateblue: "#6A5ACD",
					slategray: "#708090",
					slategrey: "#708090",
					snow: "#FFFAFA",
					springgreen: "#00FF7F",
					steelblue: "#4682B4",
					tan: "#D2B48C",
					thistle: "#D8BFD8",
					tomato: "#FF6347",
					turquoise: "#40E0D0",
					violet: "#EE82EE",
					wheat: "#F5DEB3",
					whitesmoke: "#F5F5F5",
					yellowgreen: "#9ACD32"
				},
				ah = {},
				at = {
					style: "normal",
					variant: "normal",
					weight: "normal",
					size: 12,
					family: "微软雅黑"
				},
				aa = {},
				ai = {
					butt: "flat",
					round: "round"
				},
				j = aT.prototype;
			j.clearRect = function() {
				this.textMeasureEl_ && (this.textMeasureEl_.removeNode(!0), this.textMeasureEl_ = null), this.element_.innerHTML = ""
			}, j.beginPath = function() {
				this.currentPath_ = []
			}, j.moveTo = function(i, a) {
				var k = an(this, i, a);
				this.currentPath_.push({
					type: "moveTo",
					x: k.x,
					y: k.y
				}), this.currentX_ = k.x, this.currentY_ = k.y
			}, j.lineTo = function(i, a) {
				var k = an(this, i, a);
				this.currentPath_.push({
					type: "lineTo",
					x: k.x,
					y: k.y
				}), this.currentX_ = k.x, this.currentY_ = k.y
			}, j.bezierCurveTo = function(v, x, p, u, w, m) {
				var k = an(this, w, m),
					y = an(this, v, x),
					q = an(this, p, u);
				aP(this, y, q, k)
			}, j.quadraticCurveTo = function(u, m, w, l) {
				var k = an(this, u, m),
					v = an(this, w, l),
					q = {
						x: this.currentX_ + 2 / 3 * (k.x - this.currentX_),
						y: this.currentY_ + 2 / 3 * (k.y - this.currentY_)
					},
					p = {
						x: q.x + (v.x - this.currentX_) / 3,
						y: q.y + (v.y - this.currentY_) / 3
					};
				aP(this, q, p, v)
			}, j.arc = function(A, D, q, y, C, p) {
				q *= am;
				var k = p ? "at" : "wa",
					E = A + au(y) * q - aA,
					x = D + av(y) * q - aA,
					z = A + au(C) * q - aA,
					v = D + av(C) * q - aA;
				E != z || p || (E += 0.125);
				var u = an(this, A, D),
					w = an(this, E, x),
					B = an(this, z, v);
				this.currentPath_.push({
					type: k,
					x: u.x,
					y: u.y,
					radius: q,
					xStart: w.x,
					yStart: w.y,
					xEnd: B.x,
					yEnd: B.y
				})
			}, j.rect = function(l, k, m, a) {
				this.moveTo(l, k), this.lineTo(l + m, k), this.lineTo(l + m, k + a), this.lineTo(l, k + a), this.closePath()
			}, j.strokeRect = function(o, m, p, l) {
				var k = this.currentPath_;
				this.beginPath(), this.moveTo(o, m), this.lineTo(o + p, m), this.lineTo(o + p, m + l), this.lineTo(o, m + l), this.closePath(), this.stroke(), this.currentPath_ = k
			}, j.fillRect = function(o, m, p, l) {
				var k = this.currentPath_;
				this.beginPath(), this.moveTo(o, m), this.lineTo(o + p, m), this.lineTo(o + p, m + l), this.lineTo(o, m + l), this.closePath(), this.fill(), this.currentPath_ = k
			}, j.createLinearGradient = function(o, m, p, l) {
				var k = new ao("gradient");
				return k.x0_ = o, k.y0_ = m, k.x1_ = p, k.y1_ = l, k
			}, j.createRadialGradient = function(q, m, u, l, k, s) {
				var p = new ao("gradientradial");
				return p.x0_ = q, p.y0_ = m, p.r0_ = u, p.x1_ = l, p.y1_ = k, p.r1_ = s, p
			}, j.drawImage = function(O) {
				var B, G, K, S, F, D, C, I, L = O.runtimeStyle.width,
					H = O.runtimeStyle.height;
				O.runtimeStyle.width = "auto", O.runtimeStyle.height = "auto";
				var q = O.width,
					v = O.height;
				if (O.runtimeStyle.width = L, O.runtimeStyle.height = H, 3 == arguments.length) {
					B = arguments[1], G = arguments[2], F = D = 0, C = K = q, I = S = v
				} else {
					if (5 == arguments.length) {
						B = arguments[1], G = arguments[2], K = arguments[3], S = arguments[4], F = D = 0, C = q, I = v
					} else {
						if (9 != arguments.length) {
							throw Error("Invalid number of arguments")
						}
						F = arguments[1], D = arguments[2], C = arguments[3], I = arguments[4], B = arguments[5], G = arguments[6], K = arguments[7], S = arguments[8]
					}
				}
				var P = an(this, B, G),
					E = [],
					Q = 10,
					A = 10,
					w = R = 1;
				if (E.push(" <g_vml_:group", ' coordsize="', am * Q, ",", am * A, '"', ' coordorigin="0,0"', ' style="width:', Q, "px;height:", A, "px;position:absolute;"), 1 != this.m_[0][0] || this.m_[0][1] || 1 != this.m_[1][1] || this.m_[1][0]) {
					var M = [],
						w = this.scaleX_,
						R = this.scaleY_;
					M.push("M11=", this.m_[0][0] / w, ",", "M12=", this.m_[1][0] / R, ",", "M21=", this.m_[0][1] / w, ",", "M22=", this.m_[1][1] / R, ",", "Dx=", ag(P.x / am), ",", "Dy=", ag(P.y / am), "");
					var N = P,
						J = an(this, B + K, G),
						z = an(this, B, G + S),
						T = an(this, B + K, G + S);
					N.x = ax.max(N.x, J.x, z.x, T.x), N.y = ax.max(N.y, J.y, z.y, T.y), E.push("padding:0 ", ag(N.x / am), "px ", ag(N.y / am), "px 0;filter:progid:DXImageTransform.Microsoft.Matrix(", M.join(""), ", SizingMethod='clip');")
				} else {
					E.push("top:", ag(P.y / am), "px;left:", ag(P.x / am), "px;")
				}
				E.push(' ">'), (F || D) && E.push('<div style="overflow: hidden; width:', Math.ceil((K + F * K / C) * w), "px;", " height:", Math.ceil((S + D * S / I) * R), "px;", " filter:progid:DxImageTransform.Microsoft.Matrix(Dx=", -F * K / C * w, ",Dy=", -D * S / I * R, ');">'), E.push('<div style="width:', Math.round(w * q * K / C), "px;", " height:", Math.round(R * v * S / I), "px;", " filter:"), this.globalAlpha < 1 && E.push(" progid:DXImageTransform.Microsoft.Alpha(opacity=" + 100 * this.globalAlpha + ")"), E.push(" progid:DXImageTransform.Microsoft.AlphaImageLoader(src=", O.src, ',sizingMethod=scale)">'), (F || D) && E.push("</div>"), E.push("</div></div>"), this.element_.insertAdjacentHTML("BeforeEnd", E.join(""))
			}, j.stroke = function(v) {
				var x = [],
					p = 10,
					u = 10;
				x.push("<g_vml_:shape", ' filled="', !!v, '"', ' style="position:absolute;width:', p, "px;height:", u, 'px;"', ' coordorigin="0,0"', ' coordsize="', am * p, ",", am * u, '"', ' stroked="', !v, '"', ' path="');
				for (var w = {
						x: null,
						y: null
					}, m = {
						x: null,
						y: null
					}, k = 0; k < this.currentPath_.length; k++) {
					var y, q = this.currentPath_[k];
					switch (q.type) {
						case "moveTo":
							y = q, x.push(" m ", ag(q.x), ",", ag(q.y));
							break;
						case "lineTo":
							x.push(" l ", ag(q.x), ",", ag(q.y));
							break;
						case "close":
							x.push(" x "), q = null;
							break;
						case "bezierCurveTo":
							x.push(" c ", ag(q.cp1x), ",", ag(q.cp1y), ",", ag(q.cp2x), ",", ag(q.cp2y), ",", ag(q.x), ",", ag(q.y));
							break;
						case "at":
						case "wa":
							x.push(" ", q.type, " ", ag(q.x - this.scaleX_ * q.radius), ",", ag(q.y - this.scaleY_ * q.radius), " ", ag(q.x + this.scaleX_ * q.radius), ",", ag(q.y + this.scaleY_ * q.radius), " ", ag(q.xStart), ",", ag(q.yStart), " ", ag(q.xEnd), ",", ag(q.yEnd))
					}
					q && ((null == w.x || q.x < w.x) && (w.x = q.x), (null == m.x || q.x > m.x) && (m.x = q.x), (null == w.y || q.y < w.y) && (w.y = q.y), (null == m.y || q.y > m.y) && (m.y = q.y))
				}
				x.push(' ">'), v ? aZ(this, x, w, m) : aC(this, x), x.push("</g_vml_:shape>"), this.element_.insertAdjacentHTML("beforeEnd", x.join(""))
			}, j.fill = function() {
				this.stroke(!0)
			}, j.closePath = function() {
				this.currentPath_.push({
					type: "close"
				})
			}, j.save = function() {
				var a = {};
				aR(this, a), this.aStack_.push(a), this.mStack_.push(this.m_), this.m_ = aO(aH(), this.m_)
			}, j.restore = function() {
				this.aStack_.length && (aR(this.aStack_.pop(), this), this.m_ = this.mStack_.pop())
			}, j.translate = function(i, a) {
				var k = [
					[1, 0, 0],
					[0, 1, 0],
					[i, a, 1]
				];
				ab(this, aO(k, this.m_), !1)
			}, j.rotate = function(l) {
				var k = au(l),
					m = av(l),
					a = [
						[k, m, 0],
						[-m, k, 0],
						[0, 0, 1]
					];
				ab(this, aO(a, this.m_), !1)
			}, j.scale = function(i, a) {
				var k = [
					[i, 0, 0],
					[0, a, 0],
					[0, 0, 1]
				];
				ab(this, aO(k, this.m_), !0)
			}, j.transform = function(q, m, u, l, k, s) {
				var p = [
					[q, m, 0],
					[u, l, 0],
					[k, s, 1]
				];
				ab(this, aO(p, this.m_), !0)
			}, j.setTransform = function(q, m, u, l, k, s) {
				var p = [
					[q, m, 0],
					[u, l, 0],
					[k, s, 1]
				];
				ab(this, p, !0)
			}, j.drawText_ = function(F, u, C, J, y) {
				var w = this.m_,
					v = 1000,
					A = 0,
					D = v,
					z = {
						x: 0,
						y: 0
					},
					n = [],
					q = aB(aF(this.font), this.element_),
					G = aS(q),
					x = this.element_.currentStyle,
					H = this.textAlign.toLowerCase();
				switch (H) {
					case "left":
					case "center":
					case "right":
						break;
					case "end":
						H = "ltr" == x.direction ? "right" : "left";
						break;
					case "start":
						H = "rtl" == x.direction ? "right" : "left";
						break;
					default:
						H = "left"
				}
				switch (this.textBaseline) {
					case "hanging":
					case "top":
						z.y = q.size / 1.75;
						break;
					case "middle":
						break;
					default:
					case null:
					case "alphabetic":
					case "ideographic":
					case "bottom":
						z.y = -q.size / 2.25
				}
				switch (H) {
					case "right":
						A = v, D = 0.05;
						break;
					case "center":
						A = D = v / 2
				}
				var I = an(this, u + z.x, C + z.y);
				n.push('<g_vml_:line from="', -A, ' 0" to="', D, ' 0.05" ', ' coordsize="100 100" coordorigin="0 0"', ' filled="', !y, '" stroked="', !!y, '" style="position:absolute;width:1px;height:1px;">'), y ? aC(this, n) : aZ(this, n, {
					x: -A,
					y: 0
				}, {
					x: D,
					y: q.size
				});
				var E = w[0][0].toFixed(3) + "," + w[1][0].toFixed(3) + "," + w[0][1].toFixed(3) + "," + w[1][1].toFixed(3) + ",0,0",
					B = ag(I.x / am) + "," + ag(I.y / am);
				n.push('<g_vml_:skew on="t" matrix="', E, '" ', ' offset="', B, '" origin="', A, ' 0" />', '<g_vml_:path textpathok="true" />', '<g_vml_:textpath on="true" string="', aM(F), '" style="v-text-align:', H, ";font:", aM(G), '" /></g_vml_:line>'), this.element_.insertAdjacentHTML("beforeEnd", n.join(""))
			}, j.fillText = function(l, k, m, a) {
				this.drawText_(l, k, m, a, !1)
			}, j.strokeText = function(l, k, m, a) {
				this.drawText_(l, k, m, a, !0)
			}, j.measureText = function(l) {
				if (!this.textMeasureEl_) {
					var k = '<span style="position:absolute;top:-20000px;left:0;padding:0;margin:0;border:none;white-space:pre;"></span>';
					this.element_.insertAdjacentHTML("beforeEnd", k), this.textMeasureEl_ = this.element_.lastChild
				}
				var m = this.element_.ownerDocument;
				this.textMeasureEl_.innerHTML = "";
				try {
					this.textMeasureEl_.style.font = this.font
				} catch (a) {}
				return this.textMeasureEl_.appendChild(m.createTextNode(l)), {
					width: this.textMeasureEl_.offsetWidth
				}
			}, j.clip = function() {}, j.arcTo = function() {}, j.createPattern = function(i, a) {
				return new aD(i, a)
			}, ao.prototype.addColorStop = function(i, a) {
				a = aW(a), this.colors_.push({
					offset: i,
					color: a.color,
					alpha: a.alpha
				})
			};
			var aJ = ap.prototype = new Error;
			aJ.INDEX_SIZE_ERR = 1, aJ.DOMSTRING_SIZE_ERR = 2, aJ.HIERARCHY_REQUEST_ERR = 3, aJ.WRONG_DOCUMENT_ERR = 4, aJ.INVALID_CHARACTER_ERR = 5, aJ.NO_DATA_ALLOWED_ERR = 6, aJ.NO_MODIFICATION_ALLOWED_ERR = 7, aJ.NOT_FOUND_ERR = 8, aJ.NOT_SUPPORTED_ERR = 9, aJ.INUSE_ATTRIBUTE_ERR = 10, aJ.INVALID_STATE_ERR = 11, aJ.SYNTAX_ERR = 12, aJ.INVALID_MODIFICATION_ERR = 13, aJ.NAMESPACE_ERR = 14, aJ.INVALID_ACCESS_ERR = 15, aJ.VALIDATION_ERR = 16, aJ.TYPE_MISMATCH_ERR = 17, G_vmlCanvasManager = aw, CanvasRenderingContext2D = aT, CanvasGradient = ao, CanvasPattern = aD, DOMException = ap
		}(), G_vmlCanvasManager
	}), h("zrender/mixin/Eventful", ["require"], function() {
		var a = function() {
			this._handlers = {}
		};
		return a.prototype.one = function(l, k, m) {
			var j = this._handlers;
			return k && l ? (j[l] || (j[l] = []), j[l].push({
				h: k,
				one: !0,
				ctx: m || this
			}), this) : this
		}, a.prototype.bind = function(l, k, m) {
			var j = this._handlers;
			return k && l ? (j[l] || (j[l] = []), j[l].push({
				h: k,
				one: !1,
				ctx: m || this
			}), this) : this
		}, a.prototype.unbind = function(m, l) {
			var q = this._handlers;
			if (!m) {
				return this._handlers = {}, this
			}
			if (l) {
				if (q[m]) {
					for (var k = [], j = 0, p = q[m].length; p > j; j++) {
						q[m][j].h != l && k.push(q[m][j])
					}
					q[m] = k
				}
				q[m] && 0 === q[m].length && delete q[m]
			} else {
				delete q[m]
			}
			return this
		}, a.prototype.dispatch = function(m) {
			if (this._handlers[m]) {
				var l = arguments,
					q = l.length;
				q > 3 && (l = Array.prototype.slice.call(l, 1));
				for (var k = this._handlers[m], j = k.length, p = 0; j > p;) {
					switch (q) {
						case 1:
							k[p].h.call(k[p].ctx);
							break;
						case 2:
							k[p].h.call(k[p].ctx, l[1]);
							break;
						case 3:
							k[p].h.call(k[p].ctx, l[1], l[2]);
							break;
						default:
							k[p].h.apply(k[p].ctx, l)
					}
					k[p].one ? (k.splice(p, 1), j--) : p++
				}
			}
			return this
		}, a.prototype.dispatchWithContext = function(p) {
			if (this._handlers[p]) {
				var l = arguments,
					s = l.length;
				s > 4 && (l = Array.prototype.slice.call(l, 1, l.length - 1));
				for (var k = l[l.length - 1], j = this._handlers[p], q = j.length, m = 0; q > m;) {
					switch (s) {
						case 1:
							j[m].h.call(k);
							break;
						case 2:
							j[m].h.call(k, l[1]);
							break;
						case 3:
							j[m].h.call(k, l[1], l[2]);
							break;
						default:
							j[m].h.apply(k, l)
					}
					j[m].one ? (j.splice(m, 1), q--) : m++
				}
			}
			return this
		}, a
	}), h("zrender/tool/log", ["require", "../config"], function(i) {
		var a = i("../config");
		return function() {
			if (0 !== a.debugMode) {
				if (1 == a.debugMode) {
					for (var j in arguments) {
						throw new Error(arguments[j])
					}
				} else {
					if (a.debugMode > 1) {
						for (var j in arguments) {
							console.log(arguments[j])
						}
					}
				}
			}
		}
	}), h("zrender/tool/guid", [], function() {
		var a = 2311;
		return function() {
			return "zrender__" + a++
		}
	}), h("zrender/Handler", ["require", "./config", "./tool/env", "./tool/event", "./tool/util", "./tool/vector", "./tool/matrix", "./mixin/Eventful"], function(C) {
		function H(i, a) {
			return function(e) {
				return i.call(a, e)
			}
		}

		function v(i, a) {
			return function(m, l, e) {
				return i.call(a, m, l, e)
			}
		}

		function A(l) {
			for (var m = D.length; m--;) {
				var a = D[m];
				l["_" + a + "Handler"] = H(k[a], l)
			}
		}

		function F(p, o, r) {
			if (this._draggingTarget && this._draggingTarget.id == p.id || p.isSilent()) {
				return !1
			}
			var m = this._event;
			if (p.isCover(o, r)) {
				p.hoverable && this.storage.addHover(p);
				for (var l = p.parent; l;) {
					if (l.clipShape && !l.clipShape.isCover(this._mouseX, this._mouseY)) {
						return !1
					}
					l = l.parent
				}
				return this._lastHover != p && (this._processOutShape(m), this._processDragLeave(m), this._lastHover = p, this._processDragEnter(m)), this._processOverShape(m), this._processDragOver(m), this._hasfound = 1, !0
			}
			return !1
		}
		var q = C("./config"),
			j = C("./tool/env"),
			I = C("./tool/event"),
			z = C("./tool/util"),
			B = C("./tool/vector"),
			x = C("./tool/matrix"),
			w = q.EVENT,
			y = C("./mixin/Eventful"),
			D = ["resize", "click", "dblclick", "mousewheel", "mousemove", "mouseout", "mouseup", "mousedown", "touchstart", "touchend", "touchmove"],
			k = {
				resize: function(a) {
					a = a || window.event, this._lastHover = null, this._isMouseDown = 0, this.dispatch(w.RESIZE, a)
				},
				click: function(i) {
					i = this._zrenderEventFixed(i);
					var a = this._lastHover;
					(a && a.clickable || !a) && this._clickThreshold < 5 && this._dispatchAgency(a, w.CLICK, i), this._mousemoveHandler(i)
				},
				dblclick: function(i) {
					i = i || window.event, i = this._zrenderEventFixed(i);
					var a = this._lastHover;
					(a && a.clickable || !a) && this._clickThreshold < 5 && this._dispatchAgency(a, w.DBLCLICK, i), this._mousemoveHandler(i)
				},
				mousewheel: function(r) {
					r = this._zrenderEventFixed(r);
					var p = r.wheelDelta || -r.detail,
						u = p > 0 ? 1.1 : 1 / 1.1,
						m = !1,
						l = this._mouseX,
						s = this._mouseY;
					this.painter.eachBuildinLayer(function(e) {
						var i = e.position;
						if (e.zoomable) {
							e.__zoom = e.__zoom || 1;
							var a = e.__zoom;
							a *= u, a = Math.max(Math.min(e.maxZoom, a), e.minZoom), u = a / e.__zoom, e.__zoom = a, i[0] -= (l - i[0]) * (u - 1), i[1] -= (s - i[1]) * (u - 1), e.scale[0] *= u, e.scale[1] *= u, e.dirty = !0, m = !0, I.stop(r)
						}
					}), m && this.painter.refresh(), this._dispatchAgency(this._lastHover, w.MOUSEWHEEL, r), this._mousemoveHandler(r)
				},
				mousemove: function(p) {
					if (!this.painter.isLoading()) {
						p = this._zrenderEventFixed(p), this._lastX = this._mouseX, this._lastY = this._mouseY, this._mouseX = I.getX(p), this._mouseY = I.getY(p);
						var o = this._mouseX - this._lastX,
							r = this._mouseY - this._lastY;
						this._processDragStart(p), this._hasfound = 0, this._event = p, this._iterateAndFindHover(), this._hasfound || ((!this._draggingTarget || this._lastHover && this._lastHover != this._draggingTarget) && (this._processOutShape(p), this._processDragLeave(p)), this._lastHover = null, this.storage.delHover(), this.painter.clearHover());
						var m = "default";
						if (this._draggingTarget) {
							this.storage.drift(this._draggingTarget.id, o, r), this._draggingTarget.modSelf(), this.storage.addHover(this._draggingTarget), this._clickThreshold++
						} else {
							if (this._isMouseDown) {
								var l = !1;
								this.painter.eachBuildinLayer(function(a) {
									a.panable && (m = "move", a.position[0] += o, a.position[1] += r, l = !0, a.dirty = !0)
								}), l && this.painter.refresh()
							}
						}
						this._draggingTarget || this._hasfound && this._lastHover.draggable ? m = "move" : this._hasfound && this._lastHover.clickable && (m = "pointer"), this.root.style.cursor = m, this._dispatchAgency(this._lastHover, w.MOUSEMOVE, p), (this._draggingTarget || this._hasfound || this.storage.hasHoverShape()) && this.painter.refreshHover()
					}
				},
				mouseout: function(i) {
					i = this._zrenderEventFixed(i);
					var a = i.toElement || i.relatedTarget;
					if (a != this.root) {
						for (; a && 9 != a.nodeType;) {
							if (a == this.root) {
								return void this._mousemoveHandler(i)
							}
							a = a.parentNode
						}
					}
					i.zrenderX = this._lastX, i.zrenderY = this._lastY, this.root.style.cursor = "default", this._isMouseDown = 0, this._processOutShape(i), this._processDrop(i), this._processDragEnd(i), this.painter.isLoading() || this.painter.refreshHover(), this.dispatch(w.GLOBALOUT, i)
				},
				mousedown: function(a) {
					return this._clickThreshold = 0, 2 == this._lastDownButton ? (this._lastDownButton = a.button, void(this._mouseDownTarget = null)) : (this._lastMouseDownMoment = new Date, a = this._zrenderEventFixed(a), this._isMouseDown = 1, this._mouseDownTarget = this._lastHover, this._dispatchAgency(this._lastHover, w.MOUSEDOWN, a), void(this._lastDownButton = a.button))
				},
				mouseup: function(a) {
					a = this._zrenderEventFixed(a), this.root.style.cursor = "default", this._isMouseDown = 0, this._mouseDownTarget = null, this._dispatchAgency(this._lastHover, w.MOUSEUP, a), this._processDrop(a), this._processDragEnd(a)
				},
				touchstart: function(a) {
					a = this._zrenderEventFixed(a, !0), this._lastTouchMoment = new Date, this._mobileFindFixed(a), this._mousedownHandler(a)
				},
				touchmove: function(a) {
					a = this._zrenderEventFixed(a, !0), this._mousemoveHandler(a), this._isDragging && I.stop(a)
				},
				touchend: function(i) {
					i = this._zrenderEventFixed(i, !0), this._mouseupHandler(i);
					var a = new Date;
					a - this._lastTouchMoment < w.touchClickDelay && (this._mobileFindFixed(i), this._clickHandler(i), a - this._lastClickMoment < w.touchClickDelay / 2 && (this._dblclickHandler(i), this._lastHover && this._lastHover.clickable && I.stop(i)), this._lastClickMoment = a), this.painter.clearHover()
				}
			},
			E = function(i, a, l) {
				y.call(this), this.root = i, this.storage = a, this.painter = l, this._lastX = this._lastY = this._mouseX = this._mouseY = 0, this._findHover = v(F, this), this._domHover = l.getDomHover(), A(this), window.addEventListener ? (window.addEventListener("resize", this._resizeHandler), j.os.tablet || j.os.phone ? (i.addEventListener("touchstart", this._touchstartHandler), i.addEventListener("touchmove", this._touchmoveHandler), i.addEventListener("touchend", this._touchendHandler)) : (i.addEventListener("click", this._clickHandler), i.addEventListener("dblclick", this._dblclickHandler), i.addEventListener("mousewheel", this._mousewheelHandler), i.addEventListener("mousemove", this._mousemoveHandler), i.addEventListener("mousedown", this._mousedownHandler), i.addEventListener("mouseup", this._mouseupHandler)), i.addEventListener("DOMMouseScroll", this._mousewheelHandler), i.addEventListener("mouseout", this._mouseoutHandler)) : (window.attachEvent("onresize", this._resizeHandler), i.attachEvent("onclick", this._clickHandler), i.ondblclick = this._dblclickHandler, i.attachEvent("onmousewheel", this._mousewheelHandler), i.attachEvent("onmousemove", this._mousemoveHandler), i.attachEvent("onmouseout", this._mouseoutHandler), i.attachEvent("onmousedown", this._mousedownHandler), i.attachEvent("onmouseup", this._mouseupHandler))
			};
		E.prototype.on = function(i, a, l) {
			return this.bind(i, a, l), this
		}, E.prototype.un = function(i, a) {
			return this.unbind(i, a), this
		}, E.prototype.trigger = function(i, a) {
			switch (i) {
				case w.RESIZE:
				case w.CLICK:
				case w.DBLCLICK:
				case w.MOUSEWHEEL:
				case w.MOUSEMOVE:
				case w.MOUSEDOWN:
				case w.MOUSEUP:
				case w.MOUSEOUT:
					this["_" + i + "Handler"](a)
			}
		}, E.prototype.dispose = function() {
			var a = this.root;
			window.removeEventListener ? (window.removeEventListener("resize", this._resizeHandler), j.os.tablet || j.os.phone ? (a.removeEventListener("touchstart", this._touchstartHandler), a.removeEventListener("touchmove", this._touchmoveHandler), a.removeEventListener("touchend", this._touchendHandler)) : (a.removeEventListener("click", this._clickHandler), a.removeEventListener("dblclick", this._dblclickHandler), a.removeEventListener("mousewheel", this._mousewheelHandler), a.removeEventListener("mousemove", this._mousemoveHandler), a.removeEventListener("mousedown", this._mousedownHandler), a.removeEventListener("mouseup", this._mouseupHandler)), a.removeEventListener("DOMMouseScroll", this._mousewheelHandler), a.removeEventListener("mouseout", this._mouseoutHandler)) : (window.detachEvent("onresize", this._resizeHandler), a.detachEvent("onclick", this._clickHandler), a.detachEvent("dblclick", this._dblclickHandler), a.detachEvent("onmousewheel", this._mousewheelHandler), a.detachEvent("onmousemove", this._mousemoveHandler), a.detachEvent("onmouseout", this._mouseoutHandler), a.detachEvent("onmousedown", this._mousedownHandler), a.detachEvent("onmouseup", this._mouseupHandler)), this.root = this._domHover = this.storage = this.painter = null, this.un()
		}, E.prototype._processDragStart = function(i) {
			var a = this._lastHover;
			if (this._isMouseDown && a && a.draggable && !this._draggingTarget && this._mouseDownTarget == a) {
				if (a.dragEnableTime && new Date - this._lastMouseDownMoment < a.dragEnableTime) {
					return
				}
				var l = a;
				this._draggingTarget = l, this._isDragging = 1, l.invisible = !0, this.storage.mod(l.id), this._dispatchAgency(l, w.DRAGSTART, i), this.painter.refresh()
			}
		}, E.prototype._processDragEnter = function(a) {
			this._draggingTarget && this._dispatchAgency(this._lastHover, w.DRAGENTER, a, this._draggingTarget)
		}, E.prototype._processDragOver = function(a) {
			this._draggingTarget && this._dispatchAgency(this._lastHover, w.DRAGOVER, a, this._draggingTarget)
		}, E.prototype._processDragLeave = function(a) {
			this._draggingTarget && this._dispatchAgency(this._lastHover, w.DRAGLEAVE, a, this._draggingTarget)
		}, E.prototype._processDrop = function(a) {
			this._draggingTarget && (this._draggingTarget.invisible = !1, this.storage.mod(this._draggingTarget.id), this.painter.refresh(), this._dispatchAgency(this._lastHover, w.DROP, a, this._draggingTarget))
		}, E.prototype._processDragEnd = function(a) {
			this._draggingTarget && (this._dispatchAgency(this._draggingTarget, w.DRAGEND, a), this._lastHover = null), this._isDragging = 0, this._draggingTarget = null
		}, E.prototype._processOverShape = function(a) {
			this._dispatchAgency(this._lastHover, w.MOUSEOVER, a)
		}, E.prototype._processOutShape = function(a) {
			this._dispatchAgency(this._lastHover, w.MOUSEOUT, a)
		}, E.prototype._dispatchAgency = function(K, p, M, m) {
			var l = "on" + p,
				L = {
					type: p,
					event: M,
					target: K,
					cancelBubble: !1
				},
				J = K;
			for (m && (L.dragged = m); J && (J[l] && (L.cancelBubble = J[l](L)), J.dispatch(p, L), J = J.parent, !L.cancelBubble);) {}
			if (K) {
				L.cancelBubble || this.dispatch(p, L)
			} else {
				if (!m) {
					var u = {
						type: p,
						event: M
					};
					this.dispatch(p, u), this.painter.eachOtherLayer(function(a) {
						"function" == typeof a[l] && a[l](u), a.dispatch && a.dispatch(p, u)
					})
				}
			}
		}, E.prototype._iterateAndFindHover = function() {
			var a = x.create();
			return function() {
				for (var m, u, l = this.storage.getShapeList(), e = [0, 0], s = l.length - 1; s >= 0; s--) {
					var p = l[s];
					if (m !== p.zlevel && (u = this.painter.getLayer(p.zlevel, u), e[0] = this._mouseX, e[1] = this._mouseY, u.needTransform && (x.invert(a, u.transform), B.applyTransform(e, e, a))), this._findHover(p, e[0], e[1])) {
						break
					}
				}
			}
		}();
		var G = [{
			x: 10
		}, {
			x: -20
		}, {
			x: 10,
			y: 10
		}, {
			y: -20
		}];
		return E.prototype._mobileFindFixed = function(i) {
			this._lastHover = null, this._mouseX = i.zrenderX, this._mouseY = i.zrenderY, this._event = i, this._iterateAndFindHover();
			for (var a = 0; !this._lastHover && a < G.length; a++) {
				var l = G[a];
				l.x && (this._mouseX += l.x), l.y && (this._mouseY += l.y), this._iterateAndFindHover()
			}
			this._lastHover && (i.zrenderX = this._mouseX, i.zrenderY = this._mouseY)
		}, E.prototype._zrenderEventFixed = function(p, o) {
			if (p.zrenderFixed) {
				return p
			}
			if (o) {
				var r = "touchend" != p.type ? p.targetTouches[0] : p.changedTouches[0];
				if (r) {
					var m = this.painter._domRoot.getBoundingClientRect();
					p.zrenderX = r.clientX - m.left, p.zrenderY = r.clientY - m.top
				}
			} else {
				p = p || window.event;
				var l = p.toElement || p.relatedTarget || p.srcElement || p.target;
				l && l != this._domHover && (p.zrenderX = ("undefined" != typeof p.offsetX ? p.offsetX : p.layerX) + l.offsetLeft, p.zrenderY = ("undefined" != typeof p.offsetY ? p.offsetY : p.layerY) + l.offsetTop)
			}
			return p.zrenderFixed = 1, p
		}, z.merge(E.prototype, y.prototype, !0), E
	}), h("zrender/Painter", ["require", "./config", "./tool/util", "./tool/log", "./loadingEffect/Base", "./Layer", "./shape/Image"], function(v) {
		function x() {
			return !1
		}

		function m() {}

		function q(a) {
			return a ? a.isBuildin ? !0 : "function" != typeof a.resize || "function" != typeof a.refresh ? !1 : !0 : !1
		}
		var w = v("./config"),
			k = v("./tool/util"),
			j = v("./tool/log"),
			y = v("./loadingEffect/Base"),
			p = v("./Layer"),
			u = function(r, s) {
				this.root = r, r.style["-webkit-tap-highlight-color"] = "transparent", r.style["-webkit-user-select"] = "none", r.style["user-select"] = "none", r.style["-webkit-touch-callout"] = "none", this.storage = s, r.innerHTML = "", this._width = this._getWidth(), this._height = this._getHeight();
				var o = document.createElement("div");
				this._domRoot = o, o.style.position = "relative", o.style.overflow = "hidden", o.style.width = this._width + "px", o.style.height = this._height + "px", r.appendChild(o), this._layers = {}, this._zlevelList = [], this._layerConfig = {}, this._loadingEffect = new y({}), this.shapeToImage = this._createShapeToImageProcessor(), this._bgDom = document.createElement("div"), this._bgDom.style.cssText = ["position:absolute;left:0px;top:0px;width:", this._width, "px;height:", this._height + "px;", "-webkit-user-select:none;user-select;none;", "-webkit-touch-callout:none;"].join(""), this._bgDom.setAttribute("data-zr-dom-id", "bg"), o.appendChild(this._bgDom), this._bgDom.onselectstart = x;
				var l = new p("_zrender_hover_", this);
				this._layers.hover = l, o.appendChild(l.dom), l.initContext(), l.dom.onselectstart = x, l.dom.style["-webkit-user-select"] = "none", l.dom.style["user-select"] = "none", l.dom.style["-webkit-touch-callout"] = "none", this.refreshNextFrame = null
			};
		return u.prototype.render = function(a) {
			return this.isLoading() && this.hideLoading(), this.refresh(a, !0), this
		}, u.prototype.refresh = function(z, s) {
			var B = this.storage.getShapeList(!0);
			this._paintList(B, s);
			for (var r = 0; r < this._zlevelList.length; r++) {
				var l = this._zlevelList[r],
					A = this._layers[l];
				!A.isBuildin && A.refresh && A.refresh()
			}
			return "function" == typeof z && z(), this
		}, u.prototype._preProcessLayer = function(a) {
			a.unusedCount++, a.updateTransform()
		}, u.prototype._postProcessLayer = function(a) {
			a.dirty = !1, 1 == a.unusedCount && a.clear()
		}, u.prototype._paintList = function(D, E) {
			"undefined" == typeof E && (E = !1), this._updateLayerStatus(D);
			var r, B, a;
			this.eachBuildinLayer(this._preProcessLayer);
			for (var F = 0, A = D.length; A > F; F++) {
				var C = D[F];
				if (B !== C.zlevel && (r && (r.needTransform && a.restore(), a.flush && a.flush()), B = C.zlevel, r = this.getLayer(B), r.isBuildin || j("ZLevel " + B + " has been used by unkown layer " + r.id), a = r.ctx, r.unusedCount = 0, (r.dirty || E) && r.clear(), r.needTransform && (a.save(), r.setTransform(a))), (r.dirty || E) && !C.invisible && (!C.onbrush || C.onbrush && !C.onbrush(a, !1))) {
					if (w.catchBrushException) {
						try {
							C.brush(a, !1, this.refreshNextFrame)
						} catch (z) {
							j(z, "brush error of " + C.type, C)
						}
					} else {
						C.brush(a, !1, this.refreshNextFrame)
					}
				}
				C.__dirty = !1
			}
			r && (r.needTransform && a.restore(), a.flush && a.flush()), this.eachBuildinLayer(this._postProcessLayer)
		}, u.prototype.getLayer = function(i) {
			var a = this._layers[i];
			return a || (a = new p(i, this), a.isBuildin = !0, this._layerConfig[i] && k.merge(a, this._layerConfig[i], !0), a.updateTransform(), this.insertLayer(i, a), a.initContext()), a
		}, u.prototype.insertLayer = function(z, l) {
			if (this._layers[z]) {
				return void j("ZLevel " + z + " has been used already")
			}
			if (!q(l)) {
				return void j("Layer of zlevel " + z + " is not valid")
			}
			var B = this._zlevelList.length,
				i = null,
				A = -1;
			if (B > 0 && z > this._zlevelList[0]) {
				for (A = 0; B - 1 > A && !(this._zlevelList[A] < z && this._zlevelList[A + 1] > z); A++) {}
				i = this._layers[this._zlevelList[A]]
			}
			this._zlevelList.splice(A + 1, 0, z);
			var r = i ? i.dom : this._bgDom;
			r.nextSibling ? r.parentNode.insertBefore(l.dom, r.nextSibling) : r.parentNode.appendChild(l.dom), this._layers[z] = l
		}, u.prototype.eachLayer = function(o, l) {
			for (var r = 0; r < this._zlevelList.length; r++) {
				var a = this._zlevelList[r];
				o.call(l, this._layers[a], a)
			}
		}, u.prototype.eachBuildinLayer = function(s, r) {
			for (var z = 0; z < this._zlevelList.length; z++) {
				var o = this._zlevelList[z],
					l = this._layers[o];
				l.isBuildin && s.call(r, l, o)
			}
		}, u.prototype.eachOtherLayer = function(s, r) {
			for (var z = 0; z < this._zlevelList.length; z++) {
				var o = this._zlevelList[z],
					l = this._layers[o];
				l.isBuildin || s.call(r, l, o)
			}
		}, u.prototype.getLayers = function() {
			return this._layers
		}, u.prototype._updateLayerStatus = function(D) {
			var A = this._layers,
				F = {};
			this.eachBuildinLayer(function(i, a) {
				F[a] = i.elCount, i.elCount = 0
			});
			for (var z = 0, l = D.length; l > z; z++) {
				var E = D[z],
					C = E.zlevel,
					B = A[C];
				if (B) {
					if (B.elCount++, B.dirty) {
						continue
					}
					B.dirty = E.__dirty
				}
			}
			this.eachBuildinLayer(function(i, a) {
				F[a] !== i.elCount && (i.dirty = !0)
			})
		}, u.prototype.refreshShapes = function(s, r) {
			for (var z = 0, o = s.length; o > z; z++) {
				var l = s[z];
				l.modSelf()
			}
			return this.refresh(r), this
		}, u.prototype.setLoadingEffect = function(a) {
			return this._loadingEffect = a, this
		}, u.prototype.clear = function() {
			return this.eachBuildinLayer(this._clearLayer), this
		}, u.prototype._clearLayer = function(a) {
			a.clear()
		}, u.prototype.modLayer = function(i, a) {
			if (a) {
				this._layerConfig[i] ? k.merge(this._layerConfig[i], a, !0) : this._layerConfig[i] = a;
				var l = this._layers[i];
				l && k.merge(l, this._layerConfig[i], !0)
			}
		}, u.prototype.delLayer = function(i) {
			var a = this._layers[i];
			a && (this.modLayer(i, {
				position: a.position,
				rotation: a.rotation,
				scale: a.scale
			}), a.dom.parentNode.removeChild(a.dom), delete this._layers[i], this._zlevelList.splice(k.indexOf(this._zlevelList, i), 1))
		}, u.prototype.refreshHover = function() {
			this.clearHover();
			for (var o = this.storage.getHoverShapes(!0), l = 0, r = o.length; r > l; l++) {
				this._brushHover(o[l])
			}
			var a = this._layers.hover.ctx;
			return a.flush && a.flush(), this.storage.delHover(), this
		}, u.prototype.clearHover = function() {
			var a = this._layers.hover;
			return a && a.clear(), this
		}, u.prototype.showLoading = function(a) {
			return this._loadingEffect && this._loadingEffect.stop(), a && this.setLoadingEffect(a), this._loadingEffect.start(this), this.loading = !0, this
		}, u.prototype.hideLoading = function() {
			return this._loadingEffect.stop(), this.clearHover(), this.loading = !1, this
		}, u.prototype.isLoading = function() {
			return this.loading
		}, u.prototype.resize = function() {
			var o = this._domRoot;
			o.style.display = "none";
			var l = this._getWidth(),
				r = this._getHeight();
			if (o.style.display = "", this._width != l || r != this._height) {
				this._width = l, this._height = r, o.style.width = l + "px", o.style.height = r + "px";
				for (var a in this._layers) {
					this._layers[a].resize(l, r)
				}
				this.refresh(null, !0)
			}
			return this
		}, u.prototype.clearLayer = function(i) {
			var a = this._layers[i];
			a && a.clear()
		}, u.prototype.dispose = function() {
			this.isLoading() && this.hideLoading(), this.root.innerHTML = "", this.root = this.storage = this._domRoot = this._layers = null
		}, u.prototype.getDomHover = function() {
			return this._layers.hover.dom
		}, u.prototype.toDataURL = function(A, l, C) {
			if (window.G_vmlCanvasManager) {
				return null
			}
			var a = new p("image", this);
			this._bgDom.appendChild(a.dom), a.initContext();
			var B = a.ctx;
			a.clearColor = l || "#fff", a.clear();
			var z = this;
			this.storage.iterShape(function(n) {
				if (!n.invisible && (!n.onbrush || n.onbrush && !n.onbrush(B, !1))) {
					if (w.catchBrushException) {
						try {
							n.brush(B, !1, z.refreshNextFrame)
						} catch (i) {
							j(i, "brush error of " + n.type, n)
						}
					} else {
						n.brush(B, !1, z.refreshNextFrame)
					}
				}
			}, {
				normal: "up",
				update: !0
			});
			var r = a.dom.toDataURL(A, C);
			return B = null, this._bgDom.removeChild(a.dom), r
		}, u.prototype.getWidth = function() {
			return this._width
		}, u.prototype.getHeight = function() {
			return this._height
		}, u.prototype._getWidth = function() {
			var i = this.root,
				a = i.currentStyle || document.defaultView.getComputedStyle(i);
			return ((i.clientWidth || parseInt(a.width, 10)) - parseInt(a.paddingLeft, 10) - parseInt(a.paddingRight, 10)).toFixed(0) - 0
		}, u.prototype._getHeight = function() {
			var i = this.root,
				a = i.currentStyle || document.defaultView.getComputedStyle(i);
			return ((i.clientHeight || parseInt(a.height, 10)) - parseInt(a.paddingTop, 10) - parseInt(a.paddingBottom, 10)).toFixed(0) - 0
		}, u.prototype._brushHover = function(o) {
			var l = this._layers.hover.ctx;
			if (!o.onbrush || o.onbrush && !o.onbrush(l, !0)) {
				var r = this.getLayer(o.zlevel);
				if (r.needTransform && (l.save(), r.setTransform(l)), w.catchBrushException) {
					try {
						o.brush(l, !0, this.refreshNextFrame)
					} catch (a) {
						j(a, "hoverBrush error of " + o.type, o)
					}
				} else {
					o.brush(l, !0, this.refreshNextFrame)
				}
				r.needTransform && l.restore()
			}
		}, u.prototype._shapeToImage = function(G, A, D, F, z) {
			var e = document.createElement("canvas"),
				H = e.getContext("2d");
			e.style.width = D + "px", e.style.height = F + "px", e.setAttribute("width", D * z), e.setAttribute("height", F * z), H.clearRect(0, 0, D * z, F * z);
			var C = {
				position: A.position,
				rotation: A.rotation,
				scale: A.scale
			};
			A.position = [0, 0, 0], A.rotation = 0, A.scale = [1, 1], A && A.brush(H, !1);
			var E = v("./shape/Image"),
				B = new E({
					id: G,
					style: {
						x: 0,
						y: 0,
						image: e
					}
				});
			return null != C.position && (B.position = A.position = C.position), null != C.rotation && (B.rotation = A.rotation = C.rotation), null != C.scale && (B.scale = A.scale = C.scale), B
		}, u.prototype._createShapeToImageProcessor = function() {
			if (window.G_vmlCanvasManager) {
				return m
			}
			var a = this;
			return function(l, s, e, r) {
				return a._shapeToImage(l, s, e, r, w.devicePixelRatio)
			}
		}, u
	}), h("zrender/Storage", ["require", "./tool/util", "./Group"], function(m) {
		function l(i, a) {
			return i.zlevel == a.zlevel ? i.z == a.z ? i.__renderidx - a.__renderidx : i.z - a.z : i.zlevel - a.zlevel
		}
		var q = m("./tool/util"),
			k = m("./Group"),
			j = {
				hover: !1,
				normal: "down",
				update: !1
			},
			p = function() {
				this._elements = {}, this._hoverElements = [], this._roots = [], this._shapeList = [], this._shapeListOffset = 0
			};
		return p.prototype.iterShape = function(s, r) {
			if (r || (r = j), r.hover) {
				for (var v = 0, a = this._hoverElements.length; a > v; v++) {
					var u = this._hoverElements[v];
					if (u.updateTransform(), s(u)) {
						return this
					}
				}
			}
			switch (r.update && this.updateShapeList(), r.normal) {
				case "down":
					for (var a = this._shapeList.length; a--;) {
						if (s(this._shapeList[a])) {
							return this
						}
					}
					break;
				default:
					for (var v = 0, a = this._shapeList.length; a > v; v++) {
						if (s(this._shapeList[v])) {
							return this
						}
					}
			}
			return this
		}, p.prototype.getHoverShapes = function(y) {
			for (var A = [], v = 0, u = this._hoverElements.length; u > v; v++) {
				A.push(this._hoverElements[v]);
				var z = this._hoverElements[v].hoverConnect;
				if (z) {
					var x;
					z = z instanceof Array ? z : [z];
					for (var w = 0, t = z.length; t > w; w++) {
						x = z[w].id ? z[w] : this.get(z[w]), x && A.push(x)
					}
				}
			}
			if (A.sort(l), y) {
				for (var v = 0, u = A.length; u > v; v++) {
					A[v].updateTransform()
				}
			}
			return A
		}, p.prototype.getShapeList = function(a) {
			return a && this.updateShapeList(), this._shapeList
		}, p.prototype.updateShapeList = function() {
			this._shapeListOffset = 0;
			for (var o = 0, r = this._roots.length; r > o; o++) {
				var a = this._roots[o];
				this._updateAndAddShape(a)
			}
			this._shapeList.length = this._shapeListOffset;
			for (var o = 0, r = this._shapeList.length; r > o; o++) {
				this._shapeList[o].__renderidx = o
			}
			this._shapeList.sort(l)
		}, p.prototype._updateAndAddShape = function(r, o) {
			if (!r.ignore) {
				if (r.updateTransform(), "group" == r.type) {
					r.clipShape && (r.clipShape.parent = r, r.clipShape.updateTransform(), o ? (o = o.slice(), o.push(r.clipShape)) : o = [r.clipShape]);
					for (var s = 0; s < r._children.length; s++) {
						var a = r._children[s];
						a.__dirty = r.__dirty || a.__dirty, this._updateAndAddShape(a, o)
					}
					r.__dirty = !1
				} else {
					r.__clipShapes = o, this._shapeList[this._shapeListOffset++] = r
				}
			}
		}, p.prototype.mod = function(u, s) {
			var r = this._elements[u];
			if (r && (r.modSelf(), s)) {
				if (s.parent || s._storage || s.__clipShapes) {
					var n = {};
					for (var v in s) {
						"parent" !== v && "_storage" !== v && "__clipShapes" !== v && s.hasOwnProperty(v) && (n[v] = s[v])
					}
					q.merge(r, n, !0)
				} else {
					q.merge(r, s, !0)
				}
			}
			return this
		}, p.prototype.drift = function(r, o, s) {
			var a = this._elements[r];
			return a && (a.needTransform = !0, "horizontal" === a.draggable ? s = 0 : "vertical" === a.draggable && (o = 0), (!a.ondrift || a.ondrift && !a.ondrift(o, s)) && a.drift(o, s)), this
		}, p.prototype.addHover = function(a) {
			return a.updateNeedTransform(), this._hoverElements.push(a), this
		}, p.prototype.delHover = function() {
			return this._hoverElements = [], this
		}, p.prototype.hasHoverShape = function() {
			return this._hoverElements.length > 0
		}, p.prototype.addRoot = function(a) {
			a instanceof k && a.addChildrenToStorage(this), this.addToMap(a), this._roots.push(a)
		}, p.prototype.delRoot = function(w) {
			if ("undefined" == typeof w) {
				for (var n = 0; n < this._roots.length; n++) {
					var i = this._roots[n];
					i instanceof k && i.delChildrenFromStorage(this)
				}
				return this._elements = {}, this._hoverElements = [], this._roots = [], this._shapeList = [], void(this._shapeListOffset = 0)
			}
			if (w instanceof Array) {
				for (var n = 0, x = w.length; x > n; n++) {
					this.delRoot(w[n])
				}
			} else {
				var v;
				v = "string" == typeof w ? this._elements[w] : w;
				var u = q.indexOf(this._roots, v);
				u >= 0 && (this.delFromMap(v.id), this._roots.splice(u, 1), v instanceof k && v.delChildrenFromStorage(this))
			}
		}, p.prototype.addToMap = function(a) {
			return a instanceof k && (a._storage = this), a.modSelf(), this._elements[a.id] = a, this
		}, p.prototype.get = function(a) {
			return this._elements[a]
		}, p.prototype.delFromMap = function(i) {
			var a = this._elements[i];
			return a && (delete this._elements[i], a instanceof k && (a._storage = null)), this
		}, p.prototype.dispose = function() {
			this._elements = this._renderList = this._roots = this._hoverElements = null
		}, p
	}), h("zrender/animation/Animation", ["require", "./Clip", "../tool/color", "../tool/util", "../tool/event"], function(H) {
		function w(i, a) {
			return i[a]
		}

		function C(i, a, l) {
			i[a] = l
		}

		function F(i, a, l) {
			return (a - i) * l + i
		}

		function K(L, N, p, M, m) {
			var i = L.length;
			if (1 == m) {
				for (var O = 0; i > O; O++) {
					M[O] = F(L[O], N[O], p)
				}
			} else {
				for (var u = L[0].length, O = 0; i > O; O++) {
					for (var y = 0; u > y; y++) {
						M[O][y] = F(L[O][y], N[O][y], p)
					}
				}
			}
		}

		function B(a) {
			switch (typeof a) {
				case "undefined":
				case "string":
					return !1
			}
			return "undefined" != typeof a.length
		}

		function z(Q, T, u, O, S, s, p, N, P) {
			var L = Q.length;
			if (1 == P) {
				for (var y = 0; L > y; y++) {
					N[y] = x(Q[y], T[y], u[y], O[y], S, s, p)
				}
			} else {
				for (var M = Q[0].length, y = 0; L > y; y++) {
					for (var R = 0; M > R; R++) {
						N[y][R] = x(Q[y][R], T[y][R], u[y][R], O[y][R], S, s, p)
					}
				}
			}
		}

		function x(M, O, u, L, N, p, m) {
			var P = 0.5 * (u - M),
				y = 0.5 * (L - O);
			return (2 * (O - u) + P + y) * m + (-3 * (O - u) - 2 * P - y) * p + P * N + O
		}

		function E(m) {
			if (B(m)) {
				var l = m.length;
				if (B(m[0])) {
					for (var o = [], a = 0; l > a; a++) {
						o.push(J.call(m[a]))
					}
					return o
				}
				return J.call(m)
			}
			return m
		}

		function G(a) {
			return a[0] = Math.floor(a[0]), a[1] = Math.floor(a[1]), a[2] = Math.floor(a[2]), "rgba(" + a.join(",") + ")"
		}
		var D = H("./Clip"),
			j = H("../tool/color"),
			k = H("../tool/util"),
			I = H("../tool/event").Dispatcher,
			A = window.requestAnimationFrame || window.msRequestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(a) {
				setTimeout(a, 16)
			},
			J = Array.prototype.slice,
			v = function(a) {
				a = a || {}, this.stage = a.stage || {}, this.onframe = a.onframe || function() {}, this._clips = [], this._running = !1, this._time = 0, I.call(this)
			};
		v.prototype = {
			add: function(a) {
				this._clips.push(a)
			},
			remove: function(i) {
				var a = k.indexOf(this._clips, i);
				a >= 0 && this._clips.splice(a, 1)
			},
			_update: function() {
				for (var M = (new Date).getTime(), O = M - this._time, u = this._clips, L = u.length, N = [], p = [], m = 0; L > m; m++) {
					var P = u[m],
						y = P.step(M);
					y && (N.push(y), p.push(P))
				}
				for (var m = 0; L > m;) {
					u[m]._needsRemove ? (u[m] = u[L - 1], u.pop(), L--) : m++
				}
				L = N.length;
				for (var m = 0; L > m; m++) {
					p[m].fire(N[m])
				}
				this._time = M, this.onframe(O), this.dispatch("frame", O), this.stage.update && this.stage.update()
			},
			start: function() {
				function i() {
					a._running && (a._update(), A(i))
				}
				var a = this;
				this._running = !0, this._time = (new Date).getTime(), A(i)
			},
			stop: function() {
				this._running = !1
			},
			clear: function() {
				this._clips = []
			},
			animate: function(i, a) {
				a = a || {};
				var l = new q(i, a.loop, a.getter, a.setter);
				return l.animation = this, l
			},
			constructor: v
		}, k.merge(v.prototype, I.prototype, !0);
		var q = function(n, m, l, p) {
			this._tracks = {}, this._target = n, this._loop = m || !1, this._getter = l || w, this._setter = p || C, this._clipCount = 0, this._delay = 0, this._doneList = [], this._onframeList = [], this._clipList = []
		};
		return q.prototype = {
			when: function(i, a) {
				for (var l in a) {
					this._tracks[l] || (this._tracks[l] = [], 0 !== i && this._tracks[l].push({
						time: 0,
						value: E(this._getter(this._target, l))
					})), this._tracks[l].push({
						time: parseInt(i, 10),
						value: a[l]
					})
				}
				return this
			},
			during: function(a) {
				return this._onframeList.push(a), this
			},
			start: function(r) {
				var m = this,
					y = this._setter,
					a = this._getter,
					i = "spline" === r,
					s = function() {
						if (m._clipCount--, 0 === m._clipCount) {
							m._tracks = {};
							for (var l = m._doneList.length, p = 0; l > p; p++) {
								m._doneList[p].call(m)
							}
						}
					},
					o = function(ac, ag) {
						var Z = ac.length;
						if (Z) {
							var P = ac[0].value,
								ae = B(P),
								ah = !1,
								af = ae && B(P[0]) ? 2 : 1;
							ac.sort(function(L, p) {
								return L.time - p.time
							});
							var ad;
							if (Z) {
								ad = ac[Z - 1].time;
								for (var R = [], ai = [], M = 0; Z > M; M++) {
									R.push(ac[M].time / ad);
									var l = ac[M].value;
									"string" == typeof l && (l = j.toArray(l), 0 === l.length && (l[0] = l[1] = l[2] = 0, l[3] = 1), ah = !0), ai.push(l)
								}
								var e, M, N, U, Q, V, O, ab = 0,
									t = 0;
								if (ah) {
									var aa = [0, 0, 0, 0]
								}
								var Y = function(S, T) {
										if (t > T) {
											for (e = Math.min(ab + 1, Z - 1), M = e; M >= 0 && !(R[M] <= T); M--) {}
											M = Math.min(M, Z - 2)
										} else {
											for (M = ab; Z > M && !(R[M] > T); M++) {}
											M = Math.min(M - 1, Z - 2)
										}
										ab = M, t = T;
										var p = R[M + 1] - R[M];
										if (0 !== p) {
											if (N = (T - R[M]) / p, i) {
												if (Q = ai[M], U = ai[0 === M ? M : M - 1], V = ai[M > Z - 2 ? Z - 1 : M + 1], O = ai[M > Z - 3 ? Z - 1 : M + 2], ae) {
													z(U, Q, V, O, N, N * N, N * N * N, a(S, ag), af)
												} else {
													var L;
													ah ? (L = z(U, Q, V, O, N, N * N, N * N * N, aa, 1), L = G(aa)) : L = x(U, Q, V, O, N, N * N, N * N * N), y(S, ag, L)
												}
											} else {
												if (ae) {
													K(ai[M], ai[M + 1], N, a(S, ag), af)
												} else {
													var L;
													ah ? (K(ai[M], ai[M + 1], N, aa, 1), L = G(aa)) : L = F(ai[M], ai[M + 1], N), y(S, ag, L)
												}
											}
											for (M = 0; M < m._onframeList.length; M++) {
												m._onframeList[M](S, T)
											}
										}
									},
									n = new D({
										target: m._target,
										life: ad,
										loop: m._loop,
										delay: m._delay,
										onframe: Y,
										ondestroy: s
									});
								r && "spline" !== r && (n.easing = r), m._clipList.push(n), m._clipCount++, m.animation.add(n)
							}
						}
					};
				for (var u in this._tracks) {
					o(this._tracks[u], u)
				}
				return this
			},
			stop: function() {
				for (var i = 0; i < this._clipList.length; i++) {
					var a = this._clipList[i];
					this.animation.remove(a)
				}
				this._clipList = []
			},
			delay: function(a) {
				return this._delay = a, this
			},
			done: function(a) {
				return a && this._doneList.push(a), this
			}
		}, v
	}), h("zrender/tool/vector", [], function() {
		var i = "undefined" == typeof Float32Array ? Array : Float32Array,
			a = {
				create: function(j, k) {
					var e = new i(2);
					return e[0] = j || 0, e[1] = k || 0, e
				},
				copy: function(k, j) {
					return k[0] = j[0], k[1] = j[1], k
				},
				set: function(k, j, l) {
					return k[0] = j, k[1] = l, k
				},
				add: function(k, j, l) {
					return k[0] = j[0] + l[0], k[1] = j[1] + l[1], k
				},
				scaleAndAdd: function(l, k, m, j) {
					return l[0] = k[0] + m[0] * j, l[1] = k[1] + m[1] * j, l
				},
				sub: function(k, j, l) {
					return k[0] = j[0] - l[0], k[1] = j[1] - l[1], k
				},
				len: function(j) {
					return Math.sqrt(this.lenSquare(j))
				},
				lenSquare: function(j) {
					return j[0] * j[0] + j[1] * j[1]
				},
				mul: function(k, j, l) {
					return k[0] = j[0] * l[0], k[1] = j[1] * l[1], k
				},
				div: function(k, j, l) {
					return k[0] = j[0] / l[0], k[1] = j[1] / l[1], k
				},
				dot: function(k, j) {
					return k[0] * j[0] + k[1] * j[1]
				},
				scale: function(k, j, l) {
					return k[0] = j[0] * l, k[1] = j[1] * l, k
				},
				normalize: function(k, l) {
					var j = a.len(l);
					return 0 === j ? (k[0] = 0, k[1] = 0) : (k[0] = l[0] / j, k[1] = l[1] / j), k
				},
				distance: function(k, j) {
					return Math.sqrt((k[0] - j[0]) * (k[0] - j[0]) + (k[1] - j[1]) * (k[1] - j[1]))
				},
				distanceSquare: function(k, j) {
					return (k[0] - j[0]) * (k[0] - j[0]) + (k[1] - j[1]) * (k[1] - j[1])
				},
				negate: function(k, j) {
					return k[0] = -j[0], k[1] = -j[1], k
				},
				lerp: function(l, k, m, j) {
					return l[0] = k[0] + j * (m[0] - k[0]), l[1] = k[1] + j * (m[1] - k[1]), l
				},
				applyTransform: function(m, l, o) {
					var k = l[0],
						j = l[1];
					return m[0] = o[0] * k + o[2] * j + o[4], m[1] = o[1] * k + o[3] * j + o[5], m
				},
				min: function(k, j, l) {
					return k[0] = Math.min(j[0], l[0]), k[1] = Math.min(j[1], l[1]), k
				},
				max: function(k, j, l) {
					return k[0] = Math.max(j[0], l[0]), k[1] = Math.max(j[1], l[1]), k
				}
			};
		return a.length = a.len, a.lengthSquare = a.lenSquare, a.dist = a.distance, a.distSquare = a.distanceSquare, a
	}), h("zrender/tool/matrix", [], function() {
		var i = "undefined" == typeof Float32Array ? Array : Float32Array,
			a = {
				create: function() {
					var e = new i(6);
					return a.identity(e), e
				},
				identity: function(j) {
					return j[0] = 1, j[1] = 0, j[2] = 0, j[3] = 1, j[4] = 0, j[5] = 0, j
				},
				copy: function(k, j) {
					return k[0] = j[0], k[1] = j[1], k[2] = j[2], k[3] = j[3], k[4] = j[4], k[5] = j[5], k
				},
				mul: function(k, j, l) {
					return k[0] = j[0] * l[0] + j[2] * l[1], k[1] = j[1] * l[0] + j[3] * l[1], k[2] = j[0] * l[2] + j[2] * l[3], k[3] = j[1] * l[2] + j[3] * l[3], k[4] = j[0] * l[4] + j[2] * l[5] + j[4], k[5] = j[1] * l[4] + j[3] * l[5] + j[5], k
				},
				translate: function(k, j, l) {
					return k[0] = j[0], k[1] = j[1], k[2] = j[2], k[3] = j[3], k[4] = j[4] + l[0], k[5] = j[5] + l[1], k
				},
				rotate: function(x, z, p) {
					var v = z[0],
						y = z[2],
						k = z[4],
						j = z[1],
						A = z[3],
						u = z[5],
						w = Math.sin(p),
						q = Math.cos(p);
					return x[0] = v * q + j * w, x[1] = -v * w + j * q, x[2] = y * q + A * w, x[3] = -y * w + q * A, x[4] = q * k + w * u, x[5] = q * u - w * k, x
				},
				scale: function(m, l, o) {
					var k = o[0],
						j = o[1];
					return m[0] = l[0] * k, m[1] = l[1] * j, m[2] = l[2] * k, m[3] = l[3] * j, m[4] = l[4] * k, m[5] = l[5] * j, m
				},
				invert: function(u, w) {
					var m = w[0],
						q = w[2],
						v = w[4],
						k = w[1],
						j = w[3],
						x = w[5],
						p = m * j - k * q;
					return p ? (p = 1 / p, u[0] = j * p, u[1] = -k * p, u[2] = -q * p, u[3] = m * p, u[4] = (q * x - j * v) * p, u[5] = (k * v - m * x) * p, u) : null
				},
				mulVector: function(u, w, m) {
					var q = w[0],
						v = w[2],
						k = w[4],
						j = w[1],
						x = w[3],
						p = w[5];
					return u[0] = m[0] * q + m[1] * v + k, u[1] = m[0] * j + m[1] * x + p, u
				}
			};
		return a
	}), h("zrender/loadingEffect/Base", ["require", "../tool/util", "../shape/Text", "../shape/Rectangle"], function(p) {
		function l(a) {
			this.setOptions(a)
		}
		var s = p("../tool/util"),
			k = p("../shape/Text"),
			j = p("../shape/Rectangle"),
			q = "Loading...",
			m = "normal 16px Arial";
		return l.prototype.createTextShape = function(a) {
			return new k({
				highlightStyle: s.merge({
					x: this.canvasWidth / 2,
					y: this.canvasHeight / 2,
					text: q,
					textAlign: "center",
					textBaseline: "middle",
					textFont: m,
					color: "#333",
					brushType: "fill"
				}, a, !0)
			})
		}, l.prototype.createBackgroundShape = function(a) {
			return new j({
				highlightStyle: {
					x: 0,
					y: 0,
					width: this.canvasWidth,
					height: this.canvasHeight,
					brushType: "fill",
					color: a
				}
			})
		}, l.prototype.start = function(i) {
			function a(e) {
				i.storage.addHover(e)
			}

			function o() {
				i.refreshHover()
			}
			this.canvasWidth = i._width, this.canvasHeight = i._height, this.loadingTimer = this._start(a, o)
		}, l.prototype._start = function() {
			return setInterval(function() {}, 10000)
		}, l.prototype.stop = function() {
			clearInterval(this.loadingTimer)
		}, l.prototype.setOptions = function(a) {
			this.options = a || {}
		}, l.prototype.adjust = function(i, a) {
			return i <= a[0] ? i = a[0] : i >= a[1] && (i = a[1]), i
		}, l.prototype.getLocation = function(v, u, w) {
			var r = null != v.x ? v.x : "center";
			switch (r) {
				case "center":
					r = Math.floor((this.canvasWidth - u) / 2);
					break;
				case "left":
					r = 0;
					break;
				case "right":
					r = this.canvasWidth - u
			}
			var o = null != v.y ? v.y : "center";
			switch (o) {
				case "center":
					o = Math.floor((this.canvasHeight - w) / 2);
					break;
				case "top":
					o = 0;
					break;
				case "bottom":
					o = this.canvasHeight - w
			}
			return {
				x: r,
				y: o,
				width: u,
				height: w
			}
		}, l
	}), h("zrender/Layer", ["require", "./mixin/Transformable", "./tool/util", "./config"], function(q) {
		function l() {
			return !1
		}

		function v(x, w, z) {
			var s = document.createElement(w),
				r = z.getWidth(),
				y = z.getHeight();
			return s.style.position = "absolute", s.style.left = 0, s.style.top = 0, s.style.width = r + "px", s.style.height = y + "px", s.width = r * p.devicePixelRatio, s.height = y * p.devicePixelRatio, s.setAttribute("data-zr-dom-id", x), s
		}
		var k = q("./mixin/Transformable"),
			j = q("./tool/util"),
			u = window.G_vmlCanvasManager,
			p = q("./config"),
			m = function(n, i) {
				this.id = n, this.dom = v(n, "canvas", i), this.dom.onselectstart = l, this.dom.style["-webkit-user-select"] = "none", this.dom.style["user-select"] = "none", this.dom.style["-webkit-touch-callout"] = "none", this.dom.style["-webkit-tap-highlight-color"] = "rgba(0,0,0,0)", u && u.initElement(this.dom), this.domBack = null, this.ctxBack = null, this.painter = i, this.unusedCount = 0, this.config = null, this.dirty = !0, this.elCount = 0, this.clearColor = 0, this.motionBlur = !1, this.lastFrameAlpha = 0.7, this.zoomable = !1, this.panable = !1, this.maxZoom = 1 / 0, this.minZoom = 0, k.call(this)
			};
		return m.prototype.initContext = function() {
			this.ctx = this.dom.getContext("2d");
			var a = p.devicePixelRatio;
			1 != a && this.ctx.scale(a, a)
		}, m.prototype.createBackBuffer = function() {
			if (!u) {
				this.domBack = v("back-" + this.id, "canvas", this.painter), this.ctxBack = this.domBack.getContext("2d");
				var a = p.devicePixelRatio;
				1 != a && this.ctxBack.scale(a, a)
			}
		}, m.prototype.resize = function(i, a) {
			var o = p.devicePixelRatio;
			this.dom.style.width = i + "px", this.dom.style.height = a + "px", this.dom.setAttribute("width", i * o), this.dom.setAttribute("height", a * o), 1 != o && this.ctx.scale(o, o), this.domBack && (this.domBack.setAttribute("width", i * o), this.domBack.setAttribute("height", a * o), 1 != o && this.ctxBack.scale(o, o))
		}, m.prototype.clear = function() {
			var z = this.dom,
				B = this.ctx,
				o = z.width,
				x = z.height,
				A = this.clearColor && !u,
				C = this.motionBlur && !u,
				w = this.lastFrameAlpha,
				y = p.devicePixelRatio;
			if (C && (this.domBack || this.createBackBuffer(), this.ctxBack.globalCompositeOperation = "copy", this.ctxBack.drawImage(z, 0, 0, o / y, x / y)), B.clearRect(0, 0, o / y, x / y), A && (B.save(), B.fillStyle = this.clearColor, B.fillRect(0, 0, o / y, x / y), B.restore()), C) {
				var r = this.domBack;
				B.save(), B.globalAlpha = w, B.drawImage(r, 0, 0, o / y, x / y), B.restore()
			}
		}, j.merge(m.prototype, k.prototype), m
	}), h("zrender/shape/Text", ["require", "../tool/area", "./Base", "../tool/util"], function(k) {
		var j = k("../tool/area"),
			l = k("./Base"),
			a = function(i) {
				l.call(this, i)
			};
		return a.prototype = {
			type: "text",
			brush: function(y, t) {
				var w = this.style;
				if (t && (w = this.getHighlightStyle(w, this.highlightStyle || {})), "undefined" != typeof w.text && w.text !== !1) {
					y.save(), this.doClip(y), this.setContext(y, w), this.setTransform(y), w.textFont && (y.font = w.textFont), y.textAlign = w.textAlign || "start", y.textBaseline = w.textBaseline || "middle";
					var z, q = (w.text + "").split("\n"),
						p = j.getTextHeight("国", w.textFont),
						A = this.getRect(w),
						v = w.x;
					z = "top" == w.textBaseline ? A.y : "bottom" == w.textBaseline ? A.y + p : A.y + p / 2;
					for (var x = 0, u = q.length; u > x; x++) {
						if (w.maxWidth) {
							switch (w.brushType) {
								case "fill":
									y.fillText(q[x], v, z, w.maxWidth);
									break;
								case "stroke":
									y.strokeText(q[x], v, z, w.maxWidth);
									break;
								case "both":
									y.fillText(q[x], v, z, w.maxWidth), y.strokeText(q[x], v, z, w.maxWidth);
									break;
								default:
									y.fillText(q[x], v, z, w.maxWidth)
							}
						} else {
							switch (w.brushType) {
								case "fill":
									y.fillText(q[x], v, z);
									break;
								case "stroke":
									y.strokeText(q[x], v, z);
									break;
								case "both":
									y.fillText(q[x], v, z), y.strokeText(q[x], v, z);
									break;
								default:
									y.fillText(q[x], v, z)
							}
						}
						z += p
					}
					y.restore()
				}
			},
			getRect: function(q) {
				if (q.__rect) {
					return q.__rect
				}
				var s = j.getTextWidth(q.text, q.textFont),
					p = j.getTextHeight(q.text, q.textFont),
					m = q.x;
				"end" == q.textAlign || "right" == q.textAlign ? m -= s : "center" == q.textAlign && (m -= s / 2);
				var r;
				return r = "top" == q.textBaseline ? q.y : "bottom" == q.textBaseline ? q.y - p : q.y - p / 2, q.__rect = {
					x: m,
					y: r,
					width: s,
					height: p
				}, q.__rect
			}
		}, k("../tool/util").inherits(a, l), a
	}), h("zrender/shape/Rectangle", ["require", "./Base", "../tool/util"], function(i) {
		var a = i("./Base"),
			j = function(k) {
				a.call(this, k)
			};
		return j.prototype = {
			type: "rectangle",
			_buildRadiusPath: function(z, B) {
				var q, x, A, p, k = B.x,
					C = B.y,
					w = B.width,
					y = B.height,
					v = B.radius;
				"number" == typeof v ? q = x = A = p = v : v instanceof Array ? 1 === v.length ? q = x = A = p = v[0] : 2 === v.length ? (q = A = v[0], x = p = v[1]) : 3 === v.length ? (q = v[0], x = p = v[1], A = v[2]) : (q = v[0], x = v[1], A = v[2], p = v[3]) : q = x = A = p = 0;
				var u;
				q + x > w && (u = q + x, q *= w / u, x *= w / u), A + p > w && (u = A + p, A *= w / u, p *= w / u), x + A > y && (u = x + A, x *= y / u, A *= y / u), q + p > y && (u = q + p, q *= y / u, p *= y / u), z.moveTo(k + q, C), z.lineTo(k + w - x, C), 0 !== x && z.quadraticCurveTo(k + w, C, k + w, C + x), z.lineTo(k + w, C + y - A), 0 !== A && z.quadraticCurveTo(k + w, C + y, k + w - A, C + y), z.lineTo(k + p, C + y), 0 !== p && z.quadraticCurveTo(k, C + y, k, C + y - p), z.lineTo(k, C + q), 0 !== q && z.quadraticCurveTo(k, C, k + q, C)
			},
			buildPath: function(l, k) {
				k.radius ? this._buildRadiusPath(l, k) : (l.moveTo(k.x, k.y), l.lineTo(k.x + k.width, k.y), l.lineTo(k.x + k.width, k.y + k.height), l.lineTo(k.x, k.y + k.height), l.lineTo(k.x, k.y)), l.closePath()
			},
			getRect: function(l) {
				if (l.__rect) {
					return l.__rect
				}
				var k;
				return k = "stroke" == l.brushType || "fill" == l.brushType ? l.lineWidth || 1 : 0, l.__rect = {
					x: Math.round(l.x - k / 2),
					y: Math.round(l.y - k / 2),
					width: l.width + k,
					height: l.height + k
				}, l.__rect
			}
		}, i("../tool/util").inherits(j, a), j
	}), h("zrender/tool/area", ["require", "./util", "./curve"], function(al) {
		function T(a) {
			return a %= Z, 0 > a && (a += Z), a
		}

		function ad(p, i, v, u) {
			if (!i || !p) {
				return !1
			}
			var m = p.type;
			D = D || q.getContext();
			var k = ah(p, i, v, u);
			if ("undefined" != typeof k) {
				return k
			}
			if (p.buildPath && D.isPointInPath) {
				return ap(p, D, i, v, u)
			}
			switch (m) {
				case "ellipse":
					return !0;
				case "trochoid":
					var a = "out" == i.location ? i.r1 + i.r2 + i.d : i.r1 - i.r2 + i.d;
					return am(i, v, u, a);
				case "rose":
					return am(i, v, u, i.maxr);
				default:
					return !1
			}
		}

		function ah(s, p, w, m) {
			var k = s.type;
			switch (k) {
				case "bezier-curve":
					return "undefined" == typeof p.cpX2 ? af(p.xStart, p.yStart, p.cpX1, p.cpY1, p.xEnd, p.yEnd, p.lineWidth, w, m) : Y(p.xStart, p.yStart, p.cpX1, p.cpY1, p.cpX2, p.cpY2, p.xEnd, p.yEnd, p.lineWidth, w, m);
				case "line":
					return aa(p.xStart, p.yStart, p.xEnd, p.yEnd, p.lineWidth, w, m);
				case "polyline":
					return ae(p.pointList, p.lineWidth, w, m);
				case "ring":
					return z(p.x, p.y, p.r0, p.r, w, m);
				case "circle":
					return am(p.x, p.y, p.r, w, m);
				case "sector":
					var v = p.startAngle * Math.PI / 180,
						r = p.endAngle * Math.PI / 180;
					return p.clockWise || (v = -v, r = -r), ab(p.x, p.y, p.r0, p.r, v, r, !p.clockWise, w, m);
				case "path":
					return p.pathArray && ag(p.pathArray, Math.max(p.lineWidth, 5), p.brushType, w, m);
				case "polygon":
				case "star":
				case "isogon":
					return an(p.pointList, w, m);
				case "text":
					var l = p.__rect || s.getRect(p);
					return A(l.x, l.y, l.width, l.height, w, m);
				case "rectangle":
				case "image":
					return A(p.x, p.y, p.width, p.height, w, m)
			}
		}

		function ap(o, m, p, l, k) {
			return m.beginPath(), o.buildPath(m, p), m.closePath(), m.isPointInPath(l, k)
		}

		function ac(n, m, l, k) {
			return !ad(n, m, l, k)
		}

		function aa(E, J, u, y, I, p, k) {
			if (0 === I) {
				return !1
			}
			var K = Math.max(I, 5),
				x = 0,
				C = E;
			if (k > J + K && k > y + K || J - K > k && y - K > k || p > E + K && p > u + K || E - K > p && u - K > p) {
				return !1
			}
			if (E === u) {
				return Math.abs(p - E) <= K / 2
			}
			x = (J - y) / (E - u), C = (E * y - u * J) / (E - u);
			var w = x * p - k + C,
				v = w * w / (x * x + 1);
			return K / 2 * K / 2 >= v
		}

		function Y(I, K, u, C, J, p, k, L, y, E, w) {
			if (0 === y) {
				return !1
			}
			var v = Math.max(y, 5);
			if (w > K + v && w > C + v && w > p + v && w > L + v || K - v > w && C - v > w && p - v > w && L - v > w || E > I + v && E > u + v && E > J + v && E > k + v || I - v > E && u - v > E && J - v > E && k - v > E) {
				return !1
			}
			var x = j.cubicProjectPoint(I, K, u, C, J, p, k, L, E, w, null);
			return v / 2 >= x
		}

		function af(C, I, u, x, E, p, k, J, w) {
			if (0 === k) {
				return !1
			}
			var y = Math.max(k, 5);
			if (w > I + y && w > x + y && w > p + y || I - y > w && x - y > w && p - y > w || J > C + y && J > u + y && J > E + y || C - y > J && u - y > J && E - y > J) {
				return !1
			}
			var v = j.quadraticProjectPoint(C, I, u, x, E, p, J, w, null);
			return y / 2 >= v
		}

		function ai(E, t, y, J, p, k, K, x, C) {
			if (0 === K) {
				return !1
			}
			var v = Math.max(K, 5);
			x -= E, C -= t;
			var u = Math.sqrt(x * x + C * C);
			if (u - v > y || y > u + v) {
				return !1
			}
			if (Math.abs(J - p) >= Z) {
				return !0
			}
			if (k) {
				var w = J;
				J = T(p), p = T(w)
			} else {
				J = T(J), p = T(p)
			}
			J > p && (p += Z);
			var I = Math.atan2(C, x);
			return 0 > I && (I += Z), I >= J && p >= I || I + Z >= J && p >= I + Z
		}

		function ae(x, C, p, v) {
			for (var C = Math.max(C, 10), y = 0, k = x.length - 1; k > y; y++) {
				var E = x[y][0],
					u = x[y][1],
					w = x[y + 1][0],
					r = x[y + 1][1];
				if (aa(E, u, w, r, C, p, v)) {
					return !0
				}
			}
			return !1
		}

		function z(s, m, v, l, k, u) {
			var p = (k - s) * (k - s) + (u - m) * (u - m);
			return l * l > p && p > v * v
		}

		function A(p, m, s, l, k, r) {
			return k >= p && p + s >= k && r >= m && m + l >= r
		}

		function am(o, m, p, l, k) {
			return p * p > (l - o) * (l - o) + (k - m) * (k - m)
		}

		function ab(w, y, p, v, x, m, k, C, u) {
			return ai(w, y, (p + v) / 2, x, m, k, v - p, C, u)
		}

		function an(C, I, u) {
			for (var x = C.length, E = 0, p = 0, k = x - 1; x > p; p++) {
				var J = C[k][0],
					w = C[k][1],
					y = C[p][0],
					v = C[p][1];
				E += Q(J, w, y, v, I, u), k = p
			}
			return 0 !== E
		}

		function Q(w, y, p, v, x, m) {
			if (m > y && m > v || y > m && v > m) {
				return 0
			}
			if (v == y) {
				return 0
			}
			var k = y > v ? 1 : -1,
				C = (m - y) / (v - y),
				u = C * (p - w) + w;
			return u > x ? k : 0
		}

		function H() {
			var a = R[0];
			R[0] = R[1], R[1] = a
		}

		function aj(ar, x, J, S, av, I, C, y, L, W) {
			if (W > x && W > S && W > I && W > y || x > W && S > W && I > W && y > W) {
				return 0
			}
			var K = j.cubicRootAt(x, S, I, y, W, B);
			if (0 === K) {
				return 0
			}
			for (var k, v, at = 0, E = -1, au = 0; K > au; au++) {
				var w = B[au],
					X = j.cubicAt(ar, J, av, C, w);
				L > X || (0 > E && (E = j.cubicExtrema(x, S, I, y, R), R[1] < R[0] && E > 1 && H(), k = j.cubicAt(x, S, I, y, R[0]), E > 1 && (v = j.cubicAt(x, S, I, y, R[1]))), at += 2 == E ? w < R[0] ? x > k ? 1 : -1 : w < R[1] ? k > v ? 1 : -1 : v > y ? 1 : -1 : w < R[0] ? x > k ? 1 : -1 : k > y ? 1 : -1)
			}
			return at
		}

		function ao(I, L, u, C, K, p, k, S) {
			if (S > L && S > C && S > p || L > S && C > S && p > S) {
				return 0
			}
			var y = j.quadraticRootAt(L, C, p, S, B);
			if (0 === y) {
				return 0
			}
			var E = j.quadraticExtremum(L, C, p);
			if (E >= 0 && 1 >= E) {
				for (var w = 0, v = j.quadraticAt(L, C, p, E), x = 0; y > x; x++) {
					var J = j.quadraticAt(I, u, K, B[x]);
					J > k || (w += B[x] < E ? L > v ? 1 : -1 : v > p ? 1 : -1)
				}
				return w
			}
			var J = j.quadraticAt(I, u, K, B[0]);
			return J > k ? 0 : L > p ? 1 : -1
		}

		function ak(J, v, E, L, u, k, S, C) {
			if (C -= v, C > E || -E > C) {
				return 0
			}
			var I = Math.sqrt(E * E - C * C);
			if (B[0] = -I, B[1] = I, Math.abs(L - u) >= Z) {
				L = 0, u = Z;
				var x = k ? 1 : -1;
				return S >= B[0] + J && S <= B[1] + J ? x : 0
			}
			if (k) {
				var I = L;
				L = T(u), u = T(I)
			} else {
				L = T(L), u = T(u)
			}
			L > u && (u += Z);
			for (var w = 0, y = 0; 2 > y; y++) {
				var K = B[y];
				if (K + J > S) {
					var t = Math.atan2(C, K),
						x = k ? 1 : -1;
					0 > t && (t = Z + t), (t >= L && u >= t || t + Z >= L && u >= t + Z) && (t > Math.PI / 2 && t < 1.5 * Math.PI && (x = -x), w += x)
				}
			}
			return w
		}

		function ag(aI, aA, aE, aH, aL) {
			var aD = 0,
				aF = 0,
				s = 0,
				u = 0,
				aJ = 0,
				aC = !0,
				aK = !0;
			aE = aE || "fill";
			for (var av = "stroke" === aE || "both" === aE, aG = "fill" === aE || "both" === aE, ax = 0; ax < aI.length; ax++) {
				var aM = aI[ax],
					ar = aM.points;
				if (aC || "M" === aM.command) {
					if (ax > 0 && (aG && (aD += Q(aF, s, u, aJ, aH, aL)), 0 !== aD)) {
						return !0
					}
					u = ar[ar.length - 2], aJ = ar[ar.length - 1], aC = !1, aK && "A" !== aM.command && (aK = !1, aF = u, s = aJ)
				}
				switch (aM.command) {
					case "M":
						aF = ar[0], s = ar[1];
						break;
					case "L":
						if (av && aa(aF, s, ar[0], ar[1], aA, aH, aL)) {
							return !0
						}
						aG && (aD += Q(aF, s, ar[0], ar[1], aH, aL)), aF = ar[0], s = ar[1];
						break;
					case "C":
						if (av && Y(aF, s, ar[0], ar[1], ar[2], ar[3], ar[4], ar[5], aA, aH, aL)) {
							return !0
						}
						aG && (aD += aj(aF, s, ar[0], ar[1], ar[2], ar[3], ar[4], ar[5], aH, aL)), aF = ar[4], s = ar[5];
						break;
					case "Q":
						if (av && af(aF, s, ar[0], ar[1], ar[2], ar[3], aA, aH, aL)) {
							return !0
						}
						aG && (aD += ao(aF, s, ar[0], ar[1], ar[2], ar[3], aH, aL)), aF = ar[2], s = ar[3];
						break;
					case "A":
						var r = ar[0],
							l = ar[1],
							at = ar[2],
							ay = ar[3],
							aw = ar[4],
							az = ar[5],
							au = Math.cos(aw) * at + r,
							aB = Math.sin(aw) * ay + l;
						aK ? (aK = !1, u = au, aJ = aB) : aD += Q(aF, s, au, aB);
						var E = (aH - r) * ay / at + r;
						if (av && ai(r, l, ay, aw, aw + az, 1 - ar[7], aA, E, aL)) {
							return !0
						}
						aG && (aD += ak(r, l, ay, aw, aw + az, 1 - ar[7], E, aL)), aF = Math.cos(aw + az) * at + r, s = Math.sin(aw + az) * ay + l;
						break;
					case "z":
						if (av && aa(aF, s, u, aJ, aA, aH, aL)) {
							return !0
						}
						aC = !0
				}
			}
			return aG && (aD += Q(aF, s, u, aJ, aH, aL)), 0 !== aD
		}

		function N(p, m) {
			var s = p + ":" + m;
			if (F[s]) {
				return F[s]
			}
			D = D || q.getContext(), D.save(), m && (D.font = m), p = (p + "").split("\n");
			for (var l = 0, k = 0, r = p.length; r > k; k++) {
				l = Math.max(D.measureText(p[k]).width, l)
			}
			return D.restore(), F[s] = l, ++M > G && (M = 0, F = {}), l
		}

		function aq(l, k) {
			var m = l + ":" + k;
			if (O[m]) {
				return O[m]
			}
			D = D || q.getContext(), D.save(), k && (D.font = k), l = (l + "").split("\n");
			var a = (D.measureText("国").width + 2) * l.length;
			return D.restore(), O[m] = a, ++P > G && (P = 0, O = {}), a
		}
		var D, q = al("./util"),
			j = al("./curve"),
			F = {},
			O = {},
			M = 0,
			P = 0,
			G = 5000,
			Z = 2 * Math.PI,
			B = [-1, -1, -1],
			R = [-1, -1];
		return {
			isInside: ad,
			isOutside: ac,
			getTextWidth: N,
			getTextHeight: aq,
			isInsidePath: ag,
			isInsidePolygon: an,
			isInsideSector: ab,
			isInsideCircle: am,
			isInsideLine: aa,
			isInsideRect: A,
			isInsidePolyline: ae,
			isInsideCubicStroke: Y,
			isInsideQuadraticStroke: af
		}
	}), h("zrender/shape/Base", ["require", "../tool/matrix", "../tool/guid", "../tool/util", "../tool/log", "../mixin/Transformable", "../mixin/Eventful", "../tool/area", "../tool/color"], function(z) {
		function B(K, H, J, n, e, L, G) {
			e && (K.font = e), K.textAlign = L, K.textBaseline = G;
			var I = p(H, J, n, e, L, G);
			H = (H + "").split("\n");
			var E = z("../tool/area").getTextHeight("国", e);
			switch (G) {
				case "top":
					n = I.y;
					break;
				case "bottom":
					n = I.y + E;
					break;
				default:
					n = I.y + E / 2
			}
			for (var D = 0, F = H.length; F > D; D++) {
				K.fillText(H[D], J, n), n += E
			}
		}

		function p(I, D, F, H, m, e) {
			var J = z("../tool/area"),
				E = J.getTextWidth(I, H),
				G = J.getTextHeight("国", H);
			switch (I = (I + "").split("\n"), m) {
				case "end":
				case "right":
					D -= E;
					break;
				case "center":
					D -= E / 2
			}
			switch (e) {
				case "top":
					break;
				case "bottom":
					F -= G * I.length;
					break;
				default:
					F -= G * I.length / 2
			}
			return {
				x: D,
				y: F,
				width: E,
				height: G * I.length
			}
		}
		var x = window.G_vmlCanvasManager,
			A = z("../tool/matrix"),
			k = z("../tool/guid"),
			j = z("../tool/util"),
			C = z("../tool/log"),
			w = z("../mixin/Transformable"),
			y = z("../mixin/Eventful"),
			u = function(i) {
				i = i || {}, this.id = i.id || k();
				for (var a in i) {
					this[a] = i[a]
				}
				this.style = this.style || {}, this.highlightStyle = this.highlightStyle || null, this.parent = null, this.__dirty = !0, this.__clipShapes = [], w.call(this), y.call(this)
			};
		u.prototype.invisible = !1, u.prototype.ignore = !1, u.prototype.zlevel = 0, u.prototype.draggable = !1, u.prototype.clickable = !1, u.prototype.hoverable = !0, u.prototype.z = 0, u.prototype.brush = function(i, a) {
			var l = this.beforeBrush(i, a);
			switch (i.beginPath(), this.buildPath(i, l), l.brushType) {
				case "both":
					i.fill();
				case "stroke":
					l.lineWidth > 0 && i.stroke();
					break;
				default:
					i.fill()
			}
			this.drawText(i, l, this.style), this.afterBrush(i)
		}, u.prototype.beforeBrush = function(i, a) {
			var l = this.style;
			return this.brushTypeOnly && (l.brushType = this.brushTypeOnly), a && (l = this.getHighlightStyle(l, this.highlightStyle || {}, this.brushTypeOnly)), "stroke" == this.brushTypeOnly && (l.strokeColor = l.strokeColor || l.color), i.save(), this.doClip(i), this.setContext(i, l), this.setTransform(i), l
		}, u.prototype.afterBrush = function(a) {
			a.restore()
		};
		var q = [
			["color", "fillStyle"],
			["strokeColor", "strokeStyle"],
			["opacity", "globalAlpha"],
			["lineCap", "lineCap"],
			["lineJoin", "lineJoin"],
			["miterLimit", "miterLimit"],
			["lineWidth", "lineWidth"],
			["shadowBlur", "shadowBlur"],
			["shadowColor", "shadowColor"],
			["shadowOffsetX", "shadowOffsetX"],
			["shadowOffsetY", "shadowOffsetY"]
		];
		u.prototype.setContext = function(E, s) {
			for (var G = 0, m = q.length; m > G; G++) {
				var l = q[G][0],
					F = s[l],
					D = q[G][1];
				"undefined" != typeof F && (E[D] = F)
			}
		};
		var v = A.create();
		return u.prototype.doClip = function(i) {
			if (this.__clipShapes && !x) {
				for (var a = 0; a < this.__clipShapes.length; a++) {
					var m = this.__clipShapes[a];
					if (m.needTransform) {
						var l = m.transform;
						A.invert(v, l), i.transform(l[0], l[1], l[2], l[3], l[4], l[5])
					}
					if (i.beginPath(), m.buildPath(i, m.style), i.clip(), m.needTransform) {
						var l = v;
						i.transform(l[0], l[1], l[2], l[3], l[4], l[5])
					}
				}
			}
		}, u.prototype.getHighlightStyle = function(m, G, l) {
			var e = {};
			for (var F in m) {
				e[F] = m[F]
			}
			var E = z("../tool/color"),
				D = E.getHighlightColor();
			"stroke" != m.brushType ? (e.strokeColor = D, e.lineWidth = (m.lineWidth || 1) + this.getHighlightZoom(), e.brushType = "both") : "stroke" != l ? (e.strokeColor = D, e.lineWidth = (m.lineWidth || 1) + this.getHighlightZoom()) : e.strokeColor = G.strokeColor || E.mix(m.strokeColor, E.toRGB(D));
			for (var F in G) {
				"undefined" != typeof G[F] && (e[F] = G[F])
			}
			return e
		}, u.prototype.getHighlightZoom = function() {
			return "text" != this.type ? 6 : 2
		}, u.prototype.drift = function(i, a) {
			this.position[0] += i, this.position[1] += a
		}, u.prototype.getTansform = function() {
			var a = [];
			return function(l, m) {
				var e = [l, m];
				return this.needTransform && this.transform && (A.invert(a, this.transform), A.mulVector(e, a, [l, m, 1]), l == e[0] && m == e[1] && this.updateNeedTransform()), e
			}
		}(), u.prototype.buildPath = function() {
			C("buildPath not implemented in " + this.type)
		}, u.prototype.getRect = function() {
			C("getRect not implemented in " + this.type)
		}, u.prototype.isCover = function(m, o) {
			var l = this.getTansform(m, o);
			m = l[0], o = l[1];
			var e = this.style.__rect;
			return e || (e = this.style.__rect = this.getRect(this.style)), m >= e.x && m <= e.x + e.width && o >= e.y && o <= e.y + e.height ? z("../tool/area").isInside(this, this.style, m, o) : !1
		}, u.prototype.drawText = function(Q, K, N) {
			if ("undefined" != typeof K.text && K.text !== !1) {
				var T = K.textColor || K.color || K.strokeColor;
				Q.fillStyle = T;
				var J, H, G, M, O = 10,
					L = K.textPosition || this.textPosition || "top";
				switch (L) {
					case "inside":
					case "top":
					case "bottom":
					case "left":
					case "right":
						if (this.getRect) {
							var t = (N || K).__rect || this.getRect(N || K);
							switch (L) {
								case "inside":
									G = t.x + t.width / 2, M = t.y + t.height / 2, J = "center", H = "middle", "stroke" != K.brushType && T == K.color && (Q.fillStyle = "#fff");
									break;
								case "left":
									G = t.x - O, M = t.y + t.height / 2, J = "end", H = "middle";
									break;
								case "right":
									G = t.x + t.width + O, M = t.y + t.height / 2, J = "start", H = "middle";
									break;
								case "top":
									G = t.x + t.width / 2, M = t.y - O, J = "center", H = "bottom";
									break;
								case "bottom":
									G = t.x + t.width / 2, M = t.y + t.height + O, J = "center", H = "top"
							}
						}
						break;
					case "start":
					case "end":
						var D = K.pointList || [
								[K.xStart || 0, K.yStart || 0],
								[K.xEnd || 0, K.yEnd || 0]
							],
							R = D.length;
						if (2 > R) {
							return
						}
						var I, S, F, E;
						switch (L) {
							case "start":
								I = D[1][0], S = D[0][0], F = D[1][1], E = D[0][1];
								break;
							case "end":
								I = D[R - 2][0], S = D[R - 1][0], F = D[R - 2][1], E = D[R - 1][1]
						}
						G = S, M = E;
						var P = Math.atan((F - E) / (S - I)) / Math.PI * 180;
						0 > S - I ? P += 180 : 0 > F - E && (P += 360), O = 5, P >= 30 && 150 >= P ? (J = "center", H = "bottom", M -= O) : P > 150 && 210 > P ? (J = "right", H = "middle", G -= O) : P >= 210 && 330 >= P ? (J = "center", H = "top", M += O) : (J = "left", H = "middle", G += O);
						break;
					case "specific":
						G = K.textX || 0, M = K.textY || 0, J = "start", H = "middle"
				}
				null != G && null != M && B(Q, K.text, G, M, K.textFont, K.textAlign || J, K.textBaseline || H)
			}
		}, u.prototype.modSelf = function() {
			this.__dirty = !0, this.style && (this.style.__rect = null), this.highlightStyle && (this.highlightStyle.__rect = null)
		}, u.prototype.isSilent = function() {
			return !(this.hoverable || this.draggable || this.clickable || this.onmousemove || this.onmouseover || this.onmouseout || this.onmousedown || this.onmouseup || this.onclick || this.ondragenter || this.ondragover || this.ondragleave || this.ondrop)
		}, j.merge(u.prototype, w.prototype, !0), j.merge(u.prototype, y.prototype, !0), u
	}), h("zrender/tool/curve", ["require", "./vector"], function(J) {
		function w(a) {
			return a > -L && L > a
		}

		function C(a) {
			return a > L || -L > a
		}

		function F(r, p, u, m, l) {
			var s = 1 - l;
			return s * s * (s * r + 3 * l * p) + l * l * (l * m + 3 * s * u)
		}

		function N(r, p, u, m, l) {
			var s = 1 - l;
			return 3 * (((p - r) * s + 2 * (u - p) * l) * s + (m - u) * l * l)
		}

		function B(aj, ab, af, an, aa, Y) {
			var T = an + 3 * (ab - af) - aj,
				ad = 3 * (af - 2 * ab + aj),
				ag = 3 * (ab - aj),
				ac = aj - aa,
				y = ad * ad - 3 * T * ag,
				O = ad * ag - 9 * T * ac,
				ak = ag * ag - 3 * ad * ac,
				Z = 0;
			if (w(y) && w(O)) {
				if (w(ad)) {
					Y[0] = 0
				} else {
					var al = -ag / ad;
					al >= 0 && 1 >= al && (Y[Z++] = al)
				}
			} else {
				var ah = O * O - 4 * y * ak;
				if (w(ah)) {
					var am = O / y,
						al = -ad / T + am,
						ai = -am / 2;
					al >= 0 && 1 >= al && (Y[Z++] = al), ai >= 0 && 1 >= ai && (Y[Z++] = ai)
				} else {
					if (ah > 0) {
						var ae = Math.sqrt(ah),
							R = y * ad + 1.5 * T * (-O + ae),
							ao = y * ad + 1.5 * T * (-O - ae);
						R = 0 > R ? -Math.pow(-R, q) : Math.pow(R, q), ao = 0 > ao ? -Math.pow(-ao, q) : Math.pow(ao, q);
						var al = (-ad - (R + ao)) / (3 * T);
						al >= 0 && 1 >= al && (Y[Z++] = al)
					} else {
						var P = (2 * y * ad - 3 * T * O) / (2 * Math.sqrt(y * y * y)),
							u = Math.acos(P) / 3,
							t = Math.sqrt(y),
							Q = Math.cos(u),
							al = (-ad - 2 * t * Q) / (3 * T),
							ai = (-ad + t * (Q + v * Math.sin(u))) / (3 * T),
							S = (-ad + t * (Q - v * Math.sin(u))) / (3 * T);
						al >= 0 && 1 >= al && (Y[Z++] = al), ai >= 0 && 1 >= ai && (Y[Z++] = ai), S >= 0 && 1 >= S && (Y[Z++] = S)
					}
				}
			}
			return Z
		}

		function z(T, R, X, u, n) {
			var Y = 6 * X - 12 * R + 6 * T,
				Q = 9 * R + 3 * u - 3 * T - 9 * X,
				S = 3 * R - 3 * T,
				O = 0;
			if (w(Q)) {
				if (C(Y)) {
					var y = -S / Y;
					y >= 0 && 1 >= y && (n[O++] = y)
				}
			} else {
				var P = Y * Y - 4 * Q * S;
				if (w(P)) {
					n[0] = -Y / (2 * Q)
				} else {
					if (P > 0) {
						var W = Math.sqrt(P),
							y = (-Y + W) / (2 * Q),
							t = (-Y - W) / (2 * Q);
						y >= 0 && 1 >= y && (n[O++] = y), t >= 0 && 1 >= t && (n[O++] = t)
					}
				}
			}
			return O
		}

		function x(T, W, y, R, U, u) {
			var p = (W - T) * U + T,
				X = (y - W) * U + W,
				Q = (R - y) * U + y,
				S = (X - p) * U + p,
				P = (Q - X) * U + X,
				O = (P - S) * U + S;
			u[0] = T, u[1] = p, u[2] = S, u[3] = O, u[4] = O, u[5] = P, u[6] = Q, u[7] = R
		}

		function E(af, T, aa, ah, Z, Y, X, ac, ae, ab, p) {
			var O, ag = 0.005,
				S = 1 / 0;
			H[0] = ae, H[1] = ab;
			for (var Q = 0; 1 > Q; Q += 0.05) {
				M[0] = F(af, aa, Z, X, Q), M[1] = F(T, ah, Y, ac, Q);
				var ad = A.distSquare(H, M);
				S > ad && (O = Q, S = ad)
			}
			S = 1 / 0;
			for (var R = 0; 32 > R && !(L > ag); R++) {
				var ai = O - ag,
					P = O + ag;
				M[0] = F(af, aa, Z, X, ai), M[1] = F(T, ah, Y, ac, ai);
				var ad = A.distSquare(M, H);
				if (ai >= 0 && S > ad) {
					O = ai, S = ad
				} else {
					I[0] = F(af, aa, Z, X, P), I[1] = F(T, ah, Y, ac, P);
					var i = A.distSquare(I, H);
					1 >= P && S > i ? (O = P, S = i) : ag *= 0.5
				}
			}
			return p && (p[0] = F(af, aa, Z, X, O), p[1] = F(T, ah, Y, ac, O)), Math.sqrt(S)
		}

		function G(p, o, r, m) {
			var l = 1 - m;
			return l * (l * p + 2 * m * o) + m * m * r
		}

		function D(m, l, o, a) {
			return 2 * ((1 - a) * (l - m) + a * (o - l))
		}

		function j(T, R, X, u, n) {
			var Y = T - 2 * R + X,
				Q = 2 * (R - T),
				S = T - u,
				O = 0;
			if (w(Y)) {
				if (C(Q)) {
					var y = -S / Q;
					y >= 0 && 1 >= y && (n[O++] = y)
				}
			} else {
				var P = Q * Q - 4 * Y * S;
				if (w(P)) {
					var y = -Q / (2 * Y);
					y >= 0 && 1 >= y && (n[O++] = y)
				} else {
					if (P > 0) {
						var W = Math.sqrt(P),
							y = (-Q + W) / (2 * Y),
							t = (-Q - W) / (2 * Y);
						y >= 0 && 1 >= y && (n[O++] = y), t >= 0 && 1 >= t && (n[O++] = t)
					}
				}
			}
			return O
		}

		function k(m, l, o) {
			var a = m + o - 2 * l;
			return 0 === a ? 0.5 : (m - l) / a
		}

		function K(ad, S, Y, ac, af, X, W, T, aa) {
			var Z, p = 0.005,
				O = 1 / 0;
			H[0] = W, H[1] = T;
			for (var ae = 0; 1 > ae; ae += 0.05) {
				M[0] = G(ad, Y, af, ae), M[1] = G(S, ac, X, ae);
				var R = A.distSquare(H, M);
				O > R && (Z = ae, O = R)
			}
			O = 1 / 0;
			for (var P = 0; 32 > P && !(L > p); P++) {
				var ab = Z - p,
					Q = Z + p;
				M[0] = G(ad, Y, af, ab), M[1] = G(S, ac, X, ab);
				var R = A.distSquare(M, H);
				if (ab >= 0 && O > R) {
					Z = ab, O = R
				} else {
					I[0] = G(ad, Y, af, Q), I[1] = G(S, ac, X, Q);
					var ag = A.distSquare(I, H);
					1 >= Q && O > ag ? (Z = Q, O = ag) : p *= 0.5
				}
			}
			return aa && (aa[0] = G(ad, Y, af, Z), aa[1] = G(S, ac, X, Z)), Math.sqrt(O)
		}
		var A = J("./vector"),
			L = 0.0001,
			v = Math.sqrt(3),
			q = 1 / 3,
			H = A.create(),
			M = A.create(),
			I = A.create();
		return {
			cubicAt: F,
			cubicDerivativeAt: N,
			cubicRootAt: B,
			cubicExtrema: z,
			cubicSubdivide: x,
			cubicProjectPoint: E,
			quadraticAt: G,
			quadraticDerivativeAt: D,
			quadraticRootAt: j,
			quadraticExtremum: k,
			quadraticProjectPoint: K
		}
	}), h("zrender/mixin/Transformable", ["require", "../tool/matrix", "../tool/vector"], function(q) {
		function l(a) {
			return a > -p && p > a
		}

		function v(a) {
			return a > p || -p > a
		}
		var k = q("../tool/matrix"),
			j = q("../tool/vector"),
			u = [0, 0],
			p = 0.00005,
			m = function() {
				this.position || (this.position = [0, 0]), "undefined" == typeof this.rotation && (this.rotation = [0, 0, 0]), this.scale || (this.scale = [1, 1, 0, 0]), this.needLocalTransform = !1, this.needTransform = !1
			};
		return m.prototype = {
			constructor: m,
			updateNeedTransform: function() {
				this.needLocalTransform = v(this.rotation[0]) || v(this.position[0]) || v(this.position[1]) || v(this.scale[0] - 1) || v(this.scale[1] - 1)
			},
			updateTransform: function() {
				if (this.updateNeedTransform(), this.needTransform = this.parent ? this.needLocalTransform || this.parent.needTransform : this.needLocalTransform, this.needTransform) {
					var i = this.transform || k.create();
					if (k.identity(i), this.needLocalTransform) {
						if (v(this.scale[0]) || v(this.scale[1])) {
							u[0] = -this.scale[2] || 0, u[1] = -this.scale[3] || 0;
							var a = v(u[0]) || v(u[1]);
							a && k.translate(i, i, u), k.scale(i, i, this.scale), a && (u[0] = -u[0], u[1] = -u[1], k.translate(i, i, u))
						}
						if (this.rotation instanceof Array) {
							if (0 !== this.rotation[0]) {
								u[0] = -this.rotation[1] || 0, u[1] = -this.rotation[2] || 0;
								var a = v(u[0]) || v(u[1]);
								a && k.translate(i, i, u), k.rotate(i, i, this.rotation[0]), a && (u[0] = -u[0], u[1] = -u[1], k.translate(i, i, u))
							}
						} else {
							0 !== this.rotation && k.rotate(i, i, this.rotation)
						}(v(this.position[0]) || v(this.position[1])) && k.translate(i, i, this.position)
					}
					this.transform = i, this.parent && this.parent.needTransform && (this.needLocalTransform ? k.mul(this.transform, this.parent.transform, this.transform) : k.copy(this.transform, this.parent.transform))
				}
			},
			setTransform: function(i) {
				if (this.needTransform) {
					var a = this.transform;
					i.transform(a[0], a[1], a[2], a[3], a[4], a[5])
				}
			},
			lookAt: function() {
				var a = j.create();
				return function(i) {
					this.transform || (this.transform = k.create());
					var e = this.transform;
					j.sub(a, i, this.position), l(a[0]) && l(a[1]) || (j.normalize(a, a), e[2] = a[0] * this.scale[1], e[3] = a[1] * this.scale[1], e[0] = a[1] * this.scale[0], e[1] = -a[0] * this.scale[0], e[4] = this.position[0], e[5] = this.position[1], this.decomposeTransform())
				}
			}(),
			decomposeTransform: function() {
				if (this.transform) {
					var y = this.transform,
						w = y[0] * y[0] + y[1] * y[1],
						s = this.position,
						n = this.scale,
						z = this.rotation;
					v(w - 1) && (w = Math.sqrt(w));
					var x = y[2] * y[2] + y[3] * y[3];
					v(x - 1) && (x = Math.sqrt(x)), s[0] = y[4], s[1] = y[5], n[0] = w, n[1] = x, n[2] = n[3] = 0, z[0] = Math.atan2(-y[1] / x, y[0] / w), z[1] = z[2] = 0
				}
			}
		}, m
	}), h("zrender/Group", ["require", "./tool/guid", "./tool/util", "./mixin/Transformable", "./mixin/Eventful"], function(m) {
		var l = m("./tool/guid"),
			q = m("./tool/util"),
			k = m("./mixin/Transformable"),
			j = m("./mixin/Eventful"),
			p = function(a) {
				a = a || {}, this.id = a.id || l();
				for (var i in a) {
					this[i] = a[i]
				}
				this.type = "group", this.clipShape = null, this._children = [], this._storage = null, this.__dirty = !0, k.call(this), j.call(this)
			};
		return p.prototype.ignore = !1, p.prototype.children = function() {
			return this._children.slice()
		}, p.prototype.childAt = function(a) {
			return this._children[a]
		}, p.prototype.addChild = function(a) {
			a != this && a.parent != this && (a.parent && a.parent.removeChild(a), this._children.push(a), a.parent = this, this._storage && this._storage !== a._storage && (this._storage.addToMap(a), a instanceof p && a.addChildrenToStorage(this._storage)))
		}, p.prototype.removeChild = function(i) {
			var a = q.indexOf(this._children, i);
			this._children.splice(a, 1), i.parent = null, this._storage && (this._storage.delFromMap(i.id), i instanceof p && i.delChildrenFromStorage(this._storage))
		}, p.prototype.clearChildren = function() {
			for (var i = 0; i < this._children.length; i++) {
				var a = this._children[i];
				this._storage && (this._storage.delFromMap(a.id), a instanceof p && a.delChildrenFromStorage(this._storage))
			}
			this._children.length = 0
		}, p.prototype.eachChild = function(u, s) {
			for (var v = !!s, r = 0; r < this._children.length; r++) {
				var o = this._children[r];
				v ? u.call(s, o) : u(o)
			}
		}, p.prototype.traverse = function(u, s) {
			for (var v = !!s, r = 0; r < this._children.length; r++) {
				var o = this._children[r];
				v ? u.call(s, o) : u(o), "group" === o.type && o.traverse(u, s)
			}
		}, p.prototype.addChildrenToStorage = function(i) {
			for (var a = 0; a < this._children.length; a++) {
				var o = this._children[a];
				i.addToMap(o), o instanceof p && o.addChildrenToStorage(i)
			}
		}, p.prototype.delChildrenFromStorage = function(i) {
			for (var a = 0; a < this._children.length; a++) {
				var o = this._children[a];
				i.delFromMap(o.id), o instanceof p && o.delChildrenFromStorage(i)
			}
		}, p.prototype.modSelf = function() {
			this.__dirty = !0
		}, q.merge(p.prototype, k.prototype, !0), q.merge(p.prototype, j.prototype, !0), p
	}), h("zrender/animation/Clip", ["require", "./easing"], function(i) {
		function a(k) {
			this._targetPool = k.target || {}, this._targetPool instanceof Array || (this._targetPool = [this._targetPool]), this._life = k.life || 1000, this._delay = k.delay || 0, this._startTime = (new Date).getTime() + this._delay, this._endTime = this._startTime + 1000 * this._life, this.loop = "undefined" == typeof k.loop ? !1 : k.loop, this.gap = k.gap || 0, this.easing = k.easing || "Linear", this.onframe = k.onframe, this.ondestroy = k.ondestroy, this.onrestart = k.onrestart
		}
		var j = i("./easing");
		return a.prototype = {
			step: function(n) {
				var m = (n - this._startTime) / this._life;
				if (!(0 > m)) {
					m = Math.min(m, 1);
					var l = "string" == typeof this.easing ? j[this.easing] : this.easing,
						k = "function" == typeof l ? l(m) : m;
					return this.fire("frame", k), 1 == m ? this.loop ? (this.restart(), "restart") : (this._needsRemove = !0, "destroy") : null
				}
			},
			restart: function() {
				var l = (new Date).getTime(),
					k = (l - this._startTime) % this._life;
				this._startTime = (new Date).getTime() - k + this.gap, this._needsRemove = !1
			},
			fire: function(m, l) {
				for (var o = 0, k = this._targetPool.length; k > o; o++) {
					this["on" + m] && this["on" + m](this._targetPool[o], l)
				}
			},
			constructor: a
		}, a
	}), h("zrender/animation/easing", [], function() {
		var a = {
			Linear: function(i) {
				return i
			},
			QuadraticIn: function(i) {
				return i * i
			},
			QuadraticOut: function(i) {
				return i * (2 - i)
			},
			QuadraticInOut: function(i) {
				return (i *= 2) < 1 ? 0.5 * i * i : -0.5 * (--i * (i - 2) - 1)
			},
			CubicIn: function(i) {
				return i * i * i
			},
			CubicOut: function(i) {
				return --i * i * i + 1
			},
			CubicInOut: function(i) {
				return (i *= 2) < 1 ? 0.5 * i * i * i : 0.5 * ((i -= 2) * i * i + 2)
			},
			QuarticIn: function(i) {
				return i * i * i * i
			},
			QuarticOut: function(i) {
				return 1 - --i * i * i * i
			},
			QuarticInOut: function(i) {
				return (i *= 2) < 1 ? 0.5 * i * i * i * i : -0.5 * ((i -= 2) * i * i * i - 2)
			},
			QuinticIn: function(i) {
				return i * i * i * i * i
			},
			QuinticOut: function(i) {
				return --i * i * i * i * i + 1
			},
			QuinticInOut: function(i) {
				return (i *= 2) < 1 ? 0.5 * i * i * i * i * i : 0.5 * ((i -= 2) * i * i * i * i + 2)
			},
			SinusoidalIn: function(i) {
				return 1 - Math.cos(i * Math.PI / 2)
			},
			SinusoidalOut: function(i) {
				return Math.sin(i * Math.PI / 2)
			},
			SinusoidalInOut: function(i) {
				return 0.5 * (1 - Math.cos(Math.PI * i))
			},
			ExponentialIn: function(i) {
				return 0 === i ? 0 : Math.pow(1024, i - 1)
			},
			ExponentialOut: function(i) {
				return 1 === i ? 1 : 1 - Math.pow(2, -10 * i)
			},
			ExponentialInOut: function(i) {
				return 0 === i ? 0 : 1 === i ? 1 : (i *= 2) < 1 ? 0.5 * Math.pow(1024, i - 1) : 0.5 * (-Math.pow(2, -10 * (i - 1)) + 2)
			},
			CircularIn: function(i) {
				return 1 - Math.sqrt(1 - i * i)
			},
			CircularOut: function(i) {
				return Math.sqrt(1 - --i * i)
			},
			CircularInOut: function(i) {
				return (i *= 2) < 1 ? -0.5 * (Math.sqrt(1 - i * i) - 1) : 0.5 * (Math.sqrt(1 - (i -= 2) * i) + 1)
			},
			ElasticIn: function(l) {
				var k, m = 0.1,
					j = 0.4;
				return 0 === l ? 0 : 1 === l ? 1 : (!m || 1 > m ? (m = 1, k = j / 4) : k = j * Math.asin(1 / m) / (2 * Math.PI), -(m * Math.pow(2, 10 * (l -= 1)) * Math.sin(2 * (l - k) * Math.PI / j)))
			},
			ElasticOut: function(l) {
				var k, m = 0.1,
					j = 0.4;
				return 0 === l ? 0 : 1 === l ? 1 : (!m || 1 > m ? (m = 1, k = j / 4) : k = j * Math.asin(1 / m) / (2 * Math.PI), m * Math.pow(2, -10 * l) * Math.sin(2 * (l - k) * Math.PI / j) + 1)
			},
			ElasticInOut: function(l) {
				var k, m = 0.1,
					j = 0.4;
				return 0 === l ? 0 : 1 === l ? 1 : (!m || 1 > m ? (m = 1, k = j / 4) : k = j * Math.asin(1 / m) / (2 * Math.PI), (l *= 2) < 1 ? -0.5 * m * Math.pow(2, 10 * (l -= 1)) * Math.sin(2 * (l - k) * Math.PI / j) : m * Math.pow(2, -10 * (l -= 1)) * Math.sin(2 * (l - k) * Math.PI / j) * 0.5 + 1)
			},
			BackIn: function(j) {
				var i = 1.70158;
				return j * j * ((i + 1) * j - i)
			},
			BackOut: function(j) {
				var i = 1.70158;
				return --j * j * ((i + 1) * j + i) + 1
			},
			BackInOut: function(j) {
				var i = 2.5949095;
				return (j *= 2) < 1 ? 0.5 * j * j * ((i + 1) * j - i) : 0.5 * ((j -= 2) * j * ((i + 1) * j + i) + 2)
			},
			BounceIn: function(e) {
				return 1 - a.BounceOut(1 - e)
			},
			BounceOut: function(i) {
				return 1 / 2.75 > i ? 7.5625 * i * i : 2 / 2.75 > i ? 7.5625 * (i -= 1.5 / 2.75) * i + 0.75 : 2.5 / 2.75 > i ? 7.5625 * (i -= 2.25 / 2.75) * i + 0.9375 : 7.5625 * (i -= 2.625 / 2.75) * i + 0.984375
			},
			BounceInOut: function(e) {
				return 0.5 > e ? 0.5 * a.BounceIn(2 * e) : 0.5 * a.BounceOut(2 * e - 1) + 0.5
			}
		};
		return a
	}), h("echarts/chart/base", ["require", "zrender/shape/Image", "../util/shape/Icon", "../util/shape/MarkLine", "../util/shape/Symbol", "../config", "../util/ecData", "../util/ecAnimation", "../util/ecEffect", "../util/accMath", "../component/base", "zrender/tool/util", "zrender/tool/area"], function(z) {
		function C(s, r, F, m, l) {
			q.call(this, s, r, F, m, l);
			var E = this;
			this.selectedMap = {}, this.lastShapeList = [], this.shapeHandler = {
				onclick: function() {
					E.isClick = !0
				},
				ondragover: function(J) {
					var H = J.target;
					H.highlightStyle = H.highlightStyle || {};
					var K = H.highlightStyle,
						G = K.brushTyep,
						o = K.strokeColor,
						I = K.lineWidth;
					K.brushType = "stroke", K.strokeColor = E.ecTheme.calculableColor || j.calculableColor, K.lineWidth = "icon" === H.type ? 30 : 10, E.zr.addHoverShape(H), setTimeout(function() {
						K && (K.brushType = G, K.strokeColor = o, K.lineWidth = I)
					}, 20)
				},
				ondrop: function(a) {
					null != D.get(a.dragged, "data") && (E.isDrop = !0)
				},
				ondragend: function() {
					E.isDragend = !0
				}
			}
		}
		var p = z("zrender/shape/Image"),
			x = z("../util/shape/Icon"),
			B = z("../util/shape/MarkLine"),
			k = z("../util/shape/Symbol"),
			j = z("../config"),
			D = z("../util/ecData"),
			w = z("../util/ecAnimation"),
			y = z("../util/ecEffect"),
			u = z("../util/accMath"),
			q = z("../component/base"),
			v = z("zrender/tool/util"),
			A = z("zrender/tool/area");
		return C.prototype = {
			setCalculable: function(a) {
				return a.dragEnableTime = this.ecTheme.DRAG_ENABLE_TIME || j.DRAG_ENABLE_TIME, a.ondragover = this.shapeHandler.ondragover, a.ondragend = this.shapeHandler.ondragend, a.ondrop = this.shapeHandler.ondrop, a
			},
			ondrop: function(J, O) {
				if (this.isDrop && J.target && !O.dragIn) {
					var s, H = J.target,
						M = J.dragged,
						r = D.get(H, "seriesIndex"),
						G = D.get(H, "dataIndex"),
						I = this.series,
						E = this.component.legend;
					if (-1 === G) {
						if (D.get(M, "seriesIndex") == r) {
							return O.dragOut = O.dragIn = O.needRefresh = !0, void(this.isDrop = !1)
						}
						s = {
							value: D.get(M, "value"),
							name: D.get(M, "name")
						}, this.type === j.CHART_TYPE_PIE && s.value < 0 && (s.value = 0);
						for (var F = !1, K = I[r].data, m = 0, L = K.length; L > m; m++) {
							K[m].name === s.name && "-" === K[m].value && (I[r].data[m].value = s.value, F = !0)
						}!F && I[r].data.push(s), E && E.add(s.name, M.style.color || M.style.strokeColor)
					} else {
						s = I[r].data[G] || "-", null != s.value ? (I[r].data[G].value = "-" != s.value ? u.accAdd(I[r].data[G].value, D.get(M, "value")) : D.get(M, "value"), (this.type === j.CHART_TYPE_FUNNEL || this.type === j.CHART_TYPE_PIE) && (E && 1 === E.getRelatedAmount(s.name) && this.component.legend.del(s.name), s.name += this.option.nameConnector + D.get(M, "name"), E && E.add(s.name, M.style.color || M.style.strokeColor))) : I[r].data[G] = "-" != s ? u.accAdd(I[r].data[G], D.get(M, "value")) : D.get(M, "value")
					}
					O.dragIn = O.dragIn || !0, this.isDrop = !1;
					var N = this;
					setTimeout(function() {
						N.zr.trigger("mousemove", J.event)
					}, 300)
				}
			},
			ondragend: function(H, F) {
				if (this.isDragend && H.target && !F.dragOut) {
					var J = H.target,
						E = D.get(J, "seriesIndex"),
						s = D.get(J, "dataIndex"),
						I = this.series;
					if (null != I[E].data[s].value) {
						I[E].data[s].value = "-";
						var G = I[E].data[s].name,
							m = this.component.legend;
						m && 0 === m.getRelatedAmount(G) && m.del(G)
					} else {
						I[E].data[s] = "-"
					}
					F.dragOut = !0, F.needRefresh = !0, this.isDragend = !1
				}
			},
			onlegendSelected: function(m, l) {
				var o = m.selected;
				for (var a in this.selectedMap) {
					this.selectedMap[a] != o[a] && (l.needRefresh = !0), this.selectedMap[a] = o[a]
				}
			},
			_buildPosition: function() {
				this._symbol = this.option.symbolList, this._sIndex2ShapeMap = {}, this._sIndex2ColorMap = {}, this.selectedMap = {}, this.xMarkMap = {};
				for (var H, J, r, F, I = this.series, m = {
						top: [],
						bottom: [],
						left: [],
						right: [],
						other: []
					}, K = 0, E = I.length; E > K; K++) {
					I[K].type === this.type && (I[K] = this.reformOption(I[K]), this.legendHoverLink = I[K].legendHoverLink || this.legendHoverLink, H = I[K].xAxisIndex, J = I[K].yAxisIndex, r = this.component.xAxis.getAxis(H), F = this.component.yAxis.getAxis(J), r.type === j.COMPONENT_TYPE_AXIS_CATEGORY ? m[r.getPosition()].push(K) : F.type === j.COMPONENT_TYPE_AXIS_CATEGORY ? m[F.getPosition()].push(K) : m.other.push(K))
				}
				for (var G in m) {
					m[G].length > 0 && this._buildSinglePosition(G, m[G])
				}
				this.addShapeList()
			},
			_buildSinglePosition: function(F, s) {
				var H = this._mapData(s),
					m = H.locationMap,
					l = H.maxDataLength;
				if (0 !== l && 0 !== m.length) {
					switch (F) {
						case "bottom":
						case "top":
							this._buildHorizontal(s, l, m, this.xMarkMap);
							break;
						case "left":
						case "right":
							this._buildVertical(s, l, m, this.xMarkMap);
							break;
						case "other":
							this._buildOther(s, l, m, this.xMarkMap)
					}
					for (var G = 0, E = s.length; E > G; G++) {
						this.buildMark(s[G])
					}
				}
			},
			_mapData: function(M) {
				for (var R, F, K, P, E = this.series, S = 0, J = {}, L = "__kener__stack__", H = this.component.legend, G = [], I = 0, N = 0, r = M.length; r > N; N++) {
					if (R = E[M[N]], K = R.name, this._sIndex2ShapeMap[M[N]] = this._sIndex2ShapeMap[M[N]] || this.query(R, "symbol") || this._symbol[N % this._symbol.length], H) {
						if (this.selectedMap[K] = H.isSelected(K), this._sIndex2ColorMap[M[N]] = H.getColor(K), P = H.getItemShape(K)) {
							var O = P.style;
							if (this.type == j.CHART_TYPE_LINE) {
								O.iconType = "legendLineIcon", O.symbol = this._sIndex2ShapeMap[M[N]]
							} else {
								if (R.itemStyle.normal.barBorderWidth > 0) {
									var Q = P.highlightStyle;
									O.brushType = "both", O.x += 1, O.y += 1, O.width -= 2, O.height -= 2, O.strokeColor = Q.strokeColor = R.itemStyle.normal.barBorderColor, Q.lineWidth = 3
								}
							}
							H.setItemShape(K, P)
						}
					} else {
						this.selectedMap[K] = !0, this._sIndex2ColorMap[M[N]] = this.zr.getColor(M[N])
					}
					this.selectedMap[K] && (F = R.stack || L + M[N], null == J[F] ? (J[F] = S, G[S] = [M[N]], S++) : G[J[F]].push(M[N])), I = Math.max(I, R.data.length)
				}
				return {
					locationMap: G,
					maxDataLength: I
				}
			},
			_calculMarkMapXY: function(N, Q, G) {
				for (var L = this.series, P = 0, F = Q.length; F > P; P++) {
					for (var E = 0, R = Q[P].length; R > E; E++) {
						var K = Q[P][E],
							M = "xy" == G ? 0 : "",
							I = this.component.grid,
							H = N[K];
						if ("-1" != G.indexOf("x")) {
							H["counter" + M] > 0 && (H["average" + M] = H["sum" + M] / H["counter" + M]);
							var J = this.component.xAxis.getAxis(L[K].xAxisIndex || 0).getCoord(H["average" + M]);
							H["averageLine" + M] = [
								[J, I.getYend()],
								[J, I.getY()]
							], H["minLine" + M] = [
								[H["minX" + M], I.getYend()],
								[H["minX" + M], I.getY()]
							], H["maxLine" + M] = [
								[H["maxX" + M], I.getYend()],
								[H["maxX" + M], I.getY()]
							], H.isHorizontal = !1
						}
						if (M = "xy" == G ? 1 : "", "-1" != G.indexOf("y")) {
							H["counter" + M] > 0 && (H["average" + M] = H["sum" + M] / H["counter" + M]);
							var O = this.component.yAxis.getAxis(L[K].yAxisIndex || 0).getCoord(H["average" + M]);
							H["averageLine" + M] = [
								[I.getX(), O],
								[I.getXend(), O]
							], H["minLine" + M] = [
								[I.getX(), H["minY" + M]],
								[I.getXend(), H["minY" + M]]
							], H["maxLine" + M] = [
								[I.getX(), H["maxY" + M]],
								[I.getXend(), H["maxY" + M]]
							], H.isHorizontal = !0
						}
					}
				}
			},
			addLabel: function(M, O, G, K, N) {
				var F = [G, O],
					E = this.deepMerge(F, "itemStyle.normal.label"),
					P = this.deepMerge(F, "itemStyle.emphasis.label"),
					J = E.textStyle || {},
					L = P.textStyle || {};
				if (E.show) {
					var I = M.style;
					I.text = this._getLabelText(O, G, K, "normal"), I.textPosition = null == E.position ? "horizontal" === N ? "right" : "top" : E.position, I.textColor = J.color, I.textFont = this.getFont(J), I.textAlign = J.align, I.textBaseline = J.baseline
				}
				if (P.show) {
					var H = M.highlightStyle;
					H.text = this._getLabelText(O, G, K, "emphasis"), H.textPosition = E.show ? M.style.textPosition : null == P.position ? "horizontal" === N ? "right" : "top" : P.position, H.textColor = L.color, H.textFont = this.getFont(L), H.textAlign = L.align, H.textBaseline = L.baseline
				}
				return M
			},
			_getLabelText: function(s, r, F, m) {
				var l = this.deepQuery([r, s], "itemStyle." + m + ".label.formatter");
				l || "emphasis" !== m || (l = this.deepQuery([r, s], "itemStyle.normal.label.formatter"));
				var E = this.getDataFromOption(r, "-");
				return l ? "function" == typeof l ? l.call(this.myChart, {
					seriesName: s.name,
					series: s,
					name: F,
					value: E,
					data: r,
					status: m
				}) : "string" == typeof l ? l = l.replace("{a}", "{a0}").replace("{b}", "{b0}").replace("{c}", "{c0}").replace("{a0}", s.name).replace("{b0}", F).replace("{c0}", this.numAddCommas(E)) : void 0 : E instanceof Array ? null != E[2] ? this.numAddCommas(E[2]) : E[0] + " , " + E[1] : this.numAddCommas(E)
			},
			buildMark: function(i) {
				var a = this.series[i];
				this.selectedMap[a.name] && (a.markLine && this._buildMarkLine(i), a.markPoint && this._buildMarkPoint(i))
			},
			_buildMarkPoint: function(K) {
				for (var M, E, I = (this.markAttachStyle || {})[K], L = this.series[K], r = v.clone(L.markPoint), N = 0, H = r.data.length; H > N; N++) {
					M = r.data[N], E = this.getMarkCoord(K, M), M.x = null != M.x ? M.x : E[0], M.y = null != M.y ? M.y : E[1], !M.type || "max" !== M.type && "min" !== M.type || (M.value = E[3], M.name = M.name || M.type, M.symbolSize = M.symbolSize || A.getTextWidth(E[3], this.getFont()) / 2 + 5)
				}
				for (var J = this._markPoint(K, r), N = 0, H = J.length; H > N; N++) {
					var G = J[N];
					G.zlevel = this.getZlevelBase(), G.z = this.getZBase() + 1;
					for (var F in I) {
						G[F] = v.clone(I[F])
					}
					this.shapeList.push(G)
				}
				if (this.type === j.CHART_TYPE_FORCE || this.type === j.CHART_TYPE_CHORD) {
					for (var N = 0, H = J.length; H > N; N++) {
						this.zr.addShape(J[N])
					}
				}
			},
			_buildMarkLine: function(K) {
				for (var M, E = (this.markAttachStyle || {})[K], I = this.series[K], L = v.clone(I.markLine), r = 0, N = L.data.length; N > r; r++) {
					var H = L.data[r];
					!H.type || "max" !== H.type && "min" !== H.type && "average" !== H.type ? M = [this.getMarkCoord(K, H[0]), this.getMarkCoord(K, H[1])] : (M = this.getMarkCoord(K, H), L.data[r] = [v.clone(H), {}], L.data[r][0].name = H.name || H.type, L.data[r][0].value = "average" !== H.type ? M[3] : +M[3].toFixed(null != L.precision ? L.precision : this.deepQuery([this.ecTheme, j], "markLine.precision")), M = M[2], H = [{}, {}]), null != M && null != M[0] && null != M[1] && (L.data[r][0].x = null != H[0].x ? H[0].x : M[0][0], L.data[r][0].y = null != H[0].y ? H[0].y : M[0][1], L.data[r][1].x = null != H[1].x ? H[1].x : M[1][0], L.data[r][1].y = null != H[1].y ? H[1].y : M[1][1])
				}
				for (var J = this._markLine(K, L), r = 0, N = J.length; N > r; r++) {
					var G = J[r];
					G.zlevel = this.getZlevelBase(), G.z = this.getZBase() + 1;
					for (var F in E) {
						G[F] = v.clone(E[F])
					}
					this.shapeList.push(G)
				}
				if (this.type === j.CHART_TYPE_FORCE || this.type === j.CHART_TYPE_CHORD) {
					for (var r = 0, N = J.length; N > r; r++) {
						this.zr.addShape(J[r])
					}
				}
			},
			_markPoint: function(Q, F) {
				var I = this.series[Q],
					M = this.component;
				v.merge(v.merge(F, v.clone(this.ecTheme.markPoint || {})), v.clone(j.markPoint)), F.name = I.name;
				var U, H, K, N, J, r, R, G = [],
					S = F.data,
					E = M.dataRange,
					s = M.legend,
					O = this.zr.getWidth(),
					T = this.zr.getHeight();
				if (F.large) {
					U = this.getLargeMarkPoingShape(Q, F), U._mark = "largePoint", U && G.push(U)
				} else {
					for (var P = 0, L = S.length; L > P; P++) {
						null != S[P].x && null != S[P].y && (K = null != S[P].value ? S[P].value : "", s && (H = s.getColor(I.name)), E && (H = isNaN(K) ? H : E.getColor(K), N = [S[P], F], J = this.deepQuery(N, "itemStyle.normal.color") || H, r = this.deepQuery(N, "itemStyle.emphasis.color") || J, null == J && null == r) || (H = null == H ? this.zr.getColor(Q) : H, S[P].tooltip = S[P].tooltip || F.tooltip || {
							trigger: "item"
						}, S[P].name = null != S[P].name ? S[P].name : "", S[P].value = K, U = this.getSymbolShape(F, Q, S[P], P, S[P].name, this.parsePercent(S[P].x, O), this.parsePercent(S[P].y, T), "pin", H, "rgba(0,0,0,0)", "horizontal"), U._mark = "point", R = this.deepMerge([S[P], F], "effect"), R.show && (U.effect = R), I.type === j.CHART_TYPE_MAP && (U._geo = this.getMarkGeo(S[P])), D.pack(U, I, Q, S[P], P, S[P].name, K), G.push(U)))
					}
				}
				return G
			},
			_markLine: function(R, G) {
				var J = this.series[R],
					N = this.component;
				v.merge(v.merge(G, v.clone(this.ecTheme.markLine || {})), v.clone(j.markLine)), G.symbol = G.symbol instanceof Array ? G.symbol.length > 1 ? G.symbol : [G.symbol[0], G.symbol[0]] : [G.symbol, G.symbol], G.symbolSize = G.symbolSize instanceof Array ? G.symbolSize.length > 1 ? G.symbolSize : [G.symbolSize[0], G.symbolSize[0]] : [G.symbolSize, G.symbolSize], G.symbolRotate = G.symbolRotate instanceof Array ? G.symbolRotate.length > 1 ? G.symbolRotate : [G.symbolRotate[0], G.symbolRotate[0]] : [G.symbolRotate, G.symbolRotate], G.name = J.name;
				for (var W, I, L, O, K, r, S, H, T = [], F = G.data, s = N.dataRange, P = N.legend, U = this.zr.getWidth(), Q = this.zr.getHeight(), M = 0, E = F.length; E > M; M++) {
					var X = F[M];
					null != X[0].x && null != X[0].y && null != X[1].x && null != X[1].y && (I = P ? P.getColor(J.name) : this.zr.getColor(R), H = this.deepMerge(X), L = null != H.value ? H.value : "", s && (I = isNaN(L) ? I : s.getColor(L), O = [H, G], K = this.deepQuery(O, "itemStyle.normal.color") || I, r = this.deepQuery(O, "itemStyle.emphasis.color") || K, null == K && null == r) || (X[0].tooltip = H.tooltip || G.tooltip || {
						trigger: "item"
					}, X[0].name = null != X[0].name ? X[0].name : "", X[1].name = null != X[1].name ? X[1].name : "", X[0].value = L, W = this.getLineMarkShape(G, R, X, M, this.parsePercent(X[0].x, U), this.parsePercent(X[0].y, Q), this.parsePercent(X[1].x, U), this.parsePercent(X[1].y, Q), I), W._mark = "line", S = this.deepMerge([H, G], "effect"), S.show && (W.effect = S), J.type === j.CHART_TYPE_MAP && (W._geo = [this.getMarkGeo(X[0]), this.getMarkGeo(X[1])]), D.pack(W, J, R, X[0], M, X[0].name + ("" !== X[1].name ? " > " + X[1].name : ""), L), T.push(W)))
				}
				return T
			},
			getMarkCoord: function() {
				return [0, 0]
			},
			getSymbolShape: function(Q, G, W, J, H, L, N, K, i, n, R) {
				var I = [W, Q],
					S = this.getDataFromOption(W, "-");
				K = this.deepQuery(I, "symbol") || K;
				var F = this.deepQuery(I, "symbolSize");
				F = "function" == typeof F ? F(S) : F;
				var s = this.deepQuery(I, "symbolRotate"),
					O = this.deepMerge(I, "itemStyle.normal"),
					T = this.deepMerge(I, "itemStyle.emphasis"),
					P = null != O.borderWidth ? O.borderWidth : O.lineStyle && O.lineStyle.width;
				null == P && (P = K.match("empty") ? 2 : 0);
				var M = null != T.borderWidth ? T.borderWidth : T.lineStyle && T.lineStyle.width;
				null == M && (M = P + 2);
				var E = new x({
					style: {
						iconType: K.replace("empty", "").toLowerCase(),
						x: L - F,
						y: N - F,
						width: 2 * F,
						height: 2 * F,
						brushType: "both",
						color: K.match("empty") ? n : this.getItemStyleColor(O.color, G, J, W) || i,
						strokeColor: O.borderColor || this.getItemStyleColor(O.color, G, J, W) || i,
						lineWidth: P
					},
					highlightStyle: {
						color: K.match("empty") ? n : this.getItemStyleColor(T.color, G, J, W),
						strokeColor: T.borderColor || O.borderColor || this.getItemStyleColor(O.color, G, J, W) || i,
						lineWidth: M
					},
					clickable: this.deepQuery(I, "clickable")
				});
				return K.match("image") && (E.style.image = K.replace(new RegExp("^image:\\/\\/"), ""), E = new p({
					style: E.style,
					highlightStyle: E.highlightStyle,
					clickable: this.deepQuery(I, "clickable")
				})), null != s && (E.rotation = [s * Math.PI / 180, L, N]), K.match("star") && (E.style.iconType = "star", E.style.n = K.replace("empty", "").replace("star", "") - 0 || 5), "none" === K && (E.invisible = !0, E.hoverable = !1), E = this.addLabel(E, Q, W, H, R), K.match("empty") && (null == E.style.textColor && (E.style.textColor = E.style.strokeColor), null == E.highlightStyle.textColor && (E.highlightStyle.textColor = E.highlightStyle.strokeColor)), D.pack(E, Q, G, W, J, H), E._x = L, E._y = N, E._dataIndex = J, E._seriesIndex = G, E
			},
			getLineMarkShape: function(X, I, N, R, M, K, J, P, S) {
				var O = null != N[0].value ? N[0].value : "-",
					a = null != N[1].value ? N[1].value : "-",
					E = [this.query(N[0], "symbol") || X.symbol[0], this.query(N[1], "symbol") || X.symbol[1]],
					Y = [this.query(N[0], "symbolSize") || X.symbolSize[0], this.query(N[1], "symbolSize") || X.symbolSize[1]];
				Y[0] = "function" == typeof Y[0] ? Y[0](O) : Y[0], Y[1] = "function" == typeof Y[1] ? Y[1](a) : Y[1];
				var L = [this.query(N[0], "symbolRotate") || X.symbolRotate[0], this.query(N[1], "symbolRotate") || X.symbolRotate[1]],
					Z = [N[0], N[1], X],
					H = this.deepMerge(Z, "itemStyle.normal");
				H.color = this.getItemStyleColor(H.color, I, R, N);
				var F = this.deepMerge(Z, "itemStyle.emphasis");
				F.color = this.getItemStyleColor(F.color, I, R, N);
				var T = H.lineStyle,
					aa = F.lineStyle,
					W = T.width;
				null == W && (W = H.borderWidth);
				var Q = aa.width;
				null == Q && (Q = null != F.borderWidth ? F.borderWidth : W + 2);
				var G = new B({
					style: {
						smooth: this.deepQuery([N[0], N[1], X], "smooth") ? "spline" : !1,
						smoothRadian: this.deepQuery([N[0], N[1], X], "smoothRadian"),
						symbol: E,
						symbolSize: Y,
						symbolRotate: L,
						xStart: M,
						yStart: K,
						xEnd: J,
						yEnd: P,
						brushType: "both",
						lineType: T.type,
						shadowColor: T.shadowColor || T.color || H.borderColor || H.color || S,
						shadowBlur: T.shadowBlur,
						shadowOffsetX: T.shadowOffsetX,
						shadowOffsetY: T.shadowOffsetY,
						color: H.color || S,
						strokeColor: T.color || H.borderColor || H.color || S,
						lineWidth: W,
						symbolBorderColor: H.borderColor || H.color || S,
						symbolBorder: H.borderWidth
					},
					highlightStyle: {
						shadowColor: aa.shadowColor,
						shadowBlur: aa.shadowBlur,
						shadowOffsetX: aa.shadowOffsetX,
						shadowOffsetY: aa.shadowOffsetY,
						color: F.color || H.color || S,
						strokeColor: aa.color || T.color || F.borderColor || H.borderColor || F.color || H.color || S,
						lineWidth: Q,
						symbolBorderColor: F.borderColor || H.borderColor || F.color || H.color || S,
						symbolBorder: null == F.borderWidth ? H.borderWidth + 2 : F.borderWidth
					},
					clickable: this.deepQuery(Z, "clickable")
				});
				return G = this.addLabel(G, X, N[0], N[0].name + " : " + N[1].name), G._x = J, G._y = P, G
			},
			getLargeMarkPoingShape: function(M, R) {
				var F, K, P, o, S, J, L = this.series[M],
					H = this.component,
					G = R.data,
					I = H.dataRange,
					N = H.legend,
					E = [G[0], R];
				if (N && (K = N.getColor(L.name)), !I || (P = null != G[0].value ? G[0].value : "", K = isNaN(P) ? K : I.getColor(P), o = this.deepQuery(E, "itemStyle.normal.color") || K, S = this.deepQuery(E, "itemStyle.emphasis.color") || o, null != o || null != S)) {
					K = this.deepMerge(E, "itemStyle.normal").color || K;
					var O = this.deepQuery(E, "symbol") || "circle";
					O = O.replace("empty", "").replace(/\d/g, ""), J = this.deepMerge([G[0], R], "effect");
					var Q = window.devicePixelRatio || 1;
					return F = new k({
						style: {
							pointList: G,
							color: K,
							strokeColor: K,
							shadowColor: J.shadowColor || K,
							shadowBlur: (null != J.shadowBlur ? J.shadowBlur : 8) * Q,
							size: this.deepQuery(E, "symbolSize"),
							iconType: O,
							brushType: "fill",
							lineWidth: 1
						},
						draggable: !1,
						hoverable: !1
					}), J.show && (F.effect = J), F
				}
			},
			backupShapeList: function() {
				this.shapeList && this.shapeList.length > 0 ? (this.lastShapeList = this.shapeList, this.shapeList = []) : this.lastShapeList = []
			},
			addShapeList: function() {
				var L, N, E = this.option.animationThreshold / (this.canvasSupported ? 2 : 4),
					J = this.lastShapeList,
					M = this.shapeList,
					r = J.length > 0,
					O = r ? this.query(this.option, "animationDurationUpdate") : this.query(this.option, "animationDuration"),
					I = this.query(this.option, "animationEasing"),
					K = {},
					G = {};
				if (this.option.animation && !this.option.renderAsImage && M.length < E && !this.motionlessOnce) {
					for (var F = 0, H = J.length; H > F; F++) {
						N = this._getAnimationKey(J[F]), N.match("undefined") ? this.zr.delShape(J[F].id) : (N += J[F].type, K[N] ? this.zr.delShape(J[F].id) : K[N] = J[F])
					}
					for (var F = 0, H = M.length; H > F; F++) {
						N = this._getAnimationKey(M[F]), N.match("undefined") ? this.zr.addShape(M[F]) : (N += M[F].type, G[N] = M[F])
					}
					for (N in K) {
						G[N] || this.zr.delShape(K[N].id)
					}
					for (N in G) {
						K[N] ? (this.zr.delShape(K[N].id), this._animateMod(K[N], G[N], O, I, 0, r)) : (L = this.type != j.CHART_TYPE_LINE && this.type != j.CHART_TYPE_RADAR || 0 === N.indexOf("icon") ? 0 : O / 2, this._animateMod(!1, G[N], O, I, L, r))
					}
					this.zr.refresh(), this.animationEffect()
				} else {
					this.motionlessOnce = !1, this.zr.delShape(J);
					for (var F = 0, H = M.length; H > F; F++) {
						this.zr.addShape(M[F])
					}
				}
			},
			_getAnimationKey: function(a) {
				return this.type != j.CHART_TYPE_MAP ? D.get(a, "seriesIndex") + "_" + D.get(a, "dataIndex") + (a._mark ? a._mark : "") + (this.type === j.CHART_TYPE_RADAR ? D.get(a, "special") : "") : D.get(a, "seriesIndex") + "_" + D.get(a, "dataIndex") + (a._mark ? a._mark : "undefined")
			},
			_animateMod: function(s, r, F, m, l, E) {
				switch (r.type) {
					case "polyline":
					case "half-smooth-polygon":
						w.pointList(this.zr, s, r, F, m);
						break;
					case "rectangle":
						w.rectangle(this.zr, s, r, F, m);
						break;
					case "image":
					case "icon":
						w.icon(this.zr, s, r, F, m, l);
						break;
					case "candle":
						E ? this.zr.addShape(r) : w.candle(this.zr, s, r, F, m);
						break;
					case "ring":
					case "sector":
					case "circle":
						E ? "sector" === r.type ? w.sector(this.zr, s, r, F, m) : this.zr.addShape(r) : w.ring(this.zr, s, r, F + (D.get(r, "dataIndex") || 0) % 20 * 100, m);
						break;
					case "text":
						w.text(this.zr, s, r, F, m);
						break;
					case "polygon":
						E ? w.pointList(this.zr, s, r, F, m) : w.polygon(this.zr, s, r, F, m);
						break;
					case "ribbon":
						w.ribbon(this.zr, s, r, F, m);
						break;
					case "gauge-pointer":
						w.gaugePointer(this.zr, s, r, F, m);
						break;
					case "mark-line":
						w.markline(this.zr, s, r, F, m);
						break;
					case "bezier-curve":
					case "line":
						w.line(this.zr, s, r, F, m);
						break;
					default:
						this.zr.addShape(r)
				}
			},
			animationMark: function(s, r, F) {
				for (var m = F || this.shapeList, l = 0, E = m.length; E > l; l++) {
					m[l]._mark && this._animateMod(!1, m[l], s, r, 0, !0)
				}
				this.animationEffect(F)
			},
			animationEffect: function(s) {
				!s && this.clearEffectShape();
				var r = s || this.shapeList;
				if (null != r) {
					var F = j.EFFECT_ZLEVEL;
					this.canvasSupported && this.zr.modLayer(F, {
						motionBlur: !0,
						lastFrameAlpha: 0.95
					});
					for (var m, l = 0, E = r.length; E > l; l++) {
						m = r[l], m._mark && m.effect && m.effect.show && y[m._mark] && (y[m._mark](this.zr, this.effectList, m, F), this.effectList[this.effectList.length - 1]._mark = m._mark)
					}
				}
			},
			clearEffectShape: function(a) {
				this.zr && this.effectList && this.effectList.length > 0 && (a && this.zr.modLayer(j.EFFECT_ZLEVEL, {
					motionBlur: !1
				}), this.zr.delShape(this.effectList)), this.effectList = []
			},
			addMark: function(J, L, F) {
				var H = this.series[J];
				if (this.selectedMap[H.name]) {
					var K = this.query(this.option, "animationDurationUpdate"),
						E = this.query(this.option, "animationEasing"),
						m = H[F].data,
						M = this.shapeList.length;
					if (H[F].data = L.data, this["_build" + F.replace("m", "M")](J), this.option.animation && !this.option.renderAsImage) {
						this.animationMark(K, E, this.shapeList.slice(M))
					} else {
						for (var G = M, I = this.shapeList.length; I > G; G++) {
							this.zr.addShape(this.shapeList[G])
						}
						this.zr.refreshNextFrame()
					}
					H[F].data = m
				}
			},
			delMark: function(I, K, E) {
				E = E.replace("mark", "").replace("large", "").toLowerCase();
				var G = this.series[I];
				if (this.selectedMap[G.name]) {
					for (var J = !1, s = [this.shapeList, this.effectList], m = 2; m--;) {
						for (var F = 0, H = s[m].length; H > F; F++) {
							if (s[m][F]._mark == E && D.get(s[m][F], "seriesIndex") == I && D.get(s[m][F], "name") == K) {
								this.zr.delShape(s[m][F].id), s[m].splice(F, 1), J = !0;
								break
							}
						}
					}
					J && this.zr.refreshNextFrame()
				}
			}
		}, v.inherits(C, q), C
	}), h("zrender/shape/Circle", ["require", "./Base", "../tool/util"], function(i) {
		var a = i("./Base"),
			j = function(k) {
				a.call(this, k)
			};
		return j.prototype = {
			type: "circle",
			buildPath: function(l, k) {
				l.arc(k.x, k.y, k.r, 0, 2 * Math.PI, !0)
			},
			getRect: function(l) {
				if (l.__rect) {
					return l.__rect
				}
				var k;
				return k = "stroke" == l.brushType || "fill" == l.brushType ? l.lineWidth || 1 : 0, l.__rect = {
					x: Math.round(l.x - l.r - k / 2),
					y: Math.round(l.y - l.r - k / 2),
					width: 2 * l.r + k,
					height: 2 * l.r + k
				}, l.__rect
			}
		}, i("../tool/util").inherits(j, a), j
	}), h("echarts/util/accMath", [], function() {
		function k(r, q) {
			var u = r.toString(),
				p = q.toString(),
				m = 0;
			try {
				m = p.split(".")[1].length
			} catch (s) {}
			try {
				m -= u.split(".")[1].length
			} catch (s) {}
			return (u.replace(".", "") - 0) / (p.replace(".", "") - 0) * Math.pow(10, m)
		}

		function j(r, q) {
			var u = r.toString(),
				p = q.toString(),
				m = 0;
			try {
				m += u.split(".")[1].length
			} catch (s) {}
			try {
				m += p.split(".")[1].length
			} catch (s) {}
			return (u.replace(".", "") - 0) * (p.replace(".", "") - 0) / Math.pow(10, m)
		}

		function l(r, q) {
			var u = 0,
				p = 0;
			try {
				u = r.toString().split(".")[1].length
			} catch (m) {}
			try {
				p = q.toString().split(".")[1].length
			} catch (m) {}
			var s = Math.pow(10, Math.max(u, p));
			return (Math.round(r * s) + Math.round(q * s)) / s
		}

		function a(m, i) {
			return l(m, -i)
		}
		return {
			accDiv: k,
			accMul: j,
			accAdd: l,
			accSub: a
		}
	}), h("echarts/util/shape/Icon", ["require", "zrender/tool/util", "zrender/shape/Star", "zrender/shape/Heart", "zrender/shape/Droplet", "zrender/shape/Image", "zrender/shape/Base"], function(ad) {
		function M(p, m) {
			var s = m.x,
				l = m.y,
				k = m.width / 16,
				r = m.height / 16;
			p.moveTo(s, l + m.height), p.lineTo(s + 5 * k, l + 14 * r), p.lineTo(s + m.width, l + 3 * r), p.lineTo(s + 13 * k, l), p.lineTo(s + 2 * k, l + 11 * r), p.lineTo(s, l + m.height), p.moveTo(s + 6 * k, l + 10 * r), p.lineTo(s + 14 * k, l + 2 * r), p.moveTo(s + 10 * k, l + 13 * r), p.lineTo(s + m.width, l + 13 * r), p.moveTo(s + 13 * k, l + 10 * r), p.lineTo(s + 13 * k, l + m.height)
		}

		function R(p, m) {
			var s = m.x,
				l = m.y,
				k = m.width / 16,
				r = m.height / 16;
			p.moveTo(s, l + m.height), p.lineTo(s + 5 * k, l + 14 * r), p.lineTo(s + m.width, l + 3 * r), p.lineTo(s + 13 * k, l), p.lineTo(s + 2 * k, l + 11 * r), p.lineTo(s, l + m.height), p.moveTo(s + 6 * k, l + 10 * r), p.lineTo(s + 14 * k, l + 2 * r), p.moveTo(s + 10 * k, l + 13 * r), p.lineTo(s + m.width, l + 13 * r)
		}

		function Z(p, m) {
			var s = m.x,
				l = m.y,
				k = m.width / 16,
				r = m.height / 16;
			p.moveTo(s + 4 * k, l + 15 * r), p.lineTo(s + 9 * k, l + 13 * r), p.lineTo(s + 14 * k, l + 8 * r), p.lineTo(s + 11 * k, l + 5 * r), p.lineTo(s + 6 * k, l + 10 * r), p.lineTo(s + 4 * k, l + 15 * r), p.moveTo(s + 5 * k, l), p.lineTo(s + 11 * k, l), p.moveTo(s + 5 * k, l + r), p.lineTo(s + 11 * k, l + r), p.moveTo(s, l + 2 * r), p.lineTo(s + m.width, l + 2 * r), p.moveTo(s, l + 5 * r), p.lineTo(s + 3 * k, l + m.height), p.lineTo(s + 13 * k, l + m.height), p.lineTo(s + m.width, l + 5 * r)
		}

		function ah(p, m) {
			var s = m.x,
				l = m.y,
				k = m.width / 16,
				r = m.height / 16;
			p.moveTo(s, l + 3 * r), p.lineTo(s + 6 * k, l + 3 * r), p.moveTo(s + 3 * k, l), p.lineTo(s + 3 * k, l + 6 * r), p.moveTo(s + 3 * k, l + 8 * r), p.lineTo(s + 3 * k, l + m.height), p.lineTo(s + m.width, l + m.height), p.lineTo(s + m.width, l + 3 * r), p.lineTo(s + 8 * k, l + 3 * r)
		}

		function Q(p, m) {
			var s = m.x,
				l = m.y,
				k = m.width / 16,
				r = m.height / 16;
			p.moveTo(s + 6 * k, l), p.lineTo(s + 2 * k, l + 3 * r), p.lineTo(s + 6 * k, l + 6 * r), p.moveTo(s + 2 * k, l + 3 * r), p.lineTo(s + 14 * k, l + 3 * r), p.lineTo(s + 14 * k, l + 11 * r), p.moveTo(s + 2 * k, l + 5 * r), p.lineTo(s + 2 * k, l + 13 * r), p.lineTo(s + 14 * k, l + 13 * r), p.moveTo(s + 10 * k, l + 10 * r), p.lineTo(s + 14 * k, l + 13 * r), p.lineTo(s + 10 * k, l + m.height)
		}

		function O(s, m) {
			var v = m.x,
				l = m.y,
				k = m.width / 16,
				u = m.height / 16,
				p = m.width / 2;
			s.lineWidth = 1.5, s.arc(v + p, l + p, p - k, 0, 2 * Math.PI / 3), s.moveTo(v + 3 * k, l + m.height), s.lineTo(v + 0 * k, l + 12 * u), s.lineTo(v + 5 * k, l + 11 * u), s.moveTo(v, l + 8 * u), s.arc(v + p, l + p, p - k, Math.PI, 5 * Math.PI / 3), s.moveTo(v + 13 * k, l), s.lineTo(v + m.width, l + 4 * u), s.lineTo(v + 11 * k, l + 5 * u)
		}

		function N(p, m) {
			var s = m.x,
				l = m.y,
				k = m.width / 16,
				r = m.height / 16;
			p.moveTo(s, l), p.lineTo(s, l + m.height), p.lineTo(s + m.width, l + m.height), p.moveTo(s + 2 * k, l + 14 * r), p.lineTo(s + 7 * k, l + 6 * r), p.lineTo(s + 11 * k, l + 11 * r), p.lineTo(s + 15 * k, l + 2 * r)
		}

		function T(p, m) {
			var s = m.x,
				l = m.y,
				k = m.width / 16,
				r = m.height / 16;
			p.moveTo(s, l), p.lineTo(s, l + m.height), p.lineTo(s + m.width, l + m.height), p.moveTo(s + 3 * k, l + 14 * r), p.lineTo(s + 3 * k, l + 6 * r), p.lineTo(s + 4 * k, l + 6 * r), p.lineTo(s + 4 * k, l + 14 * r), p.moveTo(s + 7 * k, l + 14 * r), p.lineTo(s + 7 * k, l + 2 * r), p.lineTo(s + 8 * k, l + 2 * r), p.lineTo(s + 8 * k, l + 14 * r), p.moveTo(s + 11 * k, l + 14 * r), p.lineTo(s + 11 * k, l + 9 * r), p.lineTo(s + 12 * k, l + 9 * r), p.lineTo(s + 12 * k, l + 14 * r)
		}

		function aa(s, m) {
			var v = m.x,
				l = m.y,
				k = m.width - 2,
				u = m.height - 2,
				p = Math.min(k, u) / 2;
			l += 2, s.moveTo(v + p + 3, l + p - 3), s.arc(v + p + 3, l + p - 3, p - 1, 0, -Math.PI / 2, !0), s.lineTo(v + p + 3, l + p - 3), s.moveTo(v + p, l), s.lineTo(v + p, l + p), s.arc(v + p, l + p, p, -Math.PI / 2, 2 * Math.PI, !0), s.lineTo(v + p, l + p), s.lineWidth = 1.5
		}

		function S(p, m) {
			var s = m.x,
				l = m.y,
				k = m.width / 16,
				r = m.height / 16;
			l -= r, p.moveTo(s + 1 * k, l + 2 * r), p.lineTo(s + 15 * k, l + 2 * r), p.lineTo(s + 14 * k, l + 3 * r), p.lineTo(s + 2 * k, l + 3 * r), p.moveTo(s + 3 * k, l + 6 * r), p.lineTo(s + 13 * k, l + 6 * r), p.lineTo(s + 12 * k, l + 7 * r), p.lineTo(s + 4 * k, l + 7 * r), p.moveTo(s + 5 * k, l + 10 * r), p.lineTo(s + 11 * k, l + 10 * r), p.lineTo(s + 10 * k, l + 11 * r), p.lineTo(s + 6 * k, l + 11 * r), p.moveTo(s + 7 * k, l + 14 * r), p.lineTo(s + 9 * k, l + 14 * r), p.lineTo(s + 8 * k, l + 15 * r), p.lineTo(s + 7 * k, l + 15 * r)
		}

		function z(w, y) {
			var p = y.x,
				v = y.y,
				x = y.width,
				m = y.height,
				k = x / 16,
				I = m / 16,
				u = 2 * Math.min(k, I);
			w.moveTo(p + k + u, v + I + u), w.arc(p + k, v + I, u, Math.PI / 4, 3 * Math.PI), w.lineTo(p + 7 * k - u, v + 6 * I - u), w.arc(p + 7 * k, v + 6 * I, u, Math.PI / 4 * 5, 4 * Math.PI), w.arc(p + 7 * k, v + 6 * I, u / 2, Math.PI / 4 * 5, 4 * Math.PI), w.moveTo(p + 7 * k - u / 2, v + 6 * I + u), w.lineTo(p + k + u, v + 14 * I - u), w.arc(p + k, v + 14 * I, u, -Math.PI / 4, 2 * Math.PI), w.moveTo(p + 7 * k + u / 2, v + 6 * I), w.lineTo(p + 14 * k - u, v + 10 * I - u / 2), w.moveTo(p + 16 * k, v + 10 * I), w.arc(p + 14 * k, v + 10 * I, u, 0, 3 * Math.PI), w.lineWidth = 1.5
		}

		function A(s, m) {
			var v = m.x,
				l = m.y,
				k = m.width,
				u = m.height,
				p = Math.min(k, u) / 2;
			s.moveTo(v + k, l + u / 2), s.arc(v + p, l + p, p, 0, 2 * Math.PI), s.arc(v + p, l, p, Math.PI / 4, Math.PI / 5 * 4), s.arc(v, l + p, p, -Math.PI / 3, Math.PI / 3), s.arc(v + k, l + u, p, Math.PI, Math.PI / 2 * 3), s.lineWidth = 1.5
		}

		function ae(w, y) {
			for (var p = y.x, v = y.y, x = y.width, m = y.height, k = Math.round(m / 3), I = Math.round((k - 2) / 2), u = 3; u--;) {
				w.rect(p, v + k * u + I, x, 2)
			}
		}

		function P(w, y) {
			for (var p = y.x, v = y.y, x = y.width, m = y.height, k = Math.round(x / 3), I = Math.round((k - 2) / 2), u = 3; u--;) {
				w.rect(p + k * u + I, v, 2, m)
			}
		}

		function af(o, m) {
			var p = m.x,
				l = m.y,
				k = m.width / 16;
			o.moveTo(p + k, l), o.lineTo(p + k, l + m.height), o.lineTo(p + 15 * k, l + m.height), o.lineTo(p + 15 * k, l), o.lineTo(p + k, l), o.moveTo(p + 3 * k, l + 3 * k), o.lineTo(p + 13 * k, l + 3 * k), o.moveTo(p + 3 * k, l + 6 * k), o.lineTo(p + 13 * k, l + 6 * k), o.moveTo(p + 3 * k, l + 9 * k), o.lineTo(p + 13 * k, l + 9 * k), o.moveTo(p + 3 * k, l + 12 * k), o.lineTo(p + 9 * k, l + 12 * k)
		}

		function J(p, m) {
			var s = m.x,
				l = m.y,
				k = m.width / 16,
				r = m.height / 16;
			p.moveTo(s, l), p.lineTo(s, l + m.height), p.lineTo(s + m.width, l + m.height), p.lineTo(s + m.width, l), p.lineTo(s, l), p.moveTo(s + 4 * k, l), p.lineTo(s + 4 * k, l + 8 * r), p.lineTo(s + 12 * k, l + 8 * r), p.lineTo(s + 12 * k, l), p.moveTo(s + 6 * k, l + 11 * r), p.lineTo(s + 6 * k, l + 13 * r), p.lineTo(s + 10 * k, l + 13 * r), p.lineTo(s + 10 * k, l + 11 * r), p.lineTo(s + 6 * k, l + 11 * r)
		}

		function D(p, m) {
			var s = m.x,
				l = m.y,
				k = m.width,
				r = m.height;
			p.moveTo(s, l + r / 2), p.lineTo(s + k, l + r / 2), p.moveTo(s + k / 2, l), p.lineTo(s + k / 2, l + r)
		}

		function ab(o, m) {
			var p = m.width / 2,
				l = m.height / 2,
				k = Math.min(p, l);
			o.moveTo(m.x + p + k, m.y + l), o.arc(m.x + p, m.y + l, k, 0, 2 * Math.PI), o.closePath()
		}

		function ag(i, a) {
			i.rect(a.x, a.y, a.width, a.height), i.closePath()
		}

		function ac(s, m) {
			var v = m.width / 2,
				l = m.height / 2,
				k = m.x + v,
				u = m.y + l,
				p = Math.min(v, l);
			s.moveTo(k, u - p), s.lineTo(k + p, u + p), s.lineTo(k - p, u + p), s.lineTo(k, u - p), s.closePath()
		}

		function Y(s, m) {
			var v = m.width / 2,
				l = m.height / 2,
				k = m.x + v,
				u = m.y + l,
				p = Math.min(v, l);
			s.moveTo(k, u - p), s.lineTo(k + p, u), s.lineTo(k, u + p), s.lineTo(k - p, u), s.lineTo(k, u - p), s.closePath()
		}

		function F(o, m) {
			var p = m.x,
				l = m.y,
				k = m.width / 16;
			o.moveTo(p + 8 * k, l), o.lineTo(p + k, l + m.height), o.lineTo(p + 8 * k, l + m.height / 4 * 3), o.lineTo(p + 15 * k, l + m.height), o.lineTo(p + 8 * k, l), o.closePath()
		}

		function ai(l, p) {
			var k = ad("zrender/shape/Star"),
				e = p.width / 2,
				m = p.height / 2;
			k.prototype.buildPath(l, {
				x: p.x + e,
				y: p.y + m,
				r: Math.min(e, m),
				n: p.n || 5
			})
		}

		function B(e, k) {
			var a = ad("zrender/shape/Heart");
			a.prototype.buildPath(e, {
				x: k.x + k.width / 2,
				y: k.y + 0.2 * k.height,
				a: k.width / 2,
				b: 0.8 * k.height
			})
		}

		function q(e, k) {
			var a = ad("zrender/shape/Droplet");
			a.prototype.buildPath(e, {
				x: k.x + 0.5 * k.width,
				y: k.y + 0.5 * k.height,
				a: 0.5 * k.width,
				b: 0.8 * k.height
			})
		}

		function j(s, m) {
			var v = m.x,
				l = m.y - m.height / 2 * 1.5,
				k = m.width / 2,
				u = m.height / 2,
				p = Math.min(k, u);
			s.arc(v + k, l + u, p, Math.PI / 5 * 4, Math.PI / 5), s.lineTo(v + k, l + u + 1.5 * p), s.closePath()
		}

		function C(l, p, k) {
			var e = ad("zrender/shape/Image");
			this._imageShape = this._imageShape || new e({
				style: {}
			});
			for (var m in p) {
				this._imageShape.style[m] = p[m]
			}
			this._imageShape.brush(l, !1, k)
		}

		function G(a) {
			H.call(this, a)
		}
		var E = ad("zrender/tool/util"),
			H = ad("zrender/shape/Base");
		return G.prototype = {
			type: "icon",
			iconLibrary: {
				mark: M,
				markUndo: R,
				markClear: Z,
				dataZoom: ah,
				dataZoomReset: Q,
				restore: O,
				lineChart: N,
				barChart: T,
				pieChart: aa,
				funnelChart: S,
				forceChart: z,
				chordChart: A,
				stackChart: ae,
				tiledChart: P,
				dataView: af,
				saveAsImage: J,
				cross: D,
				circle: ab,
				rectangle: ag,
				triangle: ac,
				diamond: Y,
				arrow: F,
				star: ai,
				heart: B,
				droplet: q,
				pin: j,
				image: C
			},
			brush: function(l, s, k) {
				var e = s ? this.highlightStyle : this.style;
				e = e || {};
				var p = e.iconType || this.style.iconType;
				if ("image" === p) {
					var m = ad("zrender/shape/Image");
					m.prototype.brush.call(this, l, s, k)
				} else {
					var e = this.beforeBrush(l, s);
					switch (l.beginPath(), this.buildPath(l, e, k), e.brushType) {
						case "both":
							l.fill();
						case "stroke":
							e.lineWidth > 0 && l.stroke();
							break;
						default:
							l.fill()
					}
					this.drawText(l, e, this.style), this.afterBrush(l)
				}
			},
			buildPath: function(i, a, k) {
				this.iconLibrary[a.iconType] ? this.iconLibrary[a.iconType].call(this, i, a, k) : (i.moveTo(a.x, a.y), i.lineTo(a.x + a.width, a.y), i.lineTo(a.x + a.width, a.y + a.height), i.lineTo(a.x, a.y + a.height), i.lineTo(a.x, a.y), i.closePath())
			},
			getRect: function(a) {
				return a.__rect ? a.__rect : (a.__rect = {
					x: Math.round(a.x),
					y: Math.round(a.y - ("pin" == a.iconType ? a.height / 2 * 1.5 : 0)),
					width: a.width,
					height: a.height * ("pin" === a.iconType ? 1.25 : 1)
				}, a.__rect)
			},
			isCover: function(o, m) {
				var p = this.getTansform(o, m);
				o = p[0], m = p[1];
				var l = this.style.__rect;
				l || (l = this.style.__rect = this.getRect(this.style));
				var k = l.height < 8 || l.width < 8 ? 4 : 0;
				return o >= l.x - k && o <= l.x + l.width + k && m >= l.y - k && m <= l.y + l.height + k ? !0 : !1
			}
		}, E.inherits(G, H), G
	}), h("echarts/util/shape/MarkLine", ["require", "zrender/shape/Base", "./Icon", "zrender/shape/Line", "zrender/shape/Polyline", "zrender/tool/matrix", "zrender/tool/area", "zrender/shape/util/dashedLineTo", "zrender/shape/util/smoothSpline", "zrender/tool/util"], function(z) {
		function B(a) {
			p.call(this, a)
		}
		var p = z("zrender/shape/Base"),
			x = z("./Icon"),
			A = z("zrender/shape/Line"),
			k = new A({}),
			j = z("zrender/shape/Polyline"),
			C = new j({}),
			w = z("zrender/tool/matrix"),
			y = z("zrender/tool/area"),
			u = z("zrender/shape/util/dashedLineTo"),
			q = z("zrender/shape/util/smoothSpline"),
			v = z("zrender/tool/util");
		return B.prototype = {
			type: "mark-line",
			brush: function(i, a) {
				var l = this.style;
				a && (l = this.getHighlightStyle(l, this.highlightStyle || {})), i.save(), this.setContext(i, l), this.setTransform(i), i.save(), i.beginPath(), this.buildLinePath(i, l, this.style.lineWidth || 1), i.stroke(), i.restore(), this.brushSymbol(i, l, 0), this.brushSymbol(i, l, 1), this.drawText(i, l, this.style), i.restore()
			},
			buildLinePath: function(E, s, G) {
				var m = s.pointList || this.getPointList(s);
				s.pointList = m;
				var l = Math.min(s.pointList.length, Math.round(s.pointListLength || s.pointList.length));
				if (s.lineType && "solid" != s.lineType) {
					if ("dashed" == s.lineType || "dotted" == s.lineType) {
						if ("spline" !== s.smooth) {
							var F = G * ("dashed" == s.lineType ? 5 : 1);
							E.moveTo(m[0][0], m[0][1]);
							for (var D = 1; l > D; D++) {
								u(E, m[D - 1][0], m[D - 1][1], m[D][0], m[D][1], F)
							}
						} else {
							for (var D = 1; l > D; D += 2) {
								E.moveTo(m[D - 1][0], m[D - 1][1]), E.lineTo(m[D][0], m[D][1])
							}
						}
					}
				} else {
					E.moveTo(m[0][0], m[0][1]);
					for (var D = 1; l > D; D++) {
						E.lineTo(m[D][0], m[D][1])
					}
				}
			},
			brushSymbol: function(G, I, D) {
				if ("none" != I.symbol[D]) {
					G.save(), G.beginPath(), G.lineWidth = I.symbolBorder, G.strokeStyle = I.symbolBorderColor, I.iconType = I.symbol[D].replace("empty", "").toLowerCase(), I.symbol[D].match("empty") && (G.fillStyle = "#fff");
					var H, l = Math.min(I.pointList.length, Math.round(I.pointListLength || I.pointList.length)),
						i = 0 === D ? I.pointList[0][0] : I.pointList[l - 1][0],
						J = 0 === D ? I.pointList[0][1] : I.pointList[l - 1][1],
						F = "undefined" != typeof I.symbolRotate[D] ? I.symbolRotate[D] - 0 : 0;
					if (0 !== F && (H = w.create(), w.identity(H), (i || J) && w.translate(H, H, [-i, -J]), w.rotate(H, H, F * Math.PI / 180), (i || J) && w.translate(H, H, [i, J]), G.transform.apply(G, H)), "arrow" == I.iconType && 0 === F) {
						this.buildArrawPath(G, I, D)
					} else {
						var E = I.symbolSize[D];
						I.x = i - E, I.y = J - E, I.width = 2 * E, I.height = 2 * E, x.prototype.buildPath(G, I)
					}
					G.closePath(), G.fill(), G.stroke(), G.restore()
				}
			},
			buildArrawPath: function(N, S, G) {
				var L = Math.min(S.pointList.length, Math.round(S.pointListLength || S.pointList.length)),
					Q = 2 * S.symbolSize[G],
					F = S.pointList[0][0],
					D = S.pointList[L - 1][0],
					T = S.pointList[0][1],
					K = S.pointList[L - 1][1],
					M = 0;
				"spline" === S.smooth && (M = S.smoothRadian * (D >= F ? 1 : -1));
				var I = Math.atan(Math.abs((K - T) / (F - D)));
				0 === G ? D > F ? K > T ? I = 2 * Math.PI - I + M : I += M : K > T ? I += Math.PI - M : I = Math.PI - I - M : F > D ? T > K ? I = 2 * Math.PI - I + M : I += M : T > K ? I += Math.PI - M : I = Math.PI - I - M;
				var H = Math.PI / 8,
					J = 0 === G ? F : D,
					O = 0 === G ? T : K,
					E = [
						[J + Q * Math.cos(I - H), O - Q * Math.sin(I - H)],
						[J + 0.6 * Q * Math.cos(I), O - 0.6 * Q * Math.sin(I)],
						[J + Q * Math.cos(I + H), O - Q * Math.sin(I + H)]
					];
				N.moveTo(J, O);
				for (var P = 0, R = E.length; R > P; P++) {
					N.lineTo(E[P][0], E[P][1])
				}
				N.lineTo(J, O)
			},
			getPointList: function(r) {
				var o = [
					[r.xStart, r.yStart],
					[r.xEnd, r.yEnd]
				];
				if ("spline" === r.smooth) {
					var s = o[1][0],
						m = o[1][1];
					if (r.smoothRadian <= 0.8) {
						o[3] = [s, m];
						var l = o[0][0] <= o[3][0];
						o[1] = this.getOffetPoint(o[0], o[3], l, r.smoothRadian), o[2] = this.getOffetPoint(o[3], o[0], l, r.smoothRadian)
					} else {
						o[2] = [s, m], o[1] = this.getOffetPoint(o[0], o[2], o[0][0] <= o[2][0], r.smoothRadian)
					}
					o = q(o, !1), o[o.length - 1] = [s, m]
				}
				return o
			},
			getOffetPoint: function(K, M, F, I) {
				var L, E = (2 - Math.abs(I)) / 0.6,
					D = Math.sqrt(Math.round((K[0] - M[0]) * (K[0] - M[0]) + (K[1] - M[1]) * (K[1] - M[1]))) / E,
					N = [K[0], K[1]];
				if (K[0] != M[0] && K[1] != M[1]) {
					var H = (M[1] - K[1]) / (M[0] - K[0]);
					L = Math.atan(H)
				} else {
					L = K[0] == M[0] ? (K[1] <= M[1] ? 1 : -1) * Math.PI / 2 : 0
				}
				var J, G;
				return K[0] <= M[0] ? (L -= I * (F ? 1 : -1), J = Math.round(Math.cos(L) * D), G = Math.round(Math.sin(L) * D), N[0] += J, N[1] += G) : (L += I * (F ? 1 : -1), J = Math.round(Math.cos(L) * D), G = Math.round(Math.sin(L) * D), N[0] -= J, N[1] -= G), N
			},
			getRect: function(i) {
				if (i.__rect) {
					return i.__rect
				}
				var a = i.lineWidth || 1;
				return i.__rect = {
					x: Math.min(i.xStart, i.xEnd) - a,
					y: Math.min(i.yStart, i.yEnd) - a,
					width: Math.abs(i.xStart - i.xEnd) + a,
					height: Math.abs(i.yStart - i.yEnd) + a
				}, i.__rect
			},
			isCover: function(m, l) {
				var o = this.getTansform(m, l);
				m = o[0], l = o[1];
				var a = this.style.__rect;
				return a || (a = this.style.__rect = this.getRect(this.style)), m >= a.x && m <= a.x + a.width && l >= a.y && l <= a.y + a.height ? "spline" !== this.style.smooth ? y.isInside(k, this.style, m, l) : y.isInside(C, this.style, m, l) : !1
			}
		}, v.inherits(B, p), B
	}), h("echarts/util/shape/Symbol", ["require", "zrender/shape/Base", "zrender/shape/Polygon", "zrender/tool/util", "./normalIsCover"], function(m) {
		function l(a) {
			q.call(this, a)
		}
		var q = m("zrender/shape/Base"),
			k = m("zrender/shape/Polygon"),
			j = new k({}),
			p = m("zrender/tool/util");
		return l.prototype = {
			type: "symbol",
			buildPath: function(K, A) {
				var F = A.pointList,
					I = F.length;
				if (0 !== I) {
					for (var N, E, C, B, H, J = 10000, G = Math.ceil(I / J), v = F[0] instanceof Array, w = A.size ? A.size : 2, L = w, D = w / 2, M = 2 * Math.PI, z = 0; G > z; z++) {
						K.beginPath(), N = z * J, E = N + J, E = E > I ? I : E;
						for (var x = N; E > x; x++) {
							if (A.random && (C = A["randomMap" + x % 20] / 100, L = w * C * C, D = L / 2), v ? (B = F[x][0], H = F[x][1]) : (B = F[x].x, H = F[x].y), 3 > L) {
								K.rect(B - D, H - D, L, L)
							} else {
								switch (A.iconType) {
									case "circle":
										K.moveTo(B, H), K.arc(B, H, D, 0, M, !0);
										break;
									case "diamond":
										K.moveTo(B, H - D), K.lineTo(B + D / 3, H - D / 3), K.lineTo(B + D, H), K.lineTo(B + D / 3, H + D / 3), K.lineTo(B, H + D), K.lineTo(B - D / 3, H + D / 3), K.lineTo(B - D, H), K.lineTo(B - D / 3, H - D / 3), K.lineTo(B, H - D);
										break;
									default:
										K.rect(B - D, H - D, L, L)
								}
							}
						}
						if (K.closePath(), G - 1 > z) {
							switch (A.brushType) {
								case "both":
									K.fill(), A.lineWidth > 0 && K.stroke();
									break;
								case "stroke":
									A.lineWidth > 0 && K.stroke();
									break;
								default:
									K.fill()
							}
						}
					}
				}
			},
			getRect: function(a) {
				return a.__rect || j.getRect(a)
			},
			isCover: m("./normalIsCover")
		}, p.inherits(l, q), l
	}), h("echarts/util/ecAnimation", ["require", "zrender/tool/util", "zrender/shape/Polygon"], function(B) {
		function E(N, P, H, L, O) {
			var G, p = H.style.pointList,
				Q = p.length;
			if (!P) {
				if (G = [], "vertical" != H._orient) {
					for (var K = p[0][1], M = 0; Q > M; M++) {
						G[M] = [p[M][0], K]
					}
				} else {
					for (var J = p[0][0], M = 0; Q > M; M++) {
						G[M] = [J, p[M][1]]
					}
				}
				"half-smooth-polygon" == H.type && (G[Q - 1] = k.clone(p[Q - 1]), G[Q - 2] = k.clone(p[Q - 2])), P = {
					style: {
						pointList: G
					}
				}
			}
			G = P.style.pointList;
			var I = G.length;
			H.style.pointList = I == Q ? G : Q > I ? G.concat(p.slice(I)) : G.slice(0, Q), N.addShape(H), H._animating = !0, N.animate(H.id, "style").when(L, {
				pointList: p
			}).done(function() {
				H._animating = !1
			}).start(O)
		}

		function u(p, o) {
			for (var r = arguments.length, m = 2; r > m; m++) {
				var l = arguments[m];
				p.style[l] = o.style[l]
			}
		}

		function z(L, N, J, M, p) {
			var n = J.style;
			N || (N = {
				position: J.position,
				style: {
					x: n.x,
					y: "vertical" == J._orient ? n.y + n.height : n.y,
					width: "vertical" == J._orient ? n.width : 0,
					height: "vertical" != J._orient ? n.height : 0
				}
			});
			var O = n.x,
				I = n.y,
				K = n.width,
				H = n.height,
				G = [J.position[0], J.position[1]];
			u(J, N, "x", "y", "width", "height"), J.position = N.position, L.addShape(J), (G[0] != N.position[0] || G[1] != N.position[1]) && L.animate(J.id, "").when(M, {
				position: G
			}).start(p), J._animating = !0, L.animate(J.id, "style").when(M, {
				x: O,
				y: I,
				width: K,
				height: H
			}).done(function() {
				J._animating = !1
			}).start(p)
		}

		function D(G, p, I, m, l) {
			if (!p) {
				var H = I.style.y;
				p = {
					style: {
						y: [H[0], H[0], H[0], H[0]]
					}
				}
			}
			var s = I.style.y;
			I.style.y = p.style.y, G.addShape(I), I._animating = !0, G.animate(I.id, "style").when(m, {
				y: s
			}).done(function() {
				I._animating = !1
			}).start(l)
		}

		function q(J, L, G, I, K) {
			var p = G.style.x,
				m = G.style.y,
				M = G.style.r0,
				H = G.style.r;
			G._animating = !0, "r" != G._animationAdd ? (G.style.r0 = 0, G.style.r = 0, G.rotation = [2 * Math.PI, p, m], J.addShape(G), J.animate(G.id, "style").when(I, {
				r0: M,
				r: H
			}).done(function() {
				G._animating = !1
			}).start(K), J.animate(G.id, "").when(Math.round(I / 3 * 2), {
				rotation: [0, p, m]
			}).start(K)) : (G.style.r0 = G.style.r, J.addShape(G), J.animate(G.id, "style").when(I, {
				r0: M
			}).done(function() {
				G._animating = !1
			}).start(K))
		}

		function j(H, n, m, l, I) {
			n || (n = "r" != m._animationAdd ? {
				style: {
					startAngle: m.style.startAngle,
					endAngle: m.style.startAngle
				}
			} : {
				style: {
					r0: m.style.r
				}
			});
			var G = m.style.startAngle,
				p = m.style.endAngle;
			u(m, n, "startAngle", "endAngle"), H.addShape(m), m._animating = !0, H.animate(m.id, "style").when(l, {
				startAngle: G,
				endAngle: p
			}).done(function() {
				m._animating = !1
			}).start(I)
		}

		function F(H, n, m, l, I) {
			n || (n = {
				style: {
					x: "left" == m.style.textAlign ? m.style.x + 100 : m.style.x - 100,
					y: m.style.y
				}
			});
			var G = m.style.x,
				p = m.style.y;
			u(m, n, "x", "y"), H.addShape(m), m._animating = !0, H.animate(m.id, "style").when(l, {
				x: G,
				y: p
			}).done(function() {
				m._animating = !1
			}).start(I)
		}

		function y(G, K, p, m, J) {
			var I = B("zrender/shape/Polygon").prototype.getRect(p.style),
				H = I.x + I.width / 2,
				e = I.y + I.height / 2;
			p.scale = [0.1, 0.1, H, e], G.addShape(p), p._animating = !0, G.animate(p.id, "").when(m, {
				scale: [1, 1, H, e]
			}).done(function() {
				p._animating = !1
			}).start(J)
		}

		function A(I, K, G, J, n) {
			K || (K = {
				style: {
					source0: 0,
					source1: G.style.source1 > 0 ? 360 : -360,
					target0: 0,
					target1: G.style.target1 > 0 ? 360 : -360
				}
			});
			var m = G.style.source0,
				L = G.style.source1,
				p = G.style.target0,
				H = G.style.target1;
			K.style && u(G, K, "source0", "source1", "target0", "target1"), I.addShape(G), G._animating = !0, I.animate(G.id, "style").when(J, {
				source0: m,
				source1: L,
				target0: p,
				target1: H
			}).done(function() {
				G._animating = !1
			}).start(n)
		}

		function w(r, p, G, m, l) {
			p || (p = {
				style: {
					angle: G.style.startAngle
				}
			});
			var s = G.style.angle;
			G.style.angle = p.style.angle, r.addShape(G), G._animating = !0, r.animate(G.id, "style").when(m, {
				angle: s
			}).done(function() {
				G._animating = !1
			}).start(l)
		}

		function v(I, p, K, m, J, H) {
			if (K.style._x = K.style.x, K.style._y = K.style.y, K.style._width = K.style.width, K.style._height = K.style.height, p) {
				z(I, p, K, m, J)
			} else {
				var G = K._x || 0,
					i = K._y || 0;
				K.scale = [0.01, 0.01, G, i], I.addShape(K), K._animating = !0, I.animate(K.id, "").delay(H).when(m, {
					scale: [1, 1, G, i]
				}).done(function() {
					K._animating = !1
				}).start(J || "QuinticOut")
			}
		}

		function x(I, K, G, J, n) {
			K || (K = {
				style: {
					xStart: G.style.xStart,
					yStart: G.style.yStart,
					xEnd: G.style.xStart,
					yEnd: G.style.yStart
				}
			});
			var m = G.style.xStart,
				L = G.style.xEnd,
				p = G.style.yStart,
				H = G.style.yEnd;
			u(G, K, "xStart", "xEnd", "yStart", "yEnd"), I.addShape(G), G._animating = !0, I.animate(G.id, "style").when(J, {
				xStart: m,
				xEnd: L,
				yStart: p,
				yEnd: H
			}).done(function() {
				G._animating = !1
			}).start(n)
		}

		function C(p, o, r, m, l) {
			r.style.smooth ? o ? p.addShape(r) : (r.style.pointListLength = 1, p.addShape(r), r._animating = !0, r.style.pointList = r.style.pointList || r.getPointList(r.style), p.animate(r.id, "style").when(m, {
				pointListLength: r.style.pointList.length
			}).done(function() {
				r._animating = !1
			}).start(l || "QuinticOut")) : (r.style.pointList = o ? o.style.pointList : [
				[r.style.xStart, r.style.yStart],
				[r.style.xStart, r.style.yStart]
			], p.addShape(r), r._animating = !0, p.animate(r.id, "style").when(m, {
				pointList: [
					[r.style.xStart, r.style.yStart],
					[r._x || 0, r._y || 0]
				]
			}).done(function() {
				r._animating = !1
			}).start(l || "QuinticOut"))
		}
		var k = B("zrender/tool/util");
		return {
			pointList: E,
			rectangle: z,
			candle: D,
			ring: q,
			sector: j,
			text: F,
			polygon: y,
			ribbon: A,
			gaugePointer: w,
			icon: v,
			line: x,
			markline: C
		}
	}), h("echarts/util/ecEffect", ["require", "../util/ecData", "zrender/shape/Circle", "zrender/shape/Image", "../util/shape/Icon", "../util/shape/Symbol", "zrender/tool/env"], function(v) {
		function x(F, L, s, D) {
			var r, C = s.effect,
				A = C.color || s.style.strokeColor || s.style.color,
				z = C.shadowColor || A,
				B = C.scaleSize,
				G = C.bounceDistance,
				a = "undefined" != typeof C.shadowBlur ? C.shadowBlur : B;
			"image" !== s.type ? (r = new y({
				zlevel: D,
				style: {
					brushType: "stroke",
					iconType: "droplet" != s.style.iconType ? s.style.iconType : "circle",
					x: a + 1,
					y: a + 1,
					n: s.style.n,
					width: s.style._width * B,
					height: s.style._height * B,
					lineWidth: 1,
					strokeColor: A,
					shadowColor: z,
					shadowBlur: a
				},
				draggable: !1,
				hoverable: !1
			}), "pin" == s.style.iconType && (r.style.y += r.style.height / 2 * 1.5), u && (r.style.image = F.shapeToImage(r, r.style.width + 2 * a + 2, r.style.height + 2 * a + 2).style.image, r = new j({
				zlevel: r.zlevel,
				style: r.style,
				draggable: !1,
				hoverable: !1
			}))) : r = new j({
				zlevel: D,
				style: s.style,
				draggable: !1,
				hoverable: !1
			}), w.clone(s, r), r.position = s.position, L.push(r), F.addShape(r);
			var H = "image" !== s.type ? window.devicePixelRatio || 1 : 1,
				K = (r.style.width / H - s.style._width) / 2;
			r.style.x = s.style._x - K, r.style.y = s.style._y - K, "pin" == s.style.iconType && (r.style.y -= s.style.height / 2 * 1.5);
			var J = 100 * (C.period + 10 * Math.random());
			F.modShape(s.id, {
				invisible: !0
			});
			var E = r.style.x + r.style.width / 2 / H,
				I = r.style.y + r.style.height / 2 / H;
			"scale" === C.type ? (F.modShape(r.id, {
				scale: [0.1, 0.1, E, I]
			}), F.animate(r.id, "", C.loop).when(J, {
				scale: [1, 1, E, I]
			}).done(function() {
				s.effect.show = !1, F.delShape(r.id)
			}).start()) : F.animate(r.id, "style", C.loop).when(J, {
				y: r.style.y - G
			}).when(2 * J, {
				y: r.style.y
			}).done(function() {
				s.effect.show = !1, F.delShape(r.id)
			}).start()
		}

		function m(H, L, B, F) {
			var K = B.effect,
				A = K.color || B.style.strokeColor || B.style.color,
				l = K.scaleSize,
				M = K.shadowColor || A,
				G = "undefined" != typeof K.shadowBlur ? K.shadowBlur : 2 * l,
				D = window.devicePixelRatio || 1,
				C = new p({
					zlevel: F,
					position: B.position,
					scale: B.scale,
					style: {
						pointList: B.style.pointList,
						iconType: B.style.iconType,
						color: A,
						strokeColor: A,
						shadowColor: M,
						shadowBlur: G * D,
						random: !0,
						brushType: "fill",
						lineWidth: 1,
						size: B.style.size
					},
					draggable: !1,
					hoverable: !1
				});
			L.push(C), H.addShape(C), H.modShape(B.id, {
				invisible: !0
			});
			for (var E = Math.round(100 * K.period), I = {}, z = {}, J = 0; 20 > J; J++) {
				C.style["randomMap" + J] = 0, I = {}, I["randomMap" + J] = 100, z = {}, z["randomMap" + J] = 0, C.style["randomMap" + J] = 100 * Math.random(), H.animate(C.id, "style", !0).when(E, I).when(2 * E, z).when(3 * E, I).when(4 * E, I).delay(Math.random() * E * J).start()
			}
		}

		function q(K, A, D, H) {
			var B, F = D.effect,
				E = F.color || D.style.strokeColor || D.style.color,
				a = F.shadowColor || D.style.strokeColor || E,
				o = D.style.lineWidth * F.scaleSize,
				L = "undefined" != typeof F.shadowBlur ? F.shadowBlur : o,
				C = new k({
					zlevel: H,
					style: {
						x: L,
						y: L,
						r: o,
						color: E,
						shadowColor: a,
						shadowBlur: L
					},
					draggable: !1,
					hoverable: !1
				});
			u ? (C.style.image = K.shapeToImage(C, 2 * (o + L), 2 * (o + L)).style.image, C = new j({
				zlevel: C.zlevel,
				style: C.style,
				draggable: !1,
				hoverable: !1
			}), B = L) : B = 0, w.clone(D, C), C.position = D.position, A.push(C), K.addShape(C), C.style.x = D.style.xStart - B, C.style.y = D.style.yStart - B;
			var M = (D.style.xStart - D.style.xEnd) * (D.style.xStart - D.style.xEnd) + (D.style.yStart - D.style.yEnd) * (D.style.yStart - D.style.yEnd),
				z = Math.round(Math.sqrt(Math.round(M * F.period * F.period)));
			if (D.style.smooth) {
				var r = D.style.pointList || D.getPointList(D.style),
					I = r.length;
				z = Math.round(z / I);
				for (var N = K.animate(C.id, "style", F.loop), J = Math.ceil(I / 8), G = 0; I - J > G; G += J) {
					N.when(z * (G + 1), {
						x: r[G][0] - B,
						y: r[G][1] - B
					})
				}
				N.when(z * I, {
					x: r[I - 1][0] - B,
					y: r[I - 1][1] - B
				}), N.done(function() {
					D.effect.show = !1, K.delShape(C.id)
				}), N.start("spline")
			} else {
				K.animate(C.id, "style", F.loop).when(z, {
					x: D._x - B,
					y: D._y - B
				}).done(function() {
					D.effect.show = !1, K.delShape(C.id)
				}).start()
			}
		}
		var w = v("../util/ecData"),
			k = v("zrender/shape/Circle"),
			j = v("zrender/shape/Image"),
			y = v("../util/shape/Icon"),
			p = v("../util/shape/Symbol"),
			u = v("zrender/tool/env").canvasSupported;
		return {
			point: x,
			largePoint: m,
			line: q
		}
	}), h("echarts/component/base", ["require", "../config", "../util/ecData", "../util/ecQuery", "../util/number", "zrender/tool/util", "zrender/tool/env"], function(p) {
		function l(w, n, i, x, v) {
			this.ecTheme = w, this.messageCenter = n, this.zr = i, this.option = x, this.series = x.series, this.myChart = v, this.component = v.component, this.shapeList = [], this.effectList = [];
			var u = this;
			u._onlegendhoverlink = function(z) {
				if (u.legendHoverLink) {
					for (var y, r = z.target, A = u.shapeList.length - 1; A >= 0; A--) {
						y = u.type == s.CHART_TYPE_PIE || u.type == s.CHART_TYPE_FUNNEL ? k.get(u.shapeList[A], "name") : (k.get(u.shapeList[A], "series") || {}).name, y != r || u.shapeList[A].invisible || u.shapeList[A]._animating || u.zr.addHoverShape(u.shapeList[A])
					}
				}
			}, n && n.bind(s.EVENT.LEGEND_HOVERLINK, this._onlegendhoverlink)
		}
		var s = p("../config"),
			k = p("../util/ecData"),
			j = p("../util/ecQuery"),
			q = p("../util/number"),
			m = p("zrender/tool/util");
		return l.prototype = {
			canvasSupported: p("zrender/tool/env").canvasSupported,
			_getZ: function(i) {
				var a = this.ecTheme[this.type];
				return a && null != a[i] ? a[i] : (a = s[this.type], a && null != a[i] ? a[i] : 0)
			},
			getZlevelBase: function() {
				return this._getZ("zlevel")
			},
			getZBase: function() {
				return this._getZ("z")
			},
			reformOption: function(a) {
				return m.merge(m.merge(a || {}, m.clone(this.ecTheme[this.type] || {})), m.clone(s[this.type] || {}))
			},
			reformCssArray: function(a) {
				if (!(a instanceof Array)) {
					return [a, a, a, a]
				}
				switch (a.length + "") {
					case "4":
						return a;
					case "3":
						return [a[0], a[1], a[2], a[1]];
					case "2":
						return [a[0], a[1], a[0], a[1]];
					case "1":
						return [a[0], a[0], a[0], a[0]];
					case "0":
						return [0, 0, 0, 0]
				}
			},
			getShapeById: function(i) {
				for (var a = 0, o = this.shapeList.length; o > a; a++) {
					if (this.shapeList[a].id === i) {
						return this.shapeList[a]
					}
				}
				return null
			},
			getFont: function(i) {
				var a = this.getTextStyle(m.clone(i));
				return a.fontStyle + " " + a.fontWeight + " " + a.fontSize + "px " + a.fontFamily
			},
			getTextStyle: function(a) {
				return m.merge(m.merge(a || {}, this.ecTheme.textStyle), s.textStyle)
			},
			getItemStyleColor: function(r, o, u, a) {
				return "function" == typeof r ? r.call(this.myChart, {
					seriesIndex: o,
					series: this.series[o],
					dataIndex: u,
					data: a
				}) : r
			},
			getDataFromOption: function(i, a) {
				return null != i ? null != i.value ? i.value : i : a
			},
			subPixelOptimize: function(i, a) {
				return i = a % 2 === 1 ? Math.floor(i) + 0.5 : Math.round(i)
			},
			resize: function() {
				this.refresh && this.refresh(), this.clearEffectShape && this.clearEffectShape(!0);
				var a = this;
				setTimeout(function() {
					a.animationEffect && a.animationEffect()
				}, 200)
			},
			clear: function() {
				this.clearEffectShape && this.clearEffectShape(), this.zr && this.zr.delShape(this.shapeList), this.shapeList = []
			},
			dispose: function() {
				this.onbeforDispose && this.onbeforDispose(), this.clear(), this.shapeList = null, this.effectList = null, this.messageCenter && this.messageCenter.unbind(s.EVENT.LEGEND_HOVERLINK, this._onlegendhoverlink), this.onafterDispose && this.onafterDispose()
			},
			query: j.query,
			deepQuery: j.deepQuery,
			deepMerge: j.deepMerge,
			parsePercent: q.parsePercent,
			parseCenter: q.parseCenter,
			parseRadius: q.parseRadius,
			numAddCommas: q.addCommas
		}, l
	}), h("zrender/shape/Star", ["require", "../tool/math", "./Base", "../tool/util"], function(p) {
		var l = p("../tool/math"),
			s = l.sin,
			k = l.cos,
			j = Math.PI,
			q = p("./Base"),
			m = function(a) {
				q.call(this, a)
			};
		return m.prototype = {
			type: "star",
			buildPath: function(B, G) {
				var n = G.n;
				if (n && !(2 > n)) {
					var a = G.x,
						H = G.y,
						z = G.r,
						A = G.r0;
					null == A && (A = n > 4 ? z * k(2 * j / n) / k(j / n) : z / 3);
					var w = j / n,
						v = -j / 2,
						x = a + z * k(v),
						C = H + z * s(v);
					v += w;
					var i = G.pointList = [];
					i.push([x, C]);
					for (var D, F = 0, E = 2 * n - 1; E > F; F++) {
						D = F % 2 === 0 ? A : z, i.push([a + D * k(v), H + D * s(v)]), v += w
					}
					i.push([x, C]), B.moveTo(i[0][0], i[0][1]);
					for (var F = 0; F < i.length; F++) {
						B.lineTo(i[F][0], i[F][1])
					}
					B.closePath()
				}
			},
			getRect: function(i) {
				if (i.__rect) {
					return i.__rect
				}
				var a;
				return a = "stroke" == i.brushType || "fill" == i.brushType ? i.lineWidth || 1 : 0, i.__rect = {
					x: Math.round(i.x - i.r - a / 2),
					y: Math.round(i.y - i.r - a / 2),
					width: 2 * i.r + a,
					height: 2 * i.r + a
				}, i.__rect
			}
		}, p("../tool/util").inherits(m, q), m
	}), h("zrender/shape/Heart", ["require", "./Base", "./util/PathProxy", "../tool/area", "../tool/util"], function(m) {
		var l = m("./Base"),
			o = m("./util/PathProxy"),
			k = m("../tool/area"),
			j = function(a) {
				l.call(this, a), this._pathProxy = new o
			};
		return j.prototype = {
			type: "heart",
			buildPath: function(p, n) {
				var a = this._pathProxy || new o;
				a.begin(p), a.moveTo(n.x, n.y), a.bezierCurveTo(n.x + n.a / 2, n.y - 2 * n.b / 3, n.x + 2 * n.a, n.y + n.b / 3, n.x, n.y + n.b), a.bezierCurveTo(n.x - 2 * n.a, n.y + n.b / 3, n.x - n.a / 2, n.y - 2 * n.b / 3, n.x, n.y), a.closePath()
			},
			getRect: function(a) {
				return a.__rect ? a.__rect : (this._pathProxy.isEmpty() || this.buildPath(null, a), this._pathProxy.fastBoundingRect())
			},
			isCover: function(q, p) {
				var r = this.getTansform(q, p);
				q = r[0], p = r[1];
				var i = this.getRect(this.style);
				return q >= i.x && q <= i.x + i.width && p >= i.y && p <= i.y + i.height ? k.isInsidePath(this._pathProxy.pathCommands, this.style.lineWidth, this.style.brushType, q, p) : void 0
			}
		}, m("../tool/util").inherits(j, l), j
	}), h("zrender/shape/Droplet", ["require", "./Base", "./util/PathProxy", "../tool/area", "../tool/util"], function(m) {
		var l = m("./Base"),
			o = m("./util/PathProxy"),
			k = m("../tool/area"),
			j = function(a) {
				l.call(this, a), this._pathProxy = new o
			};
		return j.prototype = {
			type: "droplet",
			buildPath: function(p, n) {
				var a = this._pathProxy || new o;
				a.begin(p), a.moveTo(n.x, n.y + n.a), a.bezierCurveTo(n.x + n.a, n.y + n.a, n.x + 3 * n.a / 2, n.y - n.a / 3, n.x, n.y - n.b), a.bezierCurveTo(n.x - 3 * n.a / 2, n.y - n.a / 3, n.x - n.a, n.y + n.a, n.x, n.y + n.a), a.closePath()
			},
			getRect: function(a) {
				return a.__rect ? a.__rect : (this._pathProxy.isEmpty() || this.buildPath(null, a), this._pathProxy.fastBoundingRect())
			},
			isCover: function(q, p) {
				var r = this.getTansform(q, p);
				q = r[0], p = r[1];
				var i = this.getRect(this.style);
				return q >= i.x && q <= i.x + i.width && p >= i.y && p <= i.y + i.height ? k.isInsidePath(this._pathProxy.pathCommands, this.style.lineWidth, this.style.brushType, q, p) : void 0
			}
		}, m("../tool/util").inherits(j, l), j
	}), h("zrender/tool/math", [], function() {
		function m(i, a) {
			return Math.sin(a ? i * j : i)
		}

		function l(i, a) {
			return Math.cos(a ? i * j : i)
		}

		function o(a) {
			return a * j
		}

		function k(a) {
			return a / j
		}
		var j = Math.PI / 180;
		return {
			sin: m,
			cos: l,
			degreeToRadian: o,
			radianToDegree: k
		}
	}), h("zrender/shape/util/PathProxy", ["require", "../../tool/vector"], function(k) {
		var j = k("../../tool/vector"),
			l = function(m, i) {
				this.command = m, this.points = i || null
			},
			a = function() {
				this.pathCommands = [], this._ctx = null, this._min = [], this._max = []
			};
		return a.prototype.fastBoundingRect = function() {
			var y = this._min,
				t = this._max;
			y[0] = y[1] = 1 / 0, t[0] = t[1] = -1 / 0;
			for (var w = 0; w < this.pathCommands.length; w++) {
				var z = this.pathCommands[w],
					q = z.points;
				switch (z.command) {
					case "M":
						j.min(y, y, q), j.max(t, t, q);
						break;
					case "L":
						j.min(y, y, q), j.max(t, t, q);
						break;
					case "C":
						for (var p = 0; 6 > p; p += 2) {
							y[0] = Math.min(y[0], y[0], q[p]), y[1] = Math.min(y[1], y[1], q[p + 1]), t[0] = Math.max(t[0], t[0], q[p]), t[1] = Math.max(t[1], t[1], q[p + 1])
						}
						break;
					case "Q":
						for (var p = 0; 4 > p; p += 2) {
							y[0] = Math.min(y[0], y[0], q[p]), y[1] = Math.min(y[1], y[1], q[p + 1]), t[0] = Math.max(t[0], t[0], q[p]), t[1] = Math.max(t[1], t[1], q[p + 1])
						}
						break;
					case "A":
						var A = q[0],
							v = q[1],
							x = q[2],
							u = q[3];
						y[0] = Math.min(y[0], y[0], A - x), y[1] = Math.min(y[1], y[1], v - u), t[0] = Math.max(t[0], t[0], A + x), t[1] = Math.max(t[1], t[1], v + u)
				}
			}
			return {
				x: y[0],
				y: y[1],
				width: t[0] - y[0],
				height: t[1] - y[1]
			}
		}, a.prototype.begin = function(i) {
			return this._ctx = i || null, this.pathCommands.length = 0, this
		}, a.prototype.moveTo = function(m, i) {
			return this.pathCommands.push(new l("M", [m, i])), this._ctx && this._ctx.moveTo(m, i), this
		}, a.prototype.lineTo = function(m, i) {
			return this.pathCommands.push(new l("L", [m, i])), this._ctx && this._ctx.lineTo(m, i), this
		}, a.prototype.bezierCurveTo = function(s, p, n, m, u, q) {
			return this.pathCommands.push(new l("C", [s, p, n, m, u, q])), this._ctx && this._ctx.bezierCurveTo(s, p, n, m, u, q), this
		}, a.prototype.quadraticCurveTo = function(p, o, n, m) {
			return this.pathCommands.push(new l("Q", [p, o, n, m])), this._ctx && this._ctx.quadraticCurveTo(p, o, n, m), this
		}, a.prototype.arc = function(s, p, n, m, u, q) {
			return this.pathCommands.push(new l("A", [s, p, n, n, m, u - m, 0, q ? 0 : 1])), this._ctx && this._ctx.arc(s, p, n, m, u, q), this
		}, a.prototype.arcTo = function(q, p, r, o, m) {
			return this._ctx && this._ctx.arcTo(q, p, r, o, m), this
		}, a.prototype.rect = function(p, o, q, m) {
			return this._ctx && this._ctx.rect(p, o, q, m), this
		}, a.prototype.closePath = function() {
			return this.pathCommands.push(new l("z")), this._ctx && this._ctx.closePath(), this
		}, a.prototype.isEmpty = function() {
			return 0 === this.pathCommands.length
		}, a.PathSegment = l, a
	}), h("zrender/shape/Line", ["require", "./Base", "./util/dashedLineTo", "../tool/util"], function(k) {
		var j = k("./Base"),
			l = k("./util/dashedLineTo"),
			a = function(i) {
				this.brushTypeOnly = "stroke", this.textPosition = "end", j.call(this, i)
			};
		return a.prototype = {
			type: "line",
			buildPath: function(o, n) {
				if (n.lineType && "solid" != n.lineType) {
					if ("dashed" == n.lineType || "dotted" == n.lineType) {
						var m = (n.lineWidth || 1) * ("dashed" == n.lineType ? 5 : 1);
						l(o, n.xStart, n.yStart, n.xEnd, n.yEnd, m)
					}
				} else {
					o.moveTo(n.xStart, n.yStart), o.lineTo(n.xEnd, n.yEnd)
				}
			},
			getRect: function(m) {
				if (m.__rect) {
					return m.__rect
				}
				var i = m.lineWidth || 1;
				return m.__rect = {
					x: Math.min(m.xStart, m.xEnd) - i,
					y: Math.min(m.yStart, m.yEnd) - i,
					width: Math.abs(m.xStart - m.xEnd) + i,
					height: Math.abs(m.yStart - m.yEnd) + i
				}, m.__rect
			}
		}, k("../tool/util").inherits(a, j), a
	}), h("zrender/shape/Polyline", ["require", "./Base", "./util/smoothSpline", "./util/smoothBezier", "./util/dashedLineTo", "./Polygon", "../tool/util"], function(m) {
		var l = m("./Base"),
			q = m("./util/smoothSpline"),
			k = m("./util/smoothBezier"),
			j = m("./util/dashedLineTo"),
			p = function(a) {
				this.brushTypeOnly = "stroke", this.textPosition = "end", l.call(this, a)
			};
		return p.prototype = {
			type: "polyline",
			buildPath: function(y, z) {
				var i = z.pointList;
				if (!(i.length < 2)) {
					var a = Math.min(z.pointList.length, Math.round(z.pointListLength || z.pointList.length));
					if (z.smooth && "spline" !== z.smooth) {
						var A = k(i, z.smooth, !1, z.smoothConstraint);
						y.moveTo(i[0][0], i[0][1]);
						for (var w, x, u, n = 0; a - 1 > n; n++) {
							w = A[2 * n], x = A[2 * n + 1], u = i[n + 1], y.bezierCurveTo(w[0], w[1], x[0], x[1], u[0], u[1])
						}
					} else {
						if ("spline" === z.smooth && (i = q(i), a = i.length), z.lineType && "solid" != z.lineType) {
							if ("dashed" == z.lineType || "dotted" == z.lineType) {
								var v = (z.lineWidth || 1) * ("dashed" == z.lineType ? 5 : 1);
								y.moveTo(i[0][0], i[0][1]);
								for (var n = 1; a > n; n++) {
									j(y, i[n - 1][0], i[n - 1][1], i[n][0], i[n][1], v)
								}
							}
						} else {
							y.moveTo(i[0][0], i[0][1]);
							for (var n = 1; a > n; n++) {
								y.lineTo(i[n][0], i[n][1])
							}
						}
					}
				}
			},
			getRect: function(a) {
				return m("./Polygon").prototype.getRect(a)
			}
		}, m("../tool/util").inherits(p, l), p
	}), h("zrender/shape/util/dashedLineTo", [], function() {
		var a = [5, 5];
		return function(y, k, v, x, j, e) {
			if (y.setLineDash) {
				return a[0] = a[1] = e, y.setLineDash(a), y.moveTo(k, v), void y.lineTo(x, j)
			}
			e = "number" != typeof e ? 5 : e;
			var z = x - k,
				u = j - v,
				w = Math.floor(Math.sqrt(z * z + u * u) / e);
			z /= w, u /= w;
			for (var q = !0, p = 0; w > p; ++p) {
				q ? y.moveTo(k, v) : y.lineTo(k, v), q = !q, k += z, v += u
			}
			y.lineTo(x, j)
		}
	}), h("zrender/shape/util/smoothSpline", ["require", "../../tool/vector"], function(i) {
		function a(v, x, p, u, w, m, k) {
			var y = 0.5 * (p - v),
				q = 0.5 * (u - x);
			return (2 * (x - p) + y + q) * k + (-3 * (x - p) - 2 * y - q) * m + y * w + x
		}
		var j = i("../../tool/vector");
		return function(B, z) {
			for (var F = B.length, q = [], k = 0, H = 1; F > H; H++) {
				k += j.distance(B[H - 1], B[H])
			}
			var x = k / 5;
			x = F > x ? F : x;
			for (var H = 0; x > H; H++) {
				var A, v, t, w = H / (x - 1) * (z ? F : F - 1),
					C = Math.floor(w),
					n = w - C,
					D = B[C % F];
				z ? (A = B[(C - 1 + F) % F], v = B[(C + 1) % F], t = B[(C + 2) % F]) : (A = B[0 === C ? C : C - 1], v = B[C > F - 2 ? F - 1 : C + 1], t = B[C > F - 3 ? F - 1 : C + 2]);
				var G = n * n,
					E = n * G;
				q.push([a(A[0], D[0], v[0], t[0], n, G, E), a(A[1], D[1], v[1], t[1], n, G, E)])
			}
			return q
		}
	}), h("zrender/shape/util/smoothBezier", ["require", "../../tool/vector"], function(i) {
		var a = i("../../tool/vector");
		return function(J, B, F, N) {
			var A, x, w, D, G = [],
				C = [],
				j = [],
				q = [],
				K = !!N;
			if (K) {
				w = [1 / 0, 1 / 0], D = [-1 / 0, -1 / 0];
				for (var z = 0, L = J.length; L > z; z++) {
					a.min(w, w, J[z]), a.max(D, D, J[z])
				}
				a.min(w, w, N[0]), a.max(D, D, N[1])
			}
			for (var z = 0, L = J.length; L > z; z++) {
				var A, x, v = J[z];
				if (F) {
					A = J[z ? z - 1 : L - 1], x = J[(z + 1) % L]
				} else {
					if (0 === z || z === L - 1) {
						G.push(J[z]);
						continue
					}
					A = J[z - 1], x = J[z + 1]
				}
				a.sub(C, x, A), a.scale(C, C, B);
				var t = a.distance(v, A),
					H = a.distance(v, x),
					M = t + H;
				0 !== M && (t /= M, H /= M), a.scale(j, C, -t), a.scale(q, C, H);
				var I = a.add([], v, j),
					E = a.add([], v, q);
				K && (a.max(I, I, w), a.min(I, I, D), a.max(E, E, w), a.min(E, E, D)), G.push(I), G.push(E)
			}
			return F && G.push(G.shift()), G
		}
	}), h("zrender/shape/Polygon", ["require", "./Base", "./util/smoothSpline", "./util/smoothBezier", "./util/dashedLineTo", "../tool/util"], function(m) {
		var l = m("./Base"),
			q = m("./util/smoothSpline"),
			k = m("./util/smoothBezier"),
			j = m("./util/dashedLineTo"),
			p = function(a) {
				l.call(this, a)
			};
		return p.prototype = {
			type: "polygon",
			buildPath: function(y, A) {
				var i = A.pointList;
				if (!(i.length < 2)) {
					if (A.smooth && "spline" !== A.smooth) {
						var a = k(i, A.smooth, !0, A.smoothConstraint);
						y.moveTo(i[0][0], i[0][1]);
						for (var B, w, x, u = i.length, n = 0; u > n; n++) {
							B = a[2 * n], w = a[2 * n + 1], x = i[(n + 1) % u], y.bezierCurveTo(B[0], B[1], w[0], w[1], x[0], x[1])
						}
					} else {
						if ("spline" === A.smooth && (i = q(i, !0)), A.lineType && "solid" != A.lineType) {
							if ("dashed" == A.lineType || "dotted" == A.lineType) {
								var v = A._dashLength || (A.lineWidth || 1) * ("dashed" == A.lineType ? 5 : 1);
								A._dashLength = v, y.moveTo(i[0][0], i[0][1]);
								for (var n = 1, z = i.length; z > n; n++) {
									j(y, i[n - 1][0], i[n - 1][1], i[n][0], i[n][1], v)
								}
								j(y, i[i.length - 1][0], i[i.length - 1][1], i[0][0], i[0][1], v)
							}
						} else {
							y.moveTo(i[0][0], i[0][1]);
							for (var n = 1, z = i.length; z > n; n++) {
								y.lineTo(i[n][0], i[n][1])
							}
							y.lineTo(i[0][0], i[0][1])
						}
					}
					y.closePath()
				}
			},
			getRect: function(z) {
				if (z.__rect) {
					return z.__rect
				}
				for (var B = Number.MAX_VALUE, w = Number.MIN_VALUE, y = Number.MAX_VALUE, A = Number.MIN_VALUE, v = z.pointList, u = 0, C = v.length; C > u; u++) {
					v[u][0] < B && (B = v[u][0]), v[u][0] > w && (w = v[u][0]), v[u][1] < y && (y = v[u][1]), v[u][1] > A && (A = v[u][1])
				}
				var x;
				return x = "stroke" == z.brushType || "fill" == z.brushType ? z.lineWidth || 1 : 0, z.__rect = {
					x: Math.round(B - x / 2),
					y: Math.round(y - x / 2),
					width: w - B + x,
					height: A - y + x
				}, z.__rect
			}
		}, m("../tool/util").inherits(p, l), p
	}), h("echarts/util/shape/normalIsCover", [], function() {
		return function(k, j) {
			var l = this.getTansform(k, j);
			k = l[0], j = l[1];
			var a = this.style.__rect;
			return a || (a = this.style.__rect = this.getRect(this.style)), k >= a.x && k <= a.x + a.width && j >= a.y && j <= a.y + a.height
		}
	}), h("echarts/util/ecQuery", ["require", "zrender/tool/util"], function(m) {
		function l(q, p) {
			if ("undefined" != typeof q) {
				if (!p) {
					return q
				}
				p = p.split(".");
				for (var r = p.length, a = 0; r > a;) {
					if (q = q[p[a]], "undefined" == typeof q) {
						return
					}
					a++
				}
				return q
			}
		}

		function o(r, t) {
			for (var q, p = 0, s = r.length; s > p; p++) {
				if (q = l(r[p], t), "undefined" != typeof q) {
					return q
				}
			}
		}

		function k(q, t) {
			for (var a, s = q.length; s--;) {
				var p = l(q[s], t);
				"undefined" != typeof p && ("undefined" == typeof a ? a = j.clone(p) : j.merge(a, p, !0))
			}
			return a
		}
		var j = m("zrender/tool/util");
		return {
			query: l,
			deepQuery: o,
			deepMerge: k
		}
	}), h("echarts/util/number", [], function() {
		function m(a) {
			return a.replace(/^\s+/, "").replace(/\s+$/, "")
		}

		function l(a, e) {
			return "string" == typeof a ? m(a).match(/%$/) ? parseFloat(a) / 100 * e : parseFloat(a) : a
		}

		function o(a, i) {
			return [l(i[0], a.getWidth()), l(i[1], a.getHeight())]
		}

		function k(p, q) {
			q instanceof Array || (q = [0, q]);
			var a = Math.min(p.getWidth(), p.getHeight()) / 2;
			return [l(q[0], a), l(q[1], a)]
		}

		function j(a) {
			return isNaN(a) ? "-" : (a = (a + "").split("."), a[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, "$1,") + (a.length > 1 ? "." + a[1] : ""))
		}
		return {
			parsePercent: l,
			parseCenter: o,
			parseRadius: k,
			addCommas: j
		}
	}), h("echarts/component/dataView", ["require", "./base", "../config", "zrender/tool/util", "../component"], function(m) {
		function l(r, q, p, n, s) {
			o.call(this, r, q, p, n, s), this.dom = s.dom, this._tDom = document.createElement("div"), this._textArea = document.createElement("textArea"), this._buttonRefresh = document.createElement("button"), this._buttonClose = document.createElement("button"), this._hasShow = !1, this._zrHeight = p.getHeight(), this._zrWidth = p.getWidth(), this._tDom.className = "echarts-dataview", this.hide(), this.dom.firstChild.appendChild(this._tDom), window.addEventListener ? (this._tDom.addEventListener("click", this._stop), this._tDom.addEventListener("mousewheel", this._stop), this._tDom.addEventListener("mousemove", this._stop), this._tDom.addEventListener("mousedown", this._stop), this._tDom.addEventListener("mouseup", this._stop), this._tDom.addEventListener("touchstart", this._stop), this._tDom.addEventListener("touchmove", this._stop), this._tDom.addEventListener("touchend", this._stop)) : (this._tDom.attachEvent("onclick", this._stop), this._tDom.attachEvent("onmousewheel", this._stop), this._tDom.attachEvent("onmousemove", this._stop), this._tDom.attachEvent("onmousedown", this._stop), this._tDom.attachEvent("onmouseup", this._stop))
		}
		var o = m("./base"),
			k = m("../config"),
			j = m("zrender/tool/util");
		return l.prototype = {
			type: k.COMPONENT_TYPE_DATAVIEW,
			_lang: ["Data View", "close", "refresh"],
			_gCssText: "position:absolute;display:block;overflow:hidden;transition:height 0.8s,background-color 1s;-moz-transition:height 0.8s,background-color 1s;-webkit-transition:height 0.8s,background-color 1s;-o-transition:height 0.8s,background-color 1s;z-index:1;left:0;top:0;",
			hide: function() {
				this._sizeCssText = "width:" + this._zrWidth + "px;height:0px;background-color:#f0ffff;", this._tDom.style.cssText = this._gCssText + this._sizeCssText
			},
			show: function(q) {
				this._hasShow = !0;
				var p = this.query(this.option, "toolbox.feature.dataView.lang") || this._lang;
				this.option = q, this._tDom.innerHTML = '<p style="padding:8px 0;margin:0 0 10px 0;border-bottom:1px solid #eee">' + (p[0] || this._lang[0]) + "</p>", this._textArea.style.cssText = "display:block;margin:0 0 8px 0;padding:4px 6px;overflow:auto;width:" + (this._zrWidth - 15) + "px;height:" + (this._zrHeight - 100) + "px;";
				var r = this.query(this.option, "toolbox.feature.dataView.optionToContent");
				this._textArea.value = "function" != typeof r ? this._optionToContent() : r(this.option), this._tDom.appendChild(this._textArea), this._buttonClose.style.cssText = "float:right;padding:1px 6px;", this._buttonClose.innerHTML = p[1] || this._lang[1];
				var a = this;
				this._buttonClose.onclick = function() {
					a.hide()
				}, this._tDom.appendChild(this._buttonClose), this.query(this.option, "toolbox.feature.dataView.readOnly") === !1 ? (this._buttonRefresh.style.cssText = "float:right;margin-right:10px;padding:1px 6px;", this._buttonRefresh.innerHTML = p[2] || this._lang[2], this._buttonRefresh.onclick = function() {
					a._save()
				}, this._tDom.appendChild(this._buttonRefresh), this._textArea.readOnly = !1, this._textArea.style.cursor = "default") : (this._textArea.readOnly = !0, this._textArea.style.cursor = "text"), this._sizeCssText = "width:" + this._zrWidth + "px;height:" + this._zrHeight + "px;background-color:#fff;", this._tDom.style.cssText = this._gCssText + this._sizeCssText
			},
			_optionToContent: function() {
				var x, z, q, y, p, i, A = [],
					v = "";
				if (this.option.xAxis) {
					for (A = this.option.xAxis instanceof Array ? this.option.xAxis : [this.option.xAxis], x = 0, y = A.length; y > x; x++) {
						if ("category" == (A[x].type || "category")) {
							for (i = [], z = 0, q = A[x].data.length; q > z; z++) {
								i.push(this.getDataFromOption(A[x].data[z]))
							}
							v += i.join(", ") + "\n\n"
						}
					}
				}
				if (this.option.yAxis) {
					for (A = this.option.yAxis instanceof Array ? this.option.yAxis : [this.option.yAxis], x = 0, y = A.length; y > x; x++) {
						if ("category" == A[x].type) {
							for (i = [], z = 0, q = A[x].data.length; q > z; z++) {
								i.push(this.getDataFromOption(A[x].data[z]))
							}
							v += i.join(", ") + "\n\n"
						}
					}
				}
				var w, u = this.option.series;
				for (x = 0, y = u.length; y > x; x++) {
					for (i = [], z = 0, q = u[x].data.length; q > z; z++) {
						p = u[x].data[z], w = u[x].type == k.CHART_TYPE_PIE || u[x].type == k.CHART_TYPE_MAP ? (p.name || "-") + ":" : "", u[x].type == k.CHART_TYPE_SCATTER && (p = this.getDataFromOption(p).join(", ")), i.push(w + this.getDataFromOption(p))
					}
					v += (u[x].name || "-") + " : \n", v += i.join(u[x].type == k.CHART_TYPE_SCATTER ? "\n" : ", "), v += "\n\n"
				}
				return v
			},
			_save: function() {
				var s = this._textArea.value,
					p = this.query(this.option, "toolbox.feature.dataView.contentToOption");
				if ("function" != typeof p) {
					s = s.split("\n");
					for (var v = [], i = 0, u = s.length; u > i; i++) {
						s[i] = this._trim(s[i]), "" !== s[i] && v.push(s[i])
					}
					this._contentToOption(v)
				} else {
					p(s, this.option)
				}
				this.hide();
				var q = this;
				setTimeout(function() {
					q.messageCenter && q.messageCenter.dispatch(k.EVENT.DATA_VIEW_CHANGED, null, {
						option: q.option
					}, q.myChart)
				}, q.canvasSupported ? 800 : 100)
			},
			_contentToOption: function(y) {
				var A, q, z, p, i, B, w, x = [],
					v = 0;
				if (this.option.xAxis) {
					for (x = this.option.xAxis instanceof Array ? this.option.xAxis : [this.option.xAxis], A = 0, p = x.length; p > A; A++) {
						if ("category" == (x[A].type || "category")) {
							for (B = y[v].split(","), q = 0, z = x[A].data.length; z > q; q++) {
								w = this._trim(B[q] || ""), i = x[A].data[q], "undefined" != typeof x[A].data[q].value ? x[A].data[q].value = w : x[A].data[q] = w
							}
							v++
						}
					}
				}
				if (this.option.yAxis) {
					for (x = this.option.yAxis instanceof Array ? this.option.yAxis : [this.option.yAxis], A = 0, p = x.length; p > A; A++) {
						if ("category" == x[A].type) {
							for (B = y[v].split(","), q = 0, z = x[A].data.length; z > q; q++) {
								w = this._trim(B[q] || ""), i = x[A].data[q], "undefined" != typeof x[A].data[q].value ? x[A].data[q].value = w : x[A].data[q] = w
							}
							v++
						}
					}
				}
				var u = this.option.series;
				for (A = 0, p = u.length; p > A; A++) {
					if (v++, u[A].type == k.CHART_TYPE_SCATTER) {
						for (var q = 0, z = u[A].data.length; z > q; q++) {
							B = y[v], w = B.replace(" ", "").split(","), "undefined" != typeof u[A].data[q].value ? u[A].data[q].value = w : u[A].data[q] = w, v++
						}
					} else {
						B = y[v].split(",");
						for (var q = 0, z = u[A].data.length; z > q; q++) {
							w = (B[q] || "").replace(/.*:/, ""), w = this._trim(w), w = "-" != w && "" !== w ? w - 0 : "-", "undefined" != typeof u[A].data[q].value ? u[A].data[q].value = w : u[A].data[q] = w
						}
						v++
					}
				}
			},
			_trim: function(i) {
				var a = new RegExp("(^[\\s\\t\\xa0\\u3000]+)|([\\u3000\\xa0\\s\\t]+$)", "g");
				return i.replace(a, "")
			},
			_stop: function(a) {
				a = a || window.event, a.stopPropagation ? a.stopPropagation() : a.cancelBubble = !0
			},
			resize: function() {
				this._zrHeight = this.zr.getHeight(), this._zrWidth = this.zr.getWidth(), this._tDom.offsetHeight > 10 && (this._sizeCssText = "width:" + this._zrWidth + "px;height:" + this._zrHeight + "px;background-color:#fff;", this._tDom.style.cssText = this._gCssText + this._sizeCssText, this._textArea.style.cssText = "display:block;margin:0 0 8px 0;padding:4px 6px;overflow:auto;width:" + (this._zrWidth - 15) + "px;height:" + (this._zrHeight - 100) + "px;")
			},
			dispose: function() {
				window.removeEventListener ? (this._tDom.removeEventListener("click", this._stop), this._tDom.removeEventListener("mousewheel", this._stop), this._tDom.removeEventListener("mousemove", this._stop), this._tDom.removeEventListener("mousedown", this._stop), this._tDom.removeEventListener("mouseup", this._stop), this._tDom.removeEventListener("touchstart", this._stop), this._tDom.removeEventListener("touchmove", this._stop), this._tDom.removeEventListener("touchend", this._stop)) : (this._tDom.detachEvent("onclick", this._stop), this._tDom.detachEvent("onmousewheel", this._stop), this._tDom.detachEvent("onmousemove", this._stop), this._tDom.detachEvent("onmousedown", this._stop), this._tDom.detachEvent("onmouseup", this._stop)), this._buttonRefresh.onclick = null, this._buttonClose.onclick = null, this._hasShow && (this._tDom.removeChild(this._textArea), this._tDom.removeChild(this._buttonRefresh), this._tDom.removeChild(this._buttonClose)), this._textArea = null, this._buttonRefresh = null, this._buttonClose = null, this.dom.firstChild.removeChild(this._tDom), this._tDom = null
			}
		}, j.inherits(l, o), m("../component").define("dataView", l), l
	}), h("echarts/util/shape/Cross", ["require", "zrender/shape/Base", "zrender/shape/Line", "zrender/tool/util", "./normalIsCover"], function(m) {
		function l(a) {
			o.call(this, a)
		}
		var o = m("zrender/shape/Base"),
			k = m("zrender/shape/Line"),
			j = m("zrender/tool/util");
		return l.prototype = {
			type: "cross",
			buildPath: function(i, a) {
				var p = a.rect;
				a.xStart = p.x, a.xEnd = p.x + p.width, a.yStart = a.yEnd = a.y, k.prototype.buildPath(i, a), a.xStart = a.xEnd = a.x, a.yStart = p.y, a.yEnd = p.y + p.height, k.prototype.buildPath(i, a)
			},
			getRect: function(a) {
				return a.rect
			},
			isCover: m("./normalIsCover")
		}, j.inherits(l, o), l
	}), h("zrender/shape/Sector", ["require", "../tool/math", "../tool/computeBoundingBox", "../tool/vector", "./Base", "../tool/util"], function(v) {
		var x = v("../tool/math"),
			m = v("../tool/computeBoundingBox"),
			q = v("../tool/vector"),
			w = v("./Base"),
			k = q.create(),
			j = q.create(),
			y = q.create(),
			p = q.create(),
			u = function(a) {
				w.call(this, a)
			};
		return u.prototype = {
			type: "sector",
			buildPath: function(G, A) {
				var E = A.x,
					H = A.y,
					z = A.r0 || 0,
					t = A.r,
					I = A.startAngle,
					D = A.endAngle,
					F = A.clockWise || !1;
				I = x.degreeToRadian(I), D = x.degreeToRadian(D), F || (I = -I, D = -D);
				var C = x.cos(I),
					B = x.sin(I);
				G.moveTo(C * z + E, B * z + H), G.lineTo(C * t + E, B * t + H), G.arc(E, H, t, I, D, !F), G.lineTo(x.cos(D) * z + E, x.sin(D) * z + H), 0 !== z && G.arc(E, H, z, D, I, F), G.closePath()
			},
			getRect: function(t) {
				if (t.__rect) {
					return t.__rect
				}
				var n = t.x,
					r = t.y,
					i = t.r0 || 0,
					l = t.r,
					o = x.degreeToRadian(t.startAngle),
					z = x.degreeToRadian(t.endAngle),
					s = t.clockWise;
				return s || (o = -o, z = -z), i > 1 ? m.arc(n, r, i, o, z, !s, k, y) : (k[0] = y[0] = n, k[1] = y[1] = r), m.arc(n, r, l, o, z, !s, j, p), q.min(k, k, j), q.max(y, y, p), t.__rect = {
					x: k[0],
					y: k[1],
					width: y[0] - k[0],
					height: y[1] - k[1]
				}, t.__rect
			}
		}, v("../tool/util").inherits(u, w), u
	}), h("echarts/util/shape/Candle", ["require", "zrender/shape/Base", "zrender/tool/util", "./normalIsCover"], function(k) {
		function j(i) {
			l.call(this, i)
		}
		var l = k("zrender/shape/Base"),
			a = k("zrender/tool/util");
		return j.prototype = {
			type: "candle",
			_numberOrder: function(m, i) {
				return i - m
			},
			buildPath: function(m, i) {
				var o = a.clone(i.y).sort(this._numberOrder);
				m.moveTo(i.x, o[3]), m.lineTo(i.x, o[2]), m.moveTo(i.x - i.width / 2, o[2]), m.rect(i.x - i.width / 2, o[2], i.width, o[1] - o[2]), m.moveTo(i.x, o[1]), m.lineTo(i.x, o[0])
			},
			getRect: function(m) {
				if (!m.__rect) {
					var i = 0;
					("stroke" == m.brushType || "fill" == m.brushType) && (i = m.lineWidth || 1);
					var o = a.clone(m.y).sort(this._numberOrder);
					m.__rect = {
						x: Math.round(m.x - m.width / 2 - i / 2),
						y: Math.round(o[3] - i / 2),
						width: m.width + i,
						height: o[0] - o[3] + i
					}
				}
				return m.__rect
			},
			isCover: k("./normalIsCover")
		}, a.inherits(j, l), j
	}), h("zrender/tool/computeBoundingBox", ["require", "./vector", "./curve"], function(v) {
		function x(E, G, B) {
			if (0 !== E.length) {
				for (var D = E[0][0], F = E[0][0], A = E[0][1], z = E[0][1], H = 1; H < E.length; H++) {
					var C = E[H];
					C[0] < D && (D = C[0]), C[0] > F && (F = C[0]), C[1] < A && (A = C[1]), C[1] > z && (z = C[1])
				}
				G[0] = D, G[1] = A, B[0] = F, B[1] = z
			}
		}

		function m(G, J, z, E, I, o) {
			var K = [];
			k.cubicExtrema(G[0], J[0], z[0], E[0], K);
			for (var D = 0; D < K.length; D++) {
				K[D] = k.cubicAt(G[0], J[0], z[0], E[0], K[D])
			}
			var F = [];
			k.cubicExtrema(G[1], J[1], z[1], E[1], F);
			for (var D = 0; D < F.length; D++) {
				F[D] = k.cubicAt(G[1], J[1], z[1], E[1], F[D])
			}
			K.push(G[0], E[0]), F.push(G[1], E[1]);
			var B = Math.min.apply(null, K),
				A = Math.max.apply(null, K),
				C = Math.min.apply(null, F),
				H = Math.max.apply(null, F);
			I[0] = B, I[1] = C, o[0] = A, o[1] = H
		}

		function q(G, J, z, E, I) {
			var o = k.quadraticExtremum(G[0], J[0], z[0]),
				K = k.quadraticExtremum(G[1], J[1], z[1]);
			o = Math.max(Math.min(o, 1), 0), K = Math.max(Math.min(K, 1), 0);
			var D = 1 - o,
				F = 1 - K,
				B = D * D * G[0] + 2 * D * o * J[0] + o * o * z[0],
				A = D * D * G[1] + 2 * D * o * J[1] + o * o * z[1],
				C = F * F * G[0] + 2 * F * K * J[0] + K * K * z[0],
				H = F * F * G[1] + 2 * F * K * J[1] + K * K * z[1];
			E[0] = Math.min(G[0], z[0], B, C), E[1] = Math.min(G[1], z[1], A, H), I[0] = Math.max(G[0], z[0], B, C), I[1] = Math.max(G[1], z[1], A, H)
		}
		var w = v("./vector"),
			k = v("./curve"),
			j = w.create(),
			y = w.create(),
			p = w.create(),
			u = function(C, E, l, A, a, B, s, r) {
				if (Math.abs(A - a) >= 2 * Math.PI) {
					return s[0] = C - l, s[1] = E - l, r[0] = C + l, void(r[1] = E + l)
				}
				if (j[0] = Math.cos(A) * l + C, j[1] = Math.sin(A) * l + E, y[0] = Math.cos(a) * l + C, y[1] = Math.sin(a) * l + E, w.min(s, j, y), w.max(r, j, y), A %= 2 * Math.PI, 0 > A && (A += 2 * Math.PI), a %= 2 * Math.PI, 0 > a && (a += 2 * Math.PI), A > a && !B ? a += 2 * Math.PI : a > A && B && (A += 2 * Math.PI), B) {
					var z = a;
					a = A, A = z
				}
				for (var D = 0; a > D; D += Math.PI / 2) {
					D > A && (p[0] = Math.cos(D) * l + C, p[1] = Math.sin(D) * l + E, w.min(s, p, s), w.max(r, p, r))
				}
			};
		return x.cubeBezier = m, x.quadraticBezier = q, x.arc = u, x
	}), h("echarts/util/shape/Chain", ["require", "zrender/shape/Base", "./Icon", "zrender/shape/util/dashedLineTo", "zrender/tool/util", "zrender/tool/matrix"], function(p) {
		function l(a) {
			s.call(this, a)
		}
		var s = p("zrender/shape/Base"),
			k = p("./Icon"),
			j = p("zrender/shape/util/dashedLineTo"),
			q = p("zrender/tool/util"),
			m = p("zrender/tool/matrix");
		return l.prototype = {
			type: "chain",
			brush: function(i, a) {
				var o = this.style;
				a && (o = this.getHighlightStyle(o, this.highlightStyle || {})), i.save(), this.setContext(i, o), this.setTransform(i), i.save(), i.beginPath(), this.buildLinePath(i, o), i.stroke(), i.restore(), this.brushSymbol(i, o), i.restore()
			},
			buildLinePath: function(x, u) {
				var z = u.x,
					a = u.y + 5,
					y = u.width,
					w = u.height / 2 - 10;
				if (x.moveTo(z, a), x.lineTo(z, a + w), x.moveTo(z + y, a), x.lineTo(z + y, a + w), x.moveTo(z, a + w / 2), u.lineType && "solid" != u.lineType) {
					if ("dashed" == u.lineType || "dotted" == u.lineType) {
						var v = (u.lineWidth || 1) * ("dashed" == u.lineType ? 5 : 1);
						j(x, z, a + w / 2, z + y, a + w / 2, v)
					}
				} else {
					x.lineTo(z + y, a + w / 2)
				}
			},
			brushSymbol: function(y, v) {
				var A = v.y + v.height / 4;
				y.save();
				for (var u, z = v.chainPoint, x = 0, w = z.length; w > x; x++) {
					if (u = z[x], "none" != u.symbol) {
						y.beginPath();
						var i = u.symbolSize;
						k.prototype.buildPath(y, {
							iconType: u.symbol,
							x: u.x - i,
							y: A - i,
							width: 2 * i,
							height: 2 * i,
							n: u.n
						}), y.fillStyle = u.isEmpty ? "#fff" : v.strokeColor, y.closePath(), y.fill(), y.stroke()
					}
					u.showLabel && (y.font = u.textFont, y.fillStyle = u.textColor, y.textAlign = u.textAlign, y.textBaseline = u.textBaseline, u.rotation ? (y.save(), this._updateTextTransform(y, u.rotation), y.fillText(u.name, u.textX, u.textY), y.restore()) : y.fillText(u.name, u.textX, u.textY))
				}
				y.restore()
			},
			_updateTextTransform: function(v, u) {
				var w = m.create();
				if (m.identity(w), 0 !== u[0]) {
					var r = u[1] || 0,
						o = u[2] || 0;
					(r || o) && m.translate(w, w, [-r, -o]), m.rotate(w, w, u[0]), (r || o) && m.translate(w, w, [r, o])
				}
				v.transform.apply(v, w)
			},
			isCover: function(i, a) {
				var o = this.style;
				return i >= o.x && i <= o.x + o.width && a >= o.y && a <= o.y + o.height ? !0 : !1
			}
		}, q.inherits(l, s), l
	}), h("zrender/shape/Ring", ["require", "./Base", "../tool/util"], function(i) {
		var a = i("./Base"),
			j = function(k) {
				a.call(this, k)
			};
		return j.prototype = {
			type: "ring",
			buildPath: function(l, k) {
				l.arc(k.x, k.y, k.r, 0, 2 * Math.PI, !1), l.moveTo(k.x + k.r0, k.y), l.arc(k.x, k.y, k.r0, 0, 2 * Math.PI, !0)
			},
			getRect: function(l) {
				if (l.__rect) {
					return l.__rect
				}
				var k;
				return k = "stroke" == l.brushType || "fill" == l.brushType ? l.lineWidth || 1 : 0, l.__rect = {
					x: Math.round(l.x - l.r - k / 2),
					y: Math.round(l.y - l.r - k / 2),
					width: 2 * l.r + k,
					height: 2 * l.r + k
				}, l.__rect
			}
		}, i("../tool/util").inherits(j, a), j
	}), h("echarts/component/axis", ["require", "./base", "zrender/shape/Line", "../config", "../util/ecData", "zrender/tool/util", "zrender/tool/color", "./categoryAxis", "./valueAxis", "../component"], function(q) {
		function l(y, w, s, n, z, x) {
			v.call(this, y, w, s, n, z), this.axisType = x, this._axisList = [], this.refresh(n)
		}
		var v = q("./base"),
			k = q("zrender/shape/Line"),
			j = q("../config"),
			u = q("../util/ecData"),
			p = q("zrender/tool/util"),
			m = q("zrender/tool/color");
		return l.prototype = {
			type: j.COMPONENT_TYPE_AXIS,
			axisBase: {
				_buildAxisLine: function() {
					var s = this.option.axisLine.lineStyle.width,
						r = s / 2,
						x = {
							_axisShape: "axisLine",
							zlevel: this.getZlevelBase(),
							z: this.getZBase() + 3,
							hoverable: !1
						},
						i = this.grid;
					switch (this.option.position) {
						case "left":
							x.style = {
								xStart: i.getX() - r,
								yStart: i.getYend(),
								xEnd: i.getX() - r,
								yEnd: i.getY(),
								lineCap: "round"
							};
							break;
						case "right":
							x.style = {
								xStart: i.getXend() + r,
								yStart: i.getYend(),
								xEnd: i.getXend() + r,
								yEnd: i.getY(),
								lineCap: "round"
							};
							break;
						case "bottom":
							x.style = {
								xStart: i.getX(),
								yStart: i.getYend() + r,
								xEnd: i.getXend(),
								yEnd: i.getYend() + r,
								lineCap: "round"
							};
							break;
						case "top":
							x.style = {
								xStart: i.getX(),
								yStart: i.getY() - r,
								xEnd: i.getXend(),
								yEnd: i.getY() - r,
								lineCap: "round"
							}
					}
					var w = x.style;
					"" !== this.option.name && (w.text = this.option.name, w.textPosition = this.option.nameLocation, w.textFont = this.getFont(this.option.nameTextStyle), this.option.nameTextStyle.align && (w.textAlign = this.option.nameTextStyle.align), this.option.nameTextStyle.baseline && (w.textBaseline = this.option.nameTextStyle.baseline), this.option.nameTextStyle.color && (w.textColor = this.option.nameTextStyle.color)), w.strokeColor = this.option.axisLine.lineStyle.color, w.lineWidth = s, this.isHorizontal() ? w.yStart = w.yEnd = this.subPixelOptimize(w.yEnd, s) : w.xStart = w.xEnd = this.subPixelOptimize(w.xEnd, s), w.lineType = this.option.axisLine.lineStyle.type, x = new k(x), this.shapeList.push(x)
				},
				_axisLabelClickable: function(i, a) {
					return i ? (u.pack(a, void 0, -1, void 0, -1, a.style.text), a.hoverable = !0, a.clickable = !0, a.highlightStyle = {
						color: m.lift(a.style.color, 1),
						brushType: "fill"
					}, a) : a
				},
				refixAxisShape: function(w, s) {
					if (this.option.axisLine.onZero) {
						var x;
						if (this.isHorizontal() && null != s) {
							for (var r = 0, o = this.shapeList.length; o > r; r++) {
								"axisLine" === this.shapeList[r]._axisShape ? (this.shapeList[r].style.yStart = this.shapeList[r].style.yEnd = this.subPixelOptimize(s, this.shapeList[r].stylelineWidth), this.zr.modShape(this.shapeList[r].id)) : "axisTick" === this.shapeList[r]._axisShape && (x = this.shapeList[r].style.yEnd - this.shapeList[r].style.yStart, this.shapeList[r].style.yStart = s - x, this.shapeList[r].style.yEnd = s, this.zr.modShape(this.shapeList[r].id))
							}
						}
						if (!this.isHorizontal() && null != w) {
							for (var r = 0, o = this.shapeList.length; o > r; r++) {
								"axisLine" === this.shapeList[r]._axisShape ? (this.shapeList[r].style.xStart = this.shapeList[r].style.xEnd = this.subPixelOptimize(w, this.shapeList[r].stylelineWidth), this.zr.modShape(this.shapeList[r].id)) : "axisTick" === this.shapeList[r]._axisShape && (x = this.shapeList[r].style.xEnd - this.shapeList[r].style.xStart, this.shapeList[r].style.xStart = w, this.shapeList[r].style.xEnd = w + x, this.zr.modShape(this.shapeList[r].id))
							}
						}
					}
				},
				getPosition: function() {
					return this.option.position
				},
				isHorizontal: function() {
					return "bottom" === this.option.position || "top" === this.option.position
				}
			},
			reformOption: function(i) {
				if (!i || i instanceof Array && 0 === i.length ? i = [{
						type: j.COMPONENT_TYPE_AXIS_VALUE
					}] : i instanceof Array || (i = [i]), i.length > 2 && (i = [i[0], i[1]]), "xAxis" === this.axisType) {
					(!i[0].position || "bottom" != i[0].position && "top" != i[0].position) && (i[0].position = "bottom"), i.length > 1 && (i[1].position = "bottom" === i[0].position ? "top" : "bottom");
					for (var a = 0, o = i.length; o > a; a++) {
						i[a].type = i[a].type || "category", i[a].xAxisIndex = a, i[a].yAxisIndex = -1
					}
				} else {
					(!i[0].position || "left" != i[0].position && "right" != i[0].position) && (i[0].position = "left"), i.length > 1 && (i[1].position = "left" === i[0].position ? "right" : "left");
					for (var a = 0, o = i.length; o > a; a++) {
						i[a].type = i[a].type || "value", i[a].xAxisIndex = -1, i[a].yAxisIndex = a
					}
				}
				return i
			},
			refresh: function(w) {
				var z;
				w && (this.option = w, "xAxis" === this.axisType ? (this.option.xAxis = this.reformOption(w.xAxis), z = this.option.xAxis) : (this.option.yAxis = this.reformOption(w.yAxis), z = this.option.yAxis), this.series = w.series);
				for (var s = q("./categoryAxis"), e = q("./valueAxis"), y = Math.max(z && z.length || 0, this._axisList.length), x = 0; y > x; x++) {
					!this._axisList[x] || !w || z[x] && this._axisList[x].type == z[x].type || (this._axisList[x].dispose && this._axisList[x].dispose(), this._axisList[x] = !1), this._axisList[x] ? this._axisList[x].refresh && this._axisList[x].refresh(z ? z[x] : !1, this.series) : z && z[x] && (this._axisList[x] = "category" === z[x].type ? new s(this.ecTheme, this.messageCenter, this.zr, z[x], this.myChart, this.axisBase) : new e(this.ecTheme, this.messageCenter, this.zr, z[x], this.myChart, this.axisBase, this.series))
				}
			},
			getAxis: function(a) {
				return this._axisList[a]
			},
			clear: function() {
				for (var i = 0, a = this._axisList.length; a > i; i++) {
					this._axisList[i].dispose && this._axisList[i].dispose()
				}
				this._axisList = []
			}
		}, p.inherits(l, v), q("../component").define("axis", l), l
	}), h("echarts/component/grid", ["require", "./base", "zrender/shape/Rectangle", "../config", "zrender/tool/util", "../component"], function(m) {
		function l(u, s, r, n, v) {
			q.call(this, u, s, r, n, v), this.refresh(n)
		}
		var q = m("./base"),
			k = m("zrender/shape/Rectangle"),
			j = m("../config");
		j.grid = {
			zlevel: 0,
			z: 0,
			x: 80,
			y: 60,
			x2: 80,
			y2: 60,
			backgroundColor: "rgba(0,0,0,0)",
			borderWidth: 1,
			borderColor: "#ccc"
		};
		var p = m("zrender/tool/util");
		return l.prototype = {
			type: j.COMPONENT_TYPE_GRID,
			getX: function() {
				return this._x
			},
			getY: function() {
				return this._y
			},
			getWidth: function() {
				return this._width
			},
			getHeight: function() {
				return this._height
			},
			getXend: function() {
				return this._x + this._width
			},
			getYend: function() {
				return this._y + this._height
			},
			getArea: function() {
				return {
					x: this._x,
					y: this._y,
					width: this._width,
					height: this._height
				}
			},
			getBbox: function() {
				return [
					[this._x, this._y],
					[this.getXend(), this.getYend()]
				]
			},
			refixAxisShape: function(v) {
				for (var s, x, a, w = v.xAxis._axisList.concat(v.yAxis ? v.yAxis._axisList : []), u = w.length; u--;) {
					a = w[u], a.type == j.COMPONENT_TYPE_AXIS_VALUE && a._min < 0 && a._max >= 0 && (a.isHorizontal() ? s = a.getCoord(0) : x = a.getCoord(0))
				}
				if ("undefined" != typeof s || "undefined" != typeof x) {
					for (u = w.length; u--;) {
						w[u].refixAxisShape(s, x)
					}
				}
			},
			refresh: function(r) {
				if (r || this._zrWidth != this.zr.getWidth() || this._zrHeight != this.zr.getHeight()) {
					this.clear(), this.option = r || this.option, this.option.grid = this.reformOption(this.option.grid);
					var o = this.option.grid;
					this._zrWidth = this.zr.getWidth(), this._zrHeight = this.zr.getHeight(), this._x = this.parsePercent(o.x, this._zrWidth), this._y = this.parsePercent(o.y, this._zrHeight);
					var s = this.parsePercent(o.x2, this._zrWidth),
						i = this.parsePercent(o.y2, this._zrHeight);
					this._width = "undefined" == typeof o.width ? this._zrWidth - this._x - s : this.parsePercent(o.width, this._zrWidth), this._width = this._width <= 0 ? 10 : this._width, this._height = "undefined" == typeof o.height ? this._zrHeight - this._y - i : this.parsePercent(o.height, this._zrHeight), this._height = this._height <= 0 ? 10 : this._height, this._x = this.subPixelOptimize(this._x, o.borderWidth), this._y = this.subPixelOptimize(this._y, o.borderWidth), this.shapeList.push(new k({
						zlevel: this.getZlevelBase(),
						z: this.getZBase(),
						hoverable: !1,
						style: {
							x: this._x,
							y: this._y,
							width: this._width,
							height: this._height,
							brushType: o.borderWidth > 0 ? "both" : "fill",
							color: o.backgroundColor,
							strokeColor: o.borderColor,
							lineWidth: o.borderWidth
						}
					})), this.zr.addShape(this.shapeList[0])
				}
			}
		}, p.inherits(l, q), m("../component").define("grid", l), l
	}), h("echarts/component/dataZoom", ["require", "./base", "zrender/shape/Rectangle", "zrender/shape/Polygon", "../util/shape/Icon", "../config", "../util/date", "zrender/tool/util", "../component"], function(u) {
		function w(z, s, n, l, A) {
			m.call(this, z, s, n, l, A);
			var y = this;
			y._ondrift = function(i, a) {
				return y.__ondrift(this, i, a)
			}, y._ondragend = function() {
				return y.__ondragend()
			}, this._fillerSize = 30, this._isSilence = !1, this._zoom = {}, this.option.dataZoom = this.reformOption(this.option.dataZoom), this.zoomOption = this.option.dataZoom, this._handleSize = this.zoomOption.handleSize, this.myChart.canvasSupported || (this.zoomOption.realtime = !1), this._location = this._getLocation(), this._zoom = this._getZoom(), this._backupData(), this.option.dataZoom.show && this._buildShape(), this._syncData()
		}
		var m = u("./base"),
			q = u("zrender/shape/Rectangle"),
			v = u("zrender/shape/Polygon"),
			k = u("../util/shape/Icon"),
			j = u("../config");
		j.dataZoom = {
			zlevel: 0,
			z: 4,
			show: !1,
			orient: "horizontal",
			backgroundColor: "rgba(0,0,0,0)",
			dataBackgroundColor: "#eee",
			fillerColor: "rgba(144,197,237,0.2)",
			handleColor: "rgba(70,130,180,0.8)",
			handleSize: 8,
			showDetail: !0,
			realtime: !0
		};
		var x = u("../util/date"),
			p = u("zrender/tool/util");
		return w.prototype = {
			type: j.COMPONENT_TYPE_DATAZOOM,
			_buildShape: function() {
				this._buildBackground(), this._buildFiller(), this._buildHandle(), this._buildFrame();
				for (var i = 0, a = this.shapeList.length; a > i; i++) {
					this.zr.addShape(this.shapeList[i])
				}
				this._syncFrameShape()
			},
			_getLocation: function() {
				var s, r, y, o, l = this.component.grid;
				return "horizontal" == this.zoomOption.orient ? (y = this.zoomOption.width || l.getWidth(), o = this.zoomOption.height || this._fillerSize, s = null != this.zoomOption.x ? this.zoomOption.x : l.getX(), r = null != this.zoomOption.y ? this.zoomOption.y : this.zr.getHeight() - o - 2) : (y = this.zoomOption.width || this._fillerSize, o = this.zoomOption.height || l.getHeight(), s = null != this.zoomOption.x ? this.zoomOption.x : 2, r = null != this.zoomOption.y ? this.zoomOption.y : l.getY()), {
					x: s,
					y: r,
					width: y,
					height: o
				}
			},
			_getZoom: function() {
				var G = this.option.series,
					K = this.option.xAxis;
				!K || K instanceof Array || (K = [K], this.option.xAxis = K);
				var z = this.option.yAxis;
				!z || z instanceof Array || (z = [z], this.option.yAxis = z);
				var E, J, y = [],
					L = this.zoomOption.xAxisIndex;
				if (K && null == L) {
					E = [];
					for (var D = 0, F = K.length; F > D; D++) {
						("category" == K[D].type || null == K[D].type) && E.push(D)
					}
				} else {
					E = L instanceof Array ? L : null != L ? [L] : []
				}
				if (L = this.zoomOption.yAxisIndex, z && null == L) {
					J = [];
					for (var D = 0, F = z.length; F > D; D++) {
						"category" == z[D].type && J.push(D)
					}
				} else {
					J = L instanceof Array ? L : null != L ? [L] : []
				}
				for (var B, D = 0, F = G.length; F > D; D++) {
					if (B = G[D], B.type == j.CHART_TYPE_LINE || B.type == j.CHART_TYPE_BAR || B.type == j.CHART_TYPE_SCATTER || B.type == j.CHART_TYPE_K) {
						for (var A = 0, C = E.length; C > A; A++) {
							if (E[A] == (B.xAxisIndex || 0)) {
								y.push(D);
								break
							}
						}
						for (var A = 0, C = J.length; C > A; A++) {
							if (J[A] == (B.yAxisIndex || 0)) {
								y.push(D);
								break
							}
						}
						null == this.zoomOption.xAxisIndex && null == this.zoomOption.yAxisIndex && B.data && this.getDataFromOption(B.data[0]) instanceof Array && (B.type == j.CHART_TYPE_SCATTER || B.type == j.CHART_TYPE_LINE || B.type == j.CHART_TYPE_BAR) && y.push(D)
					}
				}
				var H = null != this._zoom.start ? this._zoom.start : null != this.zoomOption.start ? this.zoomOption.start : 0,
					r = null != this._zoom.end ? this._zoom.end : null != this.zoomOption.end ? this.zoomOption.end : 100;
				H > r && (H += r, r = H - r, H -= r);
				var I = Math.round((r - H) / 100 * ("horizontal" == this.zoomOption.orient ? this._location.width : this._location.height));
				return {
					start: H,
					end: r,
					start2: 0,
					end2: 100,
					size: I,
					xAxisIndex: E,
					yAxisIndex: J,
					seriesIndex: y,
					scatterMap: this._zoom.scatterMap || {}
				}
			},
			_backupData: function() {
				this._originalData = {
					xAxis: {},
					yAxis: {},
					series: {}
				};
				for (var C = this.option.xAxis, E = this._zoom.xAxisIndex, y = 0, A = E.length; A > y; y++) {
					this._originalData.xAxis[E[y]] = C[E[y]].data
				}
				for (var D = this.option.yAxis, r = this._zoom.yAxisIndex, y = 0, A = r.length; A > y; y++) {
					this._originalData.yAxis[r[y]] = D[r[y]].data
				}
				for (var F, z = this.option.series, B = this._zoom.seriesIndex, y = 0, A = B.length; A > y; y++) {
					F = z[B[y]], this._originalData.series[B[y]] = F.data, F.data && this.getDataFromOption(F.data[0]) instanceof Array && (F.type == j.CHART_TYPE_SCATTER || F.type == j.CHART_TYPE_LINE || F.type == j.CHART_TYPE_BAR) && (this._backupScale(), this._calculScatterMap(B[y]))
				}
			},
			_calculScatterMap: function(s) {
				this._zoom.scatterMap = this._zoom.scatterMap || {}, this._zoom.scatterMap[s] = this._zoom.scatterMap[s] || {};
				var A = u("../component"),
					l = A.get("axis"),
					e = p.clone(this.option.xAxis);
				"category" == e[0].type && (e[0].type = "value"), e[1] && "category" == e[1].type && (e[1].type = "value");
				var z = new l(this.ecTheme, null, !1, {
						xAxis: e,
						series: this.option.series
					}, this, "xAxis"),
					y = this.option.series[s].xAxisIndex || 0;
				this._zoom.scatterMap[s].x = z.getAxis(y).getExtremum(), z.dispose(), e = p.clone(this.option.yAxis), "category" == e[0].type && (e[0].type = "value"), e[1] && "category" == e[1].type && (e[1].type = "value"), z = new l(this.ecTheme, null, !1, {
					yAxis: e,
					series: this.option.series
				}, this, "yAxis"), y = this.option.series[s].yAxisIndex || 0, this._zoom.scatterMap[s].y = z.getAxis(y).getExtremum(), z.dispose()
			},
			_buildBackground: function() {
				var L = this._location.width,
					A = this._location.height;
				this.shapeList.push(new q({
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					hoverable: !1,
					style: {
						x: this._location.x,
						y: this._location.y,
						width: L,
						height: A,
						color: this.zoomOption.backgroundColor
					}
				}));
				for (var E = 0, D = this._originalData.xAxis, B = this._zoom.xAxisIndex, G = 0, I = B.length; I > G; G++) {
					E = Math.max(E, D[B[G]].length)
				}
				for (var F = this._originalData.yAxis, a = this._zoom.yAxisIndex, G = 0, I = a.length; I > G; G++) {
					E = Math.max(E, F[a[G]].length)
				}
				for (var i, M = this._zoom.seriesIndex[0], C = this._originalData.series[M], N = Number.MIN_VALUE, z = Number.MAX_VALUE, G = 0, I = C.length; I > G; G++) {
					i = this.getDataFromOption(C[G], 0), this.option.series[M].type == j.CHART_TYPE_K && (i = i[1]), isNaN(i) && (i = 0), N = Math.max(N, i), z = Math.min(z, i)
				}
				var r = N - z,
					J = [],
					O = L / (E - (E > 1 ? 1 : 0)),
					K = A / (E - (E > 1 ? 1 : 0)),
					H = 1;
				"horizontal" == this.zoomOption.orient && 1 > O ? H = Math.floor(3 * E / L) : "vertical" == this.zoomOption.orient && 1 > K && (H = Math.floor(3 * E / A));
				for (var G = 0, I = E; I > G; G += H) {
					i = this.getDataFromOption(C[G], 0), this.option.series[M].type == j.CHART_TYPE_K && (i = i[1]), isNaN(i) && (i = 0), J.push("horizontal" == this.zoomOption.orient ? [this._location.x + O * G, this._location.y + A - 1 - Math.round((i - z) / r * (A - 10))] : [this._location.x + 1 + Math.round((i - z) / r * (L - 10)), this._location.y + K * (I - G - 1)])
				}
				"horizontal" == this.zoomOption.orient ? (J.push([this._location.x + L, this._location.y + A]), J.push([this._location.x, this._location.y + A])) : (J.push([this._location.x, this._location.y]), J.push([this._location.x, this._location.y + A])), this.shapeList.push(new v({
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					style: {
						pointList: J,
						color: this.zoomOption.dataBackgroundColor
					},
					hoverable: !1
				}))
			},
			_buildFiller: function() {
				this._fillerShae = {
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					draggable: !0,
					ondrift: this._ondrift,
					ondragend: this._ondragend,
					_type: "filler"
				}, this._fillerShae.style = "horizontal" == this.zoomOption.orient ? {
					x: this._location.x + Math.round(this._zoom.start / 100 * this._location.width) + this._handleSize,
					y: this._location.y,
					width: this._zoom.size - 2 * this._handleSize,
					height: this._location.height,
					color: this.zoomOption.fillerColor,
					text: ":::",
					textPosition: "inside"
				} : {
					x: this._location.x,
					y: this._location.y + Math.round(this._zoom.start / 100 * this._location.height) + this._handleSize,
					width: this._location.width,
					height: this._zoom.size - 2 * this._handleSize,
					color: this.zoomOption.fillerColor,
					text: "::",
					textPosition: "inside"
				}, this._fillerShae.highlightStyle = {
					brushType: "fill",
					color: "rgba(0,0,0,0)"
				}, this._fillerShae = new q(this._fillerShae), this.shapeList.push(this._fillerShae)
			},
			_buildHandle: function() {
				var a = this.zoomOption.showDetail ? this._getDetail() : {
					start: "",
					end: ""
				};
				this._startShape = {
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					draggable: !0,
					style: {
						iconType: "rectangle",
						x: this._location.x,
						y: this._location.y,
						width: this._handleSize,
						height: this._handleSize,
						color: this.zoomOption.handleColor,
						text: "=",
						textPosition: "inside"
					},
					highlightStyle: {
						text: a.start,
						brushType: "fill",
						textPosition: "left"
					},
					ondrift: this._ondrift,
					ondragend: this._ondragend
				}, "horizontal" == this.zoomOption.orient ? (this._startShape.style.height = this._location.height, this._endShape = p.clone(this._startShape), this._startShape.style.x = this._fillerShae.style.x - this._handleSize, this._endShape.style.x = this._fillerShae.style.x + this._fillerShae.style.width, this._endShape.highlightStyle.text = a.end, this._endShape.highlightStyle.textPosition = "right") : (this._startShape.style.width = this._location.width, this._endShape = p.clone(this._startShape), this._startShape.style.y = this._fillerShae.style.y + this._fillerShae.style.height, this._startShape.highlightStyle.textPosition = "bottom", this._endShape.style.y = this._fillerShae.style.y - this._handleSize, this._endShape.highlightStyle.text = a.end, this._endShape.highlightStyle.textPosition = "top"), this._startShape = new k(this._startShape), this._endShape = new k(this._endShape), this.shapeList.push(this._startShape), this.shapeList.push(this._endShape)
			},
			_buildFrame: function() {
				var i = this.subPixelOptimize(this._location.x, 1),
					a = this.subPixelOptimize(this._location.y, 1);
				this._startFrameShape = {
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					hoverable: !1,
					style: {
						x: i,
						y: a,
						width: this._location.width - (i > this._location.x ? 1 : 0),
						height: this._location.height - (a > this._location.y ? 1 : 0),
						lineWidth: 1,
						brushType: "stroke",
						strokeColor: this.zoomOption.handleColor
					}
				}, this._endFrameShape = p.clone(this._startFrameShape), this._startFrameShape = new q(this._startFrameShape), this._endFrameShape = new q(this._endFrameShape), this.shapeList.push(this._startFrameShape), this.shapeList.push(this._endFrameShape)
			},
			_syncHandleShape: function() {
				"horizontal" == this.zoomOption.orient ? (this._startShape.style.x = this._fillerShae.style.x - this._handleSize, this._endShape.style.x = this._fillerShae.style.x + this._fillerShae.style.width, this._zoom.start = (this._startShape.style.x - this._location.x) / this._location.width * 100, this._zoom.end = (this._endShape.style.x + this._handleSize - this._location.x) / this._location.width * 100) : (this._startShape.style.y = this._fillerShae.style.y + this._fillerShae.style.height, this._endShape.style.y = this._fillerShae.style.y - this._handleSize, this._zoom.start = (this._location.y + this._location.height - this._startShape.style.y) / this._location.height * 100, this._zoom.end = (this._location.y + this._location.height - this._endShape.style.y - this._handleSize) / this._location.height * 100), this.zr.modShape(this._startShape.id), this.zr.modShape(this._endShape.id), this._syncFrameShape(), this.zr.refreshNextFrame()
			},
			_syncFillerShape: function() {
				var i, a;
				"horizontal" == this.zoomOption.orient ? (i = this._startShape.style.x, a = this._endShape.style.x, this._fillerShae.style.x = Math.min(i, a) + this._handleSize, this._fillerShae.style.width = Math.abs(i - a) - this._handleSize, this._zoom.start = (Math.min(i, a) - this._location.x) / this._location.width * 100, this._zoom.end = (Math.max(i, a) + this._handleSize - this._location.x) / this._location.width * 100) : (i = this._startShape.style.y, a = this._endShape.style.y, this._fillerShae.style.y = Math.min(i, a) + this._handleSize, this._fillerShae.style.height = Math.abs(i - a) - this._handleSize, this._zoom.start = (this._location.y + this._location.height - Math.max(i, a)) / this._location.height * 100, this._zoom.end = (this._location.y + this._location.height - Math.min(i, a) - this._handleSize) / this._location.height * 100), this.zr.modShape(this._fillerShae.id), this._syncFrameShape(), this.zr.refreshNextFrame()
			},
			_syncFrameShape: function() {
				"horizontal" == this.zoomOption.orient ? (this._startFrameShape.style.width = this._fillerShae.style.x - this._location.x, this._endFrameShape.style.x = this._fillerShae.style.x + this._fillerShae.style.width, this._endFrameShape.style.width = this._location.x + this._location.width - this._endFrameShape.style.x) : (this._startFrameShape.style.y = this._fillerShae.style.y + this._fillerShae.style.height, this._startFrameShape.style.height = this._location.y + this._location.height - this._startFrameShape.style.y, this._endFrameShape.style.height = this._fillerShae.style.y - this._location.y), this.zr.modShape(this._startFrameShape.id), this.zr.modShape(this._endFrameShape.id)
			},
			_syncShape: function() {
				this.zoomOption.show && ("horizontal" == this.zoomOption.orient ? (this._startShape.style.x = this._location.x + this._zoom.start / 100 * this._location.width, this._endShape.style.x = this._location.x + this._zoom.end / 100 * this._location.width - this._handleSize, this._fillerShae.style.x = this._startShape.style.x + this._handleSize, this._fillerShae.style.width = this._endShape.style.x - this._startShape.style.x - this._handleSize) : (this._startShape.style.y = this._location.y + this._location.height - this._zoom.start / 100 * this._location.height, this._endShape.style.y = this._location.y + this._location.height - this._zoom.end / 100 * this._location.height - this._handleSize, this._fillerShae.style.y = this._endShape.style.y + this._handleSize, this._fillerShae.style.height = this._startShape.style.y - this._endShape.style.y - this._handleSize), this.zr.modShape(this._startShape.id), this.zr.modShape(this._endShape.id), this.zr.modShape(this._fillerShae.id), this._syncFrameShape(), this.zr.refresh())
			},
			_syncData: function(C) {
				var A, E, z, y, D;
				for (var B in this._originalData) {
					A = this._originalData[B];
					for (var r in A) {
						D = A[r], null != D && (y = D.length, E = Math.floor(this._zoom.start / 100 * y), z = Math.ceil(this._zoom.end / 100 * y), this.getDataFromOption(D[0]) instanceof Array && this.option[B][r].type != j.CHART_TYPE_K ? (this._setScale(), this.option[B][r].data = this._synScatterData(r, D)) : this.option[B][r].data = D.slice(E, z))
					}
				}
				this._isSilence || !this.zoomOption.realtime && !C || this.messageCenter.dispatch(j.EVENT.DATA_ZOOM, null, {
					zoom: this._zoom
				}, this.myChart)
			},
			_synScatterData: function(G, I) {
				if (0 === this._zoom.start && 100 == this._zoom.end && 0 === this._zoom.start2 && 100 == this._zoom.end2) {
					return I
				}
				var A, E, H, z, y, J = [],
					D = this._zoom.scatterMap[G];
				"horizontal" == this.zoomOption.orient ? (A = D.x.max - D.x.min, E = this._zoom.start / 100 * A + D.x.min, H = this._zoom.end / 100 * A + D.x.min, A = D.y.max - D.y.min, z = this._zoom.start2 / 100 * A + D.y.min, y = this._zoom.end2 / 100 * A + D.y.min) : (A = D.x.max - D.x.min, E = this._zoom.start2 / 100 * A + D.x.min, H = this._zoom.end2 / 100 * A + D.x.min, A = D.y.max - D.y.min, z = this._zoom.start / 100 * A + D.y.min, y = this._zoom.end / 100 * A + D.y.min);
				for (var F, C = 0, B = I.length; B > C; C++) {
					F = I[C].value || I[C], F[0] >= E && F[0] <= H && F[1] >= z && F[1] <= y && J.push(I[C])
				}
				return J
			},
			_setScale: function() {
				var s = 0 !== this._zoom.start || 100 !== this._zoom.end || 0 !== this._zoom.start2 || 100 !== this._zoom.end2,
					r = {
						xAxis: this.option.xAxis,
						yAxis: this.option.yAxis
					};
				for (var y in r) {
					for (var o = 0, l = r[y].length; l > o; o++) {
						r[y][o].scale = s || r[y][o]._scale
					}
				}
			},
			_backupScale: function() {
				var o = {
					xAxis: this.option.xAxis,
					yAxis: this.option.yAxis
				};
				for (var l in o) {
					for (var r = 0, a = o[l].length; a > r; r++) {
						o[l][r]._scale = o[l][r].scale
					}
				}
			},
			_getDetail: function() {
				var H = "horizontal" == this.zoomOption.orient ? "xAxis" : "yAxis",
					K = this._originalData[H];
				for (var A in K) {
					var F = K[A];
					if (null != F) {
						var J = F.length,
							z = Math.floor(this._zoom.start / 100 * J),
							s = Math.ceil(this._zoom.end / 100 * J);
						return s -= s > 0 ? 1 : 0, {
							start: this.getDataFromOption(F[z]),
							end: this.getDataFromOption(F[s])
						}
					}
				}
				var E = this._zoom.seriesIndex[0],
					G = this.option.series[E][H + "Index"] || 0,
					C = this.option[H][G].type,
					B = this._zoom.scatterMap[E][H.charAt(0)].min,
					D = this._zoom.scatterMap[E][H.charAt(0)].max,
					I = D - B;
				if ("value" == C) {
					return {
						start: B + I * this._zoom.start / 100,
						end: B + I * this._zoom.end / 100
					}
				}
				if ("time" == C) {
					D = B + I * this._zoom.end / 100, B += I * this._zoom.start / 100;
					var y = x.getAutoFormatter(B, D).formatter;
					return {
						start: x.format(y, B),
						end: x.format(y, D)
					}
				}
				return {
					start: "",
					end: ""
				}
			},
			__ondrift: function(s, r, y) {
				this.zoomOption.zoomLock && (s = this._fillerShae);
				var o = "filler" == s._type ? this._handleSize : 0;
				if ("horizontal" == this.zoomOption.orient ? s.style.x + r - o <= this._location.x ? s.style.x = this._location.x + o : s.style.x + r + s.style.width + o >= this._location.x + this._location.width ? s.style.x = this._location.x + this._location.width - s.style.width - o : s.style.x += r : s.style.y + y - o <= this._location.y ? s.style.y = this._location.y + o : s.style.y + y + s.style.height + o >= this._location.y + this._location.height ? s.style.y = this._location.y + this._location.height - s.style.height - o : s.style.y += y, "filler" == s._type ? this._syncHandleShape() : this._syncFillerShape(), this.zoomOption.realtime && this._syncData(), this.zoomOption.showDetail) {
					var l = this._getDetail();
					this._startShape.style.text = this._startShape.highlightStyle.text = l.start, this._endShape.style.text = this._endShape.highlightStyle.text = l.end, this._startShape.style.textPosition = this._startShape.highlightStyle.textPosition, this._endShape.style.textPosition = this._endShape.highlightStyle.textPosition
				}
				return !0
			},
			__ondragend: function() {
				this.zoomOption.showDetail && (this._startShape.style.text = this._endShape.style.text = "=", this._startShape.style.textPosition = this._endShape.style.textPosition = "inside", this.zr.modShape(this._startShape.id), this.zr.modShape(this._endShape.id), this.zr.refreshNextFrame()), this.isDragend = !0
			},
			ondragend: function(i, a) {
				this.isDragend && i.target && (!this.zoomOption.realtime && this._syncData(), a.dragOut = !0, a.dragIn = !0, this._isSilence || this.zoomOption.realtime || this.messageCenter.dispatch(j.EVENT.DATA_ZOOM, null, {
					zoom: this._zoom
				}, this.myChart), a.needRefresh = !1, this.isDragend = !1)
			},
			ondataZoom: function(i, a) {
				a.needRefresh = !0
			},
			absoluteZoom: function(a) {
				this._zoom.start = a.start, this._zoom.end = a.end, this._zoom.start2 = a.start2, this._zoom.end2 = a.end2, this._syncShape(), this._syncData(!0)
			},
			rectZoom: function(C) {
				if (!C) {
					return this._zoom.start = this._zoom.start2 = 0, this._zoom.end = this._zoom.end2 = 100, this._syncShape(), this._syncData(!0), this._zoom
				}
				var z = this.component.grid.getArea(),
					E = {
						x: C.x,
						y: C.y,
						width: C.width,
						height: C.height
					};
				if (E.width < 0 && (E.x += E.width, E.width = -E.width), E.height < 0 && (E.y += E.height, E.height = -E.height), E.x > z.x + z.width || E.y > z.y + z.height) {
					return !1
				}
				E.x < z.x && (E.x = z.x), E.x + E.width > z.x + z.width && (E.width = z.x + z.width - E.x), E.y + E.height > z.y + z.height && (E.height = z.y + z.height - E.y);
				var y, l = (E.x - z.x) / z.width,
					D = 1 - (E.x + E.width - z.x) / z.width,
					B = 1 - (E.y + E.height - z.y) / z.height,
					A = (E.y - z.y) / z.height;
				return "horizontal" == this.zoomOption.orient ? (y = this._zoom.end - this._zoom.start, this._zoom.start += y * l, this._zoom.end -= y * D, y = this._zoom.end2 - this._zoom.start2, this._zoom.start2 += y * B, this._zoom.end2 -= y * A) : (y = this._zoom.end - this._zoom.start, this._zoom.start += y * B, this._zoom.end -= y * A, y = this._zoom.end2 - this._zoom.start2, this._zoom.start2 += y * l, this._zoom.end2 -= y * D), this._syncShape(), this._syncData(!0), this._zoom
			},
			syncBackupData: function(D) {
				for (var F, A, C = this._originalData.series, E = D.series, z = 0, y = E.length; y > z; z++) {
					A = E[z].data || E[z].eventList, F = C[z] ? Math.floor(this._zoom.start / 100 * C[z].length) : 0;
					for (var G = 0, B = A.length; B > G; G++) {
						C[z] && (C[z][G + F] = A[G])
					}
				}
			},
			syncOption: function(a) {
				this.silence(!0), this.option = a, this.option.dataZoom = this.reformOption(this.option.dataZoom), this.zoomOption = this.option.dataZoom, this.myChart.canvasSupported || (this.zoomOption.realtime = !1), this.clear(), this._location = this._getLocation(), this._zoom = this._getZoom(), this._backupData(), this.option.dataZoom && this.option.dataZoom.show && this._buildShape(), this._syncData(), this.silence(!1)
			},
			silence: function(a) {
				this._isSilence = a
			},
			getRealDataIndex: function(i, a) {
				if (!this._originalData || 0 === this._zoom.start && 100 == this._zoom.end) {
					return a
				}
				var l = this._originalData.series;
				return l[i] ? Math.floor(this._zoom.start / 100 * l[i].length) + a : -1
			},
			resize: function() {
				this.clear(), this._location = this._getLocation(), this._zoom = this._getZoom(), this.option.dataZoom.show && this._buildShape()
			}
		}, p.inherits(w, m), u("../component").define("dataZoom", w), w
	}), h("echarts/component/categoryAxis", ["require", "./base", "zrender/shape/Text", "zrender/shape/Line", "zrender/shape/Rectangle", "../config", "zrender/tool/util", "zrender/tool/area", "../component"], function(u) {
		function w(B, y, n, l, C, A) {
			if (l.data.length < 1) {
				return void console.error("option.data.length < 1.")
			}
			m.call(this, B, y, n, l, C), this.grid = this.component.grid;
			for (var z in A) {
				this[z] = A[z]
			}
			this.refresh(l)
		}
		var m = u("./base"),
			q = u("zrender/shape/Text"),
			v = u("zrender/shape/Line"),
			k = u("zrender/shape/Rectangle"),
			j = u("../config");
		j.categoryAxis = {
			zlevel: 0,
			z: 0,
			show: !0,
			position: "bottom",
			name: "",
			nameLocation: "end",
			nameTextStyle: {},
			boundaryGap: !0,
			axisLine: {
				show: !0,
				onZero: !0,
				lineStyle: {
					color: "#48b",
					width: 2,
					type: "solid"
				}
			},
			axisTick: {
				show: !0,
				interval: "auto",
				inside: !1,
				length: 5,
				lineStyle: {
					color: "#333",
					width: 1
				}
			},
			axisLabel: {
				show: !0,
				interval: "auto",
				rotate: 0,
				margin: 8,
				textStyle: {
					color: "#333"
				}
			},
			splitLine: {
				show: !0,
				lineStyle: {
					color: ["#ccc"],
					width: 1,
					type: "solid"
				}
			},
			splitArea: {
				show: !1,
				areaStyle: {
					color: ["rgba(250,250,250,0.3)", "rgba(200,200,200,0.3)"]
				}
			}
		};
		var x = u("zrender/tool/util"),
			p = u("zrender/tool/area");
		return w.prototype = {
			type: j.COMPONENT_TYPE_AXIS_CATEGORY,
			_getReformedLabel: function(i) {
				var a = this.getDataFromOption(this.option.data[i]),
					l = this.option.data[i].formatter || this.option.axisLabel.formatter;
				return l && ("function" == typeof l ? a = l.call(this.myChart, a) : "string" == typeof l && (a = l.replace("{value}", a))), a
			},
			_getInterval: function() {
				var F = this.option.axisLabel.interval;
				if ("auto" == F) {
					var I = this.option.axisLabel.textStyle.fontSize,
						z = this.option.data,
						D = this.option.data.length;
					if (this.isHorizontal()) {
						if (D > 3) {
							var H, y, l = this.getGap(),
								E = !1,
								B = Math.floor(0.5 / l);
							for (B = 1 > B ? 1 : B, F = Math.floor(15 / l); !E && D > F;) {
								F += B, E = !0, H = Math.floor(l * F);
								for (var A = Math.floor((D - 1) / F) * F; A >= 0; A -= F) {
									if (0 !== this.option.axisLabel.rotate) {
										y = I
									} else {
										if (z[A].textStyle) {
											y = p.getTextWidth(this._getReformedLabel(A), this.getFont(x.merge(z[A].textStyle, this.option.axisLabel.textStyle)))
										} else {
											var C = this._getReformedLabel(A) + "",
												G = (C.match(/\w/g) || "").length,
												s = C.length - G;
											y = G * I * 2 / 3 + s * I
										}
									}
									if (y > H) {
										E = !1;
										break
									}
								}
							}
						} else {
							F = 1
						}
					} else {
						if (D > 3) {
							var l = this.getGap();
							for (F = Math.floor(11 / l); I > l * F - 6 && D > F;) {
								F++
							}
						} else {
							F = 1
						}
					}
				} else {
					F = "function" == typeof F ? 1 : F - 0 + 1
				}
				return F
			},
			_buildShape: function() {
				if (this._interval = this._getInterval(), this.option.show) {
					this.option.splitArea.show && this._buildSplitArea(), this.option.splitLine.show && this._buildSplitLine(), this.option.axisLine.show && this._buildAxisLine(), this.option.axisTick.show && this._buildAxisTick(), this.option.axisLabel.show && this._buildAxisLabel();
					for (var i = 0, a = this.shapeList.length; a > i; i++) {
						this.zr.addShape(this.shapeList[i])
					}
				}
			},
			_buildAxisTick: function() {
				var I, N = this.option.data,
					B = this.option.data.length,
					G = this.option.axisTick,
					A = G.length,
					a = G.lineStyle.color,
					O = G.lineStyle.width,
					F = "function" == typeof G.interval ? G.interval : "auto" == G.interval && "function" == typeof this.option.axisLabel.interval ? this.option.axisLabel.interval : !1,
					H = F ? 1 : "auto" == G.interval ? this._interval : G.interval - 0 + 1,
					D = G.onGap,
					C = D ? this.getGap() / 2 : "undefined" == typeof D && this.option.boundaryGap ? this.getGap() / 2 : 0,
					E = C > 0 ? -H : 0;
				if (this.isHorizontal()) {
					for (var J, z = "bottom" == this.option.position ? G.inside ? this.grid.getYend() - A - 1 : this.grid.getYend() + 1 : G.inside ? this.grid.getY() + 1 : this.grid.getY() - A - 1, K = E; B > K; K += H) {
						(!F || F(K, N[K])) && (J = this.subPixelOptimize(this.getCoordByIndex(K) + (K >= 0 ? C : 0), O), I = {
							_axisShape: "axisTick",
							zlevel: this.getZlevelBase(),
							z: this.getZBase(),
							hoverable: !1,
							style: {
								xStart: J,
								yStart: z,
								xEnd: J,
								yEnd: z + A,
								strokeColor: a,
								lineWidth: O
							}
						}, this.shapeList.push(new v(I)))
					}
				} else {
					for (var M, L = "left" == this.option.position ? G.inside ? this.grid.getX() + 1 : this.grid.getX() - A - 1 : G.inside ? this.grid.getXend() - A - 1 : this.grid.getXend() + 1, K = E; B > K; K += H) {
						(!F || F(K, N[K])) && (M = this.subPixelOptimize(this.getCoordByIndex(K) - (K >= 0 ? C : 0), O), I = {
							_axisShape: "axisTick",
							zlevel: this.getZlevelBase(),
							z: this.getZBase(),
							hoverable: !1,
							style: {
								xStart: L,
								yStart: M,
								xEnd: L + A,
								yEnd: M,
								strokeColor: a,
								lineWidth: O
							}
						}, this.shapeList.push(new v(I)))
					}
				}
			},
			_buildAxisLabel: function() {
				var F, K, z = this.option.data,
					I = this.option.data.length,
					y = this.option.axisLabel,
					i = y.rotate,
					D = y.margin,
					E = y.clickable,
					B = y.textStyle,
					A = "function" == typeof y.interval ? y.interval : !1;
				if (this.isHorizontal()) {
					var C, G;
					"bottom" == this.option.position ? (C = this.grid.getYend() + D, G = "top") : (C = this.grid.getY() - D, G = "bottom");
					for (var s = 0; I > s; s += this._interval) {
						A && !A(s, z[s]) || "" === this._getReformedLabel(s) || (K = x.merge(z[s].textStyle || {}, B), F = {
							zlevel: this.getZlevelBase(),
							z: this.getZBase() + 3,
							hoverable: !1,
							style: {
								x: this.getCoordByIndex(s),
								y: C,
								color: K.color,
								text: this._getReformedLabel(s),
								textFont: this.getFont(K),
								textAlign: K.align || "center",
								textBaseline: K.baseline || G
							}
						}, i && (F.style.textAlign = i > 0 ? "bottom" == this.option.position ? "right" : "left" : "bottom" == this.option.position ? "left" : "right", F.rotation = [i * Math.PI / 180, F.style.x, F.style.y]), this.shapeList.push(new q(this._axisLabelClickable(E, F))))
					}
				} else {
					var H, J;
					"left" == this.option.position ? (H = this.grid.getX() - D, J = "right") : (H = this.grid.getXend() + D, J = "left");
					for (var s = 0; I > s; s += this._interval) {
						A && !A(s, z[s]) || "" === this._getReformedLabel(s) || (K = x.merge(z[s].textStyle || {}, B), F = {
							zlevel: this.getZlevelBase(),
							z: this.getZBase() + 3,
							hoverable: !1,
							style: {
								x: H,
								y: this.getCoordByIndex(s),
								color: K.color,
								text: this._getReformedLabel(s),
								textFont: this.getFont(K),
								textAlign: K.align || J,
								textBaseline: K.baseline || 0 === s && "" !== this.option.name ? "bottom" : s == I - 1 && "" !== this.option.name ? "top" : "middle"
							}
						}, i && (F.rotation = [i * Math.PI / 180, F.style.x, F.style.y]), this.shapeList.push(new q(this._axisLabelClickable(E, F))))
					}
				}
			},
			_buildSplitLine: function() {
				var N, C = this.option.data,
					H = this.option.data.length,
					K = this.option.splitLine,
					G = K.lineStyle.type,
					E = K.lineStyle.width,
					D = K.lineStyle.color;
				D = D instanceof Array ? D : [D];
				var J = D.length,
					L = "function" == typeof this.option.axisLabel.interval ? this.option.axisLabel.interval : !1,
					I = K.onGap,
					a = I ? this.getGap() / 2 : "undefined" == typeof I && this.option.boundaryGap ? this.getGap() / 2 : 0;
				if (H -= I || "undefined" == typeof I && this.option.boundaryGap ? 1 : 0, this.isHorizontal()) {
					for (var z, O = this.grid.getY(), F = this.grid.getYend(), P = 0; H > P; P += this._interval) {
						(!L || L(P, C[P])) && (z = this.subPixelOptimize(this.getCoordByIndex(P) + a, E), N = {
							zlevel: this.getZlevelBase(),
							z: this.getZBase(),
							hoverable: !1,
							style: {
								xStart: z,
								yStart: O,
								xEnd: z,
								yEnd: F,
								strokeColor: D[P / this._interval % J],
								lineType: G,
								lineWidth: E
							}
						}, this.shapeList.push(new v(N)))
					}
				} else {
					for (var B, A = this.grid.getX(), M = this.grid.getXend(), P = 0; H > P; P += this._interval) {
						(!L || L(P, C[P])) && (B = this.subPixelOptimize(this.getCoordByIndex(P) - a, E), N = {
							zlevel: this.getZlevelBase(),
							z: this.getZBase(),
							hoverable: !1,
							style: {
								xStart: A,
								yStart: B,
								xEnd: M,
								yEnd: B,
								strokeColor: D[P / this._interval % J],
								lineType: G,
								lineWidth: E
							}
						}, this.shapeList.push(new v(N)))
					}
				}
			},
			_buildSplitArea: function() {
				var M, C = this.option.data,
					G = this.option.splitArea,
					J = G.areaStyle.color;
				if (J instanceof Array) {
					var P = J.length,
						E = this.option.data.length,
						D = "function" == typeof this.option.axisLabel.interval ? this.option.axisLabel.interval : !1,
						I = G.onGap,
						K = I ? this.getGap() / 2 : "undefined" == typeof I && this.option.boundaryGap ? this.getGap() / 2 : 0;
					if (this.isHorizontal()) {
						for (var H, o = this.grid.getY(), z = this.grid.getHeight(), N = this.grid.getX(), F = 0; E >= F; F += this._interval) {
							D && !D(F, C[F]) && E > F || (H = E > F ? this.getCoordByIndex(F) + K : this.grid.getXend(), M = {
								zlevel: this.getZlevelBase(),
								z: this.getZBase(),
								hoverable: !1,
								style: {
									x: N,
									y: o,
									width: H - N,
									height: z,
									color: J[F / this._interval % P]
								}
							}, this.shapeList.push(new k(M)), N = H)
						}
					} else {
						for (var O, B = this.grid.getX(), A = this.grid.getWidth(), L = this.grid.getYend(), F = 0; E >= F; F += this._interval) {
							D && !D(F, C[F]) && E > F || (O = E > F ? this.getCoordByIndex(F) - K : this.grid.getY(), M = {
								zlevel: this.getZlevelBase(),
								z: this.getZBase(),
								hoverable: !1,
								style: {
									x: B,
									y: O,
									width: A,
									height: L - O,
									color: J[F / this._interval % P]
								}
							}, this.shapeList.push(new k(M)), L = O)
						}
					}
				} else {
					M = {
						zlevel: this.getZlevelBase(),
						z: this.getZBase(),
						hoverable: !1,
						style: {
							x: this.grid.getX(),
							y: this.grid.getY(),
							width: this.grid.getWidth(),
							height: this.grid.getHeight(),
							color: J
						}
					}, this.shapeList.push(new k(M))
				}
			},
			refresh: function(a) {
				a && (this.option = this.reformOption(a), this.option.axisLabel.textStyle = this.getTextStyle(this.option.axisLabel.textStyle)), this.clear(), this._buildShape()
			},
			getGap: function() {
				var i = this.option.data.length,
					a = this.isHorizontal() ? this.grid.getWidth() : this.grid.getHeight();
				return this.option.boundaryGap ? a / i : a / (i > 1 ? i - 1 : 1)
			},
			getCoord: function(y) {
				for (var s = this.option.data, A = s.length, r = this.getGap(), l = this.option.boundaryGap ? r / 2 : 0, z = 0; A > z; z++) {
					if (this.getDataFromOption(s[z]) == y) {
						return l = this.isHorizontal() ? this.grid.getX() + l : this.grid.getYend() - l
					}
					l += r
				}
			},
			getCoordByIndex: function(i) {
				if (0 > i) {
					return this.isHorizontal() ? this.grid.getX() : this.grid.getYend()
				}
				if (i > this.option.data.length - 1) {
					return this.isHorizontal() ? this.grid.getXend() : this.grid.getY()
				}
				var a = this.getGap(),
					l = this.option.boundaryGap ? a / 2 : 0;
				return l += i * a, l = this.isHorizontal() ? this.grid.getX() + l : this.grid.getYend() - l
			},
			getNameByIndex: function(a) {
				return this.getDataFromOption(this.option.data[a])
			},
			getIndexByName: function(o) {
				for (var l = this.option.data, r = l.length, a = 0; r > a; a++) {
					if (this.getDataFromOption(l[a]) == o) {
						return a
					}
				}
				return -1
			},
			getValueFromCoord: function() {
				return ""
			},
			isMainAxis: function(a) {
				return a % this._interval === 0
			}
		}, x.inherits(w, m), u("../component").define("categoryAxis", w), w
	}), h("echarts/component/valueAxis", ["require", "./base", "zrender/shape/Text", "zrender/shape/Line", "zrender/shape/Rectangle", "../config", "../util/date", "zrender/tool/util", "../util/smartSteps", "../util/accMath", "../component"], function(u) {
		function w(D, A, z, y, E, C, B) {
			if (!B || 0 === B.length) {
				return void console.err("option.series.length == 0.")
			}
			m.call(this, D, A, z, y, E), this.series = B, this.grid = this.component.grid;
			for (var n in C) {
				this[n] = C[n]
			}
			this.refresh(y, B)
		}
		var m = u("./base"),
			q = u("zrender/shape/Text"),
			v = u("zrender/shape/Line"),
			k = u("zrender/shape/Rectangle"),
			j = u("../config");
		j.valueAxis = {
			zlevel: 0,
			z: 0,
			show: !0,
			position: "left",
			name: "",
			nameLocation: "end",
			nameTextStyle: {},
			boundaryGap: [0, 0],
			axisLine: {
				show: !0,
				onZero: !0,
				lineStyle: {
					color: "#48b",
					width: 2,
					type: "solid"
				}
			},
			axisTick: {
				show: !1,
				inside: !1,
				length: 5,
				lineStyle: {
					color: "#333",
					width: 1
				}
			},
			axisLabel: {
				show: !0,
				rotate: 0,
				margin: 8,
				textStyle: {
					color: "#333"
				}
			},
			splitLine: {
				show: !0,
				lineStyle: {
					color: ["#ccc"],
					width: 1,
					type: "solid"
				}
			},
			splitArea: {
				show: !1,
				areaStyle: {
					color: ["rgba(250,250,250,0.3)", "rgba(200,200,200,0.3)"]
				}
			}
		};
		var x = u("../util/date"),
			p = u("zrender/tool/util");
		return w.prototype = {
			type: j.COMPONENT_TYPE_AXIS_VALUE,
			_buildShape: function() {
				if (this._hasData = !1, this._calculateValue(), this._hasData && this.option.show) {
					this.option.splitArea.show && this._buildSplitArea(), this.option.splitLine.show && this._buildSplitLine(), this.option.axisLine.show && this._buildAxisLine(), this.option.axisTick.show && this._buildAxisTick(), this.option.axisLabel.show && this._buildAxisLabel();
					for (var i = 0, a = this.shapeList.length; a > i; i++) {
						this.zr.addShape(this.shapeList[i])
					}
				}
			},
			_buildAxisTick: function() {
				var G, H = this._valueList,
					z = this._valueList.length,
					E = this.option.axisTick,
					y = E.length,
					a = E.lineStyle.color,
					I = E.lineStyle.width;
				if (this.isHorizontal()) {
					for (var D, F = "bottom" === this.option.position ? E.inside ? this.grid.getYend() - y - 1 : this.grid.getYend() + 1 : E.inside ? this.grid.getY() + 1 : this.grid.getY() - y - 1, B = 0; z > B; B++) {
						D = this.subPixelOptimize(this.getCoord(H[B]), I), G = {
							_axisShape: "axisTick",
							zlevel: this.getZlevelBase(),
							z: this.getZBase(),
							hoverable: !1,
							style: {
								xStart: D,
								yStart: F,
								xEnd: D,
								yEnd: F + y,
								strokeColor: a,
								lineWidth: I
							}
						}, this.shapeList.push(new v(G))
					}
				} else {
					for (var A, C = "left" === this.option.position ? E.inside ? this.grid.getX() + 1 : this.grid.getX() - y - 1 : E.inside ? this.grid.getXend() - y - 1 : this.grid.getXend() + 1, B = 0; z > B; B++) {
						A = this.subPixelOptimize(this.getCoord(H[B]), I), G = {
							_axisShape: "axisTick",
							zlevel: this.getZlevelBase(),
							z: this.getZBase(),
							hoverable: !1,
							style: {
								xStart: C,
								yStart: A,
								xEnd: C + y,
								yEnd: A,
								strokeColor: a,
								lineWidth: I
							}
						}, this.shapeList.push(new v(G))
					}
				}
			},
			_buildAxisLabel: function() {
				var F, H = this._valueList,
					z = this._valueList.length,
					G = this.option.axisLabel.rotate,
					y = this.option.axisLabel.margin,
					i = this.option.axisLabel.clickable,
					I = this.option.axisLabel.textStyle;
				if (this.isHorizontal()) {
					var D, E;
					"bottom" === this.option.position ? (D = this.grid.getYend() + y, E = "top") : (D = this.grid.getY() - y, E = "bottom");
					for (var B = 0; z > B; B++) {
						F = {
							zlevel: this.getZlevelBase(),
							z: this.getZBase() + 3,
							hoverable: !1,
							style: {
								x: this.getCoord(H[B]),
								y: D,
								color: "function" == typeof I.color ? I.color(H[B]) : I.color,
								text: this._valueLabel[B],
								textFont: this.getFont(I),
								textAlign: I.align || "center",
								textBaseline: I.baseline || E
							}
						}, G && (F.style.textAlign = G > 0 ? "bottom" === this.option.position ? "right" : "left" : "bottom" === this.option.position ? "left" : "right", F.rotation = [G * Math.PI / 180, F.style.x, F.style.y]), this.shapeList.push(new q(this._axisLabelClickable(i, F)))
					}
				} else {
					var A, C;
					"left" === this.option.position ? (A = this.grid.getX() - y, C = "right") : (A = this.grid.getXend() + y, C = "left");
					for (var B = 0; z > B; B++) {
						F = {
							zlevel: this.getZlevelBase(),
							z: this.getZBase() + 3,
							hoverable: !1,
							style: {
								x: A,
								y: this.getCoord(H[B]),
								color: "function" == typeof I.color ? I.color(H[B]) : I.color,
								text: this._valueLabel[B],
								textFont: this.getFont(I),
								textAlign: I.align || C,
								textBaseline: I.baseline || (0 === B && "" !== this.option.name ? "bottom" : B === z - 1 && "" !== this.option.name ? "top" : "middle")
							}
						}, G && (F.rotation = [G * Math.PI / 180, F.style.x, F.style.y]), this.shapeList.push(new q(this._axisLabelClickable(i, F)))
					}
				}
			},
			_buildSplitLine: function() {
				var H, K = this._valueList,
					A = this._valueList.length,
					F = this.option.splitLine,
					z = F.lineStyle.type,
					a = F.lineStyle.width,
					L = F.lineStyle.color;
				L = L instanceof Array ? L : [L];
				var E = L.length;
				if (this.isHorizontal()) {
					for (var G, C = this.grid.getY(), B = this.grid.getYend(), D = 0; A > D; D++) {
						G = this.subPixelOptimize(this.getCoord(K[D]), a), H = {
							zlevel: this.getZlevelBase(),
							z: this.getZBase(),
							hoverable: !1,
							style: {
								xStart: G,
								yStart: C,
								xEnd: G,
								yEnd: B,
								strokeColor: L[D % E],
								lineType: z,
								lineWidth: a
							}
						}, this.shapeList.push(new v(H))
					}
				} else {
					for (var I, y = this.grid.getX(), J = this.grid.getXend(), D = 0; A > D; D++) {
						I = this.subPixelOptimize(this.getCoord(K[D]), a), H = {
							zlevel: this.getZlevelBase(),
							z: this.getZBase(),
							hoverable: !1,
							style: {
								xStart: y,
								yStart: I,
								xEnd: J,
								yEnd: I,
								strokeColor: L[D % E],
								lineType: z,
								lineWidth: a
							}
						}, this.shapeList.push(new v(H))
					}
				}
			},
			_buildSplitArea: function() {
				var G, J = this.option.splitArea.areaStyle.color;
				if (J instanceof Array) {
					var z = J.length,
						E = this._valueList,
						I = this._valueList.length;
					if (this.isHorizontal()) {
						for (var o, K = this.grid.getY(), D = this.grid.getHeight(), F = this.grid.getX(), B = 0; I >= B; B++) {
							o = I > B ? this.getCoord(E[B]) : this.grid.getXend(), G = {
								zlevel: this.getZlevelBase(),
								z: this.getZBase(),
								hoverable: !1,
								style: {
									x: F,
									y: K,
									width: o - F,
									height: D,
									color: J[B % z]
								}
							}, this.shapeList.push(new k(G)), F = o
						}
					} else {
						for (var A, C = this.grid.getX(), H = this.grid.getWidth(), y = this.grid.getYend(), B = 0; I >= B; B++) {
							A = I > B ? this.getCoord(E[B]) : this.grid.getY(), G = {
								zlevel: this.getZlevelBase(),
								z: this.getZBase(),
								hoverable: !1,
								style: {
									x: C,
									y: A,
									width: H,
									height: y - A,
									color: J[B % z]
								}
							}, this.shapeList.push(new k(G)), y = A
						}
					}
				} else {
					G = {
						zlevel: this.getZlevelBase(),
						z: this.getZBase(),
						hoverable: !1,
						style: {
							x: this.grid.getX(),
							y: this.grid.getY(),
							width: this.grid.getWidth(),
							height: this.grid.getHeight(),
							color: J
						}
					}, this.shapeList.push(new k(G))
				}
			},
			_calculateValue: function() {
				if (isNaN(this.option.min - 0) || isNaN(this.option.max - 0)) {
					for (var D, F, y = {}, B = this.component.legend, E = 0, r = this.series.length; r > E; E++) {
						!(this.series[E].type != j.CHART_TYPE_LINE && this.series[E].type != j.CHART_TYPE_BAR && this.series[E].type != j.CHART_TYPE_SCATTER && this.series[E].type != j.CHART_TYPE_K && this.series[E].type != j.CHART_TYPE_EVENTRIVER || B && !B.isSelected(this.series[E].name) || (D = this.series[E].xAxisIndex || 0, F = this.series[E].yAxisIndex || 0, this.option.xAxisIndex != D && this.option.yAxisIndex != F || !this._calculSum(y, E)))
					}
					var G;
					for (var E in y) {
						G = y[E];
						for (var A = 0, C = G.length; C > A; A++) {
							if (!isNaN(G[A])) {
								this._hasData = !0, this._min = G[A], this._max = G[A];
								break
							}
						}
						if (this._hasData) {
							break
						}
					}
					for (var E in y) {
						G = y[E];
						for (var A = 0, C = G.length; C > A; A++) {
							isNaN(G[A]) || (this._min = Math.min(this._min, G[A]), this._max = Math.max(this._max, G[A]))
						}
					}
					var z = Math.abs(this._max - this._min);
					this._min = isNaN(this.option.min - 0) ? this._min - Math.abs(z * this.option.boundaryGap[0]) : this.option.min - 0, this._max = isNaN(this.option.max - 0) ? this._max + Math.abs(z * this.option.boundaryGap[1]) : this.option.max - 0, this._min === this._max && (0 === this._max ? this._max = 1 : this._max > 0 ? this._min = this._max / this.option.splitNumber != null ? this.option.splitNumber : 5 : this._max = this._max / this.option.splitNumber != null ? this.option.splitNumber : 5), "time" != this.option.type ? this._reformValue(this.option.scale) : this._reformTimeValue()
				} else {
					this._hasData = !0, this._min = this.option.min - 0, this._max = this.option.max - 0, "time" != this.option.type ? this._customerValue() : this._reformTimeValue()
				}
			},
			_calculSum: function(E, H) {
				var s, C, G = this.series[H].name || "kener";
				if (this.series[H].stack) {
					var r = "__Magic_Key_Positive__" + this.series[H].stack,
						B = "__Magic_Key_Negative__" + this.series[H].stack;
					E[r] = E[r] || [], E[B] = E[B] || [], E[G] = E[G] || [], C = this.series[H].data;
					for (var D = 0, z = C.length; z > D; D++) {
						s = this.getDataFromOption(C[D]), "-" !== s && (s -= 0, s >= 0 ? null != E[r][D] ? E[r][D] += s : E[r][D] = s : null != E[B][D] ? E[B][D] += s : E[B][D] = s, this.option.scale && E[G].push(s))
					}
				} else {
					if (E[G] = E[G] || [], this.series[H].type != j.CHART_TYPE_EVENTRIVER) {
						C = this.series[H].data;
						for (var D = 0, z = C.length; z > D; D++) {
							s = this.getDataFromOption(C[D]), this.series[H].type === j.CHART_TYPE_K ? (E[G].push(s[0]), E[G].push(s[1]), E[G].push(s[2]), E[G].push(s[3])) : s instanceof Array ? (-1 != this.option.xAxisIndex && E[G].push("time" != this.option.type ? s[0] : x.getNewDate(s[0])), -1 != this.option.yAxisIndex && E[G].push("time" != this.option.type ? s[1] : x.getNewDate(s[1]))) : E[G].push(s)
						}
					} else {
						C = this.series[H].eventList;
						for (var D = 0, z = C.length; z > D; D++) {
							for (var y = C[D].evolution, A = 0, F = y.length; F > A; A++) {
								E[G].push(x.getNewDate(y[A].time))
							}
						}
					}
				}
			},
			_reformValue: function(o) {
				var r = u("../util/smartSteps"),
					l = this.option.splitNumber;
				!o && this._min >= 0 && this._max >= 0 && (this._min = 0), !o && this._min <= 0 && this._max <= 0 && (this._max = 0);
				var e = r(this._min, this._max, l);
				l = null != l ? l : e.secs, this._min = e.min, this._max = e.max, this._valueList = e.pnts, this._reformLabelData()
			},
			_reformTimeValue: function() {
				var s = null != this.option.splitNumber ? this.option.splitNumber : 5,
					r = x.getAutoFormatter(this._min, this._max, s),
					y = r.formatter,
					o = r.gapValue;
				this._valueList = [x.getNewDate(this._min)];
				var l;
				switch (y) {
					case "week":
						l = x.nextMonday(this._min);
						break;
					case "month":
						l = x.nextNthOnMonth(this._min, 1);
						break;
					case "quarter":
						l = x.nextNthOnQuarterYear(this._min, 1);
						break;
					case "half-year":
						l = x.nextNthOnHalfYear(this._min, 1);
						break;
					case "year":
						l = x.nextNthOnYear(this._min, 1);
						break;
					default:
						7200000 >= o ? l = (Math.floor(this._min / o) + 1) * o : (l = x.getNewDate(this._min - -o), l.setHours(6 * Math.round(l.getHours() / 6)), l.setMinutes(0), l.setSeconds(0))
				}
				for (l - this._min < o / 2 && (l -= -o), r = x.getNewDate(l), s *= 1.5; s-- >= 0 && (("month" == y || "quarter" == y || "half-year" == y || "year" == y) && r.setDate(1), !(this._max - r < o / 2));) {
					this._valueList.push(r), r = x.getNewDate(r - -o)
				}
				this._valueList.push(x.getNewDate(this._max)), this._reformLabelData(y)
			},
			_customerValue: function() {
				var o = u("../util/accMath"),
					r = null != this.option.splitNumber ? this.option.splitNumber : 5,
					l = (this._max - this._min) / r;
				this._valueList = [];
				for (var e = 0; r >= e; e++) {
					this._valueList.push(o.accAdd(this._min, o.accMul(l, e)))
				}
				this._reformLabelData()
			},
			_reformLabelData: function(o) {
				this._valueLabel = [];
				var l = this.option.axisLabel.formatter;
				if (l) {
					for (var r = 0, a = this._valueList.length; a > r; r++) {
						"function" == typeof l ? this._valueLabel.push(o ? l.call(this.myChart, this._valueList[r], o) : l.call(this.myChart, this._valueList[r])) : "string" == typeof l && this._valueLabel.push(o ? x.format(l, this._valueList[r]) : l.replace("{value}", this._valueList[r]))
					}
				} else {
					if (o) {
						for (var r = 0, a = this._valueList.length; a > r; r++) {
							this._valueLabel.push(x.format(o, this._valueList[r]))
						}
					} else {
						for (var r = 0, a = this._valueList.length; a > r; r++) {
							this._valueLabel.push(this.numAddCommas(this._valueList[r]))
						}
					}
				}
			},
			getExtremum: function() {
				return this._calculateValue(), {
					min: this._min,
					max: this._max
				}
			},
			refresh: function(i, a) {
				i && (this.option = this.reformOption(i), this.option.axisLabel.textStyle = p.merge(this.option.axisLabel.textStyle || {}, this.ecTheme.textStyle), this.series = a), this.zr && (this.clear(), this._buildShape())
			},
			getCoord: function(i) {
				i = i < this._min ? this._min : i, i = i > this._max ? this._max : i;
				var a;
				return a = this.isHorizontal() ? this.grid.getX() + (i - this._min) / (this._max - this._min) * this.grid.getWidth() : this.grid.getYend() - (i - this._min) / (this._max - this._min) * this.grid.getHeight()
			},
			getCoordSize: function(a) {
				return Math.abs(this.isHorizontal() ? a / (this._max - this._min) * this.grid.getWidth() : a / (this._max - this._min) * this.grid.getHeight())
			},
			getValueFromCoord: function(i) {
				var a;
				return this.isHorizontal() ? (i = i < this.grid.getX() ? this.grid.getX() : i, i = i > this.grid.getXend() ? this.grid.getXend() : i, a = this._min + (i - this.grid.getX()) / this.grid.getWidth() * (this._max - this._min)) : (i = i < this.grid.getY() ? this.grid.getY() : i, i = i > this.grid.getYend() ? this.grid.getYend() : i, a = this._max - (i - this.grid.getY()) / this.grid.getHeight() * (this._max - this._min)), a.toFixed(2) - 0
			},
			isMaindAxis: function(i) {
				for (var a = 0, l = this._valueList.length; l > a; a++) {
					if (this._valueList[a] === i) {
						return !0
					}
				}
				return !1
			}
		}, p.inherits(w, m), u("../component").define("valueAxis", w), w
	}), h("echarts/util/date", [], function() {
		function x(F, H, C) {
			C = C > 1 ? C : 2;
			for (var E, G, B, m, I = 0, D = q.length; D > I; I++) {
				if (E = q[I].value, G = Math.ceil(H / E) * E - Math.floor(F / E) * E, Math.round(G / E) <= 1.2 * C) {
					B = q[I].formatter, m = q[I].value;
					break
				}
			}
			return null == B && (B = "year", E = 31708800000, G = Math.ceil(H / E) * E - Math.floor(F / E) * E, m = Math.round(G / (C - 1) / E) * E), {
				formatter: B,
				gapValue: m
			}
		}

		function z(a) {
			return 10 > a ? "0" + a : a
		}

		function p(G, C) {
			("week" == G || "month" == G || "quarter" == G || "half-year" == G || "year" == G) && (G = "MM - dd\nyyyy");
			var F = w(C),
				H = F.getFullYear(),
				B = F.getMonth() + 1,
				t = F.getDate(),
				I = F.getHours(),
				E = F.getMinutes(),
				D = F.getSeconds();
			return G = G.replace("MM", z(B)), G = G.toLowerCase(), G = G.replace("yyyy", H), G = G.replace("yy", H % 100), G = G.replace("dd", z(t)), G = G.replace("d", t), G = G.replace("hh", z(I)), G = G.replace("h", I), G = G.replace("mm", z(E)), G = G.replace("m", E), G = G.replace("ss", z(D)), G = G.replace("s", D)
		}

		function v(a) {
			return a = w(a), a.setDate(a.getDate() + 8 - a.getDay()), a
		}

		function y(i, a, l) {
			return i = w(i), i.setMonth(Math.ceil((i.getMonth() + 1) / l) * l), i.setDate(a), i
		}

		function k(i, a) {
			return y(i, a, 1)
		}

		function j(i, a) {
			return y(i, a, 3)
		}

		function A(i, a) {
			return y(i, a, 6)
		}

		function u(i, a) {
			return y(i, a, 12)
		}

		function w(a) {
			return a instanceof Date ? a : new Date("string" == typeof a ? a.replace(/-/g, "/") : a)
		}
		var q = [{
			formatter: "hh : mm : ss",
			value: 1000
		}, {
			formatter: "hh : mm : ss",
			value: 5000
		}, {
			formatter: "hh : mm : ss",
			value: 10000
		}, {
			formatter: "hh : mm : ss",
			value: 15000
		}, {
			formatter: "hh : mm : ss",
			value: 30000
		}, {
			formatter: "hh : mm\nMM - dd",
			value: 60000
		}, {
			formatter: "hh : mm\nMM - dd",
			value: 300000
		}, {
			formatter: "hh : mm\nMM - dd",
			value: 600000
		}, {
			formatter: "hh : mm\nMM - dd",
			value: 900000
		}, {
			formatter: "hh : mm\nMM - dd",
			value: 1800000
		}, {
			formatter: "hh : mm\nMM - dd",
			value: 3600000
		}, {
			formatter: "hh : mm\nMM - dd",
			value: 7200000
		}, {
			formatter: "hh : mm\nMM - dd",
			value: 21600000
		}, {
			formatter: "hh : mm\nMM - dd",
			value: 43200000
		}, {
			formatter: "MM - dd\nyyyy",
			value: 86400000
		}, {
			formatter: "week",
			value: 604800000
		}, {
			formatter: "month",
			value: 2678400000
		}, {
			formatter: "quarter",
			value: 8208000000
		}, {
			formatter: "half-year",
			value: 16416000000
		}, {
			formatter: "year",
			value: 32832000000
		}];
		return {
			getAutoFormatter: x,
			getNewDate: w,
			format: p,
			nextMonday: v,
			nextNthPerNmonth: y,
			nextNthOnMonth: k,
			nextNthOnQuarterYear: j,
			nextNthOnHalfYear: A,
			nextNthOnYear: u
		}
	}), h("echarts/util/smartSteps", [], function() {
		function ad(a) {
			return j.log(H(a)) / j.LN10
		}

		function M(a) {
			return j.pow(10, a)
		}

		function R(a) {
			return a === G(a)
		}

		function Z(n, m, l, k) {
			ag = k || {}, ac = ag.steps || B, Y = ag.secs || q, l = C(+l || 0) % 99, n = +n || 0, m = +m || 0, F = ai = 0, "min" in ag && (n = +ag.min || 0, F = 1), "max" in ag && (m = +ag.max || 0, ai = 1), n > m && (m = [n, n = m][0]);
			var p = m - n;
			if (F && ai) {
				return ab(n, m, l)
			}
			if ((l || 5) > p) {
				if (R(n) && R(m)) {
					return ae(n, m, l)
				}
				if (0 === p) {
					return P(n, m, l)
				}
			}
			return aa(n, m, l)
		}

		function ah(y, o, w, L) {
			L = L || 0;
			var W = Q((o - y) / w, -1),
				v = Q(y, -1, 1),
				x = Q(o, -1),
				t = j.min(W.e, v.e, x.e);
			0 === v.c ? t = j.min(W.e, x.e) : 0 === x.c && (t = j.min(W.e, v.e)), O(W, {
				c: 0,
				e: t
			}), O(v, W, 1), O(x, W), L += t, y = v.c, o = x.c;
			for (var r = (o - y) / w, u = M(L), I = 0, k = [], K = w + 1; K--;) {
				k[K] = (y + r * K) * u
			}
			if (0 > L) {
				I = J(u), r = +(r * u).toFixed(I), y = +(y * u).toFixed(I), o = +(o * u).toFixed(I);
				for (var K = k.length; K--;) {
					k[K] = k[K].toFixed(I), 0 === +k[K] && (k[K] = "0")
				}
			} else {
				y *= u, o *= u, r *= u
			}
			return Y = 0, ac = 0, ag = 0, {
				min: y,
				max: o,
				secs: w,
				step: r,
				fix: I,
				exp: L,
				pnts: k
			}
		}

		function Q(k, e, n) {
			e = C(e % 10) || 2, 0 > e && (R(k) ? e = ("" + H(k)).replace(/0+$/, "").length || 1 : (k = k.toFixed(15).replace(/0+$/, ""), e = k.replace(".", "").replace(/^[-0]+/, "").length, k = +k));
			var m = G(ad(k)) - e + 1,
				l = +(k * M(-m)).toFixed(15) || 0;
			return l = n ? G(l) : E(l), !l && (m = 0), ("" + H(l)).length > e && (m += 1, l /= 10), {
				c: l,
				e: m
			}
		}

		function O(m, o, l) {
			var k = o.e - m.e;
			k && (m.e += k, m.c *= M(-k), m.c = l ? G(m.c) : E(m.c))
		}

		function N(i, a, k) {
			i.e < a.e ? O(a, i, k) : O(i, a, k)
		}

		function T(l, k) {
			k = k || B, l = Q(l);
			for (var m = l.c, a = 0; m > k[a];) {
				a++
			}
			if (!k[a]) {
				for (m /= 10, l.e += 1, a = 0; m > k[a];) {
					a++
				}
			}
			return l.c = k[a], l
		}

		function aa(n, w, k) {
			var x, l = k || +Y.slice(-1),
				a = T((w - n) / l, ac),
				v = Q(w - n),
				m = Q(n, -1, 1),
				r = Q(w, -1);
			if (O(v, a), O(m, a, 1), O(r, a), k ? x = z(m, r, l) : l = S(m, r), R(n) && R(w) && n * w >= 0) {
				if (l > w - n) {
					return ae(n, w, l)
				}
				l = A(n, w, k, m, r, l)
			}
			var o = af(n, w, m.c, r.c);
			return m.c = o[0], r.c = o[1], (F || ai) && D(n, w, m, r), ah(m.c, r.c, l, r.e)
		}

		function S(u, w) {
			for (var l, k, v, t, p = [], m = Y.length; m--;) {
				l = Y[m], k = T((w.c - u.c) / l, ac), k = k.c * M(k.e), v = G(u.c / k) * k, t = E(w.c / k) * k, p[m] = {
					min: v,
					max: t,
					step: k,
					span: t - v
				}
			}
			return p.sort(function(i, a) {
				var o = i.span - a.span;
				return 0 === o && (o = i.step - a.step), o
			}), p = p[0], l = p.span / p.step, u.c = p.min, w.c = p.max, 3 > l ? 2 * l : l
		}

		function z(x, p, v) {
			for (var y, l, k = p.c, I = (p.c - x.c) / v - 1; k > x.c;) {
				I = T(I + 1, ac), I = I.c * M(I.e), y = I * v, l = E(p.c / I) * I, k = l - y
			}
			var w = x.c - k,
				u = l - p.c,
				t = w - u;
			return t > 1.1 * I && (t = C(t / I / 2) * I, k += t, l += t), x.c = k, p.c = l, I
		}

		function A(w, u, x, n, k, y) {
			var t = k.c - n.c,
				v = t / y * M(k.e);
			if (!R(v) && (v = G(v), t = v * y, u - w > t && (v += 1, t = v * y, !x && v * (y - 1) >= u - w && (y -= 1, t = v * y)), t >= u - w)) {
				var p = t - (u - w);
				n.c = C(w - p / 2), k.c = C(u + p / 2), n.e = 0, k.e = 0
			}
			return y
		}

		function ae(p, k, v) {
			if (v = v || 5, F) {
				k = p + v
			} else {
				if (ai) {
					p = k - v
				} else {
					var a = v - (k - p),
						u = C(p - a / 2),
						m = C(k + a / 2),
						l = af(p, k, u, m);
					p = l[0], k = l[1]
				}
			}
			return ah(p, k, v)
		}

		function P(l, k, m) {
			m = m || 5;
			var a = j.min(H(k / m), m) / 2.1;
			return F ? k = l + a : ai ? l = k - a : (l -= a, k += a), aa(l, k, m)
		}

		function af(l, k, m, a) {
			return l >= 0 && 0 > m ? (a -= m, m = 0) : 0 >= k && a > 0 && (m -= a, a = 0), [m, a]
		}

		function J(a) {
			return a = (+a).toFixed(15).split("."), a.pop().replace(/0+$/, "").length
		}

		function D(p, m, s, l) {
			if (F) {
				var k = Q(p, 4, 1);
				s.e - k.e > 6 && (k = {
					c: 0,
					e: s.e
				}), N(s, k), N(l, k), l.c += k.c - s.c, s.c = k.c
			} else {
				if (ai) {
					var o = Q(m, 4);
					l.e - o.e > 6 && (o = {
						c: 0,
						e: l.e
					}), N(s, o), N(l, o), s.c += o.c - l.c, l.c = o.c
				}
			}
		}

		function ab(L, al, k) {
			var x = k ? [k] : Y,
				am = al - L;
			if (0 === am) {
				return al = Q(al, 3), k = x[0], al.c = C(al.c + k / 2), ah(al.c - k, al.c, k, al.e)
			}
			H(al / am) < 0.000001 && (al = 0), H(L / am) < 0.000001 && (L = 0);
			var w, I, r, o = [
					[5, 10],
					[10, 2],
					[50, 10],
					[100, 2]
				],
				v = [],
				W = [],
				a = Q(al - L, 3),
				X = Q(L, -1, 1),
				ak = Q(al, -1);
			O(X, a, 1), O(ak, a), am = ak.c - X.c, a.c = am;
			for (var aj = x.length; aj--;) {
				k = x[aj], w = E(am / k), I = w * k - am, r = 3 * (I + 3), r += 2 * (k - x[0] + 2), k % 5 === 0 && (r -= 10);
				for (var K = o.length; K--;) {
					w % o[K][0] === 0 && (r /= o[K][1])
				}
				W[aj] = [k, w, I, r].join(), v[aj] = {
					secs: k,
					step: w,
					delta: I,
					score: r
				}
			}
			return v.sort(function(l, i) {
				return l.score - i.score
			}), v = v[0], X.c = C(X.c - v.delta / 2), ak.c = C(ak.c + v.delta / 2), ah(X.c, ak.c, v.secs, a.e)
		}
		var ag, ac, Y, F, ai, B = [10, 20, 25, 50],
			q = [4, 5, 6],
			j = Math,
			C = j.round,
			G = j.floor,
			E = j.ceil,
			H = j.abs;
		return Z
	}), h("echarts/chart/line", ["require", "./base", "zrender/shape/Polyline", "../util/shape/Icon", "../util/shape/HalfSmoothPolygon", "../component/axis", "../component/grid", "../component/dataZoom", "../config", "../util/ecData", "zrender/tool/util", "zrender/tool/color", "../chart"], function(x) {
		function z(m, l, s, i, r) {
			v.call(this, m, l, s, i, r), this.refresh(i)
		}

		function p(I, L, B) {
			var G = L.x,
				K = L.y,
				o = L.width,
				M = L.height,
				F = M / 2;
			L.symbol.match("empty") && (I.fillStyle = "#fff"), L.brushType = "both";
			var H = L.symbol.replace("empty", "").toLowerCase();
			H.match("star") ? (F = H.replace("star", "") - 0 || 5, K -= 1, H = "star") : ("rectangle" === H || "arrow" === H) && (G += (o - M) / 2, o = M);
			var D = "";
			if (H.match("image") && (D = H.replace(new RegExp("^image:\\/\\/"), ""), H = "image", G += Math.round((o - M) / 2) - 1, o = M += 2), H = k.prototype.iconLibrary[H]) {
				var C = L.x,
					E = L.y;
				I.moveTo(C, E + F), I.lineTo(C + 5, E + F), I.moveTo(C + L.width - 5, E + F), I.lineTo(C + L.width, E + F);
				var J = this;
				H(I, {
					x: G + 4,
					y: K + 4,
					width: o - 8,
					height: M - 8,
					n: F,
					image: D
				}, function() {
					J.modSelf(), B()
				})
			} else {
				I.moveTo(G, K + F), I.lineTo(G + o, K + F)
			}
		}
		var v = x("./base"),
			y = x("zrender/shape/Polyline"),
			k = x("../util/shape/Icon"),
			j = x("../util/shape/HalfSmoothPolygon");
		x("../component/axis"), x("../component/grid"), x("../component/dataZoom");
		var A = x("../config");
		A.line = {
			zlevel: 0,
			z: 2,
			clickable: !0,
			legendHoverLink: !0,
			xAxisIndex: 0,
			yAxisIndex: 0,
			itemStyle: {
				normal: {
					label: {
						show: !1
					},
					lineStyle: {
						width: 2,
						type: "solid",
						shadowColor: "rgba(0,0,0,0)",
						shadowBlur: 0,
						shadowOffsetX: 0,
						shadowOffsetY: 0
					}
				},
				emphasis: {
					label: {
						show: !1
					}
				}
			},
			symbolSize: 2,
			showAllSymbol: !1
		};
		var u = x("../util/ecData"),
			w = x("zrender/tool/util"),
			q = x("zrender/tool/color");
		return z.prototype = {
			type: A.CHART_TYPE_LINE,
			_buildShape: function() {
				this.finalPLMap = {}, this._buildPosition()
			},
			_buildHorizontal: function(Z, I, O, S) {
				for (var ad, N, K, J, Q, T, P, C, D, aa = this.series, M = O[0][0], ab = aa[M], H = this.component.xAxis.getAxis(ab.xAxisIndex || 0), F = {}, X = 0, ac = I; ac > X && null != H.getNameByIndex(X); X++) {
					N = H.getCoordByIndex(X);
					for (var Y = 0, R = O.length; R > Y; Y++) {
						ad = this.component.yAxis.getAxis(aa[O[Y][0]].yAxisIndex || 0), Q = J = P = T = ad.getCoord(0);
						for (var G = 0, ae = O[Y].length; ae > G; G++) {
							M = O[Y][G], ab = aa[M], C = ab.data[X], D = this.getDataFromOption(C, "-"), F[M] = F[M] || [], S[M] = S[M] || {
								min: Number.POSITIVE_INFINITY,
								max: Number.NEGATIVE_INFINITY,
								sum: 0,
								counter: 0,
								average: 0
							}, "-" !== D ? (D >= 0 ? (J -= G > 0 ? ad.getCoordSize(D) : Q - ad.getCoord(D), K = J) : 0 > D && (T += G > 0 ? ad.getCoordSize(D) : ad.getCoord(D) - P, K = T), F[M].push([N, K, X, H.getNameByIndex(X), N, Q]), S[M].min > D && (S[M].min = D, S[M].minY = K, S[M].minX = N), S[M].max < D && (S[M].max = D, S[M].maxY = K, S[M].maxX = N), S[M].sum += D, S[M].counter++) : F[M].length > 0 && (this.finalPLMap[M] = this.finalPLMap[M] || [], this.finalPLMap[M].push(F[M]), F[M] = [])
						}
					}
					J = this.component.grid.getY();
					for (var E, Y = 0, R = O.length; R > Y; Y++) {
						for (var G = 0, ae = O[Y].length; ae > G; G++) {
							M = O[Y][G], ab = aa[M], C = ab.data[X], D = this.getDataFromOption(C, "-"), "-" == D && this.deepQuery([C, ab, this.option], "calculable") && (E = this.deepQuery([C, ab], "symbolSize"), J += 2 * E + 5, K = J, this.shapeList.push(this._getCalculableItem(M, X, H.getNameByIndex(X), N, K, "horizontal")))
						}
					}
				}
				for (var B in F) {
					F[B].length > 0 && (this.finalPLMap[B] = this.finalPLMap[B] || [], this.finalPLMap[B].push(F[B]), F[B] = [])
				}
				this._calculMarkMapXY(S, O, "y"), this._buildBorkenLine(Z, this.finalPLMap, H, "horizontal")
			},
			_buildVertical: function(Z, I, O, S) {
				for (var ad, N, K, J, Q, T, P, C, D, aa = this.series, M = O[0][0], ab = aa[M], H = this.component.yAxis.getAxis(ab.yAxisIndex || 0), F = {}, X = 0, ac = I; ac > X && null != H.getNameByIndex(X); X++) {
					K = H.getCoordByIndex(X);
					for (var Y = 0, R = O.length; R > Y; Y++) {
						ad = this.component.xAxis.getAxis(aa[O[Y][0]].xAxisIndex || 0), Q = J = P = T = ad.getCoord(0);
						for (var G = 0, ae = O[Y].length; ae > G; G++) {
							M = O[Y][G], ab = aa[M], C = ab.data[X], D = this.getDataFromOption(C, "-"), F[M] = F[M] || [], S[M] = S[M] || {
								min: Number.POSITIVE_INFINITY,
								max: Number.NEGATIVE_INFINITY,
								sum: 0,
								counter: 0,
								average: 0
							}, "-" !== D ? (D >= 0 ? (J += G > 0 ? ad.getCoordSize(D) : ad.getCoord(D) - Q, N = J) : 0 > D && (T -= G > 0 ? ad.getCoordSize(D) : P - ad.getCoord(D), N = T), F[M].push([N, K, X, H.getNameByIndex(X), Q, K]), S[M].min > D && (S[M].min = D, S[M].minX = N, S[M].minY = K), S[M].max < D && (S[M].max = D, S[M].maxX = N, S[M].maxY = K), S[M].sum += D, S[M].counter++) : F[M].length > 0 && (this.finalPLMap[M] = this.finalPLMap[M] || [], this.finalPLMap[M].push(F[M]), F[M] = [])
						}
					}
					J = this.component.grid.getXend();
					for (var E, Y = 0, R = O.length; R > Y; Y++) {
						for (var G = 0, ae = O[Y].length; ae > G; G++) {
							M = O[Y][G], ab = aa[M], C = ab.data[X], D = this.getDataFromOption(C, "-"), "-" == D && this.deepQuery([C, ab, this.option], "calculable") && (E = this.deepQuery([C, ab], "symbolSize"), J -= 2 * E + 5, N = J, this.shapeList.push(this._getCalculableItem(M, X, H.getNameByIndex(X), N, K, "vertical")))
						}
					}
				}
				for (var B in F) {
					F[B].length > 0 && (this.finalPLMap[B] = this.finalPLMap[B] || [], this.finalPLMap[B].push(F[B]), F[B] = [])
				}
				this._calculMarkMapXY(S, O, "x"), this._buildBorkenLine(Z, this.finalPLMap, H, "vertical")
			},
			_buildOther: function(S, F, K, O) {
				for (var Y, J = this.series, H = {}, G = 0, M = K.length; M > G; G++) {
					for (var P = 0, L = K[G].length; L > P; P++) {
						var B = K[G][P],
							C = J[B];
						Y = this.component.xAxis.getAxis(C.xAxisIndex || 0);
						var T = this.component.yAxis.getAxis(C.yAxisIndex || 0),
							I = T.getCoord(0);
						H[B] = H[B] || [], O[B] = O[B] || {
							min0: Number.POSITIVE_INFINITY,
							min1: Number.POSITIVE_INFINITY,
							max0: Number.NEGATIVE_INFINITY,
							max1: Number.NEGATIVE_INFINITY,
							sum0: 0,
							sum1: 0,
							counter0: 0,
							counter1: 0,
							average0: 0,
							average1: 0
						};
						for (var W = 0, E = C.data.length; E > W; W++) {
							var D = C.data[W],
								Q = this.getDataFromOption(D, "-");
							if (Q instanceof Array) {
								var X = Y.getCoord(Q[0]),
									R = T.getCoord(Q[1]);
								H[B].push([X, R, W, Q[0], X, I]), O[B].min0 > Q[0] && (O[B].min0 = Q[0], O[B].minY0 = R, O[B].minX0 = X), O[B].max0 < Q[0] && (O[B].max0 = Q[0], O[B].maxY0 = R, O[B].maxX0 = X), O[B].sum0 += Q[0], O[B].counter0++, O[B].min1 > Q[1] && (O[B].min1 = Q[1], O[B].minY1 = R, O[B].minX1 = X), O[B].max1 < Q[1] && (O[B].max1 = Q[1], O[B].maxY1 = R, O[B].maxX1 = X), O[B].sum1 += Q[1], O[B].counter1++
							}
						}
					}
				}
				for (var N in H) {
					H[N].length > 0 && (this.finalPLMap[N] = this.finalPLMap[N] || [], this.finalPLMap[N].push(H[N]), H[N] = [])
				}
				this._calculMarkMapXY(O, K, "xy"), this._buildBorkenLine(S, this.finalPLMap, Y, "other")
			},
			_buildBorkenLine: function(ab, O, S, Y) {
				for (var R, P = "other" == Y ? "horizontal" : Y, m = this.series, r = ab.length - 1; r >= 0; r--) {
					var ac = ab[r],
						Q = m[ac],
						ad = O[ac];
					if (Q.type === this.type && null != ad) {
						for (var N = this._getBbox(ac, P), E = this._sIndex2ColorMap[ac], Z = this.query(Q, "itemStyle.normal.lineStyle.width"), ae = this.query(Q, "itemStyle.normal.lineStyle.type"), aa = this.query(Q, "itemStyle.normal.lineStyle.color"), T = this.getItemStyleColor(this.query(Q, "itemStyle.normal.color"), ac, -1), G = null != this.query(Q, "itemStyle.normal.areaStyle"), af = this.query(Q, "itemStyle.normal.areaStyle.color"), B = 0, l = ad.length; l > B; B++) {
							var a = ad[B],
								C = "other" != Y && this._isLarge(P, a);
							if (C) {
								a = this._getLargePointList(P, a)
							} else {
								for (var H = 0, F = a.length; F > H; H++) {
									R = Q.data[a[H][2]], (this.deepQuery([R, Q, this.option], "calculable") || this.deepQuery([R, Q], "showAllSymbol") || "categoryAxis" === S.type && S.isMainAxis(a[H][2]) && "none" != this.deepQuery([R, Q], "symbol")) && this.shapeList.push(this._getSymbol(ac, a[H][2], a[H][3], a[H][0], a[H][1], P))
								}
							}
							var M = new y({
								zlevel: this.getZlevelBase(),
								z: this.getZBase(),
								style: {
									miterLimit: Z,
									pointList: a,
									strokeColor: aa || T || E,
									lineWidth: Z,
									lineType: ae,
									smooth: this._getSmooth(Q.smooth),
									smoothConstraint: N,
									shadowColor: this.query(Q, "itemStyle.normal.lineStyle.shadowColor"),
									shadowBlur: this.query(Q, "itemStyle.normal.lineStyle.shadowBlur"),
									shadowOffsetX: this.query(Q, "itemStyle.normal.lineStyle.shadowOffsetX"),
									shadowOffsetY: this.query(Q, "itemStyle.normal.lineStyle.shadowOffsetY")
								},
								hoverable: !1,
								_main: !0,
								_seriesIndex: ac,
								_orient: P
							});
							if (u.pack(M, m[ac], ac, 0, B, m[ac].name), this.shapeList.push(M), G) {
								var D = new j({
									zlevel: this.getZlevelBase(),
									z: this.getZBase(),
									style: {
										miterLimit: Z,
										pointList: w.clone(a).concat([
											[a[a.length - 1][4], a[a.length - 1][5]],
											[a[0][4], a[0][5]]
										]),
										brushType: "fill",
										smooth: this._getSmooth(Q.smooth),
										smoothConstraint: N,
										color: af ? af : q.alpha(E, 0.5)
									},
									highlightStyle: {
										brushType: "fill"
									},
									hoverable: !1,
									_main: !0,
									_seriesIndex: ac,
									_orient: P
								});
								u.pack(D, m[ac], ac, 0, B, m[ac].name), this.shapeList.push(D)
							}
						}
					}
				}
			},
			_getBbox: function(m, l) {
				var o = this.component.grid.getBbox(),
					a = this.xMarkMap[m];
				return null != a.minX0 ? [
					[Math.min(a.minX0, a.maxX0, a.minX1, a.maxX1), Math.min(a.minY0, a.maxY0, a.minY1, a.maxY1)],
					[Math.max(a.minX0, a.maxX0, a.minX1, a.maxX1), Math.max(a.minY0, a.maxY0, a.minY1, a.maxY1)]
				] : ("horizontal" === l ? (o[0][1] = Math.min(a.minY, a.maxY), o[1][1] = Math.max(a.minY, a.maxY)) : (o[0][0] = Math.min(a.minX, a.maxX), o[1][0] = Math.max(a.minX, a.maxX)), o)
			},
			_isLarge: function(i, a) {
				return a.length < 2 ? !1 : "horizontal" === i ? Math.abs(a[0][0] - a[1][0]) < 0.5 : Math.abs(a[0][1] - a[1][1]) < 0.5
			},
			_getLargePointList: function(s, r) {
				var C;
				C = "horizontal" === s ? this.component.grid.getWidth() : this.component.grid.getHeight();
				for (var m = r.length, l = [], B = 0; C > B; B++) {
					l[B] = r[Math.floor(m / C * B)]
				}
				return l
			},
			_getSmooth: function(a) {
				return a ? 0.3 : 0
			},
			_getCalculableItem: function(F, H, B, D, G, s) {
				var m = this.series,
					C = m[F].calculableHolderColor || this.ecTheme.calculableHolderColor || A.calculableHolderColor,
					E = this._getSymbol(F, H, B, D, G, s);
				return E.style.color = C, E.style.strokeColor = C, E.rotation = [0, 0], E.hoverable = !1, E.draggable = !1, E.style.text = void 0, E
			},
			_getSymbol: function(G, I, C, E, H, B) {
				var m = this.series,
					J = m[G],
					D = J.data[I],
					F = this.getSymbolShape(J, G, D, I, C, E, H, this._sIndex2ShapeMap[G], this._sIndex2ColorMap[G], "#fff", "vertical" === B ? "horizontal" : "vertical");
				return F.zlevel = this.getZlevelBase(), F.z = this.getZBase() + 1, this.deepQuery([D, J, this.option], "calculable") && (this.setCalculable(F), F.draggable = !0), F
			},
			getMarkCoord: function(C, s) {
				var E = this.series[C],
					m = this.xMarkMap[C],
					l = this.component.xAxis.getAxis(E.xAxisIndex),
					D = this.component.yAxis.getAxis(E.yAxisIndex);
				if (s.type && ("max" === s.type || "min" === s.type || "average" === s.type)) {
					var B = null != s.valueIndex ? s.valueIndex : null != m.maxX0 ? "1" : "";
					return [m[s.type + "X" + B], m[s.type + "Y" + B], m[s.type + "Line" + B], m[s.type + B]]
				}
				return ["string" != typeof s.xAxis && l.getCoordByIndex ? l.getCoordByIndex(s.xAxis || 0) : l.getCoord(s.xAxis || 0), "string" != typeof s.yAxis && D.getCoordByIndex ? D.getCoordByIndex(s.yAxis || 0) : D.getCoord(s.yAxis || 0)]
			},
			refresh: function(a) {
				a && (this.option = a, this.series = a.series), this.backupShapeList(), this._buildShape()
			},
			ontooltipHover: function(I, K) {
				for (var D, G, J = I.seriesIndex, C = I.dataIndex, B = J.length; B--;) {
					if (D = this.finalPLMap[J[B]]) {
						for (var L = 0, F = D.length; F > L; L++) {
							G = D[L];
							for (var H = 0, E = G.length; E > H; H++) {
								C === G[H][2] && K.push(this._getSymbol(J[B], G[H][2], G[H][3], G[H][0], G[H][1], "horizontal"))
							}
						}
					}
				}
			},
			addDataAnimation: function(K) {
				for (var N = this.series, D = {}, I = 0, M = K.length; M > I; I++) {
					D[K[I][0]] = K[I]
				}
				for (var C, B, O, H, J, F, E, I = this.shapeList.length - 1; I >= 0; I--) {
					if (J = this.shapeList[I]._seriesIndex, D[J] && !D[J][3]) {
						if (this.shapeList[I]._main && this.shapeList[I].style.pointList.length > 1) {
							if (F = this.shapeList[I].style.pointList, B = Math.abs(F[0][0] - F[1][0]), H = Math.abs(F[0][1] - F[1][1]), E = "horizontal" === this.shapeList[I]._orient, D[J][2]) {
								if ("half-smooth-polygon" === this.shapeList[I].type) {
									var G = F.length;
									this.shapeList[I].style.pointList[G - 3] = F[G - 2], this.shapeList[I].style.pointList[G - 3][E ? 0 : 1] = F[G - 4][E ? 0 : 1], this.shapeList[I].style.pointList[G - 2] = F[G - 1]
								}
								this.shapeList[I].style.pointList.pop(), E ? (C = B, O = 0) : (C = 0, O = -H)
							} else {
								if (this.shapeList[I].style.pointList.shift(), "half-smooth-polygon" === this.shapeList[I].type) {
									var L = this.shapeList[I].style.pointList.pop();
									E ? L[0] = F[0][0] : L[1] = F[0][1], this.shapeList[I].style.pointList.push(L)
								}
								E ? (C = -B, O = 0) : (C = 0, O = H)
							}
							this.zr.modShape(this.shapeList[I].id, {
								style: {
									pointList: this.shapeList[I].style.pointList
								}
							}, !0)
						} else {
							if (D[J][2] && this.shapeList[I]._dataIndex === N[J].data.length - 1) {
								this.zr.delShape(this.shapeList[I].id);
								continue
							}
							if (!D[J][2] && 0 === this.shapeList[I]._dataIndex) {
								this.zr.delShape(this.shapeList[I].id);
								continue
							}
						}
						this.shapeList[I].position = [0, 0], this.zr.animate(this.shapeList[I].id, "").when(this.query(this.option, "animationDurationUpdate"), {
							position: [C, O]
						}).start()
					}
				}
			}
		}, k.prototype.iconLibrary.legendLineIcon = p, w.inherits(z, v), x("../chart").define("line", z), z
	}), h("echarts/util/shape/HalfSmoothPolygon", ["require", "zrender/shape/Base", "zrender/shape/util/smoothBezier", "zrender/tool/util", "zrender/shape/Polygon"], function(m) {
		function l(a) {
			o.call(this, a)
		}
		var o = m("zrender/shape/Base"),
			k = m("zrender/shape/util/smoothBezier"),
			j = m("zrender/tool/util");
		return l.prototype = {
			type: "half-smooth-polygon",
			buildPath: function(x, p) {
				var w = p.pointList;
				if (!(w.length < 2)) {
					if (p.smooth) {
						var i = k(w.slice(0, -2), p.smooth, !1, p.smoothConstraint);
						x.moveTo(w[0][0], w[0][1]);
						for (var e, y, u, v = w.length, q = 0; v - 3 > q; q++) {
							e = i[2 * q], y = i[2 * q + 1], u = w[q + 1], x.bezierCurveTo(e[0], e[1], y[0], y[1], u[0], u[1])
						}
						x.lineTo(w[v - 2][0], w[v - 2][1]), x.lineTo(w[v - 1][0], w[v - 1][1]), x.lineTo(w[0][0], w[0][1])
					} else {
						m("zrender/shape/Polygon").prototype.buildPath(x, p)
					}
				}
			}
		}, j.inherits(l, o), l
	}), h("echarts/chart/bar", ["require", "./base", "zrender/shape/Rectangle", "../component/axis", "../component/grid", "../component/dataZoom", "../config", "../util/ecData", "zrender/tool/util", "zrender/tool/color", "../chart"], function(q) {
		function l(w, s, r, n, x) {
			v.call(this, w, s, r, n, x), this.refresh(n)
		}
		var v = q("./base"),
			k = q("zrender/shape/Rectangle");
		q("../component/axis"), q("../component/grid"), q("../component/dataZoom");
		var j = q("../config");
		j.bar = {
			zlevel: 0,
			z: 2,
			clickable: !0,
			legendHoverLink: !0,
			xAxisIndex: 0,
			yAxisIndex: 0,
			barMinHeight: 0,
			barGap: "30%",
			barCategoryGap: "20%",
			itemStyle: {
				normal: {
					barBorderColor: "#fff",
					barBorderRadius: 0,
					barBorderWidth: 0,
					label: {
						show: !1
					}
				},
				emphasis: {
					barBorderColor: "#fff",
					barBorderRadius: 0,
					barBorderWidth: 0,
					label: {
						show: !1
					}
				}
			}
		};
		var u = q("../util/ecData"),
			p = q("zrender/tool/util"),
			m = q("zrender/tool/color");
		return l.prototype = {
			type: j.CHART_TYPE_BAR,
			_buildShape: function() {
				this._buildPosition()
			},
			_buildNormal: function(aB, ao, au, at, aq) {
				for (var ap, aw, ay, av, B, G, aC, ar, aD, an, aj, az, aE = this.series, aA = au[0][0], ax = aE[aA], ak = "horizontal" == aq, aF = this.component.xAxis, Z = this.component.yAxis, i = ak ? aF.getAxis(ax.xAxisIndex) : Z.getAxis(ax.yAxisIndex), a = this._mapSize(i, au), aa = a.gap, al = a.barGap, ac = a.barWidthMap, am = a.barMaxWidthMap, ab = a.barWidth, ag = a.barMinHeightMap, N = a.interval, ae = this.deepQuery([this.ecTheme, j], "island.r"), ad = 0, H = ao; H > ad && null != i.getNameByIndex(ad); ad++) {
					ak ? av = i.getCoordByIndex(ad) - aa / 2 : B = i.getCoordByIndex(ad) + aa / 2;
					for (var ah = 0, Y = au.length; Y > ah; ah++) {
						var ai = aE[au[ah][0]].yAxisIndex || 0,
							R = aE[au[ah][0]].xAxisIndex || 0;
						ap = ak ? Z.getAxis(ai) : aF.getAxis(R), aC = G = aD = ar = ap.getCoord(0);
						for (var af = 0, Q = au[ah].length; Q > af; af++) {
							aA = au[ah][af], ax = aE[aA], aj = ax.data[ad], az = this.getDataFromOption(aj, "-"), at[aA] = at[aA] || {
								min: Number.POSITIVE_INFINITY,
								max: Number.NEGATIVE_INFINITY,
								sum: 0,
								counter: 0,
								average: 0
							}, ay = Math.min(am[aA] || Number.MAX_VALUE, ac[aA] || ab), "-" !== az && (az > 0 ? (aw = af > 0 ? ap.getCoordSize(az) : ak ? aC - ap.getCoord(az) : ap.getCoord(az) - aC, 1 === Q && ag[aA] > aw && (aw = ag[aA]), ak ? (G -= aw, B = G) : (av = G, G += aw)) : 0 > az ? (aw = af > 0 ? ap.getCoordSize(az) : ak ? ap.getCoord(az) - aD : aD - ap.getCoord(az), 1 === Q && ag[aA] > aw && (aw = ag[aA]), ak ? (B = ar, ar += aw) : (ar -= aw, av = ar)) : (aw = 0, ak ? (G -= aw, B = G) : (av = G, G += aw)), at[aA][ad] = ak ? av + ay / 2 : B - ay / 2, at[aA].min > az && (at[aA].min = az, ak ? (at[aA].minY = B, at[aA].minX = at[aA][ad]) : (at[aA].minX = av + aw, at[aA].minY = at[aA][ad])), at[aA].max < az && (at[aA].max = az, ak ? (at[aA].maxY = B, at[aA].maxX = at[aA][ad]) : (at[aA].maxX = av + aw, at[aA].maxY = at[aA][ad])), at[aA].sum += az, at[aA].counter++, ad % N === 0 && (an = this._getBarItem(aA, ad, i.getNameByIndex(ad), av, B - (ak ? 0 : ay), ak ? ay : aw, ak ? aw : ay, ak ? "vertical" : "horizontal"), this.shapeList.push(new k(an))))
						}
						for (var af = 0, Q = au[ah].length; Q > af; af++) {
							aA = au[ah][af], ax = aE[aA], aj = ax.data[ad], az = this.getDataFromOption(aj, "-"), ay = Math.min(am[aA] || Number.MAX_VALUE, ac[aA] || ab), "-" == az && this.deepQuery([aj, ax, this.option], "calculable") && (ak ? (G -= ae, B = G) : (av = G, G += ae), an = this._getBarItem(aA, ad, i.getNameByIndex(ad), av, B - (ak ? 0 : ay), ak ? ay : ae, ak ? ae : ay, ak ? "vertical" : "horizontal"), an.hoverable = !1, an.draggable = !1, an.style.lineWidth = 1, an.style.brushType = "stroke", an.style.strokeColor = ax.calculableHolderColor || this.ecTheme.calculableHolderColor || j.calculableHolderColor, this.shapeList.push(new k(an)))
						}
						ak ? av += ay + al : B -= ay + al
					}
				}
				this._calculMarkMapXY(at, au, ak ? "y" : "x")
			},
			_buildHorizontal: function(r, o, s, a) {
				return this._buildNormal(r, o, s, a, "horizontal")
			},
			_buildVertical: function(r, o, s, a) {
				return this._buildNormal(r, o, s, a, "vertical")
			},
			_buildOther: function(aa, I, P, ae) {
				for (var O = this.series, M = 0, J = P.length; J > M; M++) {
					for (var R = 0, T = P[M].length; T > R; R++) {
						var Q = P[M][R],
							A = O[Q],
							B = A.xAxisIndex || 0,
							ab = this.component.xAxis.getAxis(B),
							N = ab.getCoord(0),
							ac = A.yAxisIndex || 0,
							H = this.component.yAxis.getAxis(ac),
							E = H.getCoord(0);
						ae[Q] = ae[Q] || {
							min0: Number.POSITIVE_INFINITY,
							min1: Number.POSITIVE_INFINITY,
							max0: Number.NEGATIVE_INFINITY,
							max1: Number.NEGATIVE_INFINITY,
							sum0: 0,
							sum1: 0,
							counter0: 0,
							counter1: 0,
							average0: 0,
							average1: 0
						};
						for (var Y = 0, ad = A.data.length; ad > Y; Y++) {
							var Z = A.data[Y],
								S = this.getDataFromOption(Z, "-");
							if (S instanceof Array) {
								var F, af, C = ab.getCoord(S[0]),
									z = H.getCoord(S[1]),
									i = [Z, A],
									D = this.deepQuery(i, "barWidth") || 10,
									G = this.deepQuery(i, "barHeight");
								null != G ? (F = "horizontal", S[0] > 0 ? (D = C - N, C -= D) : D = S[0] < 0 ? N - C : 0, af = this._getBarItem(Q, Y, S[0], C, z - G / 2, D, G, F)) : (F = "vertical", S[1] > 0 ? G = E - z : S[1] < 0 ? (G = z - E, z -= G) : G = 0, af = this._getBarItem(Q, Y, S[0], C - D / 2, z, D, G, F)), this.shapeList.push(new k(af)), C = ab.getCoord(S[0]), z = H.getCoord(S[1]), ae[Q].min0 > S[0] && (ae[Q].min0 = S[0], ae[Q].minY0 = z, ae[Q].minX0 = C), ae[Q].max0 < S[0] && (ae[Q].max0 = S[0], ae[Q].maxY0 = z, ae[Q].maxX0 = C), ae[Q].sum0 += S[0], ae[Q].counter0++, ae[Q].min1 > S[1] && (ae[Q].min1 = S[1], ae[Q].minY1 = z, ae[Q].minX1 = C), ae[Q].max1 < S[1] && (ae[Q].max1 = S[1], ae[Q].maxY1 = z, ae[Q].maxX1 = C), ae[Q].sum1 += S[1], ae[Q].counter1++
							}
						}
					}
				}
				this._calculMarkMapXY(ae, P, "xy")
			},
			_mapSize: function(F, I, y) {
				var D, H, x = this._findSpecialBarSzie(I, y),
					w = x.barWidthMap,
					J = x.barMaxWidthMap,
					C = x.barMinHeightMap,
					E = x.sBarWidthCounter,
					A = x.sBarWidthTotal,
					z = x.barGap,
					B = x.barCategoryGap,
					G = 1;
				if (I.length != E) {
					if (y) {
						D = F.getGap(), z = 0, H = +(D / I.length).toFixed(2), 0 >= H && (G = Math.floor(I.length / D), H = 1)
					} else {
						if (D = "string" == typeof B && B.match(/%$/) ? (F.getGap() * (100 - parseFloat(B)) / 100).toFixed(2) - 0 : F.getGap() - B, "string" == typeof z && z.match(/%$/) ? (z = parseFloat(z) / 100, H = +((D - A) / ((I.length - 1) * z + I.length - E)).toFixed(2), z = H * z) : (z = parseFloat(z), H = +((D - A - z * (I.length - 1)) / (I.length - E)).toFixed(2)), 0 >= H) {
							return this._mapSize(F, I, !0)
						}
					}
				} else {
					if (D = E > 1 ? "string" == typeof B && B.match(/%$/) ? +(F.getGap() * (100 - parseFloat(B)) / 100).toFixed(2) : F.getGap() - B : A, H = 0, z = E > 1 ? +((D - A) / (E - 1)).toFixed(2) : 0, 0 > z) {
						return this._mapSize(F, I, !0)
					}
				}
				return this._recheckBarMaxWidth(I, w, J, C, D, H, z, G)
			},
			_findSpecialBarSzie: function(O, B) {
				for (var G, K, S, F, D = this.series, C = {}, I = {}, L = {}, H = 0, w = 0, x = 0, P = O.length; P > x; x++) {
					for (var E = {
							barWidth: !1,
							barMaxWidth: !1
						}, Q = 0, A = O[x].length; A > Q; Q++) {
						var z = O[x][Q],
							M = D[z];
						if (!B) {
							if (E.barWidth) {
								C[z] = G
							} else {
								if (G = this.query(M, "barWidth"), null != G) {
									C[z] = G, w += G, H++, E.barWidth = !0;
									for (var R = 0, N = Q; N > R; R++) {
										var J = O[x][R];
										C[J] = G
									}
								}
							}
							if (E.barMaxWidth) {
								I[z] = K
							} else {
								if (K = this.query(M, "barMaxWidth"), null != K) {
									I[z] = K, E.barMaxWidth = !0;
									for (var R = 0, N = Q; N > R; R++) {
										var J = O[x][R];
										I[J] = K
									}
								}
							}
						}
						L[z] = this.query(M, "barMinHeight"), S = null != S ? S : this.query(M, "barGap"), F = null != F ? F : this.query(M, "barCategoryGap")
					}
				}
				return {
					barWidthMap: C,
					barMaxWidthMap: I,
					barMinHeightMap: L,
					sBarWidth: G,
					sBarMaxWidth: K,
					sBarWidthCounter: H,
					sBarWidthTotal: w,
					barGap: S,
					barCategoryGap: F
				}
			},
			_recheckBarMaxWidth: function(D, F, y, B, E, x, w, G) {
				for (var A = 0, C = D.length; C > A; A++) {
					var z = D[A][0];
					y[z] && y[z] < x && (E -= x - y[z])
				}
				return {
					barWidthMap: F,
					barMaxWidthMap: y,
					barMinHeightMap: B,
					gap: E,
					barWidth: x,
					barGap: w,
					interval: G
				}
			},
			_getBarItem: function(K, z, C, G, O, A, E, H) {
				var D, o = this.series,
					s = o[K],
					L = s.data[z],
					B = this._sIndex2ColorMap[K],
					M = [L, s],
					x = this.deepMerge(M, "itemStyle.normal"),
					w = this.deepMerge(M, "itemStyle.emphasis"),
					I = x.barBorderWidth;
				D = {
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					clickable: this.deepQuery(M, "clickable"),
					style: {
						x: G,
						y: O,
						width: A,
						height: E,
						brushType: "both",
						color: this.getItemStyleColor(this.deepQuery(M, "itemStyle.normal.color") || B, K, z, L),
						radius: x.barBorderRadius,
						lineWidth: I,
						strokeColor: x.barBorderColor
					},
					highlightStyle: {
						color: this.getItemStyleColor(this.deepQuery(M, "itemStyle.emphasis.color"), K, z, L),
						radius: w.barBorderRadius,
						lineWidth: w.barBorderWidth,
						strokeColor: w.barBorderColor
					},
					_orient: H
				};
				var N = D.style;
				D.highlightStyle.color = D.highlightStyle.color || ("string" == typeof N.color ? m.lift(N.color, -0.3) : N.color), N.x = Math.floor(N.x), N.y = Math.floor(N.y), N.height = Math.ceil(N.height), N.width = Math.ceil(N.width), I > 0 && N.height > I && N.width > I ? (N.y += I / 2, N.height -= I, N.x += I / 2, N.width -= I) : N.brushType = "fill", D.highlightStyle.textColor = D.highlightStyle.color, D = this.addLabel(D, s, L, C, H);
				var J = N.textPosition;
				if ("insideLeft" === J || "insideRight" === J || "insideTop" === J || "insideBottom" === J) {
					var F = 5;
					switch (J) {
						case "insideLeft":
							N.textX = N.x + F, N.textY = N.y + N.height / 2, N.textAlign = "left", N.textBaseline = "middle";
							break;
						case "insideRight":
							N.textX = N.x + N.width - F, N.textY = N.y + N.height / 2, N.textAlign = "right", N.textBaseline = "middle";
							break;
						case "insideTop":
							N.textX = N.x + N.width / 2, N.textY = N.y + F / 2, N.textAlign = "center", N.textBaseline = "top";
							break;
						case "insideBottom":
							N.textX = N.x + N.width / 2, N.textY = N.y + N.height - F / 2, N.textAlign = "center", N.textBaseline = "bottom"
					}
					N.textPosition = "specific", N.textColor = N.textColor || "#fff"
				}
				return this.deepQuery([L, s, this.option], "calculable") && (this.setCalculable(D), D.draggable = !0), u.pack(D, o[K], K, o[K].data[z], z, C), D
			},
			getMarkCoord: function(D, F) {
				var y, B, E = this.series[D],
					x = this.xMarkMap[D],
					w = this.component.xAxis.getAxis(E.xAxisIndex),
					G = this.component.yAxis.getAxis(E.yAxisIndex);
				if (!F.type || "max" !== F.type && "min" !== F.type && "average" !== F.type) {
					if (x.isHorizontal) {
						y = "string" == typeof F.xAxis && w.getIndexByName ? w.getIndexByName(F.xAxis) : F.xAxis || 0;
						var A = x[y];
						A = null != A ? A : "string" != typeof F.xAxis && w.getCoordByIndex ? w.getCoordByIndex(F.xAxis || 0) : w.getCoord(F.xAxis || 0), B = [A, G.getCoord(F.yAxis || 0)]
					} else {
						y = "string" == typeof F.yAxis && G.getIndexByName ? G.getIndexByName(F.yAxis) : F.yAxis || 0;
						var C = x[y];
						C = null != C ? C : "string" != typeof F.yAxis && G.getCoordByIndex ? G.getCoordByIndex(F.yAxis || 0) : G.getCoord(F.yAxis || 0), B = [w.getCoord(F.xAxis || 0), C]
					}
				} else {
					var z = null != F.valueIndex ? F.valueIndex : null != x.maxX0 ? "1" : "";
					B = [x[F.type + "X" + z], x[F.type + "Y" + z], x[F.type + "Line" + z], x[F.type + z]]
				}
				return B
			},
			refresh: function(a) {
				a && (this.option = a, this.series = a.series), this.backupShapeList(), this._buildShape()
			},
			addDataAnimation: function(D) {
				for (var F = this.series, w = {}, B = 0, E = D.length; E > B; B++) {
					w[D[B][0]] = D[B]
				}
				for (var o, G, A, C, y, x, z, B = this.shapeList.length - 1; B >= 0; B--) {
					if (x = u.get(this.shapeList[B], "seriesIndex"), w[x] && !w[x][3] && "rectangle" === this.shapeList[B].type) {
						if (z = u.get(this.shapeList[B], "dataIndex"), y = F[x], w[x][2] && z === y.data.length - 1) {
							this.zr.delShape(this.shapeList[B].id);
							continue
						}
						if (!w[x][2] && 0 === z) {
							this.zr.delShape(this.shapeList[B].id);
							continue
						}
						"horizontal" === this.shapeList[B]._orient ? (C = this.component.yAxis.getAxis(y.yAxisIndex || 0).getGap(), A = w[x][2] ? -C : C, o = 0) : (G = this.component.xAxis.getAxis(y.xAxisIndex || 0).getGap(), o = w[x][2] ? G : -G, A = 0), this.shapeList[B].position = [0, 0], this.zr.animate(this.shapeList[B].id, "").when(this.query(this.option, "animationDurationUpdate"), {
							position: [o, A]
						}).start()
					}
				}
			}
		}, p.inherits(l, v), q("../chart").define("bar", l), l
	}), h("echarts/chart/scatter", ["require", "./base", "../util/shape/Symbol", "../component/axis", "../component/grid", "../component/dataZoom", "../component/dataRange", "../config", "zrender/tool/util", "zrender/tool/color", "../chart"], function(p) {
		function l(v, u, r, n, w) {
			s.call(this, v, u, r, n, w), this.refresh(n)
		}
		var s = p("./base"),
			k = p("../util/shape/Symbol");
		p("../component/axis"), p("../component/grid"), p("../component/dataZoom"), p("../component/dataRange");
		var j = p("../config");
		j.scatter = {
			zlevel: 0,
			z: 2,
			clickable: !0,
			legendHoverLink: !0,
			xAxisIndex: 0,
			yAxisIndex: 0,
			symbolSize: 4,
			large: !1,
			largeThreshold: 2000,
			itemStyle: {
				normal: {
					label: {
						show: !1
					}
				},
				emphasis: {
					label: {
						show: !1
					}
				}
			}
		};
		var q = p("zrender/tool/util"),
			m = p("zrender/tool/color");
		return l.prototype = {
			type: j.CHART_TYPE_SCATTER,
			_buildShape: function() {
				var y = this.series;
				this._sIndex2ColorMap = {}, this._symbol = this.option.symbolList, this._sIndex2ShapeMap = {}, this.selectedMap = {}, this.xMarkMap = {};
				for (var z, r, w, a, A = this.component.legend, v = [], x = 0, u = y.length; u > x; x++) {
					if (z = y[x], r = z.name, z.type === j.CHART_TYPE_SCATTER) {
						if (y[x] = this.reformOption(y[x]), this.legendHoverLink = y[x].legendHoverLink || this.legendHoverLink, this._sIndex2ShapeMap[x] = this.query(z, "symbol") || this._symbol[x % this._symbol.length], A) {
							if (this.selectedMap[r] = A.isSelected(r), this._sIndex2ColorMap[x] = m.alpha(A.getColor(r), 0.5), w = A.getItemShape(r)) {
								var a = this._sIndex2ShapeMap[x];
								w.style.brushType = a.match("empty") ? "stroke" : "both", a = a.replace("empty", "").toLowerCase(), a.match("rectangle") && (w.style.x += Math.round((w.style.width - w.style.height) / 2), w.style.width = w.style.height), a.match("star") && (w.style.n = a.replace("star", "") - 0 || 5, a = "star"), a.match("image") && (w.style.image = a.replace(new RegExp("^image:\\/\\/"), ""), w.style.x += Math.round((w.style.width - w.style.height) / 2), w.style.width = w.style.height, a = "image"), w.style.iconType = a, A.setItemShape(r, w)
							}
						} else {
							this.selectedMap[r] = !0, this._sIndex2ColorMap[x] = m.alpha(this.zr.getColor(x), 0.5)
						}
						this.selectedMap[r] && v.push(x)
					}
				}
				this._buildSeries(v), this.addShapeList()
			},
			_buildSeries: function(E) {
				if (0 !== E.length) {
					for (var H, x, C, G, w, u, I, B, D = this.series, z = {}, y = 0, A = E.length; A > y; y++) {
						if (H = E[y], x = D[H], 0 !== x.data.length) {
							w = this.component.xAxis.getAxis(x.xAxisIndex || 0), u = this.component.yAxis.getAxis(x.yAxisIndex || 0), z[H] = [];
							for (var F = 0, v = x.data.length; v > F; F++) {
								C = x.data[F], G = this.getDataFromOption(C, "-"), "-" === G || G.length < 2 || (I = w.getCoord(G[0]), B = u.getCoord(G[1]), z[H].push([I, B, F, C.name || ""]))
							}
							this.xMarkMap[H] = this._markMap(w, u, x.data, z[H]), this.buildMark(H)
						}
					}
					this._buildPointList(z)
				}
			},
			_markMap: function(D, G, w, B) {
				for (var F, v = {
						min0: Number.POSITIVE_INFINITY,
						max0: Number.NEGATIVE_INFINITY,
						sum0: 0,
						counter0: 0,
						average0: 0,
						min1: Number.POSITIVE_INFINITY,
						max1: Number.NEGATIVE_INFINITY,
						sum1: 0,
						counter1: 0,
						average1: 0
					}, u = 0, H = B.length; H > u; u++) {
					F = w[B[u][2]].value || w[B[u][2]], v.min0 > F[0] && (v.min0 = F[0], v.minY0 = B[u][1], v.minX0 = B[u][0]), v.max0 < F[0] && (v.max0 = F[0], v.maxY0 = B[u][1], v.maxX0 = B[u][0]), v.sum0 += F[0], v.counter0++, v.min1 > F[1] && (v.min1 = F[1], v.minY1 = B[u][1], v.minX1 = B[u][0]), v.max1 < F[1] && (v.max1 = F[1], v.maxY1 = B[u][1], v.maxX1 = B[u][0]), v.sum1 += F[1], v.counter1++
				}
				var A = this.component.grid.getX(),
					C = this.component.grid.getXend(),
					y = this.component.grid.getY(),
					x = this.component.grid.getYend();
				v.average0 = v.sum0 / v.counter0;
				var z = D.getCoord(v.average0);
				v.averageLine0 = [
					[z, x],
					[z, y]
				], v.minLine0 = [
					[v.minX0, x],
					[v.minX0, y]
				], v.maxLine0 = [
					[v.maxX0, x],
					[v.maxX0, y]
				], v.average1 = v.sum1 / v.counter1;
				var E = G.getCoord(v.average1);
				return v.averageLine1 = [
					[A, E],
					[C, E]
				], v.minLine1 = [
					[A, v.minY1],
					[C, v.minY1]
				], v.maxLine1 = [
					[A, v.maxY1],
					[C, v.maxY1]
				], v
			},
			_buildPointList: function(z) {
				var B, w, y, A, v = this.series;
				for (var u in z) {
					if (B = v[u], w = z[u], B.large && B.data.length > B.largeThreshold) {
						this.shapeList.push(this._getLargeSymbol(w, this.getItemStyleColor(this.query(B, "itemStyle.normal.color"), u, -1) || this._sIndex2ColorMap[u]))
					} else {
						for (var C = 0, x = w.length; x > C; C++) {
							y = w[C], A = this._getSymbol(u, y[2], y[3], y[0], y[1]), A && this.shapeList.push(A)
						}
					}
				}
			},
			_getSymbol: function(B, D, w, z, C) {
				var v, u = this.series,
					E = u[B],
					y = E.data[D],
					A = this.component.dataRange;
				if (A) {
					if (v = isNaN(y[2]) ? this._sIndex2ColorMap[B] : A.getColor(y[2]), !v) {
						return null
					}
				} else {
					v = this._sIndex2ColorMap[B]
				}
				var x = this.getSymbolShape(E, B, y, D, w, z, C, this._sIndex2ShapeMap[B], v, "rgba(0,0,0,0)", "vertical");
				return x.zlevel = this.getZlevelBase(), x.z = this.getZBase(), x._main = !0, x
			},
			_getLargeSymbol: function(i, a) {
				return new k({
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					_main: !0,
					hoverable: !1,
					style: {
						pointList: i,
						color: a,
						strokeColor: a
					},
					highlightStyle: {
						pointList: []
					}
				})
			},
			getMarkCoord: function(z, w) {
				var B, v = this.series[z],
					u = this.xMarkMap[z],
					A = this.component.xAxis.getAxis(v.xAxisIndex),
					y = this.component.yAxis.getAxis(v.yAxisIndex);
				if (!w.type || "max" !== w.type && "min" !== w.type && "average" !== w.type) {
					B = ["string" != typeof w.xAxis && A.getCoordByIndex ? A.getCoordByIndex(w.xAxis || 0) : A.getCoord(w.xAxis || 0), "string" != typeof w.yAxis && y.getCoordByIndex ? y.getCoordByIndex(w.yAxis || 0) : y.getCoord(w.yAxis || 0)]
				} else {
					var x = null != w.valueIndex ? w.valueIndex : 1;
					B = [u[w.type + "X" + x], u[w.type + "Y" + x], u[w.type + "Line" + x], u[w.type + x]]
				}
				return B
			},
			refresh: function(a) {
				a && (this.option = a, this.series = a.series), this.backupShapeList(), this._buildShape()
			},
			ondataRange: function(i, a) {
				this.component.dataRange && (this.refresh(), a.needRefresh = !0)
			}
		}, q.inherits(l, s), p("../chart").define("scatter", l), l
	}), h("echarts/component/dataRange", ["require", "./base", "zrender/shape/Text", "zrender/shape/Rectangle", "../util/shape/HandlePolygon", "../config", "zrender/tool/util", "zrender/tool/event", "zrender/tool/area", "zrender/tool/color", "../component"], function(x) {
		function z(B, n, m, l, C) {
			if ("undefined" == typeof this.query(l, "dataRange.min") || "undefined" == typeof this.query(l, "dataRange.max")) {
				return void console.error("option.dataRange.min or option.dataRange.max has not been defined.")
			}
			p.call(this, B, n, m, l, C);
			var r = this;
			r._ondrift = function(i, a) {
				return r.__ondrift(this, i, a)
			}, r._ondragend = function() {
				return r.__ondragend()
			}, r._dataRangeSelected = function(a) {
				return r.__dataRangeSelected(a)
			}, r._dispatchHoverLink = function(a) {
				return r.__dispatchHoverLink(a)
			}, r._onhoverlink = function(a) {
				return r.__onhoverlink(a)
			}, this._selectedMap = {}, this._range = {}, this.refresh(l), n.bind(j.EVENT.HOVER, this._onhoverlink)
		}
		var p = x("./base"),
			v = x("zrender/shape/Text"),
			y = x("zrender/shape/Rectangle"),
			k = x("../util/shape/HandlePolygon"),
			j = x("../config");
		j.dataRange = {
			zlevel: 0,
			z: 4,
			show: !0,
			orient: "vertical",
			x: "left",
			y: "bottom",
			backgroundColor: "rgba(0,0,0,0)",
			borderColor: "#ccc",
			borderWidth: 0,
			padding: 5,
			itemGap: 10,
			itemWidth: 20,
			itemHeight: 14,
			precision: 0,
			splitNumber: 5,
			calculable: !1,
			selectedMode: !0,
			hoverLink: !0,
			realtime: !0,
			color: ["#006edd", "#e0ffff"],
			textStyle: {
				color: "#333"
			}
		};
		var A = x("zrender/tool/util"),
			u = x("zrender/tool/event"),
			w = x("zrender/tool/area"),
			q = x("zrender/tool/color");
		return z.prototype = {
			type: j.COMPONENT_TYPE_DATARANGE,
			_textGap: 10,
			_buildShape: function() {
				if (this._itemGroupLocation = this._getItemGroupLocation(), this._buildBackground(), this.dataRangeOption.splitNumber <= 0 || this.dataRangeOption.calculable ? this._buildGradient() : this._buildItem(), this.dataRangeOption.show) {
					for (var i = 0, a = this.shapeList.length; a > i; i++) {
						this.zr.addShape(this.shapeList[i])
					}
				}
				this._syncShapeFromRange()
			},
			_buildItem: function() {
				var H, M, C, B, a = this._valueTextList,
					N = a.length,
					G = this.getFont(this.dataRangeOption.textStyle),
					E = this._itemGroupLocation.x,
					D = this._itemGroupLocation.y,
					F = this.dataRangeOption.itemWidth,
					I = this.dataRangeOption.itemHeight,
					i = this.dataRangeOption.itemGap,
					J = w.getTextHeight("国", G);
				"vertical" == this.dataRangeOption.orient && "right" == this.dataRangeOption.x && (E = this._itemGroupLocation.x + this._itemGroupLocation.width - F);
				var L = !0;
				this.dataRangeOption.text && (L = !1, this.dataRangeOption.text[0] && (C = this._getTextShape(E, D, this.dataRangeOption.text[0]), "horizontal" == this.dataRangeOption.orient ? E += w.getTextWidth(this.dataRangeOption.text[0], G) + this._textGap : (D += J + this._textGap, C.style.y += J / 2 + this._textGap, C.style.textBaseline = "bottom"), this.shapeList.push(new v(C))));
				for (var K = 0; N > K; K++) {
					H = a[K], B = this.getColorByIndex(K), M = this._getItemShape(E, D, F, I, this._selectedMap[K] ? B : "#ccc"), M._idx = K, M.onmousemove = this._dispatchHoverLink, this.dataRangeOption.selectedMode && (M.clickable = !0, M.onclick = this._dataRangeSelected), this.shapeList.push(new y(M)), L && (C = {
						zlevel: this.getZlevelBase(),
						z: this.getZBase(),
						style: {
							x: E + F + 5,
							y: D,
							color: this._selectedMap[K] ? this.dataRangeOption.textStyle.color : "#ccc",
							text: a[K],
							textFont: G,
							textBaseline: "top"
						},
						highlightStyle: {
							brushType: "fill"
						}
					}, "vertical" == this.dataRangeOption.orient && "right" == this.dataRangeOption.x && (C.style.x -= F + 10, C.style.textAlign = "right"), C._idx = K, C.onmousemove = this._dispatchHoverLink, this.dataRangeOption.selectedMode && (C.clickable = !0, C.onclick = this._dataRangeSelected), this.shapeList.push(new v(C))), "horizontal" == this.dataRangeOption.orient ? E += F + (L ? 5 : 0) + (L ? w.getTextWidth(H, G) : 0) + i : D += I + i
				}!L && this.dataRangeOption.text[1] && ("horizontal" == this.dataRangeOption.orient ? E = E - i + this._textGap : D = D - i + this._textGap, C = this._getTextShape(E, D, this.dataRangeOption.text[1]), "horizontal" != this.dataRangeOption.orient && (C.style.y -= 5, C.style.textBaseline = "top"), this.shapeList.push(new v(C)))
			},
			_buildGradient: function() {
				var L, B, i = this.getFont(this.dataRangeOption.textStyle),
					a = this._itemGroupLocation.x,
					M = this._itemGroupLocation.y,
					F = this.dataRangeOption.itemWidth,
					D = this.dataRangeOption.itemHeight,
					C = w.getTextHeight("国", i),
					E = 10,
					H = !0;
				this.dataRangeOption.text && (H = !1, this.dataRangeOption.text[0] && (B = this._getTextShape(a, M, this.dataRangeOption.text[0]), "horizontal" == this.dataRangeOption.orient ? a += w.getTextWidth(this.dataRangeOption.text[0], i) + this._textGap : (M += C + this._textGap, B.style.y += C / 2 + this._textGap, B.style.textBaseline = "bottom"), this.shapeList.push(new v(B))));
				for (var e = x("zrender/tool/color"), I = 1 / (this.dataRangeOption.color.length - 1), K = [], J = 0, G = this.dataRangeOption.color.length; G > J; J++) {
					K.push([J * I, this.dataRangeOption.color[J]])
				}
				"horizontal" == this.dataRangeOption.orient ? (L = {
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					style: {
						x: a,
						y: M,
						width: F * E,
						height: D,
						color: e.getLinearGradient(a, M, a + F * E, M, K)
					},
					hoverable: !1
				}, a += F * E + this._textGap) : (L = {
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					style: {
						x: a,
						y: M,
						width: F,
						height: D * E,
						color: e.getLinearGradient(a, M, a, M + D * E, K)
					},
					hoverable: !1
				}, M += D * E + this._textGap), this.shapeList.push(new y(L)), this._calculableLocation = L.style, this.dataRangeOption.calculable && (this._buildFiller(), this._bulidMask(), this._bulidHandle()), this._buildIndicator(), !H && this.dataRangeOption.text[1] && (B = this._getTextShape(a, M, this.dataRangeOption.text[1]), this.shapeList.push(new v(B)))
			},
			_buildIndicator: function() {
				var D, o, E = this._calculableLocation.x,
					m = this._calculableLocation.y,
					l = this._calculableLocation.width,
					C = this._calculableLocation.height,
					B = 5;
				"horizontal" == this.dataRangeOption.orient ? "bottom" != this.dataRangeOption.y ? (D = [
					[E, m + C],
					[E - B, m + C + B],
					[E + B, m + C + B]
				], o = "bottom") : (D = [
					[E, m],
					[E - B, m - B],
					[E + B, m - B]
				], o = "top") : "right" != this.dataRangeOption.x ? (D = [
					[E + l, m],
					[E + l + B, m - B],
					[E + l + B, m + B]
				], o = "right") : (D = [
					[E, m],
					[E - B, m - B],
					[E - B, m + B]
				], o = "left"), this._indicatorShape = {
					style: {
						pointList: D,
						color: "#fff",
						__rect: {
							x: Math.min(D[0][0], D[1][0]),
							y: Math.min(D[0][1], D[1][1]),
							width: B * ("horizontal" == this.dataRangeOption.orient ? 2 : 1),
							height: B * ("horizontal" == this.dataRangeOption.orient ? 1 : 2)
						}
					},
					highlightStyle: {
						brushType: "fill",
						textPosition: o,
						textColor: this.dataRangeOption.textStyle.color
					},
					hoverable: !1
				}, this._indicatorShape = new k(this._indicatorShape)
			},
			_buildFiller: function() {
				this._fillerShape = {
					zlevel: this.getZlevelBase(),
					z: this.getZBase() + 1,
					style: {
						x: this._calculableLocation.x,
						y: this._calculableLocation.y,
						width: this._calculableLocation.width,
						height: this._calculableLocation.height,
						color: "rgba(255,255,255,0)"
					},
					highlightStyle: {
						strokeColor: "rgba(255,255,255,0.5)",
						lineWidth: 1
					},
					draggable: !0,
					ondrift: this._ondrift,
					ondragend: this._ondragend,
					onmousemove: this._dispatchHoverLink,
					_type: "filler"
				}, this._fillerShape = new y(this._fillerShape), this.shapeList.push(this._fillerShape)
			},
			_bulidHandle: function() {
				var I, N, C, H, L, o, O, G, E = this._calculableLocation.x,
					D = this._calculableLocation.y,
					F = this._calculableLocation.width,
					J = this._calculableLocation.height,
					B = this.getFont(this.dataRangeOption.textStyle),
					K = w.getTextHeight("国", B),
					M = Math.max(w.getTextWidth(this._textFormat(this.dataRangeOption.max), B), w.getTextWidth(this._textFormat(this.dataRangeOption.min), B)) + 2;
				"horizontal" == this.dataRangeOption.orient ? "bottom" != this.dataRangeOption.y ? (I = [
					[E, D],
					[E, D + J + K],
					[E - K, D + J + K],
					[E - 1, D + J],
					[E - 1, D]
				], N = E - M / 2 - K, C = D + J + K / 2 + 2, H = {
					x: E - M - K,
					y: D + J,
					width: M + K,
					height: K
				}, L = [
					[E + F, D],
					[E + F, D + J + K],
					[E + F + K, D + J + K],
					[E + F + 1, D + J],
					[E + F + 1, D]
				], o = E + F + M / 2 + K, O = C, G = {
					x: E + F,
					y: D + J,
					width: M + K,
					height: K
				}) : (I = [
					[E, D + J],
					[E, D - K],
					[E - K, D - K],
					[E - 1, D],
					[E - 1, D + J]
				], N = E - M / 2 - K, C = D - K / 2 - 2, H = {
					x: E - M - K,
					y: D - K,
					width: M + K,
					height: K
				}, L = [
					[E + F, D + J],
					[E + F, D - K],
					[E + F + K, D - K],
					[E + F + 1, D],
					[E + F + 1, D + J]
				], o = E + F + M / 2 + K, O = C, G = {
					x: E + F,
					y: D - K,
					width: M + K,
					height: K
				}) : (M += K, "right" != this.dataRangeOption.x ? (I = [
					[E, D],
					[E + F + K, D],
					[E + F + K, D - K],
					[E + F, D - 1],
					[E, D - 1]
				], N = E + F + M / 2 + K / 2, C = D - K / 2, H = {
					x: E + F,
					y: D - K,
					width: M + K,
					height: K
				}, L = [
					[E, D + J],
					[E + F + K, D + J],
					[E + F + K, D + K + J],
					[E + F, D + 1 + J],
					[E, D + J + 1]
				], o = N, O = D + J + K / 2, G = {
					x: E + F,
					y: D + J,
					width: M + K,
					height: K
				}) : (I = [
					[E + F, D],
					[E - K, D],
					[E - K, D - K],
					[E, D - 1],
					[E + F, D - 1]
				], N = E - M / 2 - K / 2, C = D - K / 2, H = {
					x: E - M - K,
					y: D - K,
					width: M + K,
					height: K
				}, L = [
					[E + F, D + J],
					[E - K, D + J],
					[E - K, D + K + J],
					[E, D + 1 + J],
					[E + F, D + J + 1]
				], o = N, O = D + J + K / 2, G = {
					x: E - M - K,
					y: D + J,
					width: M + K,
					height: K
				})), this._startShape = {
					style: {
						pointList: I,
						text: this._textFormat(this.dataRangeOption.max),
						textX: N,
						textY: C,
						textFont: B,
						color: this.getColor(this.dataRangeOption.max),
						rect: H,
						x: I[0][0],
						y: I[0][1],
						_x: I[0][0],
						_y: I[0][1]
					}
				}, this._startShape.highlightStyle = {
					strokeColor: this._startShape.style.color,
					lineWidth: 1
				}, this._endShape = {
					style: {
						pointList: L,
						text: this._textFormat(this.dataRangeOption.min),
						textX: o,
						textY: O,
						textFont: B,
						color: this.getColor(this.dataRangeOption.min),
						rect: G,
						x: L[0][0],
						y: L[0][1],
						_x: L[0][0],
						_y: L[0][1]
					}
				}, this._endShape.highlightStyle = {
					strokeColor: this._endShape.style.color,
					lineWidth: 1
				}, this._startShape.zlevel = this._endShape.zlevel = this.getZlevelBase(), this._startShape.z = this._endShape.z = this.getZBase() + 1, this._startShape.draggable = this._endShape.draggable = !0, this._startShape.ondrift = this._endShape.ondrift = this._ondrift, this._startShape.ondragend = this._endShape.ondragend = this._ondragend, this._startShape.style.textColor = this._endShape.style.textColor = this.dataRangeOption.textStyle.color, this._startShape.style.textAlign = this._endShape.style.textAlign = "center", this._startShape.style.textPosition = this._endShape.style.textPosition = "specific", this._startShape.style.textBaseline = this._endShape.style.textBaseline = "middle", this._startShape.style.width = this._endShape.style.width = 0, this._startShape.style.height = this._endShape.style.height = 0, this._startShape.style.textPosition = this._endShape.style.textPosition = "specific", this._startShape = new k(this._startShape), this._endShape = new k(this._endShape), this.shapeList.push(this._startShape), this.shapeList.push(this._endShape)
			},
			_bulidMask: function() {
				var m = this._calculableLocation.x,
					l = this._calculableLocation.y,
					o = this._calculableLocation.width,
					a = this._calculableLocation.height;
				this._startMask = {
					zlevel: this.getZlevelBase(),
					z: this.getZBase() + 1,
					style: {
						x: m,
						y: l,
						width: "horizontal" == this.dataRangeOption.orient ? 0 : o,
						height: "horizontal" == this.dataRangeOption.orient ? a : 0,
						color: "#ccc"
					},
					hoverable: !1
				}, this._endMask = {
					zlevel: this.getZlevelBase(),
					z: this.getZBase() + 1,
					style: {
						x: "horizontal" == this.dataRangeOption.orient ? m + o : m,
						y: "horizontal" == this.dataRangeOption.orient ? l : l + a,
						width: "horizontal" == this.dataRangeOption.orient ? 0 : o,
						height: "horizontal" == this.dataRangeOption.orient ? a : 0,
						color: "#ccc"
					},
					hoverable: !1
				}, this._startMask = new y(this._startMask), this._endMask = new y(this._endMask), this.shapeList.push(this._startMask), this.shapeList.push(this._endMask)
			},
			_buildBackground: function() {
				var a = this.reformCssArray(this.dataRangeOption.padding);
				this.shapeList.push(new y({
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					hoverable: !1,
					style: {
						x: this._itemGroupLocation.x - a[3],
						y: this._itemGroupLocation.y - a[0],
						width: this._itemGroupLocation.width + a[3] + a[1],
						height: this._itemGroupLocation.height + a[0] + a[2],
						brushType: 0 === this.dataRangeOption.borderWidth ? "fill" : "both",
						color: this.dataRangeOption.backgroundColor,
						strokeColor: this.dataRangeOption.borderColor,
						lineWidth: this.dataRangeOption.borderWidth
					}
				}))
			},
			_getItemGroupLocation: function() {
				var P = this._valueTextList,
					F = P.length,
					K = this.dataRangeOption.itemGap,
					N = this.dataRangeOption.itemWidth,
					S = this.dataRangeOption.itemHeight,
					J = 0,
					H = 0,
					G = this.getFont(this.dataRangeOption.textStyle),
					M = w.getTextHeight("国", G),
					L = 10;
				if ("horizontal" == this.dataRangeOption.orient) {
					if (this.dataRangeOption.text || this.dataRangeOption.splitNumber <= 0 || this.dataRangeOption.calculable) {
						J = (this.dataRangeOption.splitNumber <= 0 || this.dataRangeOption.calculable ? N * L + K : F * (N + K)) + (this.dataRangeOption.text && "undefined" != typeof this.dataRangeOption.text[0] ? w.getTextWidth(this.dataRangeOption.text[0], G) + this._textGap : 0) + (this.dataRangeOption.text && "undefined" != typeof this.dataRangeOption.text[1] ? w.getTextWidth(this.dataRangeOption.text[1], G) + this._textGap : 0)
					} else {
						N += 5;
						for (var B = 0; F > B; B++) {
							J += N + w.getTextWidth(P[B], G) + K
						}
					}
					J -= K, H = Math.max(M, S)
				} else {
					var C;
					if (this.dataRangeOption.text || this.dataRangeOption.splitNumber <= 0 || this.dataRangeOption.calculable) {
						H = (this.dataRangeOption.splitNumber <= 0 || this.dataRangeOption.calculable ? S * L + K : F * (S + K)) + (this.dataRangeOption.text && "undefined" != typeof this.dataRangeOption.text[0] ? this._textGap + M : 0) + (this.dataRangeOption.text && "undefined" != typeof this.dataRangeOption.text[1] ? this._textGap + M : 0), C = Math.max(w.getTextWidth(this.dataRangeOption.text && this.dataRangeOption.text[0] || "", G), w.getTextWidth(this.dataRangeOption.text && this.dataRangeOption.text[1] || "", G)), J = Math.max(N, C)
					} else {
						H = (S + K) * F, N += 5, C = 0;
						for (var B = 0; F > B; B++) {
							C = Math.max(C, w.getTextWidth(P[B], G))
						}
						J = N + C
					}
					H -= K
				}
				var Q, I = this.reformCssArray(this.dataRangeOption.padding),
					R = this.zr.getWidth();
				switch (this.dataRangeOption.x) {
					case "center":
						Q = Math.floor((R - J) / 2);
						break;
					case "left":
						Q = I[3] + this.dataRangeOption.borderWidth;
						break;
					case "right":
						Q = R - J - I[1] - this.dataRangeOption.borderWidth;
						break;
					default:
						Q = this.parsePercent(this.dataRangeOption.x, R), Q = isNaN(Q) ? 0 : Q
				}
				var E, D = this.zr.getHeight();
				switch (this.dataRangeOption.y) {
					case "top":
						E = I[0] + this.dataRangeOption.borderWidth;
						break;
					case "bottom":
						E = D - H - I[2] - this.dataRangeOption.borderWidth;
						break;
					case "center":
						E = Math.floor((D - H) / 2);
						break;
					default:
						E = this.parsePercent(this.dataRangeOption.y, D), E = isNaN(E) ? 0 : E
				}
				if (this.dataRangeOption.calculable) {
					var O = Math.max(w.getTextWidth(this.dataRangeOption.max, G), w.getTextWidth(this.dataRangeOption.min, G)) + M;
					"horizontal" == this.dataRangeOption.orient ? (O > Q && (Q = O), Q + J + O > R && (Q -= O)) : (M > E && (E = M), E + H + M > D && (E -= M))
				}
				return {
					x: Q,
					y: E,
					width: J,
					height: H
				}
			},
			_getTextShape: function(i, a, l) {
				return {
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					style: {
						x: "horizontal" == this.dataRangeOption.orient ? i : this._itemGroupLocation.x + this._itemGroupLocation.width / 2,
						y: "horizontal" == this.dataRangeOption.orient ? this._itemGroupLocation.y + this._itemGroupLocation.height / 2 : a,
						color: this.dataRangeOption.textStyle.color,
						text: l,
						textFont: this.getFont(this.dataRangeOption.textStyle),
						textBaseline: "horizontal" == this.dataRangeOption.orient ? "middle" : "top",
						textAlign: "horizontal" == this.dataRangeOption.orient ? "left" : "center"
					},
					hoverable: !1
				}
			},
			_getItemShape: function(r, o, s, m, l) {
				return {
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					style: {
						x: r,
						y: o + 1,
						width: s,
						height: m - 2,
						color: l
					},
					highlightStyle: {
						strokeColor: l,
						lineWidth: 1
					}
				}
			},
			__ondrift: function(C, s, E) {
				var m = this._calculableLocation.x,
					l = this._calculableLocation.y,
					D = this._calculableLocation.width,
					B = this._calculableLocation.height;
				return "horizontal" == this.dataRangeOption.orient ? C.style.x + s <= m ? C.style.x = m : C.style.x + s + C.style.width >= m + D ? C.style.x = m + D - C.style.width : C.style.x += s : C.style.y + E <= l ? C.style.y = l : C.style.y + E + C.style.height >= l + B ? C.style.y = l + B - C.style.height : C.style.y += E, "filler" == C._type ? this._syncHandleShape() : this._syncFillerShape(C), this.dataRangeOption.realtime && this._dispatchDataRange(), !0
			},
			__ondragend: function() {
				this.isDragend = !0
			},
			ondragend: function(i, a) {
				this.isDragend && i.target && (a.dragOut = !0, a.dragIn = !0, this.dataRangeOption.realtime || this._dispatchDataRange(), a.needRefresh = !1, this.isDragend = !1)
			},
			_syncShapeFromRange: function() {
				var i = this.dataRangeOption.range || {};
				if (this._range.end = "undefined" != typeof this._range.end ? this._range.end : "undefined" != typeof i.start ? i.start : 0, this._range.start = "undefined" != typeof this._range.start ? this._range.start : "undefined" != typeof i.end ? i.end : 100, 100 != this._range.start || 0 !== this._range.end) {
					if ("horizontal" == this.dataRangeOption.orient) {
						var a = this._fillerShape.style.width;
						this._fillerShape.style.x += a * (100 - this._range.start) / 100, this._fillerShape.style.width = a * (this._range.start - this._range.end) / 100
					} else {
						var l = this._fillerShape.style.height;
						this._fillerShape.style.y += l * (100 - this._range.start) / 100, this._fillerShape.style.height = l * (this._range.start - this._range.end) / 100
					}
					this.zr.modShape(this._fillerShape.id), this._syncHandleShape()
				}
			},
			_syncHandleShape: function() {
				var m = this._calculableLocation.x,
					l = this._calculableLocation.y,
					o = this._calculableLocation.width,
					a = this._calculableLocation.height;
				"horizontal" == this.dataRangeOption.orient ? (this._startShape.style.x = this._fillerShape.style.x, this._startMask.style.width = this._startShape.style.x - m, this._endShape.style.x = this._fillerShape.style.x + this._fillerShape.style.width, this._endMask.style.x = this._endShape.style.x, this._endMask.style.width = m + o - this._endShape.style.x, this._range.start = Math.ceil(100 - (this._startShape.style.x - m) / o * 100), this._range.end = Math.floor(100 - (this._endShape.style.x - m) / o * 100)) : (this._startShape.style.y = this._fillerShape.style.y, this._startMask.style.height = this._startShape.style.y - l, this._endShape.style.y = this._fillerShape.style.y + this._fillerShape.style.height, this._endMask.style.y = this._endShape.style.y, this._endMask.style.height = l + a - this._endShape.style.y, this._range.start = Math.ceil(100 - (this._startShape.style.y - l) / a * 100), this._range.end = Math.floor(100 - (this._endShape.style.y - l) / a * 100)), this._syncShape()
			},
			_syncFillerShape: function(C) {
				var s, E, m = this._calculableLocation.x,
					l = this._calculableLocation.y,
					D = this._calculableLocation.width,
					B = this._calculableLocation.height;
				"horizontal" == this.dataRangeOption.orient ? (s = this._startShape.style.x, E = this._endShape.style.x, C.id == this._startShape.id && s >= E ? (E = s, this._endShape.style.x = s) : C.id == this._endShape.id && s >= E && (s = E, this._startShape.style.x = s), this._fillerShape.style.x = s, this._fillerShape.style.width = E - s, this._startMask.style.width = s - m, this._endMask.style.x = E, this._endMask.style.width = m + D - E, this._range.start = Math.ceil(100 - (s - m) / D * 100), this._range.end = Math.floor(100 - (E - m) / D * 100)) : (s = this._startShape.style.y, E = this._endShape.style.y, C.id == this._startShape.id && s >= E ? (E = s, this._endShape.style.y = s) : C.id == this._endShape.id && s >= E && (s = E, this._startShape.style.y = s), this._fillerShape.style.y = s, this._fillerShape.style.height = E - s, this._startMask.style.height = s - l, this._endMask.style.y = E, this._endMask.style.height = l + B - E, this._range.start = Math.ceil(100 - (s - l) / B * 100), this._range.end = Math.floor(100 - (E - l) / B * 100)), this._syncShape()
			},
			_syncShape: function() {
				this._startShape.position = [this._startShape.style.x - this._startShape.style._x, this._startShape.style.y - this._startShape.style._y], this._startShape.style.text = this._textFormat(this._gap * this._range.start + this.dataRangeOption.min), this._startShape.style.color = this._startShape.highlightStyle.strokeColor = this.getColor(this._gap * this._range.start + this.dataRangeOption.min), this._endShape.position = [this._endShape.style.x - this._endShape.style._x, this._endShape.style.y - this._endShape.style._y], this._endShape.style.text = this._textFormat(this._gap * this._range.end + this.dataRangeOption.min), this._endShape.style.color = this._endShape.highlightStyle.strokeColor = this.getColor(this._gap * this._range.end + this.dataRangeOption.min), this.zr.modShape(this._startShape.id), this.zr.modShape(this._endShape.id), this.zr.modShape(this._startMask.id), this.zr.modShape(this._endMask.id), this.zr.modShape(this._fillerShape.id), this.zr.refreshNextFrame()
			},
			_dispatchDataRange: function() {
				this.messageCenter.dispatch(j.EVENT.DATA_RANGE, null, {
					range: {
						start: this._range.end,
						end: this._range.start
					}
				}, this.myChart)
			},
			__dataRangeSelected: function(m) {
				if ("single" === this.dataRangeOption.selectedMode) {
					for (var l in this._selectedMap) {
						this._selectedMap[l] = !1
					}
				}
				var o = m.target._idx;
				this._selectedMap[o] = !this._selectedMap[o];
				var a = (this._colorList.length - o) * this._gap + this.dataRangeOption.min;
				this.messageCenter.dispatch(j.EVENT.DATA_RANGE_SELECTED, m.event, {
					selected: this._selectedMap,
					target: o,
					valueMax: a,
					valueMin: a - this._gap
				}, this.myChart), this.messageCenter.dispatch(j.EVENT.REFRESH, null, null, this.myChart)
			},
			__dispatchHoverLink: function(s) {
				var r, C;
				if (this.dataRangeOption.calculable) {
					var m, l = this.dataRangeOption.max - this.dataRangeOption.min;
					m = "horizontal" == this.dataRangeOption.orient ? (1 - (u.getX(s.event) - this._calculableLocation.x) / this._calculableLocation.width) * l : (1 - (u.getY(s.event) - this._calculableLocation.y) / this._calculableLocation.height) * l, r = m - 0.05 * l, C = m + 0.05 * l
				} else {
					var B = s.target._idx;
					C = (this._colorList.length - B) * this._gap + this.dataRangeOption.min, r = C - this._gap
				}
				this.messageCenter.dispatch(j.EVENT.DATA_RANGE_HOVERLINK, s.event, {
					valueMin: r,
					valueMax: C
				}, this.myChart)
			},
			__onhoverlink: function(i) {
				if (this.dataRangeOption.show && this.dataRangeOption.hoverLink && this._indicatorShape && i && null != i.seriesIndex && null != i.dataIndex) {
					var a = i.value;
					if ("" === a || isNaN(a)) {
						return
					}
					a < this.dataRangeOption.min ? a = this.dataRangeOption.min : a > this.dataRangeOption.max && (a = this.dataRangeOption.max), this._indicatorShape.position = "horizontal" == this.dataRangeOption.orient ? [(this.dataRangeOption.max - a) / (this.dataRangeOption.max - this.dataRangeOption.min) * this._calculableLocation.width, 0] : [0, (this.dataRangeOption.max - a) / (this.dataRangeOption.max - this.dataRangeOption.min) * this._calculableLocation.height], this._indicatorShape.style.text = this._textFormat(i.value), this._indicatorShape.style.color = this.getColor(a), this.zr.addHoverShape(this._indicatorShape)
				}
			},
			_textFormat: function(i, a) {
				if (i = i.toFixed(this.dataRangeOption.precision), a = null != a ? a.toFixed(this.dataRangeOption.precision) : "", this.dataRangeOption.formatter) {
					if ("string" == typeof this.dataRangeOption.formatter) {
						return this.dataRangeOption.formatter.replace("{value}", i).replace("{value2}", a)
					}
					if ("function" == typeof this.dataRangeOption.formatter) {
						return this.dataRangeOption.formatter.call(this.myChart, i, a)
					}
				}
				return "" !== a ? i + " - " + a : i
			},
			refresh: function(C) {
				if (C) {
					this.option = C, this.option.dataRange = this.reformOption(this.option.dataRange), this.dataRangeOption = this.option.dataRange, this.myChart.canvasSupported || (this.dataRangeOption.realtime = !1);
					var s = this.dataRangeOption.splitNumber <= 0 || this.dataRangeOption.calculable ? 100 : this.dataRangeOption.splitNumber;
					if (this._colorList = q.getGradientColors(this.dataRangeOption.color, Math.max((s - this.dataRangeOption.color.length) / (this.dataRangeOption.color.length - 1), 0) + 1), this._colorList.length > s) {
						for (var E = this._colorList.length, m = [this._colorList[0]], l = E / (s - 1), D = 1; s - 1 > D; D++) {
							m.push(this._colorList[Math.floor(D * l)])
						}
						m.push(this._colorList[E - 1]), this._colorList = m
					}
					var B = this.dataRangeOption.precision;
					for (this._gap = (this.dataRangeOption.max - this.dataRangeOption.min) / s; this._gap.toFixed(B) - 0 != this._gap && 5 > B;) {
						B++
					}
					this.dataRangeOption.precision = B, this._gap = ((this.dataRangeOption.max - this.dataRangeOption.min) / s).toFixed(B) - 0, this._valueTextList = [];
					for (var D = 0; s > D; D++) {
						this._selectedMap[D] = !0, this._valueTextList.unshift(this._textFormat(D * this._gap + this.dataRangeOption.min, (D + 1) * this._gap + this.dataRangeOption.min))
					}
				}
				this.clear(), this._buildShape()
			},
			getColor: function(i) {
				if (isNaN(i)) {
					return null
				}
				if (this.dataRangeOption.min == this.dataRangeOption.max) {
					return this._colorList[0]
				}
				if (i < this.dataRangeOption.min ? i = this.dataRangeOption.min : i > this.dataRangeOption.max && (i = this.dataRangeOption.max), this.dataRangeOption.calculable && (i - (this._gap * this._range.start + this.dataRangeOption.min) > 0.00005 || i - (this._gap * this._range.end + this.dataRangeOption.min) < -0.00005)) {
					return null
				}
				var a = this._colorList.length - Math.ceil((i - this.dataRangeOption.min) / (this.dataRangeOption.max - this.dataRangeOption.min) * this._colorList.length);
				return a == this._colorList.length && a--, this._selectedMap[a] ? this._colorList[a] : null
			},
			getColorByIndex: function(a) {
				return a >= this._colorList.length ? a = this._colorList.length - 1 : 0 > a && (a = 0), this._colorList[a]
			},
			onbeforDispose: function() {
				this.messageCenter.unbind(j.EVENT.HOVER, this._onhoverlink)
			}
		}, A.inherits(z, p), x("../component").define("dataRange", z), z
	}), h("echarts/util/shape/HandlePolygon", ["require", "zrender/shape/Base", "zrender/shape/Polygon", "zrender/tool/util"], function(m) {
		function l(a) {
			o.call(this, a)
		}
		var o = m("zrender/shape/Base"),
			k = m("zrender/shape/Polygon"),
			j = m("zrender/tool/util");
		return l.prototype = {
			type: "handle-polygon",
			buildPath: function(i, a) {
				k.prototype.buildPath(i, a)
			},
			isCover: function(q, p) {
				var r = this.getTansform(q, p);
				q = r[0], p = r[1];
				var a = this.style.rect;
				return q >= a.x && q <= a.x + a.width && p >= a.y && p <= a.y + a.height ? !0 : !1
			}
		}, j.inherits(l, o), l
	}), h("echarts/chart/k", ["require", "./base", "../util/shape/Candle", "../component/axis", "../component/grid", "../component/dataZoom", "../config", "../util/ecData", "zrender/tool/util", "../chart"], function(p) {
		function l(v, u, r, n, w) {
			s.call(this, v, u, r, n, w), this.refresh(n)
		}
		var s = p("./base"),
			k = p("../util/shape/Candle");
		p("../component/axis"), p("../component/grid"), p("../component/dataZoom");
		var j = p("../config");
		j.k = {
			zlevel: 0,
			z: 2,
			clickable: !0,
			hoverable: !0,
			legendHoverLink: !1,
			xAxisIndex: 0,
			yAxisIndex: 0,
			itemStyle: {
				normal: {
					color: "#fff",
					color0: "#00aa11",
					lineStyle: {
						width: 1,
						color: "#ff3200",
						color0: "#00aa11"
					}
				},
				emphasis: {}
			}
		};
		var q = p("../util/ecData"),
			m = p("zrender/tool/util");
		return l.prototype = {
			type: j.CHART_TYPE_K,
			_buildShape: function() {
				var w = this.series;
				this.selectedMap = {};
				for (var u, y = {
						top: [],
						bottom: []
					}, a = 0, x = w.length; x > a; a++) {
					w[a].type === j.CHART_TYPE_K && (w[a] = this.reformOption(w[a]), this.legendHoverLink = w[a].legendHoverLink || this.legendHoverLink, u = this.component.xAxis.getAxis(w[a].xAxisIndex), u.type === j.COMPONENT_TYPE_AXIS_CATEGORY && y[u.getPosition()].push(a))
				}
				for (var v in y) {
					y[v].length > 0 && this._buildSinglePosition(v, y[v])
				}
				this.addShapeList()
			},
			_buildSinglePosition: function(y, w) {
				var A = this._mapData(w),
					v = A.locationMap,
					u = A.maxDataLength;
				if (0 !== u && 0 !== v.length) {
					this._buildHorizontal(w, u, v);
					for (var z = 0, x = w.length; x > z; z++) {
						this.buildMark(w[z])
					}
				}
			},
			_mapData: function(z) {
				for (var B, w, y = this.series, A = this.component.legend, v = [], u = 0, C = 0, x = z.length; x > C; C++) {
					B = y[z[C]], w = B.name, this.selectedMap[w] = A ? A.isSelected(w) : !0, this.selectedMap[w] && v.push(z[C]), u = Math.max(u, B.data.length)
				}
				return {
					locationMap: v,
					maxDataLength: u
				}
			},
			_buildHorizontal: function(D, n, a) {
				var o = this.series;
				var B;
				var u;
				var e;
				var r;
				var t;
				var C;
				var w = {};
				var F;
				var G;
				var v;
				var E;
				for (var z = 0, y = a.length; z < y; z++) {
					B = a[z];
					u = o[B];
					e = u.xAxisIndex || 0;
					r = this.component.xAxis.getAxis(e);
					F = u.barWidth || Math.floor(r.getGap() / 2);
					E = u.barMaxWidth;
					if (E && E < F) {
						F = E
					}
					t = u.yAxisIndex || 0;
					C = this.component.yAxis.getAxis(t);
					w[B] = [];
					for (var A = 0, x = n; A < x; A++) {
						if (r.getNameByIndex(A) == null) {
							break
						}
						G = u.data[A];
						v = this.getDataFromOption(G, "-");
						if (v === "-" || v.length != 8) {
							continue
						}
						w[B].push([r.getCoordByIndex(A), F, C.getCoord(v[0]), C.getCoord(v[1]), C.getCoord(v[2]), C.getCoord(v[3]), C.getCoord(v[4]), C.getCoord(v[5]), C.getCoord(v[6]), C.getCoord(v[7]), A, r.getNameByIndex(A)])
					}
				}
				this._buildKLine(D, w)
			},
			_buildKLine: function(H, A) {
				var u = this.series;
				var e;
				var r;
				var I;
				var v;
				var o;
				var w;
				var x;
				var C;
				var t;
				var G;
				var z;
				var n;
				var K;
				var J;
				var y;
				var a;
				var E;
				for (var L = 0, F = H.length; L < F; L++) {
					E = H[L];
					z = u[E];
					J = A[E];
					if (this._isLarge(J)) {
						J = this._getLargePointList(J)
					}
					if (z.type === j.CHART_TYPE_K && J != null) {
						n = z;
						e = this.query(n, "itemStyle.normal.lineStyle.width");
						r = this.query(n, "itemStyle.normal.lineStyle.color");
						I = this.query(n, "itemStyle.normal.lineStyle.color0");
						v = this.query(n, "itemStyle.normal.color");
						o = this.query(n, "itemStyle.normal.color0");
						w = this.query(n, "itemStyle.emphasis.lineStyle.width");
						x = this.query(n, "itemStyle.emphasis.lineStyle.color");
						C = this.query(n, "itemStyle.emphasis.lineStyle.color0");
						t = this.query(n, "itemStyle.emphasis.color");
						G = this.query(n, "itemStyle.emphasis.color0");
						for (var D = 0, B = J.length; D < B; D++) {
							y = J[D];
							K = z.data[y[6]];
							n = K;
							a = y[3] < y[2];
							this.shapeList.push(this._getCandle(E, y[10], y[11], y[0], y[1], y[2], y[3], y[4], y[5], this._get_color(y[6], y[3]), this.query(n, "itemStyle.normal.lineStyle.width") || e, this._get_color(y[6], y[3]), this._get_color(y[6], y[3]), this.query(n, "itemStyle.emphasis.lineStyle.width") || w || e, this._get_color(y[6], y[3])))
						}
					}
				}
			},
			_get_color: function(e, a) {
				if (e == a) {
					return "#fff"
				} else {
					if (e > a) {
						return this.series[0].itemStyle.normal.color
					} else {
						return this.series[0].itemStyle.normal.color0
					}
				}
			},
			_isLarge: function(a) {
				return a[0][1] < 0.5
			},
			_getLargePointList: function(v) {
				for (var u = this.component.grid.getWidth(), w = v.length, r = [], o = 0; u > o; o++) {
					r[o] = v[Math.floor(w / u * o)]
				}
				return r
			},
			_getCandle: function(D, J, v, H, i, K, A, B, x, w, z, E, o, F, I) {
				var G = this.series,
					C = {
						zlevel: this.getZlevelBase(),
						z: this.getZBase(),
						clickable: this.deepQuery([G[D].data[J], G[D]], "clickable"),
						hoverable: this.deepQuery([G[D].data[J], G[D]], "hoverable"),
						style: {
							x: H,
							y: [K, A, B, x],
							width: i,
							color: w,
							strokeColor: E,
							lineWidth: z,
							brushType: "both"
						},
						highlightStyle: {
							color: o,
							strokeColor: I,
							lineWidth: F
						},
						_seriesIndex: D
					};
				return q.pack(C, G[D], D, G[D].data[J], J, v), C = new k(C)
			},
			getMarkCoord: function(v, u) {
				var w = this.series[v],
					r = this.component.xAxis.getAxis(w.xAxisIndex),
					o = this.component.yAxis.getAxis(w.yAxisIndex);
				return ["string" != typeof u.xAxis && r.getCoordByIndex ? r.getCoordByIndex(u.xAxis || 0) : r.getCoord(u.xAxis || 0), "string" != typeof u.yAxis && o.getCoordByIndex ? o.getCoordByIndex(u.yAxis || 0) : o.getCoord(u.yAxis || 0)]
			},
			refresh: function(a) {
				a && (this.option = a, this.series = a.series), this.backupShapeList(), this._buildShape()
			},
			addDataAnimation: function(A) {
				for (var C = this.series, u = {}, y = 0, B = A.length; B > y; y++) {
					u[A[y][0]] = A[y]
				}
				for (var o, D, x, z, w, v, y = 0, B = this.shapeList.length; B > y; y++) {
					if (w = this.shapeList[y]._seriesIndex, u[w] && !u[w][3] && "candle" === this.shapeList[y].type) {
						if (v = q.get(this.shapeList[y], "dataIndex"), z = C[w], u[w][2] && v === z.data.length - 1) {
							this.zr.delShape(this.shapeList[y].id);
							continue
						}
						if (!u[w][2] && 0 === v) {
							this.zr.delShape(this.shapeList[y].id);
							continue
						}
						D = this.component.xAxis.getAxis(z.xAxisIndex || 0).getGap(), o = u[w][2] ? D : -D, x = 0, this.zr.animate(this.shapeList[y].id, "").when(this.query(this.option, "animationDurationUpdate"), {
							position: [o, x]
						}).start()
					}
				}
			}
		}, m.inherits(l, s), p("../chart").define("k", l), l
	}), h("echarts/chart/pie", ["require", "./base", "zrender/shape/Text", "zrender/shape/Ring", "zrender/shape/Circle", "zrender/shape/Sector", "zrender/shape/Polyline", "../config", "../util/ecData", "zrender/tool/util", "zrender/tool/math", "zrender/tool/color", "../chart"], function(z) {
		function B(D, n, m, l, E) {
			p.call(this, D, n, m, l, E);
			var s = this;
			s.shapeHandler.onmouseover = function(L) {
				var O = L.target,
					F = y.get(O, "seriesIndex"),
					K = y.get(O, "dataIndex"),
					N = y.get(O, "special"),
					r = [O.style.x, O.style.y],
					P = O.style.startAngle,
					J = O.style.endAngle,
					H = ((J + P) / 2 + 360) % 360,
					G = O.highlightStyle.color,
					I = s.getLabel(F, K, N, r, H, G, !0);
				I && s.zr.addHoverShape(I);
				var M = s.getLabelLine(F, K, r, O.style.r0, O.style.r, H, G, !0);
				M && s.zr.addHoverShape(M)
			}, this.refresh(l)
		}
		var p = z("./base"),
			x = z("zrender/shape/Text"),
			A = z("zrender/shape/Ring"),
			k = z("zrender/shape/Circle"),
			j = z("zrender/shape/Sector"),
			C = z("zrender/shape/Polyline"),
			w = z("../config");
		w.pie = {
			zlevel: 0,
			z: 2,
			clickable: !0,
			legendHoverLink: !0,
			center: ["50%", "50%"],
			radius: [0, "75%"],
			clockWise: !0,
			startAngle: 90,
			minAngle: 0,
			selectedOffset: 10,
			itemStyle: {
				normal: {
					borderColor: "rgba(0,0,0,0)",
					borderWidth: 1,
					label: {
						show: !0,
						position: "outer"
					},
					labelLine: {
						show: !0,
						length: 20,
						lineStyle: {
							width: 1,
							type: "solid"
						}
					}
				},
				emphasis: {
					borderColor: "rgba(0,0,0,0)",
					borderWidth: 1,
					label: {
						show: !1
					},
					labelLine: {
						show: !1,
						length: 20,
						lineStyle: {
							width: 1,
							type: "solid"
						}
					}
				}
			}
		};
		var y = z("../util/ecData"),
			u = z("zrender/tool/util"),
			q = z("zrender/tool/math"),
			v = z("zrender/tool/color");
		return B.prototype = {
			type: w.CHART_TYPE_PIE,
			_buildShape: function() {
				var G = this.series,
					D = this.component.legend;
				this.selectedMap = {}, this._selected = {};
				var H, o, F;
				this._selectedMode = !1;
				for (var E, a = 0, l = G.length; l > a; a++) {
					if (G[a].type === w.CHART_TYPE_PIE) {
						if (G[a] = this.reformOption(G[a]), this.legendHoverLink = G[a].legendHoverLink || this.legendHoverLink, E = G[a].name || "", this.selectedMap[E] = D ? D.isSelected(E) : !0, !this.selectedMap[E]) {
							continue
						}
						H = this.parseCenter(this.zr, G[a].center), o = this.parseRadius(this.zr, G[a].radius), this._selectedMode = this._selectedMode || G[a].selectedMode, this._selected[a] = [], this.deepQuery([G[a], this.option], "calculable") && (F = {
							zlevel: this.getZlevelBase(),
							z: this.getZBase(),
							hoverable: !1,
							style: {
								x: H[0],
								y: H[1],
								r0: o[0] <= 10 ? 0 : o[0] - 10,
								r: o[1] + 10,
								brushType: "stroke",
								lineWidth: 1,
								strokeColor: G[a].calculableHolderColor || this.ecTheme.calculableHolderColor || w.calculableHolderColor
							}
						}, y.pack(F, G[a], a, void 0, -1), this.setCalculable(F), F = o[0] <= 10 ? new k(F) : new A(F), this.shapeList.push(F)), this._buildSinglePie(a), this.buildMark(a)
					}
				}
				this.addShapeList()
			},
			_buildSinglePie: function(ab) {
				for (var K, Q = this.series, X = Q[ab], af = X.data, P = this.component.legend, N = 0, M = 0, S = 0, Y = Number.NEGATIVE_INFINITY, R = [], E = 0, F = af.length; F > E; E++) {
					K = af[E].name, this.selectedMap[K] = P ? P.isSelected(K) : !0, this.selectedMap[K] && !isNaN(af[E].value) && (0 !== +af[E].value ? N++ : M++, S += +af[E].value, Y = Math.max(Y, +af[E].value))
				}
				if (0 !== S) {
					for (var ac, O, ad, J, H, Z, ae = 100, aa = X.clockWise, T = (X.startAngle.toFixed(2) - 0 + 360) % 360, I = X.minAngle || 0.01, ag = 360 - I * N - 0.01 * M, G = X.roseType, E = 0, F = af.length; F > E; E++) {
						if (K = af[E].name, this.selectedMap[K] && !isNaN(af[E].value)) {
							if (O = P ? P.getColor(K) : this.zr.getColor(E), ae = af[E].value / S, ac = "area" != G ? aa ? T - ae * ag - (0 !== ae ? I : 0.01) : ae * ag + T + (0 !== ae ? I : 0.01) : aa ? T - 360 / F : 360 / F + T, ac = ac.toFixed(2) - 0, ae = (100 * ae).toFixed(2), ad = this.parseCenter(this.zr, X.center), J = this.parseRadius(this.zr, X.radius), H = +J[0], Z = +J[1], "radius" === G ? Z = af[E].value / Y * (Z - H) * 0.8 + 0.2 * (Z - H) + H : "area" === G && (Z = Math.sqrt(af[E].value / Y) * (Z - H) + H), aa) {
								var D;
								D = T, T = ac, ac = D
							}
							this._buildItem(R, ab, E, ae, af[E].selected, ad, H, Z, T, ac, O), aa || (T = ac)
						}
					}
					this._autoLabelLayout(R, ad, Z);
					for (var E = 0, F = R.length; F > E; E++) {
						this.shapeList.push(R[E])
					}
					R = null
				}
			},
			_buildItem: function(M, R, G, L, P, F, D, S, K, I, H) {
				var J = this.series,
					N = ((I + K) / 2 + 360) % 360,
					E = this.getSector(R, G, L, P, F, D, S, K, I, H);
				y.pack(E, J[R], R, J[R].data[G], G, J[R].data[G].name, L), M.push(E);
				var O = this.getLabel(R, G, L, F, N, H, !1),
					Q = this.getLabelLine(R, G, F, D, S, N, H, !1);
				Q && (y.pack(Q, J[R], R, J[R].data[G], G, J[R].data[G].name, L), M.push(Q)), O && (y.pack(O, J[R], R, J[R].data[G], G, J[R].data[G].name, L), O._labelLine = Q, M.push(O))
			},
			getSector: function(R, F, J, N, V, I, G, L, O, K) {
				var S = this.series,
					H = S[R],
					T = H.data[F],
					E = [T, H],
					r = this.deepMerge(E, "itemStyle.normal") || {},
					P = this.deepMerge(E, "itemStyle.emphasis") || {},
					U = this.getItemStyleColor(r.color, R, F, T) || K,
					Q = this.getItemStyleColor(P.color, R, F, T) || ("string" == typeof U ? v.lift(U, -0.2) : U),
					M = {
						zlevel: this.getZlevelBase(),
						z: this.getZBase(),
						clickable: this.deepQuery(E, "clickable"),
						style: {
							x: V[0],
							y: V[1],
							r0: I,
							r: G,
							startAngle: L,
							endAngle: O,
							brushType: "both",
							color: U,
							lineWidth: r.borderWidth,
							strokeColor: r.borderColor,
							lineJoin: "round"
						},
						highlightStyle: {
							color: Q,
							lineWidth: P.borderWidth,
							strokeColor: P.borderColor,
							lineJoin: "round"
						},
						_seriesIndex: R,
						_dataIndex: F
					};
				if (N) {
					var D = ((M.style.startAngle + M.style.endAngle) / 2).toFixed(2) - 0;
					M.style._hasSelected = !0, M.style._x = M.style.x, M.style._y = M.style.y;
					var W = this.query(H, "selectedOffset");
					M.style.x += q.cos(D, !0) * W, M.style.y -= q.sin(D, !0) * W, this._selected[R][F] = !0
				} else {
					this._selected[R][F] = !1
				}
				return this._selectedMode && (M.onclick = this.shapeHandler.onclick), this.deepQuery([T, H, this.option], "calculable") && (this.setCalculable(M), M.draggable = !0), (this._needLabel(H, T, !0) || this._needLabelLine(H, T, !0)) && (M.onmouseover = this.shapeHandler.onmouseover), M = new j(M)
			},
			getLabel: function(S, G, M, X, K, I, H) {
				var N = this.series,
					P = N[S],
					i = P.data[G];
				if (this._needLabel(P, i, H)) {
					var T, J, V, F = H ? "emphasis" : "normal",
						D = u.merge(u.clone(i.itemStyle) || {}, P.itemStyle),
						Q = D[F].label,
						W = Q.textStyle || {},
						R = X[0],
						O = X[1],
						E = this.parseRadius(this.zr, P.radius),
						Y = "middle";
					Q.position = Q.position || D.normal.label.position, "center" === Q.position ? (T = R, J = O, V = "center") : "inner" === Q.position || "inside" === Q.position ? (E = (E[0] + E[1]) * (Q.distance || 0.5), T = Math.round(R + E * q.cos(K, !0)), J = Math.round(O - E * q.sin(K, !0)), I = "#fff", V = "center") : (E = E[1] - -D[F].labelLine.length, T = Math.round(R + E * q.cos(K, !0)), J = Math.round(O - E * q.sin(K, !0)), V = K >= 90 && 270 >= K ? "right" : "left"), "center" != Q.position && "inner" != Q.position && "inside" != Q.position && (T += "left" === V ? 20 : -20), i.__labelX = T - ("left" === V ? 5 : -5), i.__labelY = J;
					var m = new x({
						zlevel: this.getZlevelBase(),
						z: this.getZBase() + 1,
						hoverable: !1,
						style: {
							x: T,
							y: J,
							color: W.color || I,
							text: this.getLabelText(S, G, M, F),
							textAlign: W.align || V,
							textBaseline: W.baseline || Y,
							textFont: this.getFont(W)
						},
						highlightStyle: {
							brushType: "fill"
						}
					});
					return m._radius = E, m._labelPosition = Q.position || "outer", m._rect = m.getRect(m.style), m._seriesIndex = S, m._dataIndex = G, m
				}
			},
			getLabelText: function(G, D, I, m) {
				var l = this.series,
					H = l[G],
					F = H.data[D],
					E = this.deepQuery([F, H], "itemStyle." + m + ".label.formatter");
				return E ? "function" == typeof E ? E.call(this.myChart, {
					seriesIndex: G,
					seriesName: H.name || "",
					series: H,
					dataIndex: D,
					data: F,
					name: F.name,
					value: F.value,
					percent: I
				}) : "string" == typeof E ? (E = E.replace("{a}", "{a0}").replace("{b}", "{b0}").replace("{c}", "{c0}").replace("{d}", "{d0}"), E = E.replace("{a0}", H.name).replace("{b0}", F.name).replace("{c0}", F.value).replace("{d0}", I)) : void 0 : F.name
			},
			getLabelLine: function(Q, F, J, M, V, I, G, K) {
				var N = this.series,
					m = N[Q],
					R = m.data[F];
				if (this._needLabelLine(m, R, K)) {
					var H = K ? "emphasis" : "normal",
						S = u.merge(u.clone(R.itemStyle) || {}, m.itemStyle),
						E = S[H].labelLine,
						s = E.lineStyle || {},
						O = J[0],
						T = J[1],
						P = V,
						L = this.parseRadius(this.zr, m.radius)[1] - -E.length,
						D = q.cos(I, !0),
						W = q.sin(I, !0);
					return new C({
						zlevel: this.getZlevelBase(),
						z: this.getZBase() + 1,
						hoverable: !1,
						style: {
							pointList: [
								[O + P * D, T - P * W],
								[O + L * D, T - L * W],
								[R.__labelX, R.__labelY]
							],
							strokeColor: s.color || G,
							lineType: s.type,
							lineWidth: s.width
						},
						_seriesIndex: Q,
						_dataIndex: F
					})
				}
			},
			_needLabel: function(i, a, l) {
				return this.deepQuery([a, i], "itemStyle." + (l ? "emphasis" : "normal") + ".label.show")
			},
			_needLabelLine: function(i, a, l) {
				return this.deepQuery([a, i], "itemStyle." + (l ? "emphasis" : "normal") + ".labelLine.show")
			},
			_autoLabelLayout: function(E, s, G) {
				for (var m = [], l = [], F = 0, D = E.length; D > F; F++) {
					("outer" === E[F]._labelPosition || "outside" === E[F]._labelPosition) && (E[F]._rect._y = E[F]._rect.y, E[F]._rect.x < s[0] ? m.push(E[F]) : l.push(E[F]))
				}
				this._layoutCalculate(m, s, G, -1), this._layoutCalculate(l, s, G, 1)
			},
			_layoutCalculate: function(M, O, F, K) {
				function N(m, o, l) {
					for (var e = m; o > e; e++) {
						if (M[e]._rect.y += l, M[e].style.y += l, M[e]._labelLine && (M[e]._labelLine.style.pointList[1][1] += l, M[e]._labelLine.style.pointList[2][1] += l), e > m && o > e + 1 && M[e + 1]._rect.y > M[e]._rect.y + M[e]._rect.height) {
							return void E(e, l / 2)
						}
					}
					E(o - 1, l / 2)
				}

				function E(e, l) {
					for (var a = e; a >= 0 && (M[a]._rect.y -= l, M[a].style.y -= l, M[a]._labelLine && (M[a]._labelLine.style.pointList[1][1] -= l, M[a]._labelLine.style.pointList[2][1] -= l), !(a > 0 && M[a]._rect.y > M[a - 1]._rect.y + M[a - 1]._rect.height)); a--) {}
				}

				function D(ab, ad, S, Z, ac) {
					for (var R, Q, ae, Y = S[0], aa = S[1], W = ac > 0 ? ad ? Number.MAX_VALUE : 0 : ad ? Number.MAX_VALUE : 0, T = 0, X = ab.length; X > T; T++) {
						Q = Math.abs(ab[T]._rect.y - aa), ae = ab[T]._radius - Z, R = Z + ae > Q ? Math.sqrt((Z + ae + 20) * (Z + ae + 20) - Math.pow(ab[T]._rect.y - aa, 2)) : Math.abs(ab[T]._rect.x + (ac > 0 ? 0 : ab[T]._rect.width) - Y), ad && R >= W && (R = W - 10), !ad && W >= R && (R = W + 10), ab[T]._rect.x = ab[T].style.x = Y + R * ac, ab[T]._labelLine && (ab[T]._labelLine.style.pointList[2][0] = Y + (R - 5) * ac, ab[T]._labelLine.style.pointList[1][0] = Y + (R - 20) * ac), W = R
					}
				}
				M.sort(function(i, a) {
					return i._rect.y - a._rect.y
				});
				for (var P, J = 0, L = M.length, H = [], G = [], I = 0; L > I; I++) {
					P = M[I]._rect.y - J, 0 > P && N(I, L, -P, K), J = M[I]._rect.y + M[I]._rect.height
				}
				this.zr.getHeight() - J < 0 && E(L - 1, J - this.zr.getHeight());
				for (var I = 0; L > I; I++) {
					M[I]._rect.y >= O[1] ? G.push(M[I]) : H.push(M[I])
				}
				D(G, !0, O, F, K), D(H, !1, O, F, K)
			},
			reformOption: function(i) {
				var a = u.merge;
				return i = a(a(i || {}, u.clone(this.ecTheme.pie || {})), u.clone(w.pie)), i.itemStyle.normal.label.textStyle = this.getTextStyle(i.itemStyle.normal.label.textStyle), i.itemStyle.emphasis.label.textStyle = this.getTextStyle(i.itemStyle.emphasis.label.textStyle), i
			},
			refresh: function(a) {
				a && (this.option = a, this.series = a.series), this.backupShapeList(), this._buildShape()
			},
			addDataAnimation: function(L) {
				for (var Q = this.series, F = {}, J = 0, O = L.length; O > J; J++) {
					F[L[J][0]] = L[J]
				}
				var E = {},
					l = {},
					R = {},
					K = this.shapeList;
				this.shapeList = [];
				for (var H, G, I, M = {}, J = 0, O = L.length; O > J; J++) {
					H = L[J][0], G = L[J][2], I = L[J][3], Q[H] && Q[H].type === w.CHART_TYPE_PIE && (G ? (I || (E[H + "_" + Q[H].data.length] = "delete"), M[H] = 1) : I ? M[H] = 0 : (E[H + "_-1"] = "delete", M[H] = -1), this._buildSinglePie(H))
				}
				for (var D, N, J = 0, O = this.shapeList.length; O > J; J++) {
					switch (H = this.shapeList[J]._seriesIndex, D = this.shapeList[J]._dataIndex, N = H + "_" + D, this.shapeList[J].type) {
						case "sector":
							E[N] = this.shapeList[J];
							break;
						case "text":
							l[N] = this.shapeList[J];
							break;
						case "polyline":
							R[N] = this.shapeList[J]
					}
				}
				this.shapeList = [];
				for (var P, J = 0, O = K.length; O > J; J++) {
					if (H = K[J]._seriesIndex, F[H]) {
						if (D = K[J]._dataIndex + M[H], N = H + "_" + D, P = E[N], !P) {
							continue
						}
						if ("sector" === K[J].type) {
							"delete" != P ? this.zr.animate(K[J].id, "style").when(400, {
								startAngle: P.style.startAngle,
								endAngle: P.style.endAngle
							}).start() : this.zr.animate(K[J].id, "style").when(400, M[H] < 0 ? {
								startAngle: K[J].style.startAngle
							} : {
								endAngle: K[J].style.endAngle
							}).start()
						} else {
							if ("text" === K[J].type || "polyline" === K[J].type) {
								if ("delete" === P) {
									this.zr.delShape(K[J].id)
								} else {
									switch (K[J].type) {
										case "text":
											P = l[N], this.zr.animate(K[J].id, "style").when(400, {
												x: P.style.x,
												y: P.style.y
											}).start();
											break;
										case "polyline":
											P = R[N], this.zr.animate(K[J].id, "style").when(400, {
												pointList: P.style.pointList
											}).start()
									}
								}
							}
						}
					}
				}
				this.shapeList = K
			},
			onclick: function(I) {
				var K = this.series;
				if (this.isClick && I.target) {
					this.isClick = !1;
					for (var E, H = I.target, J = H.style, D = y.get(H, "seriesIndex"), l = y.get(H, "dataIndex"), L = 0, F = this.shapeList.length; F > L; L++) {
						if (this.shapeList[L].id === H.id) {
							if (D = y.get(H, "seriesIndex"), l = y.get(H, "dataIndex"), J._hasSelected) {
								H.style.x = H.style._x, H.style.y = H.style._y, H.style._hasSelected = !1, this._selected[D][l] = !1
							} else {
								var G = ((J.startAngle + J.endAngle) / 2).toFixed(2) - 0;
								H.style._hasSelected = !0, this._selected[D][l] = !0, H.style._x = H.style.x, H.style._y = H.style.y, E = this.query(K[D], "selectedOffset"), H.style.x += q.cos(G, !0) * E, H.style.y -= q.sin(G, !0) * E
							}
							this.zr.modShape(H.id, H)
						} else {
							this.shapeList[L].style._hasSelected && "single" === this._selectedMode && (D = y.get(this.shapeList[L], "seriesIndex"), l = y.get(this.shapeList[L], "dataIndex"), this.shapeList[L].style.x = this.shapeList[L].style._x, this.shapeList[L].style.y = this.shapeList[L].style._y, this.shapeList[L].style._hasSelected = !1, this._selected[D][l] = !1, this.zr.modShape(this.shapeList[L].id, this.shapeList[L]))
						}
					}
					this.messageCenter.dispatch(w.EVENT.PIE_SELECTED, I.event, {
						selected: this._selected,
						target: y.get(H, "name")
					}, this.myChart), this.zr.refreshNextFrame()
				}
			}
		}, u.inherits(B, p), z("../chart").define("pie", B), B
	}), h("echarts/chart/radar", ["require", "./base", "zrender/shape/Polygon", "../component/polar", "../config", "../util/ecData", "zrender/tool/util", "zrender/tool/color", "../util/accMath", "../chart"], function(q) {
		function l(w, s, r, n, x) {
			v.call(this, w, s, r, n, x), this.refresh(n)
		}
		var v = q("./base"),
			k = q("zrender/shape/Polygon");
		q("../component/polar");
		var j = q("../config");
		j.radar = {
			zlevel: 0,
			z: 2,
			clickable: !0,
			legendHoverLink: !0,
			polarIndex: 0,
			itemStyle: {
				normal: {
					label: {
						show: !1
					},
					lineStyle: {
						width: 2,
						type: "solid"
					}
				},
				emphasis: {
					label: {
						show: !1
					}
				}
			},
			symbolSize: 2
		};
		var u = q("../util/ecData"),
			p = q("zrender/tool/util"),
			m = q("zrender/tool/color");
		return l.prototype = {
			type: j.CHART_TYPE_RADAR,
			_buildShape: function() {
				this.selectedMap = {}, this._symbol = this.option.symbolList, this._queryTarget, this._dropBoxList = [], this._radarDataCounter = 0;
				for (var s, r = this.series, x = this.component.legend, a = 0, w = r.length; w > a; a++) {
					r[a].type === j.CHART_TYPE_RADAR && (this.serie = this.reformOption(r[a]), this.legendHoverLink = r[a].legendHoverLink || this.legendHoverLink, s = this.serie.name || "", this.selectedMap[s] = x ? x.isSelected(s) : !0, this.selectedMap[s] && (this._queryTarget = [this.serie, this.option], this.deepQuery(this._queryTarget, "calculable") && this._addDropBox(a), this._buildSingleRadar(a), this.buildMark(a)))
				}
				this.addShapeList()
			},
			_buildSingleRadar: function(B) {
				for (var D, y, A, C, x = this.component.legend, w = this.serie.data, E = this.deepQuery(this._queryTarget, "calculable"), z = 0; z < w.length; z++) {
					A = w[z].name || "", this.selectedMap[A] = x ? x.isSelected(A) : !0, this.selectedMap[A] && (x ? (y = x.getColor(A), D = x.getItemShape(A), D && (D.style.brushType = this.deepQuery([w[z], this.serie], "itemStyle.normal.areaStyle") ? "both" : "stroke", x.setItemShape(A, D))) : y = this.zr.getColor(z), C = this._getPointList(this.serie.polarIndex, w[z]), this._addSymbol(C, y, z, B, this.serie.polarIndex), this._addDataShape(C, y, w[z], B, z, E), this._radarDataCounter++)
				}
			},
			_getPointList: function(B, y) {
				for (var D, x, w = [], C = this.component.polar, A = 0, z = y.value.length; z > A; A++) {
					x = this.getDataFromOption(y.value[A]), D = "-" != x ? C.getVector(B, A, x) : !1, D && w.push(D)
				}
				return w
			},
			_addSymbol: function(B, D, w, z, C) {
				for (var o, E = this.series, y = this.component.polar, A = 0, x = B.length; x > A; A++) {
					o = this.getSymbolShape(this.deepMerge([E[z].data[w], E[z]]), z, E[z].data[w].value[A], A, y.getIndicatorText(C, A), B[A][0], B[A][1], this._symbol[this._radarDataCounter % this._symbol.length], D, "#fff", "vertical"), o.zlevel = this.getZlevelBase(), o.z = this.getZBase() + 1, u.set(o, "data", E[z].data[w]), u.set(o, "value", E[z].data[w].value), u.set(o, "dataIndex", w), u.set(o, "special", A), this.shapeList.push(o)
				}
			},
			_addDataShape: function(B, G, s, E, i, z) {
				var A = this.series,
					x = [s, this.serie],
					w = this.getItemStyleColor(this.deepQuery(x, "itemStyle.normal.color"), E, i, s),
					y = this.deepQuery(x, "itemStyle.normal.lineStyle.width"),
					C = this.deepQuery(x, "itemStyle.normal.lineStyle.type"),
					o = this.deepQuery(x, "itemStyle.normal.areaStyle.color"),
					D = this.deepQuery(x, "itemStyle.normal.areaStyle"),
					F = {
						zlevel: this.getZlevelBase(),
						z: this.getZBase(),
						style: {
							pointList: B,
							brushType: D ? "both" : "stroke",
							color: o || w || ("string" == typeof G ? m.alpha(G, 0.5) : G),
							strokeColor: w || G,
							lineWidth: y,
							lineType: C
						},
						highlightStyle: {
							brushType: this.deepQuery(x, "itemStyle.emphasis.areaStyle") || D ? "both" : "stroke",
							color: this.deepQuery(x, "itemStyle.emphasis.areaStyle.color") || o || w || ("string" == typeof G ? m.alpha(G, 0.5) : G),
							strokeColor: this.getItemStyleColor(this.deepQuery(x, "itemStyle.emphasis.color"), E, i, s) || w || G,
							lineWidth: this.deepQuery(x, "itemStyle.emphasis.lineStyle.width") || y,
							lineType: this.deepQuery(x, "itemStyle.emphasis.lineStyle.type") || C
						}
					};
				u.pack(F, A[E], E, s, i, s.name, this.component.polar.getIndicator(A[E].polarIndex)), z && (F.draggable = !0, this.setCalculable(F)), F = new k(F), this.shapeList.push(F)
			},
			_addDropBox: function(r) {
				var o = this.series,
					s = this.deepQuery(this._queryTarget, "polarIndex");
				if (!this._dropBoxList[s]) {
					var a = this.component.polar.getDropBox(s);
					a.zlevel = this.getZlevelBase(), a.z = this.getZBase(), this.setCalculable(a), u.pack(a, o, r, void 0, -1), this.shapeList.push(a), this._dropBoxList[s] = !0
				}
			},
			ondragend: function(y, w) {
				var z = this.series;
				if (this.isDragend && y.target) {
					var s = y.target,
						o = u.get(s, "seriesIndex"),
						x = u.get(s, "dataIndex");
					this.component.legend && this.component.legend.del(z[o].data[x].name), z[o].data.splice(x, 1), w.dragOut = !0, w.needRefresh = !0, this.isDragend = !1
				}
			},
			ondrop: function(E, o) {
				var A = this.series;
				if (this.isDrop && E.target) {
					var D, e, F = E.target,
						z = E.dragged,
						B = u.get(F, "seriesIndex"),
						x = u.get(F, "dataIndex"),
						w = this.component.legend;
					if (-1 === x) {
						D = {
							value: u.get(z, "value"),
							name: u.get(z, "name")
						}, A[B].data.push(D), w && w.add(D.name, z.style.color || z.style.strokeColor)
					} else {
						var y = q("../util/accMath");
						D = A[B].data[x], w && w.del(D.name), D.name += this.option.nameConnector + u.get(z, "name"), e = u.get(z, "value");
						for (var C = 0; C < e.length; C++) {
							D.value[C] = y.accAdd(D.value[C], e[C])
						}
						w && w.add(D.name, z.style.color || z.style.strokeColor)
					}
					o.dragIn = o.dragIn || !0, this.isDrop = !1
				}
			},
			refresh: function(a) {
				a && (this.option = a, this.series = a.series), this.backupShapeList(), this._buildShape()
			}
		}, p.inherits(l, v), q("../chart").define("radar", l), l
	}), h("echarts/component/polar", ["require", "./base", "zrender/shape/Text", "zrender/shape/Line", "zrender/shape/Polygon", "zrender/shape/Circle", "zrender/shape/Ring", "../config", "zrender/tool/util", "../util/coordinates", "../util/accMath", "../util/smartSteps", "../component"], function(x) {
		function z(r, n, m, l, s) {
			p.call(this, r, n, m, l, s), this.refresh(l)
		}
		var p = x("./base"),
			v = x("zrender/shape/Text"),
			y = x("zrender/shape/Line"),
			k = x("zrender/shape/Polygon"),
			j = x("zrender/shape/Circle"),
			A = x("zrender/shape/Ring"),
			u = x("../config");
		u.polar = {
			zlevel: 0,
			z: 0,
			center: ["50%", "50%"],
			radius: "75%",
			startAngle: 90,
			boundaryGap: [0, 0],
			splitNumber: 5,
			name: {
				show: !0,
				textStyle: {
					color: "#333"
				}
			},
			axisLine: {
				show: !0,
				lineStyle: {
					color: "#ccc",
					width: 1,
					type: "solid"
				}
			},
			axisLabel: {
				show: !1,
				textStyle: {
					color: "#333"
				}
			},
			splitArea: {
				show: !0,
				areaStyle: {
					color: ["rgba(250,250,250,0.3)", "rgba(200,200,200,0.3)"]
				}
			},
			splitLine: {
				show: !0,
				lineStyle: {
					width: 1,
					color: "#ccc"
				}
			},
			type: "polygon"
		};
		var w = x("zrender/tool/util"),
			q = x("../util/coordinates");
		return z.prototype = {
			type: u.COMPONENT_TYPE_POLAR,
			_buildShape: function() {
				for (var a = 0; a < this.polar.length; a++) {
					this._index = a, this.reformOption(this.polar[a]), this._queryTarget = [this.polar[a], this.option], this._createVector(a), this._buildSpiderWeb(a), this._buildText(a), this._adjustIndicatorValue(a), this._addAxisLabel(a)
				}
				for (var a = 0; a < this.shapeList.length; a++) {
					this.zr.addShape(this.shapeList[a])
				}
			},
			_createVector: function(G) {
				for (var I, C = this.polar[G], E = this.deepQuery(this._queryTarget, "indicator"), H = E.length, B = C.startAngle, m = 2 * Math.PI / H, J = this._getRadius(), D = C.__ecIndicator = [], F = 0; H > F; F++) {
					I = q.polar2cartesian(J, B * Math.PI / 180 + m * F), D.push({
						vector: [I[1], -I[0]]
					})
				}
			},
			_getRadius: function() {
				var a = this.polar[this._index];
				return this.parsePercent(a.radius, Math.min(this.zr.getWidth(), this.zr.getHeight()) / 2)
			},
			_buildSpiderWeb: function(I) {
				var K = this.polar[I],
					D = K.__ecIndicator,
					G = K.splitArea,
					J = K.splitLine,
					C = this.getCenter(I),
					B = K.splitNumber,
					L = J.lineStyle.color,
					F = J.lineStyle.width,
					H = J.show,
					E = this.deepQuery(this._queryTarget, "axisLine");
				this._addArea(D, B, C, G, L, F, H), E.show && this._addLine(D, C, E)
			},
			_addAxisLabel: function(D) {
				for (var I, R, H, F, R, E, K, J, e, i, O = x("../util/accMath"), G = this.polar[D], P = this.deepQuery(this._queryTarget, "indicator"), C = G.__ecIndicator, B = this.deepQuery(this._queryTarget, "splitNumber"), M = this.getCenter(D), Q = 0; Q < P.length; Q++) {
					if (I = this.deepQuery([P[Q], G, this.option], "axisLabel"), I.show) {
						var N = this.deepQuery([I, G, this.option], "textStyle");
						if (H = {}, H.textFont = this.getFont(N), H.color = N.color, H = w.merge(H, I), H.lineWidth = H.width, R = C[Q].vector, E = C[Q].value, J = Q / P.length * 2 * Math.PI, e = I.offset || 10, i = I.interval || 0, !E) {
							return
						}
						for (var L = 1; B >= L; L += i + 1) {
							F = w.merge({}, H), K = O.accAdd(E.min, O.accMul(E.step, L)), F.text = this.numAddCommas(K), F.x = L * R[0] / B + Math.cos(J) * e + M[0], F.y = L * R[1] / B + Math.sin(J) * e + M[1], this.shapeList.push(new v({
								zlevel: this.getZlevelBase(),
								z: this.getZBase(),
								style: F,
								draggable: !1,
								hoverable: !1
							}))
						}
					}
				}
			},
			_buildText: function(J) {
				for (var N, D, M, C, i, O, H, I = this.polar[J], F = I.__ecIndicator, E = this.deepQuery(this._queryTarget, "indicator"), G = this.getCenter(J), K = 0, B = 0, L = 0; L < E.length; L++) {
					C = this.deepQuery([E[L], I, this.option], "name"), C.show && (H = this.deepQuery([C, I, this.option], "textStyle"), D = {}, D.textFont = this.getFont(H), D.color = H.color, D.text = "function" == typeof C.formatter ? C.formatter.call(this.myChart, E[L].text, L) : "string" == typeof C.formatter ? C.formatter.replace("{value}", E[L].text) : E[L].text, F[L].text = D.text, N = F[L].vector, M = Math.round(N[0]) > 0 ? "left" : Math.round(N[0]) < 0 ? "right" : "center", null == C.margin ? N = this._mapVector(N, G, 1.1) : (O = C.margin, K = N[0] > 0 ? O : -O, B = N[1] > 0 ? O : -O, K = 0 === N[0] ? 0 : K, B = 0 === N[1] ? 0 : B, N = this._mapVector(N, G, 1)), D.textAlign = M, D.x = N[0] + K, D.y = N[1] + B, i = C.rotate ? [C.rotate / 180 * Math.PI, N[0], N[1]] : [0, 0, 0], this.shapeList.push(new v({
						zlevel: this.getZlevelBase(),
						z: this.getZBase(),
						style: D,
						draggable: !1,
						hoverable: !1,
						rotation: i
					})))
				}
			},
			getIndicatorText: function(i, a) {
				return this.polar[i] && this.polar[i].__ecIndicator[a] && this.polar[i].__ecIndicator[a].text
			},
			getDropBox: function(G) {
				var I, C, G = G || 0,
					E = this.polar[G],
					H = this.getCenter(G),
					B = E.__ecIndicator,
					m = B.length,
					J = [],
					D = E.type;
				if ("polygon" == D) {
					for (var F = 0; m > F; F++) {
						I = B[F].vector, J.push(this._mapVector(I, H, 1.2))
					}
					C = this._getShape(J, "fill", "rgba(0,0,0,0)", "", 1)
				} else {
					"circle" == D && (C = this._getCircle("", 1, 1.2, H, "fill", "rgba(0,0,0,0)"))
				}
				return C
			},
			_addArea: function(K, M, D, I, L, C, B) {
				for (var N, H, J, F, E = this.deepQuery(this._queryTarget, "type"), G = 0; M > G; G++) {
					H = (M - G) / M, B && ("polygon" == E ? (F = this._getPointList(K, H, D), N = this._getShape(F, "stroke", "", L, C)) : "circle" == E && (N = this._getCircle(L, C, H, D, "stroke")), this.shapeList.push(N)), I.show && (J = (M - G - 1) / M, this._addSplitArea(K, I, H, J, D, G))
				}
			},
			_getCircle: function(C, r, E, m, l, D) {
				var B = this._getRadius();
				return new j({
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					style: {
						x: m[0],
						y: m[1],
						r: B * E,
						brushType: l,
						strokeColor: C,
						lineWidth: r,
						color: D
					},
					hoverable: !1,
					draggable: !1
				})
			},
			_getRing: function(r, o, s, m) {
				var l = this._getRadius();
				return new A({
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					style: {
						x: m[0],
						y: m[1],
						r: o * l,
						r0: s * l,
						color: r,
						brushType: "fill"
					},
					hoverable: !1,
					draggable: !1
				})
			},
			_getPointList: function(C, s, E) {
				for (var m, l = [], D = C.length, B = 0; D > B; B++) {
					m = C[B].vector, l.push(this._mapVector(m, E, s))
				}
				return l
			},
			_getShape: function(r, o, s, m, l) {
				return new k({
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					style: {
						pointList: r,
						brushType: o,
						color: s,
						strokeColor: m,
						lineWidth: l
					},
					hoverable: !1,
					draggable: !1
				})
			},
			_addSplitArea: function(L, P, E, J, O, D) {
				var B, Q, I, K, G, F = L.length,
					H = P.areaStyle.color,
					M = [],
					F = L.length,
					C = this.deepQuery(this._queryTarget, "type");
				if ("string" == typeof H && (H = [H]), Q = H.length, B = H[D % Q], "polygon" == C) {
					for (var N = 0; F > N; N++) {
						M = [], I = L[N].vector, K = L[(N + 1) % F].vector, M.push(this._mapVector(I, O, E)), M.push(this._mapVector(I, O, J)), M.push(this._mapVector(K, O, J)), M.push(this._mapVector(K, O, E)), G = this._getShape(M, "fill", B, "", 1), this.shapeList.push(G)
					}
				} else {
					"circle" == C && (G = this._getRing(B, E, J, O), this.shapeList.push(G))
				}
			},
			_mapVector: function(i, a, l) {
				return [i[0] * l + a[0], i[1] * l + a[1]]
			},
			getCenter: function(a) {
				var a = a || 0;
				return this.parseCenter(this.zr, this.polar[a].center)
			},
			_addLine: function(I, K, D) {
				for (var G, J, C = I.length, B = D.lineStyle, L = B.color, F = B.width, H = B.type, E = 0; C > E; E++) {
					J = I[E].vector, G = this._getLine(K[0], K[1], J[0] + K[0], J[1] + K[1], L, F, H), this.shapeList.push(G)
				}
			},
			_getLine: function(C, l, E, a, D, B, m) {
				return new y({
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					style: {
						xStart: C,
						yStart: l,
						xEnd: E,
						yEnd: a,
						strokeColor: D,
						lineWidth: B,
						lineType: m
					},
					hoverable: !1
				})
			},
			_adjustIndicatorValue: function(N) {
				for (var D, I, M = this.polar[N], C = this.deepQuery(this._queryTarget, "indicator"), e = C.length, O = M.__ecIndicator, H = this._getSeriesData(N), J = M.boundaryGap, F = M.splitNumber, E = M.scale, G = x("../util/smartSteps"), K = 0; e > K; K++) {
					if ("number" == typeof C[K].max) {
						D = C[K].max, I = C[K].min || 0
					} else {
						var B = this._findValue(H, K, F, J);
						I = B.min, D = B.max
					}!E && I >= 0 && D >= 0 && (I = 0), !E && 0 >= I && 0 >= D && (D = 0);
					var L = G(I, D, F);
					O[K].value = {
						min: L.min,
						max: L.max,
						step: L.step
					}
				}
			},
			_getSeriesData: function(E) {
				for (var B, G, m, l = [], F = this.component.legend, D = 0; D < this.series.length; D++) {
					if (B = this.series[D], B.type == u.CHART_TYPE_RADAR) {
						G = B.data || [];
						for (var C = 0; C < G.length; C++) {
							m = this.deepQuery([G[C], B, this.option], "polarIndex") || 0, m != E || F && !F.isSelected(G[C].name) || l.push(G[C])
						}
					}
				}
				return l
			},
			_findValue: function(G, I, C, E) {
				function H(a) {
					(a > B || void 0 === B) && (B = a), (m > a || void 0 === m) && (m = a)
				}
				var B, m, J;
				if (G && 0 !== G.length) {
					if (1 == G.length && (m = 0), 1 != G.length) {
						for (var D = 0; D < G.length; D++) {
							H(this.getDataFromOption(G[D].value[I]))
						}
					} else {
						J = G[0];
						for (var D = 0; D < J.value.length; D++) {
							H(this.getDataFromOption(J.value[D]))
						}
					}
					var F = Math.abs(B - m);
					return m -= Math.abs(F * E[0]), B += Math.abs(F * E[1]), m === B && (0 === B ? B = 1 : B > 0 ? m = B / C : B /= C), {
						max: B,
						min: m
					}
				}
			},
			getVector: function(G, I, C) {
				G = G || 0, I = I || 0;
				var E = this.polar[G].__ecIndicator;
				if (!(I >= E.length)) {
					var H, B = this.polar[G].__ecIndicator[I],
						m = this.getCenter(G),
						J = B.vector,
						D = B.value.max,
						F = B.value.min;
					if ("undefined" == typeof C) {
						return m
					}
					switch (C) {
						case "min":
							C = F;
							break;
						case "max":
							C = D;
							break;
						case "center":
							C = (D + F) / 2
					}
					return H = D != F ? (C - F) / (D - F) : 0.5, this._mapVector(J, m, H)
				}
			},
			isInside: function(i) {
				var a = this.getNearestIndex(i);
				return a ? a.polarIndex : -1
			},
			getNearestIndex: function(H) {
				for (var J, C, F, I, B, m, K, E, G, D = 0; D < this.polar.length; D++) {
					if (J = this.polar[D], C = this.getCenter(D), H[0] == C[0] && H[1] == C[1]) {
						return {
							polarIndex: D,
							valueIndex: 0
						}
					}
					if (F = this._getRadius(), B = J.startAngle, m = J.indicator, K = m.length, E = 2 * Math.PI / K, I = q.cartesian2polar(H[0] - C[0], C[1] - H[1]), H[0] - C[0] < 0 && (I[1] += Math.PI), I[1] < 0 && (I[1] += 2 * Math.PI), G = I[1] - B / 180 * Math.PI + 2 * Math.PI, Math.abs(Math.cos(G % (E / 2))) * F > I[0]) {
						return {
							polarIndex: D,
							valueIndex: Math.floor((G + E / 2) / E) % K
						}
					}
				}
			},
			getIndicator: function(a) {
				var a = a || 0;
				return this.polar[a].indicator
			},
			refresh: function(a) {
				a && (this.option = a, this.polar = this.option.polar, this.series = this.option.series), this.clear(), this._buildShape()
			}
		}, w.inherits(z, p), x("../component").define("polar", z), z
	}), h("echarts/util/coordinates", ["require", "zrender/tool/math"], function(k) {
		function j(m, i) {
			return [m * a.sin(i), m * a.cos(i)]
		}

		function l(m, i) {
			return [Math.sqrt(m * m + i * i), Math.atan(i / m)]
		}
		var a = k("zrender/tool/math");
		return {
			polar2cartesian: j,
			cartesian2polar: l
		}
	}), h("echarts/chart/chord", ["require", "./base", "zrender/shape/Text", "zrender/shape/Line", "zrender/shape/Sector", "../util/shape/Ribbon", "../util/shape/Icon", "zrender/shape/BezierCurve", "../config", "../util/ecData", "zrender/tool/util", "zrender/tool/vector", "../data/Graph", "../layout/Chord", "../chart"], function(B) {
		function E(p, n, m, l, r) {
			u.call(this, p, n, m, l, r), this.scaleLineLength = 4, this.scaleUnitAngle = 4, this.refresh(l)
		}
		var u = B("./base"),
			z = B("zrender/shape/Text"),
			D = B("zrender/shape/Line"),
			q = B("zrender/shape/Sector"),
			j = B("../util/shape/Ribbon"),
			F = B("../util/shape/Icon"),
			y = B("zrender/shape/BezierCurve"),
			A = B("../config");
		A.chord = {
			zlevel: 0,
			z: 2,
			clickable: !0,
			radius: ["65%", "75%"],
			center: ["50%", "50%"],
			padding: 2,
			sort: "none",
			sortSub: "none",
			startAngle: 90,
			clockWise: !0,
			ribbonType: !0,
			minRadius: 10,
			maxRadius: 20,
			symbol: "circle",
			showScale: !1,
			showScaleText: !1,
			itemStyle: {
				normal: {
					borderWidth: 0,
					borderColor: "#000",
					label: {
						show: !0,
						rotate: !1,
						distance: 5
					},
					chordStyle: {
						width: 1,
						color: "black",
						borderWidth: 1,
						borderColor: "#999",
						opacity: 0.5
					}
				},
				emphasis: {
					borderWidth: 0,
					borderColor: "#000",
					chordStyle: {
						width: 1,
						color: "black",
						borderWidth: 1,
						borderColor: "#999"
					}
				}
			}
		};
		var w = B("../util/ecData"),
			v = B("zrender/tool/util"),
			x = B("zrender/tool/vector"),
			C = B("../data/Graph"),
			k = B("../layout/Chord");
		return E.prototype = {
			type: A.CHART_TYPE_CHORD,
			_init: function() {
				var J = this.series;
				this.selectedMap = {};
				for (var L = {}, G = {}, I = 0, K = J.length; K > I; I++) {
					if (J[I].type === this.type) {
						var p = this.isSelected(J[I].name);
						this.selectedMap[J[I].name] = p, p && this.buildMark(I), this.reformOption(J[I]), L[J[I].name] = J[I]
					}
				}
				for (var I = 0, K = J.length; K > I; I++) {
					if (J[I].type === this.type) {
						if (J[I].insertToSerie) {
							var m = L[J[I].insertToSerie];
							J[I]._referenceSerie = m
						} else {
							G[J[I].name] = [J[I]]
						}
					}
				}
				for (var I = 0, K = J.length; K > I; I++) {
					if (J[I].type === this.type && J[I].insertToSerie) {
						for (var M = J[I]._referenceSerie; M && M._referenceSerie;) {
							M = M._referenceSerie
						}
						G[M.name] && this.selectedMap[J[I].name] && G[M.name].push(J[I])
					}
				}
				for (var H in G) {
					this._buildChords(G[H])
				}
				this.addShapeList()
			},
			_getNodeCategory: function(i, a) {
				return i.categories && i.categories[a.category || 0]
			},
			_getNodeQueryTarget: function(i, a) {
				var l = this._getNodeCategory(i, a);
				return [a, l, i]
			},
			_getEdgeQueryTarget: function(i, a, l) {
				return l = l || "normal", [a.itemStyle && a.itemStyle[l], i.itemStyle[l].chordStyle]
			},
			_buildChords: function(O) {
				for (var W = [], H = O[0], M = function(a) {
						return a.layout.size > 0
					}, S = function(a) {
						return function(e) {
							return a.getEdge(e.node2, e.node1)
						}
					}, G = 0; G < O.length; G++) {
					var p = O[G];
					if (this.selectedMap[p.name]) {
						var X;
						p.data && p.matrix ? X = this._getSerieGraphFromDataMatrix(p, H) : p.nodes && p.links && (X = this._getSerieGraphFromNodeLinks(p, H)), X.filterNode(M, this), p.ribbonType && X.filterEdge(S(X)), W.push(X), X.__serie = p
					}
				}
				if (W.length) {
					var L = W[0];
					if (!H.ribbonType) {
						var N = H.minRadius,
							J = H.maxRadius,
							I = 1 / 0,
							K = -1 / 0;
						L.eachNode(function(a) {
							K = Math.max(a.layout.size, K), I = Math.min(a.layout.size, I)
						});
						var P = (J - N) / (K - I);
						L.eachNode(function(m) {
							var l = this._getNodeQueryTarget(H, m),
								a = this.query(l, "symbolSize");
							m.layout.size = K === I ? a || I : a || (m.layout.size - I) * P + N
						}, this)
					}
					var Q = new k;
					Q.clockWise = H.clockWise, Q.startAngle = H.startAngle * Math.PI / 180, Q.clockWise || (Q.startAngle = -Q.startAngle), Q.padding = H.padding * Math.PI / 180, Q.sort = H.sort, Q.sortSub = H.sortSub, Q.directed = H.ribbonType, Q.run(W);
					var T = this.query(H, "itemStyle.normal.label.show");
					if (H.ribbonType) {
						this._buildSectors(H, 0, L, H, W), T && this._buildLabels(H, 0, L, H, W);
						for (var G = 0, R = 0; G < O.length; G++) {
							this.selectedMap[O[G].name] && this._buildRibbons(O, G, W[R++], H)
						}
						H.showScale && this._buildScales(H, 0, L)
					} else {
						this._buildNodeIcons(H, 0, L, H, W), T && this._buildLabels(H, 0, L, H, W);
						for (var G = 0, R = 0; G < O.length; G++) {
							this.selectedMap[O[G].name] && this._buildEdgeCurves(O, G, W[R++], H, L)
						}
					}
					this._initHoverHandler(O, W)
				}
			},
			_getSerieGraphFromDataMatrix: function(Q, S) {
				for (var J = [], O = 0, R = [], I = 0; I < Q.matrix.length; I++) {
					R[I] = Q.matrix[I].slice()
				}
				for (var G = Q.data || Q.nodes, I = 0; I < G.length; I++) {
					var T = {},
						N = G[I];
					N.rawIndex = I;
					for (var P in N) {
						"name" === P ? T.id = N.name : T[P] = N[P]
					}
					var L = this._getNodeCategory(S, N),
						K = L ? L.name : N.name;
					if (this.selectedMap[K] = this.isSelected(K), this.selectedMap[K]) {
						J.push(T), O++
					} else {
						R.splice(O, 1);
						for (var M = 0; M < R.length; M++) {
							R[M].splice(O, 1)
						}
					}
				}
				var H = C.fromMatrix(J, R, !0);
				return H.eachNode(function(a) {
					a.layout = {
						size: a.data.outValue
					}, a.rawIndex = a.data.rawIndex
				}), H.eachEdge(function(a) {
					a.layout = {
						weight: a.data.weight
					}
				}), H
			},
			_getSerieGraphFromNodeLinks: function(Q, S) {
				for (var J = new C(!0), O = Q.data || Q.nodes, R = 0, I = O.length; I > R; R++) {
					var G = O[R];
					if (G && !G.ignore) {
						var T = this._getNodeCategory(S, G),
							N = T ? T.name : G.name;
						if (this.selectedMap[N] = this.isSelected(N), this.selectedMap[N]) {
							var P = J.addNode(G.name, G);
							P.rawIndex = R
						}
					}
				}
				for (var R = 0, I = Q.links.length; I > R; R++) {
					var L = Q.links[R],
						K = L.source,
						M = L.target;
					"number" == typeof K && (K = O[K], K && (K = K.name)), "number" == typeof M && (M = O[M], M && (M = M.name));
					var H = J.addEdge(K, M, L);
					H && (H.rawIndex = R)
				}
				return J.eachNode(function(l) {
					var m = l.data.value;
					if (null == m) {
						if (m = 0, S.ribbonType) {
							for (var a = 0; a < l.outEdges.length; a++) {
								m += l.outEdges[a].data.weight || 0
							}
						} else {
							for (var a = 0; a < l.edges.length; a++) {
								m += l.edges[a].data.weight || 0
							}
						}
					}
					l.layout = {
						size: m
					}
				}), J.eachEdge(function(a) {
					a.layout = {
						weight: null == a.data.weight ? 1 : a.data.weight
					}
				}), J
			},
			_initHoverHandler: function(p, o) {
				var r = p[0],
					m = o[0],
					l = this;
				m.eachNode(function(a) {
					a.shape.onmouseover = function() {
						m.eachNode(function(n) {
							n.shape.style.opacity = 0.1, n.labelShape && (n.labelShape.style.opacity = 0.1, n.labelShape.modSelf()), n.shape.modSelf()
						});
						for (var I = 0; I < o.length; I++) {
							for (var H = 0; H < o[I].edges.length; H++) {
								var G = o[I].edges[H],
									t = l._getEdgeQueryTarget(o[I].__serie, G.data);
								G.shape.style.opacity = 0.1 * l.deepQuery(t, "opacity"), G.shape.modSelf()
							}
						}
						a.shape.style.opacity = 1, a.labelShape && (a.labelShape.style.opacity = 1);
						for (var I = 0; I < o.length; I++) {
							var e = o[I].getNodeById(a.id);
							if (e) {
								for (var H = 0; H < e.outEdges.length; H++) {
									var G = e.outEdges[H],
										t = l._getEdgeQueryTarget(o[I].__serie, G.data);
									G.shape.style.opacity = l.deepQuery(t, "opacity");
									var i = o[0].getNodeById(G.node2.id);
									i && (i.shape && (i.shape.style.opacity = 1), i.labelShape && (i.labelShape.style.opacity = 1))
								}
							}
						}
						l.zr.refreshNextFrame()
					}, a.shape.onmouseout = function() {
						m.eachNode(function(s) {
							s.shape.style.opacity = 1, s.labelShape && (s.labelShape.style.opacity = 1, s.labelShape.modSelf()), s.shape.modSelf()
						});
						for (var t = 0; t < o.length; t++) {
							for (var G = 0; G < o[t].edges.length; G++) {
								var n = o[t].edges[G],
									i = [n.data, r];
								n.shape.style.opacity = l.deepQuery(i, "itemStyle.normal.chordStyle.opacity"), n.shape.modSelf()
							}
						}
						l.zr.refreshNextFrame()
					}
				})
			},
			_buildSectors: function(J, G, K, p) {
				var o = this.parseCenter(this.zr, p.center),
					I = this.parseRadius(this.zr, p.radius),
					H = p.clockWise,
					m = H ? 1 : -1;
				K.eachNode(function(s) {
					var i = this._getNodeCategory(p, s.data),
						a = this.getColor(i ? i.name : s.id),
						e = s.layout.startAngle / Math.PI * 180 * m,
						r = s.layout.endAngle / Math.PI * 180 * m,
						l = new q({
							zlevel: this.getZlevelBase(),
							z: this.getZBase(),
							style: {
								x: o[0],
								y: o[1],
								r0: I[0],
								r: I[1],
								startAngle: e,
								endAngle: r,
								brushType: "fill",
								opacity: 1,
								color: a,
								clockWise: H
							},
							clickable: p.clickable,
							highlightStyle: {
								brushType: "fill"
							}
						});
					l.style.lineWidth = this.deepQuery([s.data, p], "itemStyle.normal.borderWidth"), l.highlightStyle.lineWidth = this.deepQuery([s.data, p], "itemStyle.emphasis.borderWidth"), l.style.strokeColor = this.deepQuery([s.data, p], "itemStyle.normal.borderColor"), l.highlightStyle.strokeColor = this.deepQuery([s.data, p], "itemStyle.emphasis.borderColor"), l.style.lineWidth > 0 && (l.style.brushType = "both"), l.highlightStyle.lineWidth > 0 && (l.highlightStyle.brushType = "both"), w.pack(l, J, G, s.data, s.rawIndex, s.id, s.category), this.shapeList.push(l), s.shape = l
				}, this)
			},
			_buildNodeIcons: function(G, p, I, m) {
				var l = this.parseCenter(this.zr, m.center),
					H = this.parseRadius(this.zr, m.radius),
					s = H[1];
				I.eachNode(function(i) {
					var e = i.layout.startAngle,
						J = i.layout.endAngle,
						K = (e + J) / 2,
						r = s * Math.cos(K),
						t = s * Math.sin(K),
						L = this._getNodeQueryTarget(m, i.data),
						a = this._getNodeCategory(m, i.data),
						M = this.deepQuery(L, "itemStyle.normal.color");
					M || (M = this.getColor(a ? a.name : i.id));
					var N = new F({
						zlevel: this.getZlevelBase(),
						z: this.getZBase() + 1,
						style: {
							x: -i.layout.size,
							y: -i.layout.size,
							width: 2 * i.layout.size,
							height: 2 * i.layout.size,
							iconType: this.deepQuery(L, "symbol"),
							color: M,
							brushType: "both",
							lineWidth: this.deepQuery(L, "itemStyle.normal.borderWidth"),
							strokeColor: this.deepQuery(L, "itemStyle.normal.borderColor")
						},
						highlightStyle: {
							color: this.deepQuery(L, "itemStyle.emphasis.color"),
							lineWidth: this.deepQuery(L, "itemStyle.emphasis.borderWidth"),
							strokeColor: this.deepQuery(L, "itemStyle.emphasis.borderColor")
						},
						clickable: m.clickable,
						position: [r + l[0], t + l[1]]
					});
					w.pack(N, G, p, i.data, i.rawIndex, i.id, i.category), this.shapeList.push(N), i.shape = N
				}, this)
			},
			_buildLabels: function(L, N, G, M) {
				var p = this.query(M, "itemStyle.normal.label.color"),
					i = this.query(M, "itemStyle.normal.label.rotate"),
					O = this.query(M, "itemStyle.normal.label.distance"),
					J = this.parseCenter(this.zr, M.center),
					K = this.parseRadius(this.zr, M.radius),
					I = M.clockWise,
					H = I ? 1 : -1;
				G.eachNode(function(r) {
					var S = r.layout.startAngle / Math.PI * 180 * H,
						l = r.layout.endAngle / Math.PI * 180 * H,
						o = (S * -H + l * -H) / 2;
					o %= 360, 0 > o && (o += 360);
					var s = 90 >= o || o >= 270;
					o = o * Math.PI / 180;
					var a = [Math.cos(o), -Math.sin(o)],
						P = 0;
					P = M.ribbonType ? M.showScaleText ? 35 + O : O : O + r.layout.size;
					var R = x.scale([], a, K[1] + P);
					x.add(R, R, J);
					var Q = {
						zlevel: this.getZlevelBase(),
						z: this.getZBase() + 1,
						hoverable: !1,
						style: {
							text: null == r.data.label ? r.id : r.data.label,
							textAlign: s ? "left" : "right",
							color: p || "#000000"
						}
					};
					i ? (Q.rotation = s ? o : Math.PI + o, Q.style.x = s ? K[1] + P : -K[1] - P, Q.style.y = 0, Q.position = J.slice()) : (Q.style.x = R[0], Q.style.y = R[1]), Q.style.textColor = this.deepQuery([r.data, M], "itemStyle.normal.label.textStyle.color") || "#fff", Q.style.textFont = this.getFont(this.deepQuery([r.data, M], "itemStyle.normal.label.textStyle")), Q = new z(Q), this.shapeList.push(Q), r.labelShape = Q
				}, this)
			},
			_buildRibbons: function(G, p, I, m) {
				var l = G[p],
					H = this.parseCenter(this.zr, m.center),
					r = this.parseRadius(this.zr, m.radius);
				I.eachEdge(function(n, s) {
					var e, i = I.getEdge(n.node2, n.node1);
					if (i && !n.shape) {
						if (i.shape) {
							return void(n.shape = i.shape)
						}
						var K = n.layout.startAngle / Math.PI * 180,
							a = n.layout.endAngle / Math.PI * 180,
							L = i.layout.startAngle / Math.PI * 180,
							O = i.layout.endAngle / Math.PI * 180;
						e = this.getColor(1 === G.length ? n.layout.weight <= i.layout.weight ? n.node1.id : n.node2.id : l.name);
						var N, t, M = this._getEdgeQueryTarget(l, n.data),
							J = this._getEdgeQueryTarget(l, n.data, "emphasis"),
							o = new j({
								zlevel: this.getZlevelBase(),
								z: this.getZBase(),
								style: {
									x: H[0],
									y: H[1],
									r: r[0],
									source0: K,
									source1: a,
									target0: L,
									target1: O,
									brushType: "both",
									opacity: this.deepQuery(M, "opacity"),
									color: e,
									lineWidth: this.deepQuery(M, "borderWidth"),
									strokeColor: this.deepQuery(M, "borderColor"),
									clockWise: m.clockWise
								},
								clickable: m.clickable,
								highlightStyle: {
									brushType: "both",
									opacity: this.deepQuery(J, "opacity"),
									lineWidth: this.deepQuery(J, "borderWidth"),
									strokeColor: this.deepQuery(J, "borderColor")
								}
							});
						n.layout.weight <= i.layout.weight ? (N = i.node1, t = i.node2) : (N = n.node1, t = n.node2), w.pack(o, l, p, n.data, null == n.rawIndex ? s : n.rawIndex, n.data.name || N.id + "-" + t.id, N.id, t.id), this.shapeList.push(o), n.shape = o
					}
				}, this)
			},
			_buildEdgeCurves: function(G, p, I, m, l) {
				var H = G[p],
					s = this.parseCenter(this.zr, m.center);
				I.eachEdge(function(L, o) {
					var J = l.getNodeById(L.node1.id),
						N = l.getNodeById(L.node2.id),
						K = J.shape,
						r = N.shape,
						t = this._getEdgeQueryTarget(H, L.data),
						M = this._getEdgeQueryTarget(H, L.data, "emphasis"),
						a = new y({
							zlevel: this.getZlevelBase(),
							z: this.getZBase(),
							style: {
								xStart: K.position[0],
								yStart: K.position[1],
								xEnd: r.position[0],
								yEnd: r.position[1],
								cpX1: s[0],
								cpY1: s[1],
								lineWidth: this.deepQuery(t, "width"),
								strokeColor: this.deepQuery(t, "color"),
								opacity: this.deepQuery(t, "opacity")
							},
							highlightStyle: {
								lineWidth: this.deepQuery(M, "width"),
								strokeColor: this.deepQuery(M, "color"),
								opacity: this.deepQuery(M, "opacity")
							}
						});
					w.pack(a, H, p, L.data, null == L.rawIndex ? o : L.rawIndex, L.data.name || L.node1.id + "-" + L.node2.id, L.node1.id, L.node2.id), this.shapeList.push(a), L.shape = a
				}, this)
			},
			_buildScales: function(M, O, H) {
				var G, a, P = M.clockWise,
					K = this.parseCenter(this.zr, M.center),
					L = this.parseRadius(this.zr, M.radius),
					J = P ? 1 : -1,
					I = 0,
					N = -1 / 0;
				M.showScaleText && (H.eachNode(function(m) {
					var l = m.data.value;
					l > N && (N = l), I += l
				}), N > 10000000000 ? (G = "b", a = 1e-9) : N > 10000000 ? (G = "m", a = 0.000001) : N > 10000 ? (G = "k", a = 0.001) : (G = "", a = 1));
				var i = I / (360 - M.padding);
				H.eachNode(function(X) {
					for (var e = X.layout.startAngle / Math.PI * 180, l = X.layout.endAngle / Math.PI * 180, r = e;;) {
						if (P && r > l || !P && l > r) {
							break
						}
						var Q = r / 180 * Math.PI,
							W = [Math.cos(Q), Math.sin(Q)],
							S = x.scale([], W, L[1] + 1);
						x.add(S, S, K);
						var o = x.scale([], W, L[1] + this.scaleLineLength);
						x.add(o, o, K);
						var R = new D({
							zlevel: this.getZlevelBase(),
							z: this.getZBase() - 1,
							hoverable: !1,
							style: {
								xStart: S[0],
								yStart: S[1],
								xEnd: o[0],
								yEnd: o[1],
								lineCap: "round",
								brushType: "stroke",
								strokeColor: "#666",
								lineWidth: 1
							}
						});
						this.shapeList.push(R), r += J * this.scaleUnitAngle
					}
					if (M.showScaleText) {
						for (var p = e, m = 5 * i * this.scaleUnitAngle, T = 0;;) {
							if (P && p > l || !P && l > p) {
								break
							}
							var Q = p;
							Q %= 360, 0 > Q && (Q += 360);
							var U = 90 >= Q || Q >= 270,
								s = new z({
									zlevel: this.getZlevelBase(),
									z: this.getZBase() - 1,
									hoverable: !1,
									style: {
										x: U ? L[1] + this.scaleLineLength + 4 : -L[1] - this.scaleLineLength - 4,
										y: 0,
										text: Math.round(10 * T) / 10 + G,
										textAlign: U ? "left" : "right"
									},
									position: K.slice(),
									rotation: U ? [-Q / 180 * Math.PI, 0, 0] : [-(Q + 180) / 180 * Math.PI, 0, 0]
								});
							this.shapeList.push(s), T += m * a, p += J * this.scaleUnitAngle * 5
						}
					}
				}, this)
			},
			refresh: function(i) {
				if (i && (this.option = i, this.series = i.series), this.legend = this.component.legend, this.legend) {
					this.getColor = function(m) {
						return this.legend.getColor(m)
					}, this.isSelected = function(m) {
						return this.legend.isSelected(m)
					}
				} else {
					var a = {},
						l = 0;
					this.getColor = function(m) {
						return a[m] ? a[m] : (a[m] || (a[m] = this.zr.getColor(l++)), a[m])
					}, this.isSelected = function() {
						return !0
					}
				}
				this.backupShapeList(), this._init()
			},
			reformOption: function(i) {
				var a = v.merge;
				i = a(a(i || {}, this.ecTheme.chord), A.chord), i.itemStyle.normal.label.textStyle = this.getTextStyle(i.itemStyle.normal.label.textStyle)
			}
		}, v.inherits(E, u), B("../chart").define("chord", E), E
	}), h("echarts/util/shape/Ribbon", ["require", "zrender/shape/Base", "zrender/shape/util/PathProxy", "zrender/tool/util", "zrender/tool/area"], function(m) {
		function l(a) {
			q.call(this, a), this._pathProxy = new k
		}
		var q = m("zrender/shape/Base"),
			k = m("zrender/shape/util/PathProxy"),
			j = m("zrender/tool/util"),
			p = m("zrender/tool/area");
		return l.prototype = {
			type: "ribbon",
			buildPath: function(L, A) {
				var F = A.clockWise || !1,
					I = this._pathProxy;
				I.begin(L);
				var O = A.x,
					E = A.y,
					C = A.r,
					B = A.source0 / 180 * Math.PI,
					H = A.source1 / 180 * Math.PI,
					J = A.target0 / 180 * Math.PI,
					G = A.target1 / 180 * Math.PI,
					v = O + Math.cos(B) * C,
					w = E + Math.sin(B) * C,
					M = O + Math.cos(H) * C,
					D = E + Math.sin(H) * C,
					N = O + Math.cos(J) * C,
					z = E + Math.sin(J) * C,
					x = O + Math.cos(G) * C,
					K = E + Math.sin(G) * C;
				I.moveTo(v, w), I.arc(O, E, A.r, B, H, !F), I.bezierCurveTo(0.7 * (O - M) + M, 0.7 * (E - D) + D, 0.7 * (O - N) + N, 0.7 * (E - z) + z, N, z), (A.source0 !== A.target0 || A.source1 !== A.target1) && (I.arc(O, E, A.r, J, G, !F), I.bezierCurveTo(0.7 * (O - x) + x, 0.7 * (E - K) + K, 0.7 * (O - v) + v, 0.7 * (E - w) + w, v, w))
			},
			getRect: function(a) {
				return a.__rect ? a.__rect : (this._pathProxy.isEmpty() || this.buildPath(null, a), this._pathProxy.fastBoundingRect())
			},
			isCover: function(i, a) {
				var o = this.getRect(this.style);
				return i >= o.x && i <= o.x + o.width && a >= o.y && a <= o.y + o.height ? p.isInsidePath(this._pathProxy.pathCommands, 0, "fill", i, a) : void 0
			}
		}, j.inherits(l, q), l
	}), h("zrender/shape/BezierCurve", ["require", "./Base", "../tool/util"], function(i) {
		var a = i("./Base"),
			j = function(k) {
				this.brushTypeOnly = "stroke", this.textPosition = "end", a.call(this, k)
			};
		return j.prototype = {
			type: "bezier-curve",
			buildPath: function(l, k) {
				l.moveTo(k.xStart, k.yStart), "undefined" != typeof k.cpX2 && "undefined" != typeof k.cpY2 ? l.bezierCurveTo(k.cpX1, k.cpY1, k.cpX2, k.cpY2, k.xEnd, k.yEnd) : l.quadraticCurveTo(k.cpX1, k.cpY1, k.xEnd, k.yEnd)
			},
			getRect: function(u) {
				if (u.__rect) {
					return u.__rect
				}
				var m = Math.min(u.xStart, u.xEnd, u.cpX1),
					w = Math.min(u.yStart, u.yEnd, u.cpY1),
					l = Math.max(u.xStart, u.xEnd, u.cpX1),
					k = Math.max(u.yStart, u.yEnd, u.cpY1),
					v = u.cpX2,
					q = u.cpY2;
				"undefined" != typeof v && "undefined" != typeof q && (m = Math.min(m, v), w = Math.min(w, q), l = Math.max(l, v), k = Math.max(k, q));
				var p = u.lineWidth || 1;
				return u.__rect = {
					x: m - p,
					y: w - p,
					width: l - m + p,
					height: k - w + p
				}, u.__rect
			}
		}, i("../tool/util").inherits(j, a), j
	}), h("echarts/data/Graph", ["require", "zrender/tool/util"], function(m) {
		var l = m("zrender/tool/util"),
			o = function(a) {
				this._directed = a || !1, this.nodes = [], this.edges = [], this._nodesMap = {}, this._edgesMap = {}
			};
		o.prototype.isDirected = function() {
			return this._directed
		}, o.prototype.addNode = function(p, n) {
			if (this._nodesMap[p]) {
				return this._nodesMap[p]
			}
			var a = new o.Node(p, n);
			return this.nodes.push(a), this._nodesMap[p] = a, a
		}, o.prototype.getNodeById = function(a) {
			return this._nodesMap[a]
		}, o.prototype.addEdge = function(r, q, p) {
			if ("string" == typeof r && (r = this._nodesMap[r]), "string" == typeof q && (q = this._nodesMap[q]), r && q) {
				var n = r.id + "-" + q.id;
				if (this._edgesMap[n]) {
					return this._edgesMap[n]
				}
				var s = new o.Edge(r, q, p);
				return this._directed && (r.outEdges.push(s), q.inEdges.push(s)), r.edges.push(s), r !== q && q.edges.push(s), this.edges.push(s), this._edgesMap[n] = s, s
			}
		}, o.prototype.removeEdge = function(r) {
			var s = r.node1,
				q = r.node2,
				p = s.id + "-" + q.id;
			this._directed && (s.outEdges.splice(l.indexOf(s.outEdges, r), 1), q.inEdges.splice(l.indexOf(q.inEdges, r), 1)), s.edges.splice(l.indexOf(s.edges, r), 1), s !== q && q.edges.splice(l.indexOf(q.edges, r), 1), delete this._edgesMap[p], this.edges.splice(l.indexOf(this.edges, r), 1)
		}, o.prototype.getEdge = function(i, a) {
			return "string" != typeof i && (i = i.id), "string" != typeof a && (a = a.id), this._directed ? this._edgesMap[i + "-" + a] : this._edgesMap[i + "-" + a] || this._edgesMap[a + "-" + i]
		}, o.prototype.removeNode = function(p) {
			if ("string" != typeof p || (p = this._nodesMap[p])) {
				delete this._nodesMap[p.id], this.nodes.splice(l.indexOf(this.nodes, p), 1);
				for (var q = 0; q < this.edges.length;) {
					var a = this.edges[q];
					a.node1 === p || a.node2 === p ? this.removeEdge(a) : q++
				}
			}
		}, o.prototype.filterNode = function(q, p) {
			for (var r = this.nodes.length, a = 0; r > a;) {
				q.call(p, this.nodes[a], a) ? a++ : (this.removeNode(this.nodes[a]), r--)
			}
		}, o.prototype.filterEdge = function(q, p) {
			for (var r = this.edges.length, a = 0; r > a;) {
				q.call(p, this.edges[a], a) ? a++ : (this.removeEdge(this.edges[a]), r--)
			}
		}, o.prototype.eachNode = function(q, p) {
			for (var r = this.nodes.length, a = 0; r > a; a++) {
				this.nodes[a] && q.call(p, this.nodes[a], a)
			}
		}, o.prototype.eachEdge = function(q, p) {
			for (var r = this.edges.length, a = 0; r > a; a++) {
				this.edges[a] && q.call(p, this.edges[a], a)
			}
		}, o.prototype.clear = function() {
			this.nodes.length = 0, this.edges.length = 0, this._nodesMap = {}, this._edgesMap = {}
		}, o.prototype.breadthFirstTraverse = function(z, B, u, x) {
			if ("string" == typeof B && (B = this._nodesMap[B]), B) {
				var A = "edges";
				"out" === u ? A = "outEdges" : "in" === u && (A = "inEdges");
				for (var q = 0; q < this.nodes.length; q++) {
					this.nodes[q].__visited = !1
				}
				if (!z.call(x, B, null)) {
					for (var p = [B]; p.length;) {
						for (var C = p.shift(), w = C[A], q = 0; q < w.length; q++) {
							var y = w[q],
								v = y.node1 === C ? y.node2 : y.node1;
							if (!v.__visited) {
								if (z.call(v, v, C)) {
									return
								}
								p.push(v), v.__visited = !0
							}
						}
					}
				}
			}
		}, o.prototype.clone = function() {
			for (var p = new o(this._directed), n = 0; n < this.nodes.length; n++) {
				p.addNode(this.nodes[n].id, this.nodes[n].data)
			}
			for (var n = 0; n < this.edges.length; n++) {
				var a = this.edges[n];
				p.addEdge(a.node1.id, a.node2.id, a.data)
			}
			return p
		};
		var k = function(i, a) {
			this.id = i, this.data = a || null, this.inEdges = [], this.outEdges = [], this.edges = []
		};
		k.prototype.degree = function() {
			return this.edges.length
		}, k.prototype.inDegree = function() {
			return this.inEdges.length
		}, k.prototype.outDegree = function() {
			return this.outEdges.length
		};
		var j = function(i, a, p) {
			this.node1 = i, this.node2 = a, this.data = p || null
		};
		return o.Node = k, o.Edge = j, o.fromMatrix = function(z, C, x) {
			if (C && C.length && C[0].length === C.length && z.length === C.length) {
				for (var B = C.length, p = new o(x), n = 0; B > n; n++) {
					var D = p.addNode(z[n].id, z[n]);
					D.data.value = 0, x && (D.data.outValue = D.data.inValue = 0)
				}
				for (var n = 0; B > n; n++) {
					for (var w = 0; B > w; w++) {
						var y = C[n][w];
						x && (p.nodes[n].data.outValue += y, p.nodes[w].data.inValue += y), p.nodes[n].data.value += y, p.nodes[w].data.value += y
					}
				}
				for (var n = 0; B > n; n++) {
					for (var w = n; B > w; w++) {
						var y = C[n][w];
						if (0 !== y) {
							var u = p.nodes[n],
								q = p.nodes[w],
								v = p.addEdge(u, q, {});
							if (v.data.weight = y, n !== w && x && C[w][n]) {
								var A = p.addEdge(q, u, {});
								A.data.weight = C[w][n]
							}
						}
					}
				}
				return p
			}
		}, o
	}), h("echarts/layout/Chord", ["require"], function() {
		var i = function(k) {
			k = k || {}, this.sort = k.sort || null, this.sortSub = k.sortSub || null, this.padding = 0.05, this.startAngle = k.startAngle || 0, this.clockWise = null == k.clockWise ? !1 : k.clockWise, this.center = k.center || [0, 0], this.directed = !0
		};
		i.prototype.run = function(K) {
			K instanceof Array || (K = [K]);
			var G = K.length;
			if (G) {
				for (var O = K[0], C = O.nodes.length, A = [], z = 0, E = 0; C > E; E++) {
					var H = O.nodes[E],
						D = {
							size: 0,
							subGroups: [],
							node: H
						};
					A.push(D);
					for (var n = 0, q = 0; q < K.length; q++) {
						var L = K[q],
							B = L.getNodeById(H.id);
						if (B) {
							D.size += B.layout.size;
							for (var M = this.directed ? B.outEdges : B.edges, w = 0; w < M.length; w++) {
								var t = M[w],
									I = t.layout.weight;
								D.subGroups.push({
									weight: I,
									edge: t,
									graph: L
								}), n += I
							}
						}
					}
					z += D.size;
					for (var N = D.size / n, w = 0; w < D.subGroups.length; w++) {
						D.subGroups[w].weight *= N
					}
					"ascending" === this.sortSub ? D.subGroups.sort(a) : "descending" === this.sort && (D.subGroups.sort(a), D.subGroups.reverse())
				}
				"ascending" === this.sort ? A.sort(j) : "descending" === this.sort && (A.sort(j), A.reverse());
				for (var N = (2 * Math.PI - this.padding * C) / z, J = this.startAngle, F = this.clockWise ? 1 : -1, E = 0; C > E; E++) {
					var D = A[E];
					D.node.layout.startAngle = J, D.node.layout.endAngle = J + F * D.size * N, D.node.layout.subGroups = [];
					for (var w = 0; w < D.subGroups.length; w++) {
						var v = D.subGroups[w];
						v.edge.layout.startAngle = J, J += F * v.weight * N, v.edge.layout.endAngle = J
					}
					J = D.node.layout.endAngle + F * this.padding
				}
			}
		};
		var a = function(l, k) {
				return l.weight - k.weight
			},
			j = function(l, k) {
				return l.size - k.size
			};
		return i
	}), h("echarts/chart/force", ["require", "./base", "../data/Graph", "../layout/Force", "zrender/shape/Line", "zrender/shape/BezierCurve", "zrender/shape/Image", "../util/shape/Icon", "../config", "../util/ecData", "zrender/tool/util", "zrender/config", "zrender/tool/vector", "../chart"], function(H) {
		function w(p, l, r, n, a) {
			var i = this;
			z.call(this, p, l, r, n, a), this.__nodePositionMap = {}, this._graph = new x(!0), this._layout = new E, this._layout.onupdate = function() {
				i._step()
			}, this._steps = 1, this.ondragstart = function() {
				C.apply(i, arguments)
			}, this.ondragend = function() {
				K.apply(i, arguments)
			}, this.ondrop = function() {}, this.shapeHandler.ondragstart = function() {
				i.isDragstart = !0
			}, this.onmousemove = function() {
				F.apply(i, arguments)
			}, this.refresh(n)
		}

		function C(i) {
			if (this.isDragstart && i.target) {
				var a = i.target;
				a.fixed = !0, this.isDragstart = !1, this.zr.on(v.EVENT.MOUSEMOVE, this.onmousemove)
			}
		}

		function F() {
			this._layout.temperature = 0.8, this._step()
		}

		function K(i, a) {
			if (this.isDragend && i.target) {
				var l = i.target;
				l.fixed = !1, a.dragIn = !0, a.needRefresh = !1, this.isDragend = !1, this.zr.un(v.EVENT.MOUSEMOVE, this.onmousemove)
			}
		}

		function B(m, l, o) {
			var a = q.create();
			return a[0] = (Math.random() - 0.5) * o + m, a[1] = (Math.random() - 0.5) * o + l, a
		}
		var z = H("./base"),
			x = H("../data/Graph"),
			E = H("../layout/Force"),
			G = H("zrender/shape/Line"),
			D = H("zrender/shape/BezierCurve"),
			j = H("zrender/shape/Image"),
			k = H("../util/shape/Icon"),
			I = H("../config");
		I.force = {
			zlevel: 1,
			z: 2,
			center: ["50%", "50%"],
			size: "100%",
			preventOverlap: !1,
			coolDown: 0.99,
			minRadius: 10,
			maxRadius: 20,
			ratioScaling: !1,
			large: !1,
			useWorker: !1,
			steps: 1,
			scaling: 1,
			gravity: 1,
			symbol: "circle",
			symbolSize: 0,
			linkSymbol: null,
			linkSymbolSize: [10, 15],
			draggable: !0,
			clickable: !0,
			roam: !1,
			itemStyle: {
				normal: {
					label: {
						show: !1,
						position: "inside"
					},
					nodeStyle: {
						brushType: "both",
						borderColor: "#5182ab",
						borderWidth: 1
					},
					linkStyle: {
						color: "#5182ab",
						width: 1,
						type: "line"
					}
				},
				emphasis: {
					label: {
						show: !1
					},
					nodeStyle: {},
					linkStyle: {
						opacity: 0
					}
				}
			}
		};
		var A = H("../util/ecData"),
			J = H("zrender/tool/util"),
			v = H("zrender/config"),
			q = H("zrender/tool/vector");
		return w.prototype = {
			constructor: w,
			type: I.CHART_TYPE_FORCE,
			_init: function() {
				var r, p = this.component.legend,
					u = this.series;
				this.clear();
				for (var m = 0, l = u.length; l > m; m++) {
					var s = u[m];
					if (s.type === I.CHART_TYPE_FORCE) {
						if (u[m] = this.reformOption(u[m]), r = u[m].name || "", this.selectedMap[r] = p ? p.isSelected(r) : !0, !this.selectedMap[r]) {
							continue
						}
						this.buildMark(m), this._initSerie(s, m);
						break
					}
				}
				this.animationEffect()
			},
			_getNodeCategory: function(i, a) {
				return i.categories && i.categories[a.category || 0]
			},
			_getNodeQueryTarget: function(m, l, o) {
				o = o || "normal";
				var a = this._getNodeCategory(m, l) || {};
				return [l.itemStyle && l.itemStyle[o], a && a.itemStyle && a.itemStyle[o], m.itemStyle[o].nodeStyle]
			},
			_getEdgeQueryTarget: function(i, a, l) {
				return l = l || "normal", [a.itemStyle && a.itemStyle[l], i.itemStyle[l].linkStyle]
			},
			_initSerie: function(m, l) {
				this._temperature = 1, this._graph = m.data ? this._getSerieGraphFromDataMatrix(m) : this._getSerieGraphFromNodeLinks(m), this._buildLinkShapes(m, l), this._buildNodeShapes(m, l);
				var o = m.roam === !0 || "move" === m.roam,
					a = m.roam === !0 || "scale" === m.roam;
				this.zr.modLayer(this.getZlevelBase(), {
					panable: o,
					zoomable: a
				}), (this.query("markPoint.effect.show") || this.query("markLine.effect.show")) && this.zr.modLayer(I.EFFECT_ZLEVEL, {
					panable: o,
					zoomable: a
				}), this._initLayout(m), this._step()
			},
			_getSerieGraphFromDataMatrix: function(Q) {
				for (var T = [], u = 0, O = [], S = 0; S < Q.matrix.length; S++) {
					O[S] = Q.matrix[S].slice()
				}
				for (var s = Q.data || Q.nodes, S = 0; S < s.length; S++) {
					var p = {},
						N = s[S];
					for (var P in N) {
						"name" === P ? p.id = N.name : p[P] = N[P]
					}
					var L = this._getNodeCategory(Q, N),
						y = L ? L.name : N.name;
					if (this.selectedMap[y] = this.isSelected(y), this.selectedMap[y]) {
						T.push(p), u++
					} else {
						O.splice(u, 1);
						for (var M = 0; M < O.length; M++) {
							O[M].splice(u, 1)
						}
					}
				}
				var R = x.fromMatrix(T, O, !0);
				return R.eachNode(function(i, a) {
					i.layout = {
						size: i.data.value,
						mass: 0
					}, i.rawIndex = a
				}), R.eachEdge(function(a) {
					a.layout = {
						weight: a.data.weight
					}
				}), R
			},
			_getSerieGraphFromNodeLinks: function(Q) {
				for (var T = new x(!0), u = Q.data || Q.nodes, O = 0, S = u.length; S > O; O++) {
					var s = u[O];
					if (s && !s.ignore) {
						var p = this._getNodeCategory(Q, s),
							N = p ? p.name : s.name;
						if (this.selectedMap[N] = this.isSelected(N), this.selectedMap[N]) {
							var P = T.addNode(s.name, s);
							P.rawIndex = O
						}
					}
				}
				for (var O = 0, S = Q.links.length; S > O; O++) {
					var L = Q.links[O],
						y = L.source,
						M = L.target;
					"number" == typeof y && (y = u[y], y && (y = y.name)), "number" == typeof M && (M = u[M], M && (M = M.name));
					var R = T.addEdge(y, M, L);
					R && (R.rawIndex = O)
				}
				return T.eachNode(function(i) {
					var a = i.data.value;
					if (null == a) {
						a = 0;
						for (var l = 0; l < i.edges.length; l++) {
							a += i.edges[l].data.weight || 0
						}
					}
					i.layout = {
						size: a,
						mass: 0
					}
				}), T.eachEdge(function(a) {
					a.layout = {
						weight: null == a.data.weight ? 1 : a.data.weight
					}
				}), T
			},
			_initLayout: function(R) {
				var X = this._graph,
					y = X.nodes.length,
					P = this.query(R, "minRadius"),
					W = this.query(R, "maxRadius");
				this._steps = R.steps || 1, this._layout.center = this.parseCenter(this.zr, R.center), this._layout.width = this.parsePercent(R.size, this.zr.getWidth()), this._layout.height = this.parsePercent(R.size, this.zr.getHeight()), this._layout.large = R.large, this._layout.scaling = R.scaling, this._layout.ratioScaling = R.ratioScaling, this._layout.gravity = R.gravity, this._layout.temperature = 1, this._layout.coolDown = R.coolDown, this._layout.preventNodeEdgeOverlap = R.preventOverlap, this._layout.preventNodeOverlap = R.preventOverlap;
				for (var o = 1 / 0, Y = -1 / 0, O = 0; y > O; O++) {
					var Q = X.nodes[O];
					Y = Math.max(Q.layout.size, Y), o = Math.min(Q.layout.size, o)
				}
				for (var M = Y - o, O = 0; y > O; O++) {
					var Q = X.nodes[O];
					M > 0 ? (Q.layout.size = (Q.layout.size - o) * (W - P) / M + P, Q.layout.mass = Q.layout.size / W) : (Q.layout.size = (W - P) / 2, Q.layout.mass = 0.5)
				}
				for (var O = 0; y > O; O++) {
					var Q = X.nodes[O];
					if ("undefined" != typeof this.__nodePositionMap[Q.id]) {
						Q.layout.position = q.create(), q.copy(Q.layout.position, this.__nodePositionMap[Q.id])
					} else {
						if ("undefined" != typeof Q.data.initial) {
							Q.layout.position = q.create(), q.copy(Q.layout.position, Q.data.initial)
						} else {
							var L = this._layout.center,
								N = Math.min(this._layout.width, this._layout.height);
							Q.layout.position = B(L[0], L[1], 0.8 * N)
						}
					}
					var S = Q.shape.style,
						u = Q.layout.size;
					S.width = S.width || 2 * u, S.height = S.height || 2 * u, S.x = -S.width / 2, S.y = -S.height / 2, q.copy(Q.shape.position, Q.layout.position)
				}
				y = X.edges.length, Y = -1 / 0;
				for (var O = 0; y > O; O++) {
					var T = X.edges[O];
					T.layout.weight > Y && (Y = T.layout.weight)
				}
				for (var O = 0; y > O; O++) {
					var T = X.edges[O];
					T.layout.weight /= Y
				}
				this._layout.init(X, R.useWorker)
			},
			_buildNodeShapes: function(m, l) {
				var o = this._graph,
					a = this.query(m, "categories");
				o.eachNode(function(L) {
					var i = this._getNodeCategory(m, L.data),
						y = [L.data, i, m],
						u = this._getNodeQueryTarget(m, L.data),
						t = this._getNodeQueryTarget(m, L.data, "emphasis"),
						e = new k({
							style: {
								x: 0,
								y: 0,
								color: this.deepQuery(u, "color"),
								brushType: "both",
								strokeColor: this.deepQuery(u, "strokeColor") || this.deepQuery(u, "borderColor"),
								lineWidth: this.deepQuery(u, "lineWidth") || this.deepQuery(u, "borderWidth")
							},
							highlightStyle: {
								color: this.deepQuery(t, "color"),
								strokeColor: this.deepQuery(t, "strokeColor") || this.deepQuery(t, "borderColor"),
								lineWidth: this.deepQuery(t, "lineWidth") || this.deepQuery(t, "borderWidth")
							},
							clickable: m.clickable,
							zlevel: this.getZlevelBase(),
							z: this.getZBase()
						});
					e.style.color || (e.style.color = this.getColor(i ? i.name : L.id)), e.style.iconType = this.deepQuery(y, "symbol"), e.style.width = e.style.height = 2 * (this.deepQuery(y, "symbolSize") || 0), e.style.iconType.match("image") && (e.style.image = e.style.iconType.replace(new RegExp("^image:\\/\\/"), ""), e = new j({
						style: e.style,
						highlightStyle: e.highlightStyle,
						clickable: e.clickable,
						zlevel: this.getZlevelBase(),
						z: this.getZBase()
					})), this.deepQuery(y, "itemStyle.normal.label.show") && (e.style.text = null == L.data.label ? L.id : L.data.label, e.style.textPosition = this.deepQuery(y, "itemStyle.normal.label.position"), e.style.textColor = this.deepQuery(y, "itemStyle.normal.label.textStyle.color"), e.style.textFont = this.getFont(this.deepQuery(y, "itemStyle.normal.label.textStyle") || {})), this.deepQuery(y, "itemStyle.emphasis.label.show") && (e.highlightStyle.textPosition = this.deepQuery(y, "itemStyle.emphasis.label.position"), e.highlightStyle.textColor = this.deepQuery(y, "itemStyle.emphasis.label.textStyle.color"), e.highlightStyle.textFont = this.getFont(this.deepQuery(y, "itemStyle.emphasis.label.textStyle") || {})), this.deepQuery(y, "draggable") && (this.setCalculable(e), e.dragEnableTime = 0, e.draggable = !0, e.ondragstart = this.shapeHandler.ondragstart, e.ondragover = null);
					var p = "";
					if ("undefined" != typeof L.category) {
						var i = a[L.category];
						p = i && i.name || ""
					}
					A.pack(e, m, l, L.data, L.rawIndex, L.data.name || "", L.category), this.shapeList.push(e), this.zr.addShape(e), L.shape = e
				}, this)
			},
			_buildLinkShapes: function(Q, W) {
				for (var L = this._graph, O = L.edges.length, T = 0; O > T; T++) {
					var p = L.edges[T],
						m = p.data,
						X = p.node1,
						N = p.node2,
						M = this._getEdgeQueryTarget(Q, m),
						R = this.deepQuery(M, "type");
					Q.linkSymbol && "none" !== Q.linkSymbol && (R = "line");
					var U = "line" === R ? G : D,
						S = new U({
							style: {
								xStart: 0,
								yStart: 0,
								xEnd: 0,
								yEnd: 0
							},
							clickable: this.query(Q, "clickable"),
							highlightStyle: {},
							zlevel: this.getZlevelBase(),
							z: this.getZBase()
						});
					if (J.merge(S.style, this.query(Q, "itemStyle.normal.linkStyle"), !0), J.merge(S.highlightStyle, this.query(Q, "itemStyle.emphasis.linkStyle"), !0), "undefined" != typeof m.itemStyle && (m.itemStyle.normal && J.merge(S.style, m.itemStyle.normal, !0), m.itemStyle.emphasis && J.merge(S.highlightStyle, m.itemStyle.emphasis, !0)), S.style.lineWidth = S.style.lineWidth || S.style.width, S.style.strokeColor = S.style.strokeColor || S.style.color, S.highlightStyle.lineWidth = S.highlightStyle.lineWidth || S.highlightStyle.width, S.highlightStyle.strokeColor = S.highlightStyle.strokeColor || S.highlightStyle.color, A.pack(S, Q, W, p.data, null == p.rawIndex ? T : p.rawIndex, p.data.name || X.id + " - " + N.id, X.id, N.id), this.shapeList.push(S), this.zr.addShape(S), p.shape = S, Q.linkSymbol && "none" !== Q.linkSymbol) {
						var P = new k({
							style: {
								x: -5,
								y: 0,
								width: Q.linkSymbolSize[0],
								height: Q.linkSymbolSize[1],
								iconType: Q.linkSymbol,
								brushType: "fill",
								color: S.style.strokeColor
							},
							highlightStyle: {
								brushType: "fill"
							},
							position: [0, 0],
							rotation: 0
						});
						S._symbolShape = P, this.shapeList.push(P), this.zr.addShape(P)
					}
				}
			},
			_updateLinkShapes: function() {
				for (var P = q.create(), R = this._graph.edges, y = 0, N = R.length; N > y; y++) {
					var Q = R[y],
						u = Q.node1.shape,
						p = Q.node2.shape,
						S = u.position,
						M = p.position;
					if (Q.shape.style.xStart = S[0], Q.shape.style.yStart = S[1], Q.shape.style.xEnd = M[0], Q.shape.style.yEnd = M[1], "bezier-curve" === Q.shape.type && (Q.shape.style.cpX1 = (S[0] + M[0]) / 2 - (M[1] - S[1]) / 4, Q.shape.style.cpY1 = (S[1] + M[1]) / 2 - (S[0] - M[0]) / 4), Q.shape.modSelf(), Q.shape._symbolShape) {
						var O = Q.shape._symbolShape;
						q.copy(O.position, p.position), q.sub(P, u.position, p.position), q.normalize(P, P), q.scaleAndAdd(O.position, O.position, P, p.style.width / 2 + 2);
						var L = Math.atan2(P[1], P[0]);
						O.rotation = Math.PI / 2 - L, O.modSelf()
					}
				}
			},
			_syncNodePositions: function() {
				for (var N = this._graph, P = 0; P < N.nodes.length; P++) {
					var u = N.nodes[P],
						L = u.layout.position,
						O = u.data,
						p = u.shape,
						m = p.fixed || O.fixX,
						Q = p.fixed || O.fixY;
					m === !0 ? m = 1 : isNaN(m) && (m = 0), Q === !0 ? Q = 1 : isNaN(Q) && (Q = 0), p.position[0] += (L[0] - p.position[0]) * (1 - m), p.position[1] += (L[1] - p.position[1]) * (1 - Q), q.copy(L, p.position);
					var y = O.name;
					if (y) {
						var M = this.__nodePositionMap[y];
						M || (M = this.__nodePositionMap[y] = q.create()), q.copy(M, L)
					}
					p.modSelf()
				}
			},
			_step: function() {
				this._syncNodePositions(), this._updateLinkShapes(), this.zr.refreshNextFrame(), this._layout.temperature > 0.01 ? this._layout.step(this._steps) : this.messageCenter.dispatch(I.EVENT.FORCE_LAYOUT_END, {}, {}, this.myChart)
			},
			refresh: function(i) {
				if (i && (this.option = i, this.series = this.option.series), this.legend = this.component.legend, this.legend) {
					this.getColor = function(m) {
						return this.legend.getColor(m)
					}, this.isSelected = function(m) {
						return this.legend.isSelected(m)
					}
				} else {
					var a = {},
						l = 0;
					this.getColor = function(m) {
						return a[m] ? a[m] : (a[m] || (a[m] = this.zr.getColor(l++)), a[m])
					}, this.isSelected = function() {
						return !0
					}
				}
				this._init()
			},
			dispose: function() {
				this.clear(), this.shapeList = null, this.effectList = null, this._layout.dispose(), this._layout = null, this.__nodePositionMap = {}
			},
			getPosition: function() {
				var a = [];
				return this._graph.eachNode(function(e) {
					e.layout && a.push({
						name: e.data.name,
						position: Array.prototype.slice.call(e.layout.position)
					})
				}), a
			}
		}, J.inherits(w, z), H("../chart").define("force", w), w
	}), h("echarts/layout/Force", ["require", "./forceLayoutWorker", "zrender/tool/vector"], function(q) {
		function l() {
			if ("undefined" != typeof Worker && "undefined" != typeof Blob) {
				try {
					var i = new Blob([k.getWorkerCode()]);
					v = window.URL.createObjectURL(i)
				} catch (a) {
					v = ""
				}
			}
			return v
		}
		var v, k = q("./forceLayoutWorker"),
			j = q("zrender/tool/vector"),
			u = window.requestAnimationFrame || window.msRequestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(a) {
				setTimeout(a, 16)
			},
			p = "undefined" == typeof Float32Array ? Array : Float32Array,
			m = function(r) {
				"undefined" == typeof v && l(), r = r || {}, this.width = r.width || 500, this.height = r.height || 500, this.center = r.center || [this.width / 2, this.height / 2], this.ratioScaling = r.ratioScaling || !1, this.scaling = r.scaling || 1, this.gravity = "undefined" != typeof r.gravity ? r.gravity : 1, this.large = r.large || !1, this.preventNodeOverlap = r.preventNodeOverlap || !1, this.preventNodeEdgeOverlap = r.preventNodeEdgeOverlap || !1, this.maxSpeedIncrease = r.maxSpeedIncrease || 1, this.onupdate = r.onupdate || function() {}, this.temperature = r.temperature || 1, this.coolDown = r.coolDown || 0.99, this._layout = null, this._layoutWorker = null;
				var o = this,
					n = this._$onupdate;
				this._$onupdate = function(a) {
					n.call(o, a)
				}
			};
		return m.prototype.updateConfig = function() {
			var w = this.width,
				s = this.height,
				x = Math.min(w, s),
				r = {
					center: this.center,
					width: this.ratioScaling ? w : x,
					height: this.ratioScaling ? s : x,
					scaling: this.scaling || 1,
					gravity: this.gravity || 1,
					barnesHutOptimize: this.large,
					preventNodeOverlap: this.preventNodeOverlap,
					preventNodeEdgeOverlap: this.preventNodeEdgeOverlap,
					maxSpeedIncrease: this.maxSpeedIncrease
				};
			if (this._layoutWorker) {
				this._layoutWorker.postMessage({
					cmd: "updateConfig",
					config: r
				})
			} else {
				for (var o in r) {
					this._layout[o] = r[o]
				}
			}
		}, m.prototype.init = function(A, D) {
			if (v && D) {
				try {
					this._layoutWorker || (this._layoutWorker = new Worker(v), this._layoutWorker.onmessage = this._$onupdate), this._layout = null
				} catch (C) {
					this._layoutWorker = null, this._layout || (this._layout = new k)
				}
			} else {
				this._layout || (this._layout = new k), this._layoutWorker && (this._layoutWorker.terminate(), this._layoutWorker = null)
			}
			this.temperature = 1, this.graph = A;
			for (var n = A.nodes.length, E = new p(2 * n), y = new p(n), z = new p(n), w = 0; n > w; w++) {
				var r = A.nodes[w];
				E[2 * w] = r.layout.position[0], E[2 * w + 1] = r.layout.position[1], y[w] = "undefined" == typeof r.layout.mass ? 1 : r.layout.mass, z[w] = "undefined" == typeof r.layout.size ? 1 : r.layout.size, r.layout.__index = w
			}
			n = A.edges.length;
			for (var x = new p(2 * n), B = new p(n), w = 0; n > w; w++) {
				var i = A.edges[w];
				x[2 * w] = i.node1.layout.__index, x[2 * w + 1] = i.node2.layout.__index, B[w] = i.layout.weight || 1
			}
			this._layoutWorker ? this._layoutWorker.postMessage({
				cmd: "init",
				nodesPosition: E,
				nodesMass: y,
				nodesSize: z,
				edges: x,
				edgesWeight: B
			}) : (this._layout.initNodes(E, y, z), this._layout.initEdges(x, B)), this.updateConfig()
		}, m.prototype.step = function(w) {
			var o = this.graph.nodes;
			if (this._layoutWorker) {
				for (var x = new p(2 * o.length), a = 0; a < o.length; a++) {
					var r = o[a];
					x[2 * a] = r.layout.position[0], x[2 * a + 1] = r.layout.position[1]
				}
				this._layoutWorker.postMessage(x.buffer, [x.buffer]), this._layoutWorker.postMessage({
					cmd: "update",
					steps: w,
					temperature: this.temperature,
					coolDown: this.coolDown
				});
				for (var a = 0; w > a; a++) {
					this.temperature *= this.coolDown
				}
			} else {
				u(this._$onupdate);
				for (var a = 0; a < o.length; a++) {
					var r = o[a];
					j.copy(this._layout.nodes[a].position, r.layout.position)
				}
				for (var a = 0; w > a; a++) {
					this._layout.temperature = this.temperature, this._layout.update(), this.temperature *= this.coolDown
				}
			}
		}, m.prototype._$onupdate = function(r) {
			if (this._layoutWorker) {
				for (var o = new Float32Array(r.data), s = 0; s < this.graph.nodes.length; s++) {
					var a = this.graph.nodes[s];
					a.layout.position[0] = o[2 * s], a.layout.position[1] = o[2 * s + 1]
				}
				this.onupdate && this.onupdate()
			} else {
				if (this._layout) {
					for (var s = 0; s < this.graph.nodes.length; s++) {
						var a = this.graph.nodes[s];
						j.copy(a.layout.position, this._layout.nodes[s].position)
					}
					this.onupdate && this.onupdate()
				}
			}
		}, m.prototype.dispose = function() {
			this._layoutWorker && this._layoutWorker.terminate(), this._layoutWorker = null, this._layout = null
		}, m
	}), h("echarts/layout/forceLayoutWorker", ["require", "zrender/tool/vector"], function g(q) {
		function v() {
			this.subRegions = [], this.nSubRegions = 0, this.node = null, this.mass = 0, this.centerOfMass = null, this.bbox = new m(4), this.size = 0
		}

		function k() {
			this.position = j.create(), this.force = j.create(), this.forcePrev = j.create(), this.speed = j.create(), this.speedPrev = j.create(), this.mass = 1, this.inDegree = 0, this.outDegree = 0
		}

		function o(i, a) {
			this.node1 = i, this.node2 = a, this.weight = 1
		}

		function u() {
			this.barnesHutOptimize = !1, this.barnesHutTheta = 1.5, this.repulsionByDegree = !1, this.preventNodeOverlap = !1, this.preventNodeEdgeOverlap = !1, this.strongGravity = !0, this.gravity = 1, this.scaling = 1, this.edgeWeightInfluence = 1, this.center = [0, 0], this.width = 500, this.height = 500, this.maxSpeedIncrease = 1, this.nodes = [], this.edges = [], this.bbox = new m(4), this._rootRegion = new v, this._rootRegion.centerOfMass = j.create(), this._massArr = null, this._k = 0
		}
		var j, w = "undefined" == typeof window && "undefined" == typeof q;
		j = w ? {
			create: function(i, a) {
				var l = new Float32Array(2);
				return l[0] = i || 0, l[1] = a || 0, l
			},
			dist: function(r, l) {
				var s = l[0] - r[0],
					a = l[1] - r[1];
				return Math.sqrt(s * s + a * a)
			},
			len: function(i) {
				var a = i[0],
					l = i[1];
				return Math.sqrt(a * a + l * l)
			},
			scaleAndAdd: function(r, l, s, a) {
				return r[0] = l[0] + s[0] * a, r[1] = l[1] + s[1] * a, r
			},
			scale: function(i, a, l) {
				return i[0] = a[0] * l, i[1] = a[1] * l, i
			},
			add: function(i, a, l) {
				return i[0] = a[0] + l[0], i[1] = a[1] + l[1], i
			},
			sub: function(i, a, l) {
				return i[0] = a[0] - l[0], i[1] = a[1] - l[1], i
			},
			dot: function(i, a) {
				return i[0] * a[0] + i[1] * a[1]
			},
			normalize: function(x, s) {
				var y = s[0],
					r = s[1],
					l = y * y + r * r;
				return l > 0 && (l = 1 / Math.sqrt(l), x[0] = s[0] * l, x[1] = s[1] * l), x
			},
			negate: function(i, a) {
				return i[0] = -a[0], i[1] = -a[1], i
			},
			copy: function(i, a) {
				return i[0] = a[0], i[1] = a[1], i
			},
			set: function(i, a, l) {
				return i[0] = a, i[1] = l, i
			}
		} : q("zrender/tool/vector");
		var m = "undefined" == typeof Float32Array ? Array : Float32Array;
		if (v.prototype.beforeUpdate = function() {
				for (var a = 0; a < this.nSubRegions; a++) {
					this.subRegions[a].beforeUpdate()
				}
				this.mass = 0, this.centerOfMass && (this.centerOfMass[0] = 0, this.centerOfMass[1] = 0), this.nSubRegions = 0, this.node = null
			}, v.prototype.afterUpdate = function() {
				this.subRegions.length = this.nSubRegions;
				for (var a = 0; a < this.nSubRegions; a++) {
					this.subRegions[a].afterUpdate()
				}
			}, v.prototype.addNode = function(a) {
				if (0 === this.nSubRegions) {
					if (null == this.node) {
						return void(this.node = a)
					}
					this._addNodeToSubRegion(this.node), this.node = null
				}
				this._addNodeToSubRegion(a), this._updateCenterOfMass(a)
			}, v.prototype.findSubRegion = function(r, l) {
				for (var s = 0; s < this.nSubRegions; s++) {
					var a = this.subRegions[s];
					if (a.contain(r, l)) {
						return a
					}
				}
			}, v.prototype.contain = function(i, a) {
				return this.bbox[0] <= i && this.bbox[2] >= i && this.bbox[1] <= a && this.bbox[3] >= a
			}, v.prototype.setBBox = function(r, l, s, a) {
				this.bbox[0] = r, this.bbox[1] = l, this.bbox[2] = s, this.bbox[3] = a, this.size = (s - r + a - l) / 2
			}, v.prototype._newSubRegion = function() {
				var a = this.subRegions[this.nSubRegions];
				return a || (a = new v, this.subRegions[this.nSubRegions] = a), this.nSubRegions++, a
			}, v.prototype._addNodeToSubRegion = function(C) {
				var E = this.findSubRegion(C.position[0], C.position[1]),
					z = this.bbox;
				if (!E) {
					var B = (z[0] + z[2]) / 2,
						D = (z[1] + z[3]) / 2,
						y = (z[2] - z[0]) / 2,
						x = (z[3] - z[1]) / 2,
						F = C.position[0] >= B ? 1 : 0,
						A = C.position[1] >= D ? 1 : 0,
						E = this._newSubRegion();
					E.setBBox(F * y + z[0], A * x + z[1], (F + 1) * y + z[0], (A + 1) * x + z[1])
				}
				E.addNode(C)
			}, v.prototype._updateCenterOfMass = function(i) {
				null == this.centerOfMass && (this.centerOfMass = j.create());
				var a = this.centerOfMass[0] * this.mass,
					l = this.centerOfMass[1] * this.mass;
				a += i.position[0] * i.mass, l += i.position[1] * i.mass, this.mass += i.mass, this.centerOfMass[0] = a / this.mass, this.centerOfMass[1] = l / this.mass
			}, u.prototype.nodeToNodeRepulsionFactor = function(i, a, l) {
				return l * l * i / a
			}, u.prototype.edgeToNodeRepulsionFactor = function(i, a, l) {
				return l * i / a
			}, u.prototype.attractionFactor = function(i, a, l) {
				return i * a / l
			}, u.prototype.initNodes = function(A, x, n) {
				this.temperature = 1;
				var l = A.length / 2;
				this.nodes.length = 0;
				for (var B = "undefined" != typeof n, z = 0; l > z; z++) {
					var y = new k;
					y.position[0] = A[2 * z], y.position[1] = A[2 * z + 1], y.mass = x[z], B && (y.size = n[z]), this.nodes.push(y)
				}
				this._massArr = x, B && (this._sizeArr = n)
			}, u.prototype.initEdges = function(C, E) {
				var y = C.length / 2;
				this.edges.length = 0;
				for (var D = "undefined" != typeof E, x = 0; y > x; x++) {
					var i = C[2 * x],
						F = C[2 * x + 1],
						A = this.nodes[i],
						B = this.nodes[F];
					if (A && B) {
						A.outDegree++, B.inDegree++;
						var z = new o(A, B);
						D && (z.weight = E[x]), this.edges.push(z)
					}
				}
			}, u.prototype.update = function() {
				var x = this.nodes.length;
				if (this.updateBBox(), this._k = 0.4 * this.scaling * Math.sqrt(this.width * this.height / x), this.barnesHutOptimize) {
					this._rootRegion.setBBox(this.bbox[0], this.bbox[1], this.bbox[2], this.bbox[3]), this._rootRegion.beforeUpdate();
					for (var s = 0; x > s; s++) {
						this._rootRegion.addNode(this.nodes[s])
					}
					this._rootRegion.afterUpdate()
				} else {
					var y = 0,
						r = this._rootRegion.centerOfMass;
					j.set(r, 0, 0);
					for (var s = 0; x > s; s++) {
						var l = this.nodes[s];
						y += l.mass, j.scaleAndAdd(r, r, l.position, l.mass)
					}
					y > 0 && j.scale(r, r, 1 / y)
				}
				this.updateForce(), this.updatePosition()
			}, u.prototype.updateForce = function() {
				for (var i = this.nodes.length, a = 0; i > a; a++) {
					var l = this.nodes[a];
					j.copy(l.forcePrev, l.force), j.copy(l.speedPrev, l.speed), j.set(l.force, 0, 0)
				}
				this.updateNodeNodeForce(), this.gravity > 0 && this.updateGravityForce(), this.updateEdgeForce(), this.preventNodeEdgeOverlap && this.updateNodeEdgeForce()
			}, u.prototype.updatePosition = function() {
				for (var C = this.nodes.length, E = j.create(), x = 0; C > x; x++) {
					var A = this.nodes[x],
						D = A.speed;
					j.scale(A.force, A.force, 1 / 30);
					var r = j.len(A.force) + 0.1,
						F = Math.min(r, 500) / r;
					j.scale(A.force, A.force, F), j.add(D, D, A.force), j.scale(D, D, this.temperature), j.sub(E, D, A.speedPrev);
					var z = j.len(E);
					if (z > 0) {
						j.scale(E, E, 1 / z);
						var B = j.len(A.speedPrev);
						B > 0 && (z = Math.min(z / B, this.maxSpeedIncrease) * B, j.scaleAndAdd(D, A.speedPrev, E, z))
					}
					var y = j.len(D),
						F = Math.min(y, 100) / (y + 0.1);
					j.scale(D, D, F), j.add(A.position, A.position, D)
				}
			}, u.prototype.updateNodeNodeForce = function() {
				for (var x = this.nodes.length, s = 0; x > s; s++) {
					var y = this.nodes[s];
					if (this.barnesHutOptimize) {
						this.applyRegionToNodeRepulsion(this._rootRegion, y)
					} else {
						for (var r = s + 1; x > r; r++) {
							var l = this.nodes[r];
							this.applyNodeToNodeRepulsion(y, l, !1)
						}
					}
				}
			}, u.prototype.updateGravityForce = function() {
				for (var a = 0; a < this.nodes.length; a++) {
					this.applyNodeGravity(this.nodes[a])
				}
			}, u.prototype.updateEdgeForce = function() {
				for (var a = 0; a < this.edges.length; a++) {
					this.applyEdgeAttraction(this.edges[a])
				}
			}, u.prototype.updateNodeEdgeForce = function() {
				for (var i = 0; i < this.nodes.length; i++) {
					for (var a = 0; a < this.edges.length; a++) {
						this.applyEdgeToNodeRepulsion(this.edges[a], this.nodes[i])
					}
				}
			}, u.prototype.applyRegionToNodeRepulsion = function() {
				var a = j.create();
				return function(r, x) {
					if (r.node) {
						this.applyNodeToNodeRepulsion(r.node, x, !0)
					} else {
						if (0 === r.mass && 0 === x.mass) {
							return
						}
						j.sub(a, x.position, r.centerOfMass);
						var l = a[0] * a[0] + a[1] * a[1];
						if (l > this.barnesHutTheta * r.size * r.size) {
							var e = this._k * this._k * (x.mass + r.mass) / (l + 1);
							j.scaleAndAdd(x.force, x.force, a, 2 * e)
						} else {
							for (var s = 0; s < r.nSubRegions; s++) {
								this.applyRegionToNodeRepulsion(r.subRegions[s], x)
							}
						}
					}
				}
			}(), u.prototype.applyNodeToNodeRepulsion = function() {
				var a = j.create();
				return function(y, B, x) {
					if (y !== B && (0 !== y.mass || 0 !== B.mass)) {
						j.sub(a, y.position, B.position);
						var r = a[0] * a[0] + a[1] * a[1];
						if (0 !== r) {
							var A, z = y.mass + B.mass,
								e = Math.sqrt(r);
							j.scale(a, a, 1 / e), this.preventNodeOverlap ? (e = e - y.size - B.size, e > 0 ? A = this.nodeToNodeRepulsionFactor(z, e, this._k) : 0 >= e && (A = this._k * this._k * 10 * z)) : A = this.nodeToNodeRepulsionFactor(z, e, this._k), x || j.scaleAndAdd(y.force, y.force, a, 2 * A), j.scaleAndAdd(B.force, B.force, a, 2 * -A)
						}
					}
				}
			}(), u.prototype.applyEdgeAttraction = function() {
				var a = j.create();
				return function(r) {
					var z = r.node1,
						l = r.node2;
					j.sub(a, z.position, l.position);
					var e, y = j.len(a);
					e = 0 === this.edgeWeightInfluence ? 1 : 1 == this.edgeWeightInfluence ? r.weight : Math.pow(r.weight, this.edgeWeightInfluence);
					var x;
					if (!(this.preventOverlap && (y = y - z.size - l.size, 0 >= y))) {
						var x = this.attractionFactor(e, y, this._k);
						j.scaleAndAdd(z.force, z.force, a, -x), j.scaleAndAdd(l.force, l.force, a, x)
					}
				}
			}(), u.prototype.applyNodeGravity = function() {
				var a = j.create();
				return function(e) {
					j.sub(a, this.center, e.position), this.width > this.height ? a[1] *= this.width / this.height : a[0] *= this.height / this.width;
					var i = j.len(a) / 100;
					this.strongGravity ? j.scaleAndAdd(e.force, e.force, a, i * this.gravity * e.mass) : j.scaleAndAdd(e.force, e.force, a, this.gravity * e.mass / (i + 1))
				}
			}(), u.prototype.applyEdgeToNodeRepulsion = function() {
				var i = j.create(),
					a = j.create(),
					l = j.create();
				return function(x, t) {
					var A = x.node1,
						z = x.node2;
					if (A !== t && z !== t) {
						j.sub(i, z.position, A.position), j.sub(a, t.position, A.position);
						var r = j.len(i);
						j.scale(i, i, 1 / r);
						var y = j.dot(i, a);
						if (!(0 > y || y > r)) {
							j.scaleAndAdd(l, A.position, i, y);
							var e = j.dist(l, t.position) - t.size,
								n = this.edgeToNodeRepulsionFactor(t.mass, Math.max(e, 0.1), 100);
							j.sub(i, t.position, l), j.normalize(i, i), j.scaleAndAdd(t.force, t.force, i, n), j.scaleAndAdd(A.force, A.force, i, -n), j.scaleAndAdd(z.force, z.force, i, -n)
						}
					}
				}
			}(), u.prototype.updateBBox = function() {
				for (var x = 1 / 0, s = 1 / 0, z = -1 / 0, r = -1 / 0, l = 0; l < this.nodes.length; l++) {
					var y = this.nodes[l].position;
					x = Math.min(x, y[0]), s = Math.min(s, y[1]), z = Math.max(z, y[0]), r = Math.max(r, y[1])
				}
				this.bbox[0] = x, this.bbox[1] = s, this.bbox[2] = z, this.bbox[3] = r
			}, u.getWorkerCode = function() {
				var a = g.toString();
				return a.slice(a.indexOf("{") + 1, a.lastIndexOf("return"))
			}, w) {
			var p = null;
			self.onmessage = function(B) {
				if (B.data instanceof ArrayBuffer) {
					if (!p) {
						return
					}
					for (var y = new Float32Array(B.data), D = y.length / 2, x = 0; D > x; x++) {
						var C = p.nodes[x];
						C.position[0] = y[2 * x], C.position[1] = y[2 * x + 1]
					}
				} else {
					switch (B.data.cmd) {
						case "init":
							p || (p = new u), p.initNodes(B.data.nodesPosition, B.data.nodesMass, B.data.nodesSize), p.initEdges(B.data.edges, B.data.edgesWeight);
							break;
						case "updateConfig":
							if (p) {
								for (var A in B.data.config) {
									p[A] = B.data.config[A]
								}
							}
							break;
						case "update":
							var z = B.data.steps;
							if (p) {
								var D = p.nodes.length,
									y = new Float32Array(2 * D);
								p.temperature = B.data.temperature;
								for (var x = 0; z > x; x++) {
									p.update(), p.temperature *= B.data.coolDown
								}
								for (var x = 0; D > x; x++) {
									var C = p.nodes[x];
									y[2 * x] = C.position[0], y[2 * x + 1] = C.position[1]
								}
								self.postMessage(y.buffer, [y.buffer])
							} else {
								var a = new Float32Array;
								self.postMessage(a.buffer, [a.buffer])
							}
					}
				}
			}
		}
		return u
	}), h("echarts/chart/map", ["require", "./base", "zrender/shape/Text", "zrender/shape/Path", "zrender/shape/Circle", "zrender/shape/Rectangle", "zrender/shape/Line", "zrender/shape/Polygon", "zrender/shape/Ellipse", "../component/dataRange", "../component/roamController", "../config", "../util/ecData", "zrender/tool/util", "zrender/config", "zrender/tool/event", "../util/mapData/params", "../util/mapData/textFixed", "../util/mapData/geoCoord", "../util/projection/svg", "../util/projection/normal", "../chart"], function(H) {
		function w(s, n, m, l, u) {
			C.call(this, s, n, m, l, u);
			var p = this;
			p._onmousewheel = function(a) {
				return p.__onmousewheel(a)
			}, p._onmousedown = function(a) {
				return p.__onmousedown(a)
			}, p._onmousemove = function(a) {
				return p.__onmousemove(a)
			}, p._onmouseup = function(a) {
				return p.__onmouseup(a)
			}, p._onroamcontroller = function(a) {
				return p.__onroamcontroller(a)
			}, p._ondrhoverlink = function(a) {
				return p.__ondrhoverlink(a)
			}, this._isAlive = !0, this._selectedMode = {}, this._activeMapType = {}, this._clickable = {}, this._hoverable = {}, this._showLegendSymbol = {}, this._selected = {}, this._mapTypeMap = {}, this._mapDataMap = {}, this._nameMap = {}, this._specialArea = {}, this._refreshDelayTicket, this._mapDataRequireCounter, this._markAnimation = !1, this._hoverLinkMap = {}, this._roamMap = {}, this._scaleLimitMap = {}, this._mx, this._my, this._mousedown, this._justMove, this._curMapType, this.refresh(l), this.zr.on(I.EVENT.MOUSEWHEEL, this._onmousewheel), this.zr.on(I.EVENT.MOUSEDOWN, this._onmousedown), n.bind(D.EVENT.ROAMCONTROLLER, this._onroamcontroller), n.bind(D.EVENT.DATA_RANGE_HOVERLINK, this._ondrhoverlink)
		}
		var C = H("./base"),
			F = H("zrender/shape/Text"),
			K = H("zrender/shape/Path"),
			B = H("zrender/shape/Circle"),
			z = H("zrender/shape/Rectangle"),
			x = H("zrender/shape/Line"),
			E = H("zrender/shape/Polygon"),
			G = H("zrender/shape/Ellipse");
		H("../component/dataRange"), H("../component/roamController");
		var D = H("../config");
		D.map = {
			zlevel: 0,
			z: 2,
			mapType: "china",
			mapValuePrecision: 0,
			showLegendSymbol: !0,
			dataRangeHoverLink: !0,
			hoverable: !0,
			clickable: !0,
			itemStyle: {
				normal: {
					borderColor: "rgba(0,0,0,0)",
					borderWidth: 1,
					areaStyle: {
						color: "#ccc"
					},
					label: {
						show: !1,
						textStyle: {
							color: "rgb(139,69,19)"
						}
					}
				},
				emphasis: {
					borderColor: "rgba(0,0,0,0)",
					borderWidth: 1,
					areaStyle: {
						color: "rgba(255,215,0,0.8)"
					},
					label: {
						show: !1,
						textStyle: {
							color: "rgb(100,0,0)"
						}
					}
				}
			}
		};
		var j = H("../util/ecData"),
			k = H("zrender/tool/util"),
			I = H("zrender/config"),
			A = H("zrender/tool/event"),
			J = H("../util/mapData/params").params,
			v = H("../util/mapData/textFixed"),
			q = H("../util/mapData/geoCoord");
		return w.prototype = {
			type: D.CHART_TYPE_MAP,
			_buildShape: function() {
				var S = this.series;
				this.selectedMap = {}, this._activeMapType = {};
				for (var X, L, O, W, y = this.component.legend, m = {}, Y = {}, N = {}, P = {}, M = 0, T = S.length; T > M; M++) {
					if (S[M].type == D.CHART_TYPE_MAP && (S[M] = this.reformOption(S[M]), L = S[M].mapType, Y[L] = Y[L] || {}, Y[L][M] = !0, N[L] = N[L] || S[M].mapValuePrecision, this._scaleLimitMap[L] = this._scaleLimitMap[L] || {}, S[M].scaleLimit && k.merge(this._scaleLimitMap[L], S[M].scaleLimit, !0), this._roamMap[L] = S[M].roam || this._roamMap[L], this._hoverLinkMap[L] = S[M].dataRangeHoverLink || this._hoverLinkMap[L], this._nameMap[L] = this._nameMap[L] || {}, S[M].nameMap && k.merge(this._nameMap[L], S[M].nameMap, !0), this._activeMapType[L] = !0, S[M].textFixed && k.merge(v, S[M].textFixed, !0), S[M].geoCoord && k.merge(q, S[M].geoCoord, !0), this._selectedMode[L] = this._selectedMode[L] || S[M].selectedMode, (null == this._hoverable[L] || this._hoverable[L]) && (this._hoverable[L] = S[M].hoverable), (null == this._clickable[L] || this._clickable[L]) && (this._clickable[L] = S[M].clickable), (null == this._showLegendSymbol[L] || this._showLegendSymbol[L]) && (this._showLegendSymbol[L] = S[M].showLegendSymbol), P[L] = P[L] || S[M].mapValueCalculation, X = S[M].name, this.selectedMap[X] = y ? y.isSelected(X) : !0, this.selectedMap[X])) {
						m[L] = m[L] || {}, O = S[M].data;
						for (var u = 0, Q = O.length; Q > u; u++) {
							W = this._nameChange(L, O[u].name), m[L][W] = m[L][W] || {
								seriesIndex: []
							};
							for (var U in O[u]) {
								"value" != U ? m[L][W][U] = O[u][U] : isNaN(O[u].value) || (null == m[L][W].value && (m[L][W].value = 0), m[L][W].value += O[u].value)
							}
							m[L][W].seriesIndex.push(M)
						}
					}
				}
				this._mapDataRequireCounter = 0;
				for (var R in m) {
					this._mapDataRequireCounter++
				}
				this._clearSelected(), 0 === this._mapDataRequireCounter && (this.clear(), this.zr && this.zr.delShape(this.lastShapeList), this.lastShapeList = []);
				for (var R in m) {
					if (P[R] && "average" == P[R]) {
						for (var Q in m[R]) {
							m[R][Q].value = (m[R][Q].value / m[R][Q].seriesIndex.length).toFixed(N[R]) - 0
						}
					}
					this._mapDataMap[R] = this._mapDataMap[R] || {}, this._mapDataMap[R].mapData ? this._mapDataCallback(R, m[R], Y[R])(this._mapDataMap[R].mapData) : J[R.replace(/\|.*/, "")].getGeoJson && (this._specialArea[R] = J[R.replace(/\|.*/, "")].specialArea || this._specialArea[R], J[R.replace(/\|.*/, "")].getGeoJson(this._mapDataCallback(R, m[R], Y[R])))
				}
			},
			_mapDataCallback: function(m, o, l) {
				var e = this;
				return function(a) {
					e._isAlive && null != e._activeMapType[m] && (-1 != m.indexOf("|") && (a = e._getSubMapData(m, a)), e._mapDataMap[m].mapData = a, a.firstChild ? (e._mapDataMap[m].rate = 1, e._mapDataMap[m].projection = H("../util/projection/svg")) : (e._mapDataMap[m].rate = 0.75, e._mapDataMap[m].projection = H("../util/projection/normal")), e._buildMap(m, e._getProjectionData(m, a, l), o, l), e._buildMark(m, l), --e._mapDataRequireCounter <= 0 && (e.addShapeList(), e.zr.refreshNextFrame()))
				}
			},
			_clearSelected: function() {
				for (var a in this._selected) {
					this._activeMapType[this._mapTypeMap[a]] || (delete this._selected[a], delete this._mapTypeMap[a])
				}
			},
			_getSubMapData: function(r, p) {
				for (var u = r.replace(/^.*\|/, ""), m = p.features, l = 0, s = m.length; s > l; l++) {
					if (m[l].properties && m[l].properties.name == u) {
						m = m[l], "United States of America" == u && m.geometry.coordinates.length > 1 && (m = {
							geometry: {
								coordinates: m.geometry.coordinates.slice(5, 6),
								type: m.geometry.type
							},
							id: m.id,
							properties: m.properties,
							type: m.type
						});
						break
					}
				}
				return {
					type: "FeatureCollection",
					features: [m]
				}
			},
			_getProjectionData: function(T, Y, M) {
				var Q, X = this._mapDataMap[T].projection,
					L = [],
					u = this._mapDataMap[T].bbox || X.getBbox(Y, this._specialArea[T]);
				Q = this._mapDataMap[T].hasRoam ? this._mapDataMap[T].transform : this._getTransform(u, M, this._mapDataMap[T].rate);
				var Z, P = this._mapDataMap[T].lastTransform || {
					scale: {}
				};
				Q.left != P.left || Q.top != P.top || Q.scale.x != P.scale.x || Q.scale.y != P.scale.y ? (Z = X.geoJson2Path(Y, Q, this._specialArea[T]), P = k.clone(Q)) : (Q = this._mapDataMap[T].transform, Z = this._mapDataMap[T].pathArray), this._mapDataMap[T].bbox = u, this._mapDataMap[T].transform = Q, this._mapDataMap[T].lastTransform = P, this._mapDataMap[T].pathArray = Z;
				for (var R = [Q.left, Q.top], O = 0, N = Z.length; N > O; O++) {
					L.push(this._getSingleProvince(T, Z[O], R))
				}
				if (this._specialArea[T]) {
					for (var U in this._specialArea[T]) {
						L.push(this._getSpecialProjectionData(T, Y, U, this._specialArea[T][U], R))
					}
				}
				if ("china" == T) {
					var y = this.geo2pos(T, q["南海诸岛"] || J["南海诸岛"].textCoord),
						S = Q.scale.x / 10.5,
						W = [32 * S + y[0], 83 * S + y[1]];
					v["南海诸岛"] && (W[0] += v["南海诸岛"][0], W[1] += v["南海诸岛"][1]), L.push({
						name: this._nameChange(T, "南海诸岛"),
						path: J["南海诸岛"].getPath(y, S),
						position: R,
						textX: W[0],
						textY: W[1]
					})
				}
				return L
			},
			_getSpecialProjectionData: function(ab, N, S, Z, M) {
				N = this._getSubMapData("x|" + S, N);
				var e = H("../util/projection/normal"),
					ac = e.getBbox(N),
					R = this.geo2pos(ab, [Z.left, Z.top]),
					T = this.geo2pos(ab, [Z.left + Z.width, Z.top + Z.height]),
					P = Math.abs(T[0] - R[0]),
					O = Math.abs(T[1] - R[1]),
					Q = ac.width,
					W = ac.height,
					L = P / 0.75 / Q,
					X = O / W;
				L > X ? (L = 0.75 * X, P = Q * L) : (X = L, L = 0.75 * X, O = W * X);
				var aa = {
						OffsetLeft: R[0],
						OffsetTop: R[1],
						scale: {
							x: L,
							y: X
						}
					},
					Y = e.geoJson2Path(N, aa);
				return this._getSingleProvince(ab, Y[0], M)
			},
			_getSingleProvince: function(u, p, L) {
				var m, l = p.properties.name,
					y = v[l] || [0, 0];
				if (q[l]) {
					m = this.geo2pos(u, q[l])
				} else {
					if (p.cp) {
						m = [p.cp[0] + y[0], p.cp[1] + y[1]]
					} else {
						var s = this._mapDataMap[u].bbox;
						m = this.geo2pos(u, [s.left + s.width / 2, s.top + s.height / 2]), m[0] += y[0], m[1] += y[1]
					}
				}
				return p.name = this._nameChange(u, l), p.position = L, p.textX = m[0], p.textY = m[1], p
			},
			_getTransform: function(ac, P, W) {
				var Z, af, T, R, Q, Y, aa, X = this.series,
					L = this.zr.getWidth(),
					M = this.zr.getHeight(),
					ad = Math.round(0.02 * Math.min(L, M));
				for (var S in P) {
					Z = X[S].mapLocation || {}, T = Z.x || T, Q = Z.y || Q, Y = Z.width || Y, aa = Z.height || aa
				}
				af = this.parsePercent(T, L), af = isNaN(af) ? ad : af, R = this.parsePercent(Q, M), R = isNaN(R) ? ad : R, Y = null == Y ? L - af - 2 * ad : this.parsePercent(Y, L), aa = null == aa ? M - R - 2 * ad : this.parsePercent(aa, M);
				var ae = ac.width,
					O = ac.height,
					N = Y / W / ae,
					ab = aa / O;
				if (N > ab ? (N = ab * W, Y = ae * N) : (ab = N, N = ab * W, aa = O * ab), isNaN(T)) {
					switch (T = T || "center", T + "") {
						case "center":
							af = Math.floor((L - Y) / 2);
							break;
						case "right":
							af = L - Y
					}
				}
				if (isNaN(Q)) {
					switch (Q = Q || "center", Q + "") {
						case "center":
							R = Math.floor((M - aa) / 2);
							break;
						case "bottom":
							R = M - aa
					}
				}
				return {
					left: af,
					top: R,
					width: Y,
					height: aa,
					baseScale: 1,
					scale: {
						x: N,
						y: ab
					}
				}
			},
			_buildMap: function(Z, Q, T, aa) {
				for (var S, ab, P, r, V, ac, Y, U, M, ad, l, i = this.series, a = this.component.legend, m = this.component.dataRange, N = 0, s = Q.length; s > N; N++) {
					if (U = k.clone(Q[N]), M = {
							name: U.name,
							path: U.path,
							position: k.clone(U.position)
						}, ab = U.name, P = T[ab]) {
						V = [P], S = "";
						for (var O = 0, o = P.seriesIndex.length; o > O; O++) {
							V.push(i[P.seriesIndex[O]]), S += i[P.seriesIndex[O]].name + " ", a && this._showLegendSymbol[Z] && a.hasColor(i[P.seriesIndex[O]].name) && this.shapeList.push(new B({
								zlevel: this.getZlevelBase(),
								z: this.getZBase() + 1,
								position: k.clone(U.position),
								_mapType: Z,
								style: {
									x: U.textX + 3 + 7 * O,
									y: U.textY - 10,
									r: 3,
									color: a.getColor(i[P.seriesIndex[O]].name)
								},
								hoverable: !1
							}))
						}
						r = P.value
					} else {
						P = "-", S = "", V = [];
						for (var R in aa) {
							V.push(i[R])
						}
						r = "-"
					}
					switch (this.ecTheme.map && V.push(this.ecTheme.map), V.push(D), ac = m && !isNaN(r) ? m.getColor(r) : null, U.color = U.color || ac || this.getItemStyleColor(this.deepQuery(V, "itemStyle.normal.color"), P.seriesIndex, -1, P) || this.deepQuery(V, "itemStyle.normal.areaStyle.color"), U.strokeColor = U.strokeColor || this.deepQuery(V, "itemStyle.normal.borderColor"), U.lineWidth = U.lineWidth || this.deepQuery(V, "itemStyle.normal.borderWidth"), M.color = this.getItemStyleColor(this.deepQuery(V, "itemStyle.emphasis.color"), P.seriesIndex, -1, P) || this.deepQuery(V, "itemStyle.emphasis.areaStyle.color") || U.color, M.strokeColor = this.deepQuery(V, "itemStyle.emphasis.borderColor") || U.strokeColor, M.lineWidth = this.deepQuery(V, "itemStyle.emphasis.borderWidth") || U.lineWidth, U.brushType = M.brushType = U.brushType || "both", U.lineJoin = M.lineJoin = "round", U._name = M._name = ab, Y = this.deepQuery(V, "itemStyle.normal.label.textStyle"), l = {
						zlevel: this.getZlevelBase(),
						z: this.getZBase() + 1,
						position: k.clone(U.position),
						_mapType: Z,
						_geo: this.pos2geo(Z, [U.textX, U.textY]),
						style: {
							brushType: "fill",
							x: U.textX,
							y: U.textY,
							text: this.getLabelText(ab, r, V, "normal"),
							_name: ab,
							textAlign: "center",
							color: this.deepQuery(V, "itemStyle.normal.label.show") ? this.deepQuery(V, "itemStyle.normal.label.textStyle.color") : "rgba(0,0,0,0)",
							textFont: this.getFont(Y)
						}
					}, l._style = k.clone(l.style), l.highlightStyle = k.clone(l.style), this.deepQuery(V, "itemStyle.emphasis.label.show") ? (l.highlightStyle.text = this.getLabelText(ab, r, V, "emphasis"), l.highlightStyle.color = this.deepQuery(V, "itemStyle.emphasis.label.textStyle.color") || l.style.color, Y = this.deepQuery(V, "itemStyle.emphasis.label.textStyle") || Y, l.highlightStyle.textFont = this.getFont(Y)) : l.highlightStyle.color = "rgba(0,0,0,0)", ad = {
						zlevel: this.getZlevelBase(),
						z: this.getZBase(),
						position: k.clone(U.position),
						style: U,
						highlightStyle: M,
						_style: k.clone(U),
						_mapType: Z
					}, null != U.scale && (ad.scale = k.clone(U.scale)), l = new F(l), ad.style.shapeType) {
						case "rectangle":
							ad = new z(ad);
							break;
						case "line":
							ad = new x(ad);
							break;
						case "circle":
							ad = new B(ad);
							break;
						case "polygon":
							ad = new E(ad);
							break;
						case "ellipse":
							ad = new G(ad);
							break;
						default:
							ad = new K(ad), ad.buildPathArray && (ad.style.pathArray = ad.buildPathArray(ad.style.path))
					}(this._selectedMode[Z] && this._selected[ab] || P.selected && this._selected[ab] !== !1) && (l.style = l.highlightStyle, ad.style = ad.highlightStyle), l.clickable = ad.clickable = this._clickable[Z] && (null == P.clickable || P.clickable), this._selectedMode[Z] && (this._selected[ab] = null != this._selected[ab] ? this._selected[ab] : P.selected, this._mapTypeMap[ab] = Z, (null == P.selectable || P.selectable) && (ad.clickable = l.clickable = !0, ad.onclick = l.onclick = this.shapeHandler.onclick)), this._hoverable[Z] && (null == P.hoverable || P.hoverable) ? (l.hoverable = ad.hoverable = !0, ad.hoverConnect = l.id, l.hoverConnect = ad.id) : l.hoverable = ad.hoverable = !1, j.pack(l, {
						name: S,
						tooltip: this.deepQuery(V, "tooltip")
					}, 0, P, 0, ab), this.shapeList.push(l), j.pack(ad, {
						name: S,
						tooltip: this.deepQuery(V, "tooltip")
					}, 0, P, 0, ab), this.shapeList.push(ad)
				}
			},
			_buildMark: function(m, l) {
				this._seriesIndexToMapType = this._seriesIndexToMapType || {}, this.markAttachStyle = this.markAttachStyle || {};
				var o = [this._mapDataMap[m].transform.left, this._mapDataMap[m].transform.top];
				"none" == m && (o = [0, 0]);
				for (var a in l) {
					this._seriesIndexToMapType[a] = m, this.markAttachStyle[a] = {
						position: o,
						_mapType: m
					}, this.buildMark(a)
				}
			},
			getMarkCoord: function(i, a) {
				return a.geoCoord || q[a.name] ? this.geo2pos(this._seriesIndexToMapType[i], a.geoCoord || q[a.name]) : [0, 0]
			},
			getMarkGeo: function(a) {
				return a.geoCoord || q[a.name]
			},
			_nameChange: function(i, a) {
				return this._nameMap[i][a] || a
			},
			getLabelText: function(p, o, r, m) {
				var l = this.deepQuery(r, "itemStyle." + m + ".label.formatter");
				return l ? "function" == typeof l ? l.call(this.myChart, p, o) : "string" == typeof l ? (l = l.replace("{a}", "{a0}").replace("{b}", "{b0}"), l = l.replace("{a0}", p).replace("{b0}", o)) : void 0 : p
			},
			_findMapTypeByPos: function(L, p) {
				var N, m, l, M, y;
				for (var u in this._mapDataMap) {
					if (N = this._mapDataMap[u].transform, N && this._roamMap[u] && this._activeMapType[u] && (m = N.left, l = N.top, M = N.width, y = N.height, L >= m && m + M >= L && p >= l && l + y >= p)) {
						return u
					}
				}
			},
			__onmousewheel: function(Y) {
				if (!(this.shapeList.length <= 0)) {
					var N, R, T = Y.event,
						ac = A.getX(T),
						Q = A.getY(T),
						P = A.getDelta(T),
						O = Y.mapTypeControl;
					O || (O = {}, R = this._findMapTypeByPos(ac, Q), R && this._roamMap[R] && "move" != this._roamMap[R] && (O[R] = !0));
					var S = !1;
					for (R in O) {
						if (O[R]) {
							S = !0;
							var W = this._mapDataMap[R].transform,
								m = W.left,
								p = W.top,
								Z = W.width,
								aa = W.height,
								M = this.pos2geo(R, [ac - m, Q - p]);
							if (P > 0) {
								if (N = 1.2, null != this._scaleLimitMap[R].max && W.baseScale >= this._scaleLimitMap[R].max) {
									continue
								}
							} else {
								if (N = 1 / 1.2, null != this._scaleLimitMap[R].min && W.baseScale <= this._scaleLimitMap[R].min) {
									continue
								}
							}
							W.baseScale *= N, W.scale.x *= N, W.scale.y *= N, W.width = Z * N, W.height = aa * N, this._mapDataMap[R].hasRoam = !0, this._mapDataMap[R].transform = W, M = this.geo2pos(R, M), W.left -= M[0] - (ac - m), W.top -= M[1] - (Q - p), this._mapDataMap[R].transform = W, this.clearEffectShape(!0);
							for (var L = 0, X = this.shapeList.length; X > L; L++) {
								this.shapeList[L]._mapType == R && (this.shapeList[L].position[0] = W.left, this.shapeList[L].position[1] = W.top, "path" == this.shapeList[L].type || "symbol" == this.shapeList[L].type || "circle" == this.shapeList[L].type || "rectangle" == this.shapeList[L].type || "polygon" == this.shapeList[L].type || "line" == this.shapeList[L].type || "ellipse" == this.shapeList[L].type ? (this.shapeList[L].scale[0] *= N, this.shapeList[L].scale[1] *= N) : "mark-line" == this.shapeList[L].type ? (this.shapeList[L].style.pointListLength = void 0, this.shapeList[L].style.pointList = !1, M = this.geo2pos(R, this.shapeList[L]._geo[0]), this.shapeList[L].style.xStart = M[0], this.shapeList[L].style.yStart = M[1], M = this.geo2pos(R, this.shapeList[L]._geo[1]), this.shapeList[L]._x = this.shapeList[L].style.xEnd = M[0], this.shapeList[L]._y = this.shapeList[L].style.yEnd = M[1]) : "icon" == this.shapeList[L].type || "image" == this.shapeList[L].type ? (M = this.geo2pos(R, this.shapeList[L]._geo), this.shapeList[L].style.x = this.shapeList[L].style._x = M[0] - this.shapeList[L].style.width / 2, this.shapeList[L].style.y = this.shapeList[L].style._y = M[1] - this.shapeList[L].style.height / 2) : (M = this.geo2pos(R, this.shapeList[L]._geo), this.shapeList[L].style.x = M[0], this.shapeList[L].style.y = M[1], "text" == this.shapeList[L].type && (this.shapeList[L]._style.x = this.shapeList[L].highlightStyle.x = M[0], this.shapeList[L]._style.y = this.shapeList[L].highlightStyle.y = M[1])), this.zr.modShape(this.shapeList[L].id))
							}
						}
					}
					if (S) {
						A.stop(T), this.zr.refreshNextFrame();
						var ab = this;
						clearTimeout(this._refreshDelayTicket), this._refreshDelayTicket = setTimeout(function() {
							ab && ab.shapeList && ab.animationEffect()
						}, 100), this.messageCenter.dispatch(D.EVENT.MAP_ROAM, Y.event, {
							type: "scale"
						}, this.myChart)
					}
				}
			},
			__onmousedown: function(u) {
				if (!(this.shapeList.length <= 0)) {
					var p = u.target;
					if (!p || !p.draggable) {
						var L = u.event,
							m = A.getX(L),
							l = A.getY(L),
							y = this._findMapTypeByPos(m, l);
						if (y && this._roamMap[y] && "scale" != this._roamMap[y]) {
							this._mousedown = !0, this._mx = m, this._my = l, this._curMapType = y, this.zr.on(I.EVENT.MOUSEUP, this._onmouseup);
							var s = this;
							setTimeout(function() {
								s.zr.on(I.EVENT.MOUSEMOVE, s._onmousemove)
							}, 100)
						}
					}
				}
			},
			__onmousemove: function(u) {
				if (this._mousedown && this._isAlive) {
					var p = u.event,
						L = A.getX(p),
						m = A.getY(p),
						l = this._mapDataMap[this._curMapType].transform;
					l.hasRoam = !0, l.left -= this._mx - L, l.top -= this._my - m, this._mx = L, this._my = m, this._mapDataMap[this._curMapType].transform = l;
					for (var y = 0, s = this.shapeList.length; s > y; y++) {
						this.shapeList[y]._mapType == this._curMapType && (this.shapeList[y].position[0] = l.left, this.shapeList[y].position[1] = l.top, this.zr.modShape(this.shapeList[y].id))
					}
					this.messageCenter.dispatch(D.EVENT.MAP_ROAM, u.event, {
						type: "move"
					}, this.myChart), this.clearEffectShape(!0), this.zr.refreshNextFrame(), this._justMove = !0, A.stop(p)
				}
			},
			__onmouseup: function(i) {
				var a = i.event;
				this._mx = A.getX(a), this._my = A.getY(a), this._mousedown = !1;
				var l = this;
				setTimeout(function() {
					l._justMove && l.animationEffect(), l._justMove = !1, l.zr.un(I.EVENT.MOUSEMOVE, l._onmousemove), l.zr.un(I.EVENT.MOUSEUP, l._onmouseup)
				}, 120)
			},
			__onroamcontroller: function(O) {
				var Q = O.event;
				Q.zrenderX = this.zr.getWidth() / 2, Q.zrenderY = this.zr.getHeight() / 2;
				var u = O.mapTypeControl,
					M = 0,
					P = 0,
					p = O.step;
				switch (O.roamType) {
					case "scaleUp":
						return Q.zrenderDelta = 1, void this.__onmousewheel({
							event: Q,
							mapTypeControl: u
						});
					case "scaleDown":
						return Q.zrenderDelta = -1, void this.__onmousewheel({
							event: Q,
							mapTypeControl: u
						});
					case "up":
						M = -p;
						break;
					case "down":
						M = p;
						break;
					case "left":
						P = -p;
						break;
					case "right":
						P = p
				}
				var m, R;
				for (R in u) {
					this._mapDataMap[R] && this._activeMapType[R] && (m = this._mapDataMap[R].transform, m.hasRoam = !0, m.left -= P, m.top -= M, this._mapDataMap[R].transform = m)
				}
				for (var L = 0, N = this.shapeList.length; N > L; L++) {
					R = this.shapeList[L]._mapType, u[R] && this._activeMapType[R] && (m = this._mapDataMap[R].transform, this.shapeList[L].position[0] = m.left, this.shapeList[L].position[1] = m.top, this.zr.modShape(this.shapeList[L].id))
				}
				this.messageCenter.dispatch(D.EVENT.MAP_ROAM, O.event, {
					type: "move"
				}, this.myChart), this.clearEffectShape(!0), this.zr.refreshNextFrame(), clearTimeout(this.dircetionTimer);
				var y = this;
				this.dircetionTimer = setTimeout(function() {
					y.animationEffect()
				}, 150)
			},
			__ondrhoverlink: function(p) {
				for (var o, r, m = 0, l = this.shapeList.length; l > m; m++) {
					o = this.shapeList[m]._mapType, this._hoverLinkMap[o] && this._activeMapType[o] && (r = j.get(this.shapeList[m], "value"), null != r && r >= p.valueMin && r <= p.valueMax && this.zr.addHoverShape(this.shapeList[m]))
				}
			},
			onclick: function(L) {
				if (this.isClick && L.target && !this._justMove && "icon" != L.target.type) {
					this.isClick = !1;
					var p = L.target,
						N = p.style._name,
						m = this.shapeList.length,
						l = p._mapType || "";
					if ("single" == this._selectedMode[l]) {
						for (var M in this._selected) {
							if (this._selected[M] && this._mapTypeMap[M] == l) {
								for (var y = 0; m > y; y++) {
									this.shapeList[y].style._name == M && this.shapeList[y]._mapType == l && (this.shapeList[y].style = this.shapeList[y]._style, this.zr.modShape(this.shapeList[y].id))
								}
								M != N && (this._selected[M] = !1)
							}
						}
					}
					this._selected[N] = !this._selected[N];
					for (var y = 0; m > y; y++) {
						this.shapeList[y].style._name == N && this.shapeList[y]._mapType == l && (this.shapeList[y].style = this._selected[N] ? this.shapeList[y].highlightStyle : this.shapeList[y]._style, this.zr.modShape(this.shapeList[y].id))
					}
					this.messageCenter.dispatch(D.EVENT.MAP_SELECTED, L.event, {
						selected: this._selected,
						target: N
					}, this.myChart), this.zr.refreshNextFrame();
					var u = this;
					setTimeout(function() {
						u.zr.trigger(I.EVENT.MOUSEMOVE, L.event)
					}, 100)
				}
			},
			refresh: function(a) {
				a && (this.option = a, this.series = a.series), this._mapDataRequireCounter > 0 ? this.clear() : this.backupShapeList(), this._buildShape(), this.zr.refreshHover()
			},
			ondataRange: function(i, a) {
				this.component.dataRange && (this.refresh(), a.needRefresh = !0)
			},
			pos2geo: function(i, a) {
				return this._mapDataMap[i].transform ? this._mapDataMap[i].projection.pos2geo(this._mapDataMap[i].transform, a) : null
			},
			getGeoByPos: function(i, a) {
				if (!this._mapDataMap[i].transform) {
					return null
				}
				var l = [this._mapDataMap[i].transform.left, this._mapDataMap[i].transform.top];
				return a instanceof Array ? (a[0] -= l[0], a[1] -= l[1]) : (a.x -= l[0], a.y -= l[1]), this.pos2geo(i, a)
			},
			geo2pos: function(i, a) {
				return this._mapDataMap[i].transform ? this._mapDataMap[i].projection.geo2pos(this._mapDataMap[i].transform, a) : null
			},
			getPosByGeo: function(i, a) {
				if (!this._mapDataMap[i].transform) {
					return null
				}
				var l = this.geo2pos(i, a);
				return l[0] += this._mapDataMap[i].transform.left, l[1] += this._mapDataMap[i].transform.top, l
			},
			getMapPosition: function(a) {
				return this._mapDataMap[a].transform ? [this._mapDataMap[a].transform.left, this._mapDataMap[a].transform.top] : null
			},
			onbeforDispose: function() {
				this._isAlive = !1, this.zr.un(I.EVENT.MOUSEWHEEL, this._onmousewheel), this.zr.un(I.EVENT.MOUSEDOWN, this._onmousedown), this.messageCenter.unbind(D.EVENT.ROAMCONTROLLER, this._onroamcontroller), this.messageCenter.unbind(D.EVENT.DATA_RANGE_HOVERLINK, this._ondrhoverlink)
			}
		}, k.inherits(w, C), H("../chart").define("map", w), w
	}), h("zrender/shape/Path", ["require", "./Base", "./util/PathProxy", "../tool/util"], function(q) {
		var l = q("./Base"),
			v = q("./util/PathProxy"),
			k = v.PathSegment,
			j = function(a) {
				return Math.sqrt(a[0] * a[0] + a[1] * a[1])
			},
			u = function(i, a) {
				return (i[0] * a[0] + i[1] * a[1]) / (j(i) * j(a))
			},
			p = function(i, a) {
				return (i[0] * a[1] < i[1] * a[0] ? -1 : 1) * Math.acos(u(i, a))
			},
			m = function(a) {
				l.call(this, a)
			};
		return m.prototype = {
			type: "path",
			buildPathArray: function(aa, I, P) {
				if (!aa) {
					return []
				}
				I = I || 0, P = P || 0;
				var ae = aa,
					O = ["m", "M", "l", "L", "v", "V", "h", "H", "z", "Z", "c", "C", "q", "Q", "t", "T", "s", "S", "a", "A"];
				ae = ae.replace(/-/g, " -"), ae = ae.replace(/  /g, " "), ae = ae.replace(/ /g, ","), ae = ae.replace(/,,/g, ",");
				var M;
				for (M = 0; M < O.length; M++) {
					ae = ae.replace(new RegExp(O[M], "g"), "|" + O[M])
				}
				var J = ae.split("|"),
					R = [],
					T = 0,
					Q = 0;
				for (M = 1; M < J.length; M++) {
					var A = J[M],
						B = A.charAt(0);
					A = A.slice(1), A = A.replace(new RegExp("e,-", "g"), "e-");
					var ab = A.split(",");
					ab.length > 0 && "" === ab[0] && ab.shift();
					for (var N = 0; N < ab.length; N++) {
						ab[N] = parseFloat(ab[N])
					}
					for (; ab.length > 0 && !isNaN(ab[0]);) {
						var ac, H, E, Y, ad, Z, S, F, af = null,
							C = [],
							z = T,
							i = Q;
						switch (B) {
							case "l":
								T += ab.shift(), Q += ab.shift(), af = "L", C.push(T, Q);
								break;
							case "L":
								T = ab.shift(), Q = ab.shift(), C.push(T, Q);
								break;
							case "m":
								T += ab.shift(), Q += ab.shift(), af = "M", C.push(T, Q), B = "l";
								break;
							case "M":
								T = ab.shift(), Q = ab.shift(), af = "M", C.push(T, Q), B = "L";
								break;
							case "h":
								T += ab.shift(), af = "L", C.push(T, Q);
								break;
							case "H":
								T = ab.shift(), af = "L", C.push(T, Q);
								break;
							case "v":
								Q += ab.shift(), af = "L", C.push(T, Q);
								break;
							case "V":
								Q = ab.shift(), af = "L", C.push(T, Q);
								break;
							case "C":
								C.push(ab.shift(), ab.shift(), ab.shift(), ab.shift()), T = ab.shift(), Q = ab.shift(), C.push(T, Q);
								break;
							case "c":
								C.push(T + ab.shift(), Q + ab.shift(), T + ab.shift(), Q + ab.shift()), T += ab.shift(), Q += ab.shift(), af = "C", C.push(T, Q);
								break;
							case "S":
								ac = T, H = Q, E = R[R.length - 1], "C" === E.command && (ac = T + (T - E.points[2]), H = Q + (Q - E.points[3])), C.push(ac, H, ab.shift(), ab.shift()), T = ab.shift(), Q = ab.shift(), af = "C", C.push(T, Q);
								break;
							case "s":
								ac = T, H = Q, E = R[R.length - 1], "C" === E.command && (ac = T + (T - E.points[2]), H = Q + (Q - E.points[3])), C.push(ac, H, T + ab.shift(), Q + ab.shift()), T += ab.shift(), Q += ab.shift(), af = "C", C.push(T, Q);
								break;
							case "Q":
								C.push(ab.shift(), ab.shift()), T = ab.shift(), Q = ab.shift(), C.push(T, Q);
								break;
							case "q":
								C.push(T + ab.shift(), Q + ab.shift()), T += ab.shift(), Q += ab.shift(), af = "Q", C.push(T, Q);
								break;
							case "T":
								ac = T, H = Q, E = R[R.length - 1], "Q" === E.command && (ac = T + (T - E.points[0]), H = Q + (Q - E.points[1])), T = ab.shift(), Q = ab.shift(), af = "Q", C.push(ac, H, T, Q);
								break;
							case "t":
								ac = T, H = Q, E = R[R.length - 1], "Q" === E.command && (ac = T + (T - E.points[0]), H = Q + (Q - E.points[1])), T += ab.shift(), Q += ab.shift(), af = "Q", C.push(ac, H, T, Q);
								break;
							case "A":
								Y = ab.shift(), ad = ab.shift(), Z = ab.shift(), S = ab.shift(), F = ab.shift(), z = T, i = Q, T = ab.shift(), Q = ab.shift(), af = "A", C = this._convertPoint(z, i, T, Q, S, F, Y, ad, Z);
								break;
							case "a":
								Y = ab.shift(), ad = ab.shift(), Z = ab.shift(), S = ab.shift(), F = ab.shift(), z = T, i = Q, T += ab.shift(), Q += ab.shift(), af = "A", C = this._convertPoint(z, i, T, Q, S, F, Y, ad, Z)
						}
						for (var D = 0, G = C.length; G > D; D += 2) {
							C[D] += I, C[D + 1] += P
						}
						R.push(new k(af || B, C))
					}("z" === B || "Z" === B) && R.push(new k("z", []))
				}
				return R
			},
			_convertPoint: function(M, B, E, I, Q, C, G, J, F) {
				var o = F * (Math.PI / 180),
					r = Math.cos(o) * (M - E) / 2 + Math.sin(o) * (B - I) / 2,
					N = -1 * Math.sin(o) * (M - E) / 2 + Math.cos(o) * (B - I) / 2,
					D = r * r / (G * G) + N * N / (J * J);
				D > 1 && (G *= Math.sqrt(D), J *= Math.sqrt(D));
				var O = Math.sqrt((G * G * J * J - G * G * N * N - J * J * r * r) / (G * G * N * N + J * J * r * r));
				Q === C && (O *= -1), isNaN(O) && (O = 0);
				var A = O * G * N / J,
					w = O * -J * r / G,
					K = (M + E) / 2 + Math.cos(o) * A - Math.sin(o) * w,
					P = (B + I) / 2 + Math.sin(o) * A + Math.cos(o) * w,
					L = p([1, 0], [(r - A) / G, (N - w) / J]),
					H = [(r - A) / G, (N - w) / J],
					z = [(-1 * r - A) / G, (-1 * N - w) / J],
					R = p(H, z);
				return u(H, z) <= -1 && (R = Math.PI), u(H, z) >= 1 && (R = 0), 0 === C && R > 0 && (R -= 2 * Math.PI), 1 === C && 0 > R && (R += 2 * Math.PI), [K, P, G, J, L, R, o, C]
			},
			buildPath: function(S, E) {
				var J = E.path,
					O = E.x || 0,
					Y = E.y || 0;
				E.pathArray = E.pathArray || this.buildPathArray(J, O, Y);
				for (var I = E.pathArray, G = E.pointList = [], F = [], M = 0, P = I.length; P > M; M++) {
					"M" == I[M].command.toUpperCase() && (F.length > 0 && G.push(F), F = []);
					for (var K = I[M].points, w = 0, z = K.length; z > w; w += 2) {
						F.push([K[w], K[w + 1]])
					}
				}
				F.length > 0 && G.push(F);
				for (var M = 0, P = I.length; P > M; M++) {
					var T = I[M].command,
						K = I[M].points;
					switch (T) {
						case "L":
							S.lineTo(K[0], K[1]);
							break;
						case "M":
							S.moveTo(K[0], K[1]);
							break;
						case "C":
							S.bezierCurveTo(K[0], K[1], K[2], K[3], K[4], K[5]);
							break;
						case "Q":
							S.quadraticCurveTo(K[0], K[1], K[2], K[3]);
							break;
						case "A":
							var H = K[0],
								W = K[1],
								D = K[2],
								B = K[3],
								Q = K[4],
								X = K[5],
								R = K[6],
								N = K[7],
								C = D > B ? D : B,
								Z = D > B ? 1 : D / B,
								A = D > B ? B / D : 1;
							S.translate(H, W), S.rotate(R), S.scale(Z, A), S.arc(0, 0, C, Q, Q + X, 1 - N), S.scale(1 / Z, 1 / A), S.rotate(-R), S.translate(-H, -W);
							break;
						case "z":
							S.closePath()
					}
				}
			},
			getRect: function(F) {
				if (F.__rect) {
					return F.__rect
				}
				var H;
				H = "stroke" == F.brushType || "fill" == F.brushType ? F.lineWidth || 1 : 0;
				for (var y = Number.MAX_VALUE, D = Number.MIN_VALUE, G = Number.MAX_VALUE, x = Number.MIN_VALUE, w = F.x || 0, I = F.y || 0, C = F.pathArray || this.buildPathArray(F.path), E = 0; E < C.length; E++) {
					for (var A = C[E].points, z = 0; z < A.length; z++) {
						z % 2 === 0 ? (A[z] + w < y && (y = A[z]), A[z] + w > D && (D = A[z])) : (A[z] + I < G && (G = A[z]), A[z] + I > x && (x = A[z]))
					}
				}
				var B;
				return B = y === Number.MAX_VALUE || D === Number.MIN_VALUE || G === Number.MAX_VALUE || x === Number.MIN_VALUE ? {
					x: 0,
					y: 0,
					width: 0,
					height: 0
				} : {
					x: Math.round(y - H / 2),
					y: Math.round(G - H / 2),
					width: D - y + H,
					height: x - G + H
				}, F.__rect = B, B
			}
		}, q("../tool/util").inherits(m, l), m
	}), h("zrender/shape/Ellipse", ["require", "./Base", "../tool/util"], function(i) {
		var a = i("./Base"),
			j = function(k) {
				a.call(this, k)
			};
		return j.prototype = {
			type: "ellipse",
			buildPath: function(v, x) {
				var p = 0.5522848,
					u = x.x,
					w = x.y,
					m = x.a,
					k = x.b,
					y = m * p,
					q = k * p;
				v.moveTo(u - m, w), v.bezierCurveTo(u - m, w - q, u - y, w - k, u, w - k), v.bezierCurveTo(u + y, w - k, u + m, w - q, u + m, w), v.bezierCurveTo(u + m, w + q, u + y, w + k, u, w + k), v.bezierCurveTo(u - y, w + k, u - m, w + q, u - m, w), v.closePath()
			},
			getRect: function(l) {
				if (l.__rect) {
					return l.__rect
				}
				var k;
				return k = "stroke" == l.brushType || "fill" == l.brushType ? l.lineWidth || 1 : 0, l.__rect = {
					x: Math.round(l.x - l.a - k / 2),
					y: Math.round(l.y - l.b - k / 2),
					width: 2 * l.a + k,
					height: 2 * l.b + k
				}, l.__rect
			}
		}, i("../tool/util").inherits(j, a), j
	}), h("echarts/component/roamController", ["require", "./base", "zrender/shape/Rectangle", "zrender/shape/Sector", "zrender/shape/Circle", "../config", "zrender/tool/util", "zrender/tool/color", "zrender/tool/event", "../component"], function(v) {
		function x(A, s, n, l, B) {
			if (l.roamController && l.roamController.show) {
				if (!l.roamController.mapTypeControl) {
					return void console.error("option.roamController.mapTypeControl has not been defined.")
				}
				m.call(this, A, s, n, l, B), this.rcOption = l.roamController;
				var z = this;
				this._drictionMouseDown = function(a) {
					return z.__drictionMouseDown(a)
				}, this._drictionMouseUp = function(a) {
					return z.__drictionMouseUp(a)
				}, this._drictionMouseMove = function(a) {
					return z.__drictionMouseMove(a)
				}, this._drictionMouseOut = function(a) {
					return z.__drictionMouseOut(a)
				}, this._scaleHandler = function(a) {
					return z.__scaleHandler(a)
				}, this.refresh(l)
			}
		}
		var m = v("./base"),
			q = v("zrender/shape/Rectangle"),
			w = v("zrender/shape/Sector"),
			k = v("zrender/shape/Circle"),
			j = v("../config");
		j.roamController = {
			zlevel: 0,
			z: 4,
			show: !0,
			x: "left",
			y: "top",
			width: 80,
			height: 120,
			backgroundColor: "rgba(0,0,0,0)",
			borderColor: "#ccc",
			borderWidth: 0,
			padding: 5,
			handleColor: "#6495ed",
			fillerColor: "#fff",
			step: 15,
			mapTypeControl: null
		};
		var y = v("zrender/tool/util"),
			p = v("zrender/tool/color"),
			u = v("zrender/tool/event");
		return x.prototype = {
			type: j.COMPONENT_TYPE_ROAMCONTROLLER,
			_buildShape: function() {
				if (this.rcOption.show) {
					this._itemGroupLocation = this._getItemGroupLocation(), this._buildBackground(), this._buildItem();
					for (var i = 0, a = this.shapeList.length; a > i; i++) {
						this.zr.addShape(this.shapeList[i])
					}
				}
			},
			_buildItem: function() {
				this.shapeList.push(this._getDirectionShape("up")), this.shapeList.push(this._getDirectionShape("down")), this.shapeList.push(this._getDirectionShape("left")), this.shapeList.push(this._getDirectionShape("right")), this.shapeList.push(this._getScaleShape("scaleUp")), this.shapeList.push(this._getScaleShape("scaleDown"))
			},
			_getDirectionShape: function(r) {
				var l = this._itemGroupLocation.r,
					z = this._itemGroupLocation.x + l,
					a = this._itemGroupLocation.y + l,
					s = {
						zlevel: this.getZlevelBase(),
						z: this.getZBase(),
						style: {
							x: z,
							y: a,
							r: l,
							startAngle: -45,
							endAngle: 45,
							color: this.rcOption.handleColor,
							text: ">",
							textX: z + l / 2 + 4,
							textY: a - 0.5,
							textAlign: "center",
							textBaseline: "middle",
							textPosition: "specific",
							textColor: this.rcOption.fillerColor,
							textFont: Math.floor(l / 2) + "px arial"
						},
						highlightStyle: {
							color: p.lift(this.rcOption.handleColor, -0.2),
							brushType: "fill"
						},
						clickable: !0
					};
				switch (r) {
					case "up":
						s.rotation = [Math.PI / 2, z, a];
						break;
					case "left":
						s.rotation = [Math.PI, z, a];
						break;
					case "down":
						s.rotation = [-Math.PI / 2, z, a]
				}
				return s = new w(s), s._roamType = r, s.onmousedown = this._drictionMouseDown, s.onmouseup = this._drictionMouseUp, s.onmousemove = this._drictionMouseMove, s.onmouseout = this._drictionMouseOut, s
			},
			_getScaleShape: function(C) {
				var z = this._itemGroupLocation.width,
					D = this._itemGroupLocation.height - z;
				D = 0 > D ? 20 : D;
				var o = Math.min(z / 2 - 5, D) / 2,
					l = this._itemGroupLocation.x + ("scaleDown" === C ? z - o : o),
					B = this._itemGroupLocation.y + this._itemGroupLocation.height - o,
					A = {
						zlevel: this.getZlevelBase(),
						z: this.getZBase(),
						style: {
							x: l,
							y: B,
							r: o,
							color: this.rcOption.handleColor,
							text: "scaleDown" === C ? "-" : "+",
							textX: l,
							textY: B - 2,
							textAlign: "center",
							textBaseline: "middle",
							textPosition: "specific",
							textColor: this.rcOption.fillerColor,
							textFont: Math.floor(o) + "px verdana"
						},
						highlightStyle: {
							color: p.lift(this.rcOption.handleColor, -0.2),
							brushType: "fill"
						},
						clickable: !0
					};
				return A = new k(A), A._roamType = C, A.onmousedown = this._scaleHandler, A
			},
			_buildBackground: function() {
				var a = this.reformCssArray(this.rcOption.padding);
				this.shapeList.push(new q({
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					hoverable: !1,
					style: {
						x: this._itemGroupLocation.x - a[3],
						y: this._itemGroupLocation.y - a[0],
						width: this._itemGroupLocation.width + a[3] + a[1],
						height: this._itemGroupLocation.height + a[0] + a[2],
						brushType: 0 === this.rcOption.borderWidth ? "fill" : "both",
						color: this.rcOption.backgroundColor,
						strokeColor: this.rcOption.borderColor,
						lineWidth: this.rcOption.borderWidth
					}
				}))
			},
			_getItemGroupLocation: function() {
				var B, z = this.reformCssArray(this.rcOption.padding),
					D = this.rcOption.width,
					s = this.rcOption.height,
					l = this.zr.getWidth(),
					C = this.zr.getHeight();
				switch (this.rcOption.x) {
					case "center":
						B = Math.floor((l - D) / 2);
						break;
					case "left":
						B = z[3] + this.rcOption.borderWidth;
						break;
					case "right":
						B = l - D - z[1] - z[3] - 2 * this.rcOption.borderWidth;
						break;
					default:
						B = this.parsePercent(this.rcOption.x, l)
				}
				var A;
				switch (this.rcOption.y) {
					case "top":
						A = z[0] + this.rcOption.borderWidth;
						break;
					case "bottom":
						A = C - s - z[0] - z[2] - 2 * this.rcOption.borderWidth;
						break;
					case "center":
						A = Math.floor((C - s) / 2);
						break;
					default:
						A = this.parsePercent(this.rcOption.y, C)
				}
				return {
					x: B,
					y: A,
					r: D / 2,
					width: D,
					height: s
				}
			},
			__drictionMouseDown: function(a) {
				this.mousedown = !0, this._drictionHandlerOn(a)
			},
			__drictionMouseUp: function(a) {
				this.mousedown = !1, this._drictionHandlerOff(a)
			},
			__drictionMouseMove: function(a) {
				this.mousedown && this._drictionHandlerOn(a)
			},
			__drictionMouseOut: function(a) {
				this._drictionHandlerOff(a)
			},
			_drictionHandlerOn: function(i) {
				this._dispatchEvent(i.event, i.target._roamType), clearInterval(this.dircetionTimer);
				var a = this;
				this.dircetionTimer = setInterval(function() {
					a._dispatchEvent(i.event, i.target._roamType)
				}, 100), u.stop(i.event)
			},
			_drictionHandlerOff: function() {
				clearInterval(this.dircetionTimer)
			},
			__scaleHandler: function(a) {
				this._dispatchEvent(a.event, a.target._roamType), u.stop(a.event)
			},
			_dispatchEvent: function(i, a) {
				this.messageCenter.dispatch(j.EVENT.ROAMCONTROLLER, i, {
					roamType: a,
					mapTypeControl: this.rcOption.mapTypeControl,
					step: this.rcOption.step
				}, this.myChart)
			},
			refresh: function(a) {
				a && (this.option = a || this.option, this.option.roamController = this.reformOption(this.option.roamController), this.rcOption = this.option.roamController), this.clear(), this._buildShape()
			}
		}, y.inherits(x, m), v("../component").define("roamController", x), x
	}), h("echarts/util/mapData/params", ["require"], function(k) {
		function j(x) {
			if (!x.UTF8Encoding) {
				return x
			}
			for (var z = x.features, v = 0; v < z.length; v++) {
				for (var y = z[v], p = y.geometry.coordinates, n = y.geometry.encodeOffsets, A = 0; A < p.length; A++) {
					var u = p[A];
					if ("Polygon" === y.geometry.type) {
						p[A] = l(u, n[A])
					} else {
						if ("MultiPolygon" === y.geometry.type) {
							for (var w = 0; w < u.length; w++) {
								var q = u[w];
								u[w] = l(q, n[A][w])
							}
						}
					}
				}
			}
			return x.UTF8Encoding = !1, x
		}

		function l(w, q) {
			for (var y = [], p = q[0], m = q[1], x = 0; x < w.length; x += 2) {
				var v = w.charCodeAt(x) - 64,
					u = w.charCodeAt(x + 1) - 64;
				v = v >> 1 ^ -(1 & v), u = u >> 1 ^ -(1 & u), v += p, u += m, p = v, m = u, y.push([v / 1024, u / 1024])
			}
			return y
		}
		var a = {
			none: {
				getGeoJson: function(i) {
					i({
						type: "FeatureCollection",
						features: [{
							type: "Feature",
							geometry: {
								coordinates: [],
								encodeOffsets: [],
								type: "Polygon"
							},
							properties: {}
						}]
					})
				}
			},
			world: {
				getGeoJson: function(e) {
					k(["./geoJson/world_geo"], function(i) {
						e(j(i))
					})
				}
			},
			china: {
				getGeoJson: function(e) {
					k(["./geoJson/china_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"南海诸岛": {
				textCoord: [126, 25],
				getPath: function(x, z) {
					for (var q = [
							[
								[0, 3.5],
								[7, 11.2],
								[15, 11.9],
								[30, 7],
								[42, 0.7],
								[52, 0.7],
								[56, 7.7],
								[59, 0.7],
								[64, 0.7],
								[64, 0],
								[5, 0],
								[0, 3.5]
							],
							[
								[13, 16.1],
								[19, 14.7],
								[16, 21.7],
								[11, 23.1],
								[13, 16.1]
							],
							[
								[12, 32.2],
								[14, 38.5],
								[15, 38.5],
								[13, 32.2],
								[12, 32.2]
							],
							[
								[16, 47.6],
								[12, 53.2],
								[13, 53.2],
								[18, 47.6],
								[16, 47.6]
							],
							[
								[6, 64.4],
								[8, 70],
								[9, 70],
								[8, 64.4],
								[6, 64.4]
							],
							[
								[23, 82.6],
								[29, 79.8],
								[30, 79.8],
								[25, 82.6],
								[23, 82.6]
							],
							[
								[37, 70.7],
								[43, 62.3],
								[44, 62.3],
								[39, 70.7],
								[37, 70.7]
							],
							[
								[48, 51.1],
								[51, 45.5],
								[53, 45.5],
								[50, 51.1],
								[48, 51.1]
							],
							[
								[51, 35],
								[51, 28.7],
								[53, 28.7],
								[53, 35],
								[51, 35]
							],
							[
								[52, 22.4],
								[55, 17.5],
								[56, 17.5],
								[53, 22.4],
								[52, 22.4]
							],
							[
								[58, 12.6],
								[62, 7],
								[63, 7],
								[60, 12.6],
								[58, 12.6]
							],
							[
								[0, 3.5],
								[0, 93.1],
								[64, 93.1],
								[64, 0],
								[63, 0],
								[63, 92.4],
								[1, 92.4],
								[1, 3.5],
								[0, 3.5]
							]
						], v = "", y = x[0], p = x[1], m = 0, A = q.length; A > m; m++) {
						v += "M " + ((q[m][0][0] * z + y).toFixed(2) - 0) + " " + ((q[m][0][1] * z + p).toFixed(2) - 0) + " ";
						for (var u = 1, w = q[m].length; w > u; u++) {
							v += "L " + ((q[m][u][0] * z + y).toFixed(2) - 0) + " " + ((q[m][u][1] * z + p).toFixed(2) - 0) + " "
						}
					}
					return v + " Z"
				}
			},
			"新疆": {
				getGeoJson: function(e) {
					k(["./geoJson/xin_jiang_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"西藏": {
				getGeoJson: function(e) {
					k(["./geoJson/xi_zang_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"内蒙古": {
				getGeoJson: function(e) {
					k(["./geoJson/nei_meng_gu_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"青海": {
				getGeoJson: function(e) {
					k(["./geoJson/qing_hai_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"四川": {
				getGeoJson: function(e) {
					k(["./geoJson/si_chuan_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"黑龙江": {
				getGeoJson: function(e) {
					k(["./geoJson/hei_long_jiang_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"甘肃": {
				getGeoJson: function(e) {
					k(["./geoJson/gan_su_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"云南": {
				getGeoJson: function(e) {
					k(["./geoJson/yun_nan_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"广西": {
				getGeoJson: function(e) {
					k(["./geoJson/guang_xi_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"湖南": {
				getGeoJson: function(e) {
					k(["./geoJson/hu_nan_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"陕西": {
				getGeoJson: function(e) {
					k(["./geoJson/shan_xi_1_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"广东": {
				getGeoJson: function(e) {
					k(["./geoJson/guang_dong_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"吉林": {
				getGeoJson: function(e) {
					k(["./geoJson/ji_lin_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"河北": {
				getGeoJson: function(e) {
					k(["./geoJson/he_bei_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"湖北": {
				getGeoJson: function(e) {
					k(["./geoJson/hu_bei_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"贵州": {
				getGeoJson: function(e) {
					k(["./geoJson/gui_zhou_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"山东": {
				getGeoJson: function(e) {
					k(["./geoJson/shan_dong_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"江西": {
				getGeoJson: function(e) {
					k(["./geoJson/jiang_xi_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"河南": {
				getGeoJson: function(e) {
					k(["./geoJson/he_nan_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"辽宁": {
				getGeoJson: function(e) {
					k(["./geoJson/liao_ning_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"山西": {
				getGeoJson: function(e) {
					k(["./geoJson/shan_xi_2_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"安徽": {
				getGeoJson: function(e) {
					k(["./geoJson/an_hui_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"福建": {
				getGeoJson: function(e) {
					k(["./geoJson/fu_jian_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"浙江": {
				getGeoJson: function(e) {
					k(["./geoJson/zhe_jiang_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"江苏": {
				getGeoJson: function(e) {
					k(["./geoJson/jiang_su_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"重庆": {
				getGeoJson: function(e) {
					k(["./geoJson/chong_qing_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"宁夏": {
				getGeoJson: function(e) {
					k(["./geoJson/ning_xia_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"海南": {
				getGeoJson: function(e) {
					k(["./geoJson/hai_nan_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"台湾": {
				getGeoJson: function(e) {
					k(["./geoJson/tai_wan_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"北京": {
				getGeoJson: function(e) {
					k(["./geoJson/bei_jing_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"天津": {
				getGeoJson: function(e) {
					k(["./geoJson/tian_jin_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"上海": {
				getGeoJson: function(e) {
					k(["./geoJson/shang_hai_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"香港": {
				getGeoJson: function(e) {
					k(["./geoJson/xiang_gang_geo"], function(i) {
						e(j(i))
					})
				}
			},
			"澳门": {
				getGeoJson: function(e) {
					k(["./geoJson/ao_men_geo"], function(i) {
						e(j(i))
					})
				}
			}
		};
		return {
			decode: j,
			params: a
		}
	}), h("echarts/util/mapData/textFixed", [], function() {
		return {
			"广东": [0, -10],
			"香港": [10, 10],
			"澳门": [-10, 18],
			"黑龙江": [0, 20],
			"天津": [5, 5],
			"深圳市": [-35, 0],
			"红河哈尼族彝族自治州": [0, 20],
			"楚雄彝族自治州": [-5, 15],
			"石河子市": [-5, 5],
			"五家渠市": [0, -10],
			"昌吉回族自治州": [10, 10],
			"昌江黎族自治县": [0, 20],
			"陵水黎族自治县": [0, 20],
			"东方市": [0, 20],
			"渭南市": [0, 20]
		}
	}), h("echarts/util/mapData/geoCoord", [], function() {
		return {
			Russia: [100, 60],
			"United States of America": [-99, 38]
		}
	}), h("echarts/util/projection/svg", ["require", "zrender/shape/Path"], function(x) {
		function z(a) {
			return parseFloat(a || 0)
		}

		function p(t) {
			for (var C = t.firstChild;
				"svg" != C.nodeName.toLowerCase() || 1 != C.nodeType;) {
				C = C.nextSibling
			}
			var m = z(C.getAttribute("x")),
				l = z(C.getAttribute("y")),
				B = z(C.getAttribute("width")),
				s = z(C.getAttribute("height"));
			return {
				left: m,
				top: l,
				width: B,
				height: s
			}
		}

		function v(r, o) {
			function s(C) {
				var i = C.tagName;
				if (q[i]) {
					var D = q[i](C, m);
					D && (D.scale = m, D.properties = {
						name: C.getAttribute("name") || ""
					}, D.id = C.id, A(D, C), l.push(D))
				}
				for (var B = C.childNodes, a = 0, n = B.length; n > a; a++) {
					s(B[a])
				}
			}
			var m = [o.scale.x, o.scale.y],
				l = [];
			return s(r), l
		}

		function y(i, a) {
			var l = a instanceof Array ? [1 * a[0], 1 * a[1]] : [1 * a.x, 1 * a.y];
			return [l[0] / i.scale.x, l[1] / i.scale.y]
		}

		function k(i, a) {
			var l = a instanceof Array ? [1 * a[0], 1 * a[1]] : [1 * a.x, 1 * a.y];
			return [l[0] * i.scale.x, l[1] * i.scale.y]
		}

		function j(a) {
			return a.replace(/^\s\s*/, "").replace(/\s\s*$/, "")
		}

		function A(s, r) {
			var C = r.getAttribute("fill"),
				m = r.getAttribute("stroke"),
				l = r.getAttribute("stroke-width"),
				B = r.getAttribute("opacity");
			C && "none" != C ? (s.color = C, m ? (s.brushType = "both", s.strokeColor = m) : s.brushType = "fill") : m && "none" != m && (s.strokeColor = m, s.brushType = "stroke"), l && "none" != l && (s.lineWidth = parseFloat(l)), B && "none" != B && (s.opacity = parseFloat(B))
		}

		function u(s) {
			for (var r = j(s).replace(/,/g, " ").split(/\s+/), C = [], m = 0; m < r.length;) {
				var l = parseFloat(r[m++]),
					B = parseFloat(r[m++]);
				C.push([l, B])
			}
			return C
		}
		var w = x("zrender/shape/Path"),
			q = {
				path: function(m, l) {
					var o = m.getAttribute("d"),
						a = w.prototype.getRect({
							path: o
						});
					return {
						shapeType: "path",
						path: o,
						cp: [(a.x + a.width / 2) * l[0], (a.y + a.height / 2) * l[1]]
					}
				},
				rect: function(t, C) {
					var m = z(t.getAttribute("x")),
						l = z(t.getAttribute("y")),
						B = z(t.getAttribute("width")),
						s = z(t.getAttribute("height"));
					return {
						shapeType: "rectangle",
						x: m,
						y: l,
						width: B,
						height: s,
						cp: [(m + B / 2) * C[0], (l + s / 2) * C[1]]
					}
				},
				line: function(t, C) {
					var m = z(t.getAttribute("x1")),
						l = z(t.getAttribute("y1")),
						B = z(t.getAttribute("x2")),
						s = z(t.getAttribute("y2"));
					return {
						shapeType: "line",
						xStart: m,
						yStart: l,
						xEnd: B,
						yEnd: s,
						cp: [0.5 * (m + B) * C[0], 0.5 * (l + s) * C[1]]
					}
				},
				circle: function(r, t) {
					var m = z(r.getAttribute("cx")),
						l = z(r.getAttribute("cy")),
						s = z(r.getAttribute("r"));
					return {
						shapeType: "circle",
						x: m,
						y: l,
						r: s,
						cp: [m * t[0], l * t[1]]
					}
				},
				ellipse: function(s, r) {
					var C = parseFloat(s.getAttribute("cx") || 0),
						m = parseFloat(s.getAttribute("cy") || 0),
						l = parseFloat(s.getAttribute("rx") || 0),
						B = parseFloat(s.getAttribute("ry") || 0);
					return {
						shapeType: "ellipse",
						x: C,
						y: m,
						a: l,
						b: B,
						cp: [C * r[0], m * r[1]]
					}
				},
				polygon: function(C, s) {
					var E = C.getAttribute("points"),
						m = [1 / 0, 1 / 0],
						l = [-1 / 0, -1 / 0];
					if (E) {
						E = u(E);
						for (var D = 0; D < E.length; D++) {
							var B = E[D];
							m[0] = Math.min(B[0], m[0]), m[1] = Math.min(B[1], m[1]), l[0] = Math.max(B[0], l[0]), l[1] = Math.max(B[1], l[1])
						}
						return {
							shapeType: "polygon",
							pointList: E,
							cp: [(m[0] + l[0]) / 2 * s[0], (m[1] + l[1]) / 2 * s[0]]
						}
					}
				},
				polyline: function(i, a) {
					var l = q.polygon(i, a);
					return l
				}
			};
		return {
			getBbox: p,
			geoJson2Path: v,
			pos2geo: y,
			geo2pos: k
		}
	}), h("echarts/util/projection/normal", [], function() {
		function p(a, i) {
			return i = i || {}, a.srcSize || l(a, i), a.srcSize
		}

		function l(y, A) {
			A = A || {}, m.xmin = 360, m.xmax = -360, m.ymin = 180, m.ymax = -180;
			for (var u, w, z = y.features, r = 0, B = z.length; B > r; r++) {
				if (w = z[r], !w.properties.name || !A[w.properties.name]) {
					switch (w.type) {
						case "Feature":
							m[w.geometry.type](w.geometry.coordinates);
							break;
						case "GeometryCollection":
							u = w.geometries;
							for (var v = 0, x = u.length; x > v; v++) {
								m[u[v].type](u[v].coordinates)
							}
					}
				}
			}
			return y.srcSize = {
				left: 1 * m.xmin.toFixed(4),
				top: 1 * m.ymin.toFixed(4),
				width: 1 * (m.xmax - m.xmin).toFixed(4),
				height: 1 * (m.ymax - m.ymin).toFixed(4)
			}, y
		}

		function s(D, v, B) {
			function H(i, a) {
				F = i.type, I = i.coordinates, q._bbox = {
					xmin: 360,
					xmax: -360,
					ymin: 180,
					ymax: -180
				}, G = q[F](I), x.push({
					path: G,
					cp: q.makePoint(a.properties.cp ? a.properties.cp : [(q._bbox.xmin + q._bbox.xmax) / 2, (q._bbox.ymin + q._bbox.ymax) / 2]),
					properties: a.properties,
					id: a.id
				})
			}
			B = B || {}, q.scale = null, q.offset = null, D.srcSize || l(D, B), v.offset = {
				x: D.srcSize.left,
				y: D.srcSize.top,
				left: v.OffsetLeft || 0,
				top: v.OffsetTop || 0
			}, q.scale = v.scale, q.offset = v.offset;
			for (var o, J, A, C = D.features, x = [], w = 0, z = C.length; z > w; w++) {
				if (A = C[w], !A.properties.name || !B[A.properties.name]) {
					if ("Feature" == A.type) {
						H(A.geometry, A)
					} else {
						if ("GeometryCollection" == A.type) {
							o = A.geometries;
							for (var E = 0, t = o.length; t > E; E++) {
								J = o[E], H(J, J)
							}
						}
					}
				}
			}
			var F, I, G;
			return x
		}

		function k(r, o) {
			var u, a;
			return o instanceof Array ? (u = 1 * o[0], a = 1 * o[1]) : (u = 1 * o.x, a = 1 * o.y), u = u / r.scale.x + r.offset.x - 168.5, u = u > 180 ? u - 360 : u, a = 90 - (a / r.scale.y + r.offset.y), [u, a]
		}

		function j(i, a) {
			return q.offset = i.offset, q.scale = i.scale, q.makePoint(a instanceof Array ? [1 * a[0], 1 * a[1]] : [1 * a.x, 1 * a.y])
		}
		var q = {
				formatPoint: function(a) {
					return [(a[0] < -168.5 && a[1] > 63.8 ? a[0] + 360 : a[0]) + 168.5, 90 - a[1]]
				},
				makePoint: function(v) {
					var u = this,
						w = u.formatPoint(v);
					u._bbox.xmin > v[0] && (u._bbox.xmin = v[0]), u._bbox.xmax < v[0] && (u._bbox.xmax = v[0]), u._bbox.ymin > v[1] && (u._bbox.ymin = v[1]), u._bbox.ymax < v[1] && (u._bbox.ymax = v[1]);
					var r = (w[0] - q.offset.x) * q.scale.x + q.offset.left,
						o = (w[1] - q.offset.y) * q.scale.y + q.offset.top;
					return [r, o]
				},
				Point: function(a) {
					return a = this.makePoint(a), a.join(",")
				},
				LineString: function(v) {
					for (var u, w = "", r = 0, o = v.length; o > r; r++) {
						u = q.makePoint(v[r]), w = 0 === r ? "M" + u.join(",") : w + "L" + u.join(",")
					}
					return w
				},
				Polygon: function(r) {
					for (var o = "", u = 0, a = r.length; a > u; u++) {
						o = o + q.LineString(r[u]) + "z"
					}
					return o
				},
				MultiPoint: function(r) {
					for (var o = [], u = 0, a = r.length; a > u; u++) {
						o.push(q.Point(r[u]))
					}
					return o
				},
				MultiLineString: function(r) {
					for (var o = "", u = 0, a = r.length; a > u; u++) {
						o += q.LineString(r[u])
					}
					return o
				},
				MultiPolygon: function(r) {
					for (var o = "", u = 0, a = r.length; a > u; u++) {
						o += q.Polygon(r[u])
					}
					return o
				}
			},
			m = {
				formatPoint: q.formatPoint,
				makePoint: function(v) {
					var u = this,
						w = u.formatPoint(v),
						r = w[0],
						o = w[1];
					u.xmin > r && (u.xmin = r), u.xmax < r && (u.xmax = r), u.ymin > o && (u.ymin = o), u.ymax < o && (u.ymax = o)
				},
				Point: function(a) {
					this.makePoint(a)
				},
				LineString: function(i) {
					for (var a = 0, o = i.length; o > a; a++) {
						this.makePoint(i[a])
					}
				},
				Polygon: function(i) {
					for (var a = 0, o = i.length; o > a; a++) {
						this.LineString(i[a])
					}
				},
				MultiPoint: function(i) {
					for (var a = 0, o = i.length; o > a; a++) {
						this.Point(i[a])
					}
				},
				MultiLineString: function(i) {
					for (var a = 0, o = i.length; o > a; a++) {
						this.LineString(i[a])
					}
				},
				MultiPolygon: function(i) {
					for (var a = 0, o = i.length; o > a; a++) {
						this.Polygon(i[a])
					}
				}
			};
		return {
			getBbox: p,
			geoJson2Path: s,
			pos2geo: k,
			geo2pos: j
		}
	}), h("echarts/util/mapData/geoJson/an_hui_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "3415",
				properties: {
					name: "六安市",
					cp: [116.3123, 31.8329],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nJUXUV°UÑnU@mlLVaVln@@bn@VU@xlb@lLnKlVIJUVxnI@lVL@b°VX@bxnVVUnVVnU@kX@VwV@al¥UUnUWa@@wĸULU¥lKUa@aUI@alLVaU¯anWkUKm@XV@VaXlW@aU_UWVUI¯@ma¯W¯I@UU@WWU@U@@UU@VkV@@WUUm@UaU@lK@IUKL@KWmXUWaXI@@a@a@U@U@KV¥lwk°b²JVIVKlV@UXlaUl`UVLVVVUJU@Lnm@_VK@KUIW@J@Xk@WW@UmmXmWk@kK@aUUVmmkUwUmWL@WmU@UJmUULkKWakLWVkIlwULW@X°lUJ@°ULWVwmJ@bmb¯Vkm@@WkWm¯wL@lkXWmXym¯UImJUbkV@Vn¯@V@lUb@mk@maUxmlUbULWn@JLmKUkWKkwUKbmXWxkVUKmLkVV@JUUWL@xkJUUV@X@VVlUbVX@xk¤x¼xWxnnn@Þ¼JVb°aVn@mlnXUJlbVlkz@lUlXJmxVxXnWxXÈWlU@UxU@VX@xUL@UÆmLnV@lWXk@@JlbXblnlJ"],
					encodeOffsets: [
						[118710, 33351]
					]
				}
			}, {
				type: "Feature",
				id: "3408",
				properties: {
					name: "安庆市",
					cp: [116.7517, 30.5255],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@n°znWXlW@kK°xXnl@Xn@l°Una@anIxXUVK@¯VIkW¯X@VKxklJXUlKXblLVKnVVIV@Xn@XKVnVxlnnUlmV@²óUkVlWbln@VVVIn@lw@WVIXblV@ÈxaUaVIVVnKVLKln@b²K@»U£ÑķġÝÅbKa@Im@Û@kWÓkkmKÅnóJUÅ£W@wĕ@wĉţ¯¯UkK±l¯U¥UÑkÝUķ»Ý¥¯JIUVbUl¯ÈV¼VJU¼Vb@bkLUl@VJ@bUXÇ@lkVmXmKkLVxVL@VkVVVlzWkbmLUUUbVbUVlÒnJlUnLllUL@bUVxlLXVÆ¦ÈVU¦WJ"],
					encodeOffsets: [
						[118834, 31759]
					]
				}
			}, {
				type: "Feature",
				id: "3411",
				properties: {
					name: "滁州市",
					cp: [118.1909, 32.536],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@`nnl@xK@X°KXVIXVlbXVWnXlL@È»LVan@VJêVVn@X@laÞbVayn@_xnWVXnWl@VnUVkI@lnXKVLVV@V@kW@LlVô@J@bVnnKnkVa@»lç@nwKmaUUUVÑ@nmWXalI@alVn@VwUaVU@nlaôJnUVVXlJaXXVK@UV@VWx@nXVWXVUlLUbVULVVnUVbUbVb@@aKÆnnKVK@U@UU@@a@V°¯ÈJVIlķ@aaUaVKU_@mkxUI@aUlyU@@wkKWmUbUnUVWbkJW_J@bn@Vm@@KULk@V@@bVbÅm@LW@UVVbkK@UkKWL@VULUKWIUJUbkK@_WVXUJka@XVa@ky@aVIUUW@@mUlLKWÑUKVan@UkVmmIXKaVaUwVU@UmykU¯@±UUL@WUIVUU@KkIWaaU@kUUaÇUó»mKk¯@y@kWK@bkI¯`mnl¯XWlkVUzUJlbUbVJl@nnm@VULV`XnWÆbmUUnJmUknJ¯km@yk@kUxL@VUbmnn¤lX@`z@JmaULUVl@Xn@xllkXWaaW@UVmUb@mVXWxXbWbUÒnVVnVVUL"],
					encodeOffsets: [
						[120004, 33520]
					]
				}
			}, {
				type: "Feature",
				id: "3418",
				properties: {
					name: "宣城市",
					cp: [118.8062, 30.6244],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Vb@XLJXxlIXxlVlV@I²¤nlUnVU@VULWVUJ@Lnb@lV@UnV@@VVVlLnbnJUVkUUVWn@@anUVnVJVIV@@nUJVbUb@VUbVK@bn@VbnIlxkllXVlXKWUXUlL°¤UVVb@bUlkXWxXz@IlaUlnUlJVInVÆJULVUnVK°@VnlVnxV@XLlK@wVL@KnUlJXUbnKVLXlUw@VWlLXKm@@a@VLnmlIVVnKn@kVaVlwk@@a@k@VIUa@maUa@wna@kmWUUmVUIVÇ@aKmakUJ@InmUUaVaklX@Vk@m@VU@wnK@alKVUkUkKbmUkm@U£WVk@@UÝbbaÇx@b@WVUa¯@wVwUUV@VwnK@KWaÅ@KIUyUI@WmXóUbWaKm@km@IUyIUaWKx@zUKUL@llVUnkLVVkJWX@VUKUVIkVWakb@VWb@n@JkXUlmL@xkL@`VxLUÈUJ@Vm@@bmIUlUL@VUVVbknm@mKUwKVÈ@J@LV±kkJUIl"],
					encodeOffsets: [
						[120803, 31247]
					]
				}
			}, {
				type: "Feature",
				id: "3412",
				properties: {
					name: "阜阳市",
					cp: [115.7629, 32.9919],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Vn@ak°a±@¥@UUI@aUmlwUUxb@¥XU@mmI@a@Kn@@_W@@WI@mUVVXUl@XaV@K@I@aLX@aVI°K@KVLUUwyXkK@kKÆbXnlK@k@aJlU@w@U@»@aXKWn_JXkVKn@°LlKXW@¯U@aUK@kmJUwVIUJkmLK@kka@wUVm@@am@UkUbkK@nmVÒ¯VUWVVmIULk@ma@kkK@nUbUamU`UUVUkKVkkW@@bkmnmUXVKXVL@VbUmbVXJ@nmKÅI@KWKUXVJUL@VUKUX@KUKWL@LUJmaXXm@kVVV@L@VUL@VlK@L@V@LUK@VUb@UUU@°@nVxU`Lkn@`@XVJ@XVmk@UKmV¯LVVn±Wm@Ub@JlLUl@VLk@lmVVn@bnV@V°IVaVJXI°K°V@XXVlVVUnKVlUbWXnV@bV`U@@m@@@nxmn@bXVlL@¤nbUl¦VVUnJVUVl@@bÞL"],
					encodeOffsets: [
						[118418, 34392]
					]
				}
			}, {
				type: "Feature",
				id: "3413",
				properties: {
					name: "宿州市",
					cp: [117.5208, 33.6841],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@UWU@bkW@aWU@aUIkWVlLXblVIUVV@mn@V_n@VaUK@I@UaanJVU@lVUVnnKVVlaUaI@wnKLnll@nVlk@wVKXkl@@bbUJ@VU@UUUyVk@aVUXwlWXXWU¹@aU@WUI@mlUnJ@Il@aXbV@VKl@XxVL@WIJlb@al@IUUm@@aVK@¥¯@mUķ¯bWk£Vm@akm@VaÅ@UVWa@UJWkJUbWbU@UlXk@amV@K¯nk@lU@Uxmz@bU`ÇbUbÅVm£U@Wwx@akLUK@UlakwUJWVkLmaUal@n_mVUnKVUUmÅXWa@kJmx@XUJ@bVLXxl@VVUVVUbkLWbU@@lUVVVVXK@XkJ@nU@@bV@VxUVlbU@xXLWn@UxVbVĊV@b@XV`mnkJ@kUKmbaU@VbnbÆx@XU@@`k@@bl@@bkL@WakXWaU@Vmkx@XWW@@wUUUbJU¯V@¯ÞU@WxXlL@bkb@lVlnbJW@kkU@mbkaWJIVlmz¯`UnU@mb@@`@bkVlnV@b@V@aVxn@VxKXnl@nbVKbVK@a_V@Vw@WLlwnK@UmIU@VW@UÈ@lKnalw@@V°@aUmlUUw@V@@UXK"],
					encodeOffsets: [
						[119836, 35061]
					]
				}
			}, {
				type: "Feature",
				id: "3410",
				properties: {
					name: "黄山市",
					cp: [118.0481, 29.9542],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lXnlWX@VUJVnUJVzXJVxkVJlI²lU@K@IUÇLVxnLn@lmUaVU@UVKVknJ@an@@UVIVÇKUw@_lK@wnKVklW@I@mXa@UlaXblUJVUVL@UXWlIUUlKVmkU@kVKVL@ywXLVbJVz@Jln@nLXbVaônW@la@UVWUa@@a@mk@WIk@VwUa¯¥m@UUVK@ImK@aX£kKÅVa_@±akXWWLnU@@a@¯mK@LJUWwUVVmbXX@lWLn`mzUJUbLk@makVWmkXambkKkna@ab@U@Unm@WV@VbUbUJWIk@@lmL@°UVUVmn@@kmWkb@x_m@@aU@b@JlUzlWxXn@b²@l`IVlUlL@VKnVbUl@VlIn@@bbVWUk@@bX@Valb@bnb°Vn@xVKlbVnV@VxL@ln@UXVVL"],
					encodeOffsets: [
						[120747, 31095]
					]
				}
			}, {
				type: "Feature",
				id: "3414",
				properties: {
					name: "巢湖市",
					cp: [117.7734, 31.4978],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VV@blL@XlWnnn@VXXl@@WIX@VJ@LxŎxln@bXJVblX@VVbUVn@VbUVlb@LnJVbVLVXLÒVLÒVbVIVylUXk°Wknm°_lJ@aXL@lz°@lnLô¼VÈVUUaVKU@WW@@UUa@knmVLlaV@a@kak±@UmwkKmkǉÝUUkL@mlIVmnÝWkkUÝ@KƑĉa@»mma@mX¤¯Uw@@UU@bU±±L@akmLUKmLUUUJVbbÇw@kUWaUJ@Xkxm@UJUUm@kakXUVl±ôU@kn"],
					encodeOffsets: [
						[119847, 32007]
					]
				}
			}, {
				type: "Feature",
				id: "3416",
				properties: {
					name: "亳州市",
					cp: [116.1914, 33.4698],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lU@Un@@anUlw@KVmUwlaX_lKna@KU@@kWKUU@ankWXK@@V²VVIÈU@al@VaÈamK@wU@klaUV@XVUU»WUUbkmUkVmk@aÈw@mWU@VkIkVWKUÑķXȭºU¯l@kkLWmÅaL@lLWlzVxVUK@L¯LUJ@bWK@b@JLU@Wbk@WVUUV@nJ@XX@@`m@@L@bnJ@nWV@¦awVVkxVn@bVJ@V¦@²¯blb@mUU@¼¦XbUV`@nnxUxWLkUkVWKkV@XV@@VVL@VX@lVV@L@blL@`L@xXKVL@VnU@lwnU@ml@XnV@@UVW°LnalUI@aUK@aa@UkXW@I@mWL@UXK@UVW@U@@kWn@@V@XblaVxL@bVKXbIlJ"],
					encodeOffsets: [
						[119183, 34594]
					]
				}
			}, {
				type: "Feature",
				id: "3417",
				properties: {
					name: "池州市",
					cp: [117.3889, 30.2014],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@V°°ĊŤ@xĖ@xXÆ¤VôIÆmnLllXÔ@lÜn@@JbLÆaĢÞĸ°VVUUKVanK@UV@VLVVnln@xnklxXamk@WV@Xa@naVkKlk@mkUWwkJWwIWK@UaUwWIUyVIUmVI@UXWmkkWKUUVWm@@kKw@UUUmkaULwm@¯Uma@akaUbW@@a@VlUXa@am@kJ@UVkUamL@UkKVUkJk_±@a@WmXwÇkkaVaUa±wV@VkwnyUaW@UU¯amLk@m@kmmU¯K@L@lUX¯WlkXVbbVUL@J@LVKnlJXnlb@`nXlalV@bnL@Vnb¼@lXbWlkLK@zUJmIUxUVUVmX", "@@llUL@VlxL@a@UwXa¯@"],
					encodeOffsets: [
						[119543, 30781],
						[120061, 31152]
					]
				}
			}, {
				type: "Feature",
				id: "3401",
				properties: {
					name: "合肥市",
					cp: [117.29, 32.0581],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@LxVĊLÞkVlVVXaWaXwWnU@anVVUX@bXblWkk@wWmk@VUVKnb@Iy@_kWm£nmVa@UKwlVl@zn@°lIlmnVIVmnVaXÅWmU_VK@Unmmk@UIVakaaUÑUKÑWKUUKUamI@KkaVUUam@VUUa@UkWUaWI@akmōwwUL@`mn@KVIUVUUUKVk_VkbW@VkUULUJ±I¯alkxU¦@L@V@V@b@b@WJXbWVXn@LKVL@JkLV@Vbn@VV@XU@UlV@@VV@V@XXV@@VJ°°Xnb°@JUVVXV`@bkXWUbU@Wn@VLXlm°bVUbkK@bVJ@bVbkLV¦KķV@x@XbmVVVk¦"],
					encodeOffsets: [
						[119678, 33323]
					]
				}
			}, {
				type: "Feature",
				id: "3403",
				properties: {
					name: "蚌埠市",
					cp: [117.4109, 33.1073],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VÒXLlUlJ@UXV@nÇx@bnlUVllnVaXVV¼UVWU@V²wVV@Vl@VnwlI@XbÆWVnUVmLUVnm`k@VbnblKXUVIlxkb@VVLlK@bwXxV@n¤ÆUVaÈaV_@anyVwV@kl@°m@LnUbl@WVkV@XaaVIXlIV@XbVUÆ@XKWwUkmW@_UmnIlJXkWKXmV@w@_XV@Kl@kU@KlX@@UUUUKWLm@klJVUUmk@mXUWmXw`m@zUbÝakbW@m@UUéUIm@UbKÇ¼@kKWXmWUkaWUJWU¯L@WLwk@mm@_ÅlUVkmWUnV@VWLUbbƑĬ¯l"],
					encodeOffsets: [
						[119543, 33722]
					]
				}
			}, {
				type: "Feature",
				id: "3402",
				properties: {
					name: "芜湖市",
					cp: [118.3557, 31.0858],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@bVaV@XllLXU°lL@V@VUnVl¯IkVUVU@@b@lUXUWmbn@¼bƒĊLÞ@lVXlmÞUnkJ@nlKVVÞXklWVaVI@aUKn»lL@Kn@XXwlm@mn°@V@WywXlWVk@aUaVU¯£kKWVXVWLUkkWlkkwmJUam@@aULVa@UVaUaVI@m@UUJUIUmmV@bm@UXVVUlVmImakKUU@UU@VmU@@kma@KVIXUVK@UVmUkVm±£@JkU@nlkLUlmb@WbU@@XnlWb"],
					encodeOffsets: [
						[120814, 31585]
					]
				}
			}, {
				type: "Feature",
				id: "3406",
				properties: {
					name: "淮北市",
					cp: [116.6968, 33.6896],
					childNum: 3
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@lnnK@¦n@@VV@@VV@nIVV@VW²a@b@bVnUVVV@Vz@l@°UVIVaVV@x@XX@WlwUnV@XblWb@XlK@a@k@al@@_V@@WÅwmaUaV@bnaVL@llInmU_@W@aUUĉUaVwm@XWK@wVkaVUUwU@@aV@@mlI@WLWUUUVU@kV@XalKVaUVUUUk@WwUK@aVI@WUk@@UUU±xkb@lV@xnLÇbUbk@@bÇVUJ±U@U@WLXml@bVVXL@lV@@LmbkLW`kbVxUn@LkxmV@bm@@VkV"],
						["@@VVVkV@¥@UV@U@VUUJkWakKUlXVJ@bXV@blX@aXV@V"]
					],
					encodeOffsets: [
						[
							[119183, 34594]
						],
						[
							[119836, 35061]
						]
					]
				}
			}, {
				type: "Feature",
				id: "3404",
				properties: {
					name: "淮南市",
					cp: [116.7847, 32.7722],
					childNum: 2
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@°kƒīaVaXK@UUVmnXUlVÆkVKUUUmmUÑkUUÝlĉKUwKbU@UxW@@lmVUUVmUUmwaWkL¯K@mULWlIm`XWL@b@¼@V@xkVI@b@l@lkV°Ȯ¹ĸW"],
					encodeOffsets: [
						[119543, 33722]
					]
				}
			}, {
				type: "Feature",
				id: "3405",
				properties: {
					name: "马鞍山市",
					cp: [118.6304, 31.5363],
					childNum: 2
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ǊnllLnxV@laXLVKmaaXbVIbVKVVVIVyn@n_W@@UnJlUVVXlLnaUWlV@VVIXW@_W@XK@K@UVUUwVamÑXmmwwKUnUKçU@JU¯@m@nknWxWm@@LkKm¼VL@bUJUbkXWl"],
					encodeOffsets: [
						[121219, 32288]
					]
				}
			}, {
				type: "Feature",
				id: "3407",
				properties: {
					name: "铜陵市",
					cp: [117.9382, 30.9375],
					childNum: 3
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@ÒV¤@¼V²@aVV@@x°V£nW@nbnaVXVW@k@aV@VUUl°JUkVm@U@UkK¯WVkKWkU@Ubakwmlwm@kUmUUKU@@VmLUbVLUV¯U"],
						["@@LllUL@VlxL@a@UwXamK"]
					],
					encodeOffsets: [
						[
							[120522, 31529]
						],
						[
							[120094, 31146]
						]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/ao_men_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "8200",
				properties: {
					name: "澳门",
					cp: [113.5715, 22.1583],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@HQFMDIDGBI@E@EEKEGCEIGGEKEMGSEU@CBEDAJAP@F@LBT@JCHMPOdADCFADAB@LFLDFFP@DAB@@AF@D@B@@FBD@FADHBBHAD@FAJ@JEDCJI`gFIJW"],
					encodeOffsets: [
						[116325, 22699]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/bei_jing_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "110228",
				properties: {
					name: "密云县",
					cp: [117.0923, 40.5121],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@vIHZDZQtDLNMXIbHRCXXITbJ@H`LGPRDDJNCLHTOCWFGvGBUJMKGFO^IHWXITQCIY^AXGfRDXF`DJOLB~G\\DZIHHpErUVMhHb]\\MBVF@FTP`@zTbD\\@~M\\K`H^EVODWICAakAQXoIcCOCIgGYNWFWNGGKKGaJEGMEIKYJUT_J_Go@_SyQaSFMEGTcYOQLIIi@EKAUPCV[EEXQCW|aMUMAaYCYNIDGGACIMGGSKDQGaF_C[GaB@GOIiOKAYLmI@CN]F[SWWAcKKI@HMUimEKbeYQYISNUOcBKPIFBNgvDPGZYFSf]CMSIWGEUFgDIQ[MeDMJS@RR@LphFPCHaBAJKF@J]IBJO@HlO@@RKAMPJHCNDJTHFP@ZGNANBRFH@J_fM^ONJNF\\VTDJHDON@XRND\\XRCPVETCLBVKDFJINHRGPRV@\\CLJN@VbXbLVT"],
					encodeOffsets: [
						[119561, 41684]
					]
				}
			}, {
				type: "Feature",
				id: "110116",
				properties: {
					name: "怀柔区",
					cp: [116.6377, 40.6219],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@JHTVHXCHPfnDJGHNDJSB[JSBGVSAOH@PMPuDEHHXZN@PHF@ZLJ@LHVYJA\\OFWP]BMtMBSRGV[JeVAPQVIFENMD¡@^NV\\JH@NNL@NM\\kTQ\\I^FNIpBHGTBFFAZQfKDIXQTLXFXNNVMVHRGpCFLlRLEVBBH`IVO\\G`RDPAXLXBXORHZEHTDLLN@VGTMrQNFPeASKG@GMOAKBYMK@GTUHUXSHMVDNMOUEOZMJML@^KRACMZEZMRQLUHE@OFENPR@DI\\ChMHIDG\\GJMDWHCKGMDCIQCHO_K@GaIJSWWQDaGWJMNCKRsCYGYuJUSaKaW@UIMDK@[QUHOGQJMEILCAUDKFSOUQD[WMCQ@WPMGCCIUSE[IMPMN]`e@IEGAQBMHM@YEOSGCIDMIGNOLB@QP@GkP@AI^J@ILEBIbADGEOog@KQQWSekWQQUOFKZLF@PUNmIaHIUeBCTSHENcJa@_IWSaGu`GLSBKJQFOXGDXVQVOBIHcDSJWBEFGTMH[^mLaXcHiKElTRKtFXZ`MHMPCNRDxZB\\ICIHK@KHbIVFZ@BPnGTGbDXRDJaZKRiGEFSFEJhjFNZFjn"],
					encodeOffsets: [
						[119314, 41552]
					]
				}
			}, {
				type: "Feature",
				id: "110111",
				properties: {
					name: "房山区",
					cp: [115.8453, 39.7163],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@h@bl@HRJDZ``TA\\VVD^H`\\pF\\J`JGv@ZO\\GPSTEjPTR`FnEbDTDHEhLFMTK@ETSPULKEI@OVISKSJACEQNQbVIXGDIN@dMB[IIBcN]ZHNLP@XOWCFWCNRHTpATD@^NVNLED@Rh@jCEF}E[OOHUEW]W@QGGDIQSH_MmFmCUT_K]i@MHCMWFCFE{BMHMPOHKS]CFNGBELDH_@BcAKOACESAOBELaXAROB@FODMEDWJAG[aE@UM@DImEWJMC@OeCA{aE[@{L@MINUCQXKfUJORCHqJBF@TCXWNQX]M[EAJO@@KMBQJIC]EWMCCUBEBFHKDOTMBGNGF]MWDBRDdMDQVyE@LPVHDCP@JVVMTG~HNSH[CmRUvHPHBbA\\PTNRC\\YNJPRARPJDDR"],
					encodeOffsets: [
						[118343, 40770]
					]
				}
			}, {
				type: "Feature",
				id: "110229",
				properties: {
					name: "延庆县",
					cp: [116.1543, 40.5286],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@^AXOPEB[ZIGU@KKI@YGE@OYMGWFGvCNO@OPGTBHUTA\\ITACIGMIHmCOeDGGWSUIGimYEEMgiFITEFEjHLQbYCIWQaCSHmHAOY@UEaJG@LGLDJ[JAwYQCDMNONGY_EWLsSQFkMO[NWAIGaIYL@HMBOKiOQDWEUDMQSF_QIUBWdg@[NaAKQ@M]OQ@WhgLUMMFYQDIRCEUZOOCIOJ[KIUMKL@HIDKVEBM`HJAJSJUdBLGNEdMBMO[BYEWJSNKNaD]PE\\SjOT_RQVEZPpNQXfNA~lNG`@PNLp¼RFLfbdKbATUh@FSNWjGFZVLFHVA~X¨PPROfFJbNJPLFbENJPrEFNPFRHDDJdENJLVEPBJTVTHGHFRFH@PXP\\ORQHW\\BjWFDERLPPBbB\\E`B\\D\\L`@F]FCnJ^AZL"],
					encodeOffsets: [
						[119262, 41751]
					]
				}
			}, {
				type: "Feature",
				id: "110109",
				properties: {
					name: "门头沟区",
					cp: [115.8, 39.9957],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@V@XMnGPY²JQNEhH\\AZMPDVTTDZCPiJkHSHCjIdFtEHITCNITQEKUAMCEIKCECABYESKFWAKBEIIHABGDCKCAIHMHALKEI\\CFIBILIJQZS]BBEECS@E@@C]COKI@CABAAEEDMGCH]A[M@CJWHJaUMRFRBDTITLUJ@PFJKLOVST@FSLENgKGFSCaCmF_ESQiOSFOT[HYPu@IH_[IoE_[]GUC[USB__CYQI@Gakg@qZeHQNMNV\\FVLPgJAFJPRLCH[XcPELUT[JiV_EELFTADBXRTRLJC@fHXHHbPd`fR@NfT`@TLplHMpCEJHJBVLF@JTVnG^KXDXHNVGRLRXFJVdDHSNWLGfEzA"],
					encodeOffsets: [
						[118635, 41113]
					]
				}
			}, {
				type: "Feature",
				id: "110114",
				properties: {
					name: "昌平区",
					cp: [116.1777, 40.2134],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VNLJI\\JPPDYPFVQDCJZRNEVNhKXgR@^P@NLRbB\\Mh@XcVARJE`RTCNFVXRCjPPLNA@GZKbJJHXB\\MNPjLdGbWnK\\]NGHSFEXATIdCJGPARUWUHCPWRELITAHKv_E@iYCaW_BQ\\Y@QIO@QDCIGZCEMWGFMFAFgHEDOCSqKCCFGAMKEAC@ODGCGs@WH@KQA@EE@CE@GEA@EH@GGUEEJEAYD@JM@@DAA@FHD@FTJEHUC@JUBKCKG@G[CIIQReAYhO@OXGDO@@FF@IHJFCPEBACBIAAKDOABXARHPNEHGbQAAKQFGIAM[C@WHKaGiCEGOAHUKCIokSCUSOCYN[BgGMFIR±OZmHWNU@ShbbXDHVXXGJ^lZ@PZ\\Nb@\\FHJAD"],
					encodeOffsets: [
						[118750, 41232]
					]
				}
			}, {
				type: "Feature",
				id: "110115",
				properties: {
					name: "大兴区",
					cp: [116.4716, 39.6352],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@F\\E~DFN@BDFEpHFCHBBEGCDCJBHUDSBB@ELCPbF@B\\J@BJVAFJ\\ADKTCBGECFMT@BMN@@FH@DaNBEnvB@FPBATK@FHEFIAKFBFL@@PKBFJHC@FXBRAFCDMPDTOL@JIVFDHH@DDH@BGRFCDLD@N^@@CNA@KNOAEBCECFEGCFGMGFIPMOEJOLBADBBHGG@GCHIECY@INC@DMGS\\AIOZAAEYA@GT@KKMBEETCGMVINFxA@MJADB@FlA@HJA@NND@DFA@DVAZBBOFKH_JA@K^GBC@EFEG@gAENMXKJigC@IbSJMqGOP£RGSMGE@kbQFDPEFiBSGGSBK]I{CDWCIDOic[C_G@SuSO@EWKCO@MNY@\\uZOPENQD[LKESSKGBKEG@EJGAGHoH¥CqhifeJkX_XFFGHFNEDFPENKHM^IFIVL^S`DVEnNnG`RTCJHH@R^XFXGVPP"],
					encodeOffsets: [
						[119042, 40704]
					]
				}
			}, {
				type: "Feature",
				id: "110113",
				properties: {
					name: "顺义区",
					cp: [116.7242, 40.1619],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@EhEBENXHFNYDJHCD@RJP@R[ZARX`DbjZF@bHXT`Jb@dIFMTGDSfAJVbGnJVM@OKELYPERVXRflXTT@NIfC\\NJRhCVEHFJXNT^DTeZEHYCOhuAMJELOdAVPTMOWBWNMNEJgl]@WGUFIC[T{EEDEHGCIGMI@SECUQI[D{A{GQESPUH]CsiMCmHUeoHENcAaDGCMDGMQCACCBaCGLMAHB@DIEQLOAAEEJ@CW@CDINGAAGKQOCgV@LG@BEGDKNeREFBNCFIDOPKD[@YRW@GFWDAFE@EHDDrLDTCPGF", "@@KrJEH[\\B@FF@CHFBHUNAJKADGECBCMAG^E@EbI@BEGP"],
					encodeOffsets: [
						[119283, 41084],
						[119377, 41046]
					]
				}
			}, {
				type: "Feature",
				id: "110117",
				properties: {
					name: "平谷区",
					cp: [117.1706, 40.2052],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ZJZRafFLjnVGNJ@LLBdXX\\T^EDMJ@nZKLBjPPJ@HbA\\H`DbERHLCFK^BZaFWXQLAGMHa\\OLO@SBIpBdCLVQfElO@GSAKEDQTC@GEBKG@ORIJBDAPDFA@CaOq@GGQAAEJK@KMUGAAGEAa@MGMBGCGSIIW@WSUCMDOJeWOM@IUF{WMWaDIMgIoRoCOKeEOEAG_I[cg@wLIFENQFDVTFJ@HNDJGHCFFFS|D\\EJHV@Xk^IhMFMNAXPX"],
					encodeOffsets: [
						[119748, 41190]
					]
				}
			}, {
				type: "Feature",
				id: "110112",
				properties: {
					name: "通州区",
					cp: [116.7297, 39.8131],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@FDAJTGDNDCTDDEDBBE@DT@@EHCDGJ@EIZ@@FDBR@ATFBBVFFE@@HNA\\VE@CLIFNJFNJBCP]A@LJFA@HJEDD\\C@DBCHLAEPF@@DH@APHAERDF\\GIxDTM@CFLBBFJ@CNUPMHECGDBF]BMFPDLRBHHBJMDCX@@DFIBFPBRKJF@CGANBHKbDDABDRDHNNCHDbCdBFMpGHiOYMefKJMC}HWAUNW\\NNBNAkNU|]HMTMN@MZBLFFF@RIRUTBMFIEGaAGGAOIIUGTSFcYKS@MSLYPKRUBU]EWDOI]CKGASgW@MTWKIMCS@uMAKKADMECGAKVUTSDy@IjWLMNBF@hHEF@FAD]H@LIBG`ELAPYAUB@CEB@CMC@MIB@GkB@ECAIB@NwBMEUJHNSDFFNALLS@@HZBBFYBJP[BHTCND@JMZ@FDGJHDH@GHAABCKAIPPFONEJNHEHHDEFFDADBFMP@L"],
					encodeOffsets: [
						[119329, 40782]
					]
				}
			}, {
				type: "Feature",
				id: "110105",
				properties: {
					name: "朝阳区",
					cp: [116.4977, 39.949],
					childNum: 2
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@bFGHBHFBFIVFHHG@@FFB@HDFF@@FRB@LXGt@DHCH@PBDLFBNF@BEXCHEX@ZQ\\@LCPOJCDEAMFEfQLMHCAFH@@KhUNE^AAEHCFDNGVODMI@AEKADEN@CSJw[HCEFQGBBOG@@CE@FOKBDGCAD@C[FCGIB@IE@K^BDOIAEMMIJEDKF@[UMB@GF@EEAUEABSQ@CA@EY@FJI@CHGD@FS@@CAFCACFSCCDCMSHBIECMB@D]@@MKCDCQEAHG@CCG@CGUEIJK@SPOCCNEDQBDNDB@DJCDLFCBBALJB@BVGPBKVO@KHCCCD@FE@BNA@FNCTDDJA@FGB@NBDW@CL@hT@@ZHHQDDDAFSAANBC@HG@EFS@@DE@@PCB@Ue@CADNJB@FCBWA@LI^ix@FIHrH"],
						["@@HUNAJKADGECBCMAG^E@EbI@BEGPKrJEH[\\B@FF@CHFB"]
					],
					encodeOffsets: [
						[
							[119169, 40992]
						],
						[
							[119398, 41063]
						]
					]
				}
			}, {
				type: "Feature",
				id: "110108",
				properties: {
					name: "海淀区",
					cp: [116.2202, 40.0239],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@plDJVLGPBFHjDbHGL@X\\DBNHJREBLRBHaFGMGOBQAWPBLCBBAJBDFADOIEJGE@@EP@HCPWP@ZgfBRQJJ\\D@HLHLDVA@IVDFGSI@EGC@EBB@CN@@IZCAGHGaEqGJG@EjwJ]@K@GSA@e_I@NE@CA@Kg@KC@ENCFAKQAW@WIMK@V@I@@F@^EDFB@HcIaDYCBRRDCHD@EFLN@FE@CJUPEJOJMTBPEDIFCMIAKNOGMRFJNDVBFLSRMJSDGJsFcEiJGDGTIlOjYD"],
					encodeOffsets: [
						[118834, 41050]
					]
				}
			}, {
				type: "Feature",
				id: "110106",
				properties: {
					name: "丰台区",
					cp: [116.2683, 39.8309],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@hMN@NFTQCFRCBJFA@HJ@@HJ@HJ\\FTACD@@UNLXJX@@MA@@IECAQlDFEHBDI~D@GXCFMVDFCH@@NF@ANJC@FnAB@AMF@@EDCDDLGP@LUOAUH@AIABKAAEDCKID@CCACMWA@EGDEILA@OK@AELEJBFEEGL@BSOA@EuAFmMACbG@@EM@ANS@ENFDAHSDCL[BEIUBAII@A[E@OaKD@FAACTGVIACDHDAFGAEDoGEFACM@ig@@QFCMKMU@]SCoBGSMQDEXXDWPO@MKYGM^AdJJA\\cNB\\G^DNHFCBFABDBJ@PL^D@DF@T@FDAF^A"],
					encodeOffsets: [
						[118958, 40846]
					]
				}
			}, {
				type: "Feature",
				id: "110107",
				properties: {
					name: "石景山区",
					cp: [116.1887, 39.9346],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@NQPHLMJBDNJEFCAONSPIFIVODIF@@EKMFEC@DGQCAQZDbCdJ@GEAFC@]@EJ@DCSB[EGII@@GI@@GEBAIQDDESRMEM@gNYTIRKJAJEJ[DFJKLGBGNBJLDCDAHGBJJAFBLEXTLZFBAFDLD"],
					encodeOffsets: [
						[118940, 40953]
					]
				}
			}, {
				type: "Feature",
				id: "110102",
				properties: {
					name: "西城区",
					cp: [116.3631, 39.9353],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XBDA@EIACM@IJAD]BC@SFABISAD]H@@OAEDQEW@BLEMD@FLDh@@LDBF@@M`J@fTB@H"],
					encodeOffsets: [
						[119175, 40932]
					]
				}
			}, {
				type: "Feature",
				id: "110101",
				properties: {
					name: "东城区",
					cp: [116.418, 39.9367],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@DBf@@VDA@OF@@CT@FEH@@GADBMTBBECCRCGG@YS@@gDK@AC@PG@C^TBAJEB@TADC^IB@J"],
					encodeOffsets: [
						[119182, 40921]
					]
				}
			}, {
				type: "Feature",
				id: "110104",
				properties: {
					name: "宣武区",
					cp: [116.3603, 39.8852],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@RBX@RFFCBFU@aK@WA}CCJGAEFkCBRFD@JB@@N"],
					encodeOffsets: [
						[119118, 40855]
					]
				}
			}, {
				type: "Feature",
				id: "110103",
				properties: {
					name: "崇文区",
					cp: [116.4166, 39.8811],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XBL@@bEVD@BX@AC@MHA@EIBCCDSEMmB@EIDBME@@MG@EDUCENWD@H"],
					encodeOffsets: [
						[119175, 40829]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/china_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "xin_jiang",
				properties: {
					name: "新疆",
					cp: [84.9023, 41.748],
					childNum: 18
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@ρȁôƧƦóəʵסʵóƪԫʵѵͩƧͩړυࡓɛʵ@ȃ@óᇑѵƨɝɚôóНѺͩɜ̏ԭʵôƧɞñ@υƩ݇ȂóƩƧ@ѵȂυƥŌਗ॥ɛóʵѵƧѹ݇̍ࢯəɞυρͩ̏óਙƨƧŋôōó̍ͩóʵןóŋړͪƧѶ@ɜԭԫƦɛȄ̍ɝȄöςƩȂ̏ñȀ̏ƩóóŎə@Ő̎@ɞȀɝŎôƨóנѵȄƧ@óŏɝóɜôŎ̍ͨςŎ@ƨóôƨɞ݈ʶóƨφó̎Ȁƨ̍ԮòѸԮמ@ѺȀ@ƪၬֆòȂñ̐òȂɜóƨ̒Ŏ̑߼@φρȀ@Ő๐ς̎Ƨφ@ɝφڔ೦Ԯǿࢰ@ƦŏԮƨƨȄƧ۬ɜʶڔŐɚɚóŐôƨ߼ôƧƧó̐ƥóŏѺǿƦȁφƧςƨƧ̒@ɜƥƦυ̐ɛƪͩƩəƪʷ̑ə@ȃƨʵנŋྸōਚԭԪ@ɝƨŋ̒օςʵôƧ"],
					encodeOffsets: [
						[98730, 43786]
					]
				}
			}, {
				type: "Feature",
				id: "xi_zang",
				properties: {
					name: "西藏",
					cp: [88.7695, 31.6846],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ôŌנôʶ̎ͪôóŎƨŌਚƧ̐ôςͪφɚɝࢰ݈̎ѺѶƨôʶ०ɜਘƦŋφѶȁ̍ôŏɚŋ@̑ə@ŏò̍ɜóƥôʷƧ̍φѹԪ̍ע@Ѹʷɜ@ôñנ@Ѷɛɞô̐ŏѶƨѸƧƥōƦôŏô@ƧôƩ̒ŋƨŌƦǿô̎ɜȁ̒óʶѶôôО̒ςƥɜНφσɛȁ̎υƨఱƧŏ@ʵƥ@ŌóóóͩƨƧóŋ̑õóɞóɝԩͪɝρôƧ̍ƧѹͨڑŎ̑ōóƧࢭͩ̏ѵɝóఱóóԪυô@̒ƥŌ̏Ƨ̑Ȅ݇ŎƧѵӏ@ɛõŏɛȄôӒƧŌѵǿɝƧŋԫ@̏ʴƥ@óǿ̑Ȁóǿ̍ςóóυô@ʶɛñρƦƩŐó̎óѵó̑ͪࢯОóɜןƧ̏ƥȄ߻̎̏̐ןŎɝɜöɞƩȀôöɛȀóͪ̐ƨƪ̍̎ȂƥԪυО@φɞôƪ"],
					encodeOffsets: [
						[80911, 35146]
					]
				}
			}, {
				type: "Feature",
				id: "nei_meng_gu",
				properties: {
					name: "内蒙古",
					cp: [117.5977, 44.3408],
					childNum: 12
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ኊȁ૊ö߼ƩɜɛנñԮɛѶóԮô@ȁѸóמ̎ගѺၬ@߼ʶԮӒ߼̎@ŐѹӒ̒Ԫƨöග̑ѶȄ̒ς।ѶɚöɞɜʴڔôôȂ̎ѺȀςƨƪóԪɜôɛОਕڔԭѵ̍ѹȂԫɛƥ̍Ȃóɜ̎ô@ʶ݊ੲࢮʵږͪנƨôȂƧ̐ͪ@ŐƦƨφԬѶɜôƦ@ŐƧôôƦəŐ̏@ŐڒѶԬô̐ʳԩНςōôŏɞ@ƨȂѶəóƧ̒ػ̎ó̐Őנóƨô̒@ƨɚɚ@עԫɛɛ@ȁυͩƥʳòևρ̑ࡗƧͪ༃ॣԮփ̎Ʀ@ôô@ôō@@ȁѵóƨ̍υȃóʵɛƨƥóυȂóəƪ̐ρƧͩɜԭڔȄ̎عƧȁ̐ŏó̍ɛƥƧ̑óρŐ@Ƨ̏ɝəɛ߻ͩ̍ͩɝО̍ƪƧóóӓƨóƧʳ݇@ɝςƪ@ʴƩƧƦôƨɛȄəƧŋυóͩѵ@ɝǿóŌן̍ɛóО̍̑̏ôȁ̍ŏòȁñóƦͩ@ǿə@ɛƧ̑ρȁυô̍օѹóȃə@ȂσʵѷƪòƩ̍ôó߻ۯôʳƧóõʵѵóѹɜ̍ȂѹôɛŌφֈƩͨρóυӑóޟఱ̑݇ͪóƪƨŌóȄڔԬƩςםñ̑ȃѵŐԭŏƨȁɛǿρôõɚɛóƧОə@ѹ̐ѵöԪͨôͪɛ̒ןŏƧƥóôƥƧɛŌôóɝó@̒݇Ӓ̒Ō@Ŏԭࢰ"],
					encodeOffsets: [
						[99540, 43830]
					]
				}
			}, {
				type: "Feature",
				id: "qing_hai",
				properties: {
					name: "青海",
					cp: [96.2402, 35.4199],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ƨ@ôƪ݈ȁƪ@φɝòóƨԮʶɛ̐ѹͪôОəóƧɞᇒѶ@ôږô@ǿѶƪȁςɜͩφςŋɞôѶɛƨŌɞ@ɚςŐñԪॢͩƨȂɞóƨŐ̎ŏעӏ̎óƧƦô̒ȁɜςͩ̒ɚɛƨôƨɝφɛóȁƨŋóóɚͩƨóóƩ@ƧəŋƦƩ̍@ƧƧôǿυ̑@ȁɞǿõŏρƥסɚƧóτԫɞôƧƦ@ñȃòñƥóυôôѹѵ@ŏ̏Ȅɝó@ȂəŌóəѹƦ@Ő̍Ōυ݈ԩŐƧóôƧ̑ôʵɞƧ̑ѵôƩɞƧ̑óНѵóôʵ̑ɛȂó̍ƥȀƧŋ̑Ōóƪ@ƨóóŐƥƦŎѷƨѵƧ̏Őɝóѵɜן@óòɛ@ѷʸס@ԩ̎υѺƨ̎óʸôƦɛñ̎@Őɚ@̒əŌóŐ̎"],
					encodeOffsets: [
						[91890, 36945]
					]
				}
			}, {
				type: "Feature",
				id: "si_chuan",
				properties: {
					name: "四川",
					cp: [102.9199, 30.1904],
					childNum: 21
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ôôŋó̑Ԯ̒ɛОמͪƨōöͫ߼ƥôȃƨóóñôƧóƧôōڔŏƨŐ@ŎôòƥѺŎ@ōɜóנôǿôƦôԮ̍ɜôɚƧñɛɚȁ̍Ƨɛևυ@óóôŋρԭɝ@Ƨʸ̍ŏυɜƧƧóƧƨȁρ̍ƨȃɚôʵφóô̑̏Ȃ̑ʵɜʵɞ@ƨʳסƩóŎəóɜƧôƩƧρóôôô@ŎƧƨƨƪѹó̍̍Ʃ@̏ѹНôޟ̍ƩóƪυɝɛəƨôŎɛȀ@Ȃ@ñɝʶ@Ōρנ̏õóɛͨƨȂѵОɛʵ@̏ƩŐó߼Ƨల̍φɜȂυτɛОρƦɝƨóƪ̒Ѷɝƨóʶ̒óƨƨôԪŏφ݇̎ŋ@ŏѺƥôɚɚŋ@ȁɞô̐ȃ@ŐѶóѺφóƦôñòòȄ"],
					encodeOffsets: [
						[104220, 34336]
					]
				}
			}, {
				type: "Feature",
				id: "hei_long_jiang",
				properties: {
					name: "黑龙江",
					cp: [128.1445, 48.5156],
					childNum: 13
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ᇔȂਚНƨŐѶŏöƥςŏñƧƦóƨȁ@óƨóȁφӑóóƨóǿ̎̑ôНɞó̑ɜə߼̎ǿ̒ôڒӑφ@Ƨȁ̎̏ƥƩ̎ρశôȂςƨφ@נɞ݈̑ƥƧɛƨʵƧȃƥ@Ƨƥ@ŏ̑ԩôɝρρóɛƧƩͩƧó߻ʸ̍ʷѹƥɞڕõ̍öɝυ̍ȂƧ̐̑ŏóƨñŋѹóóȁ̍̏Ԭõʸ̏ŏ@ǿ̍@ƧОυ@ñƨòȀƥŎ̑ŐѵóɛŌóȂԫōƧŎѹñ̍ʶóОן@Ƨ̎Ѷô@Ȃ@óŎó@@ó̍ƥԭք༄।ƨͩ̒ࡘςñֈƦʴφͪ@ȂɜɜסԬə@Ƨə̑@Ƨóןô̏ŏ̍ô̑ؼôƨѵɚƧȁɝ@óŐρŎԪО̏ʴ"],
					encodeOffsets: [
						[124380, 54630]
					]
				}
			}, {
				type: "Feature",
				id: "gan_su",
				properties: {
					name: "甘肃",
					cp: [95.7129, 40.166],
					childNum: 14
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ڔôԮࢯ@ō̑ŋ݈ӑ@̑ɞôóôɜŋƦƨôóƨƦנŐɜ̑óͩԩͧѶõѺ̏ɚ@ƨНɜôöəςóɜȀƧȂԮŐѶŏ̒ȄמòƪρړԫôȃƧŋôƩ݈ͩɚ@@ǿɜ@φͩóŏɜӑƧōôǿ̎ôƥƪóõö@ôƨôƧƦôó̒ɜ@ɞŌõʶ̏Ő@ȀóôƨȂ@ʶע@@ƥ୾ӑó̑óŋôʵóɛړ@@ƩöóƩóρɛƨ̑@óʷƥƥ̎ɛƧôōƧǿôͩѵôɝȃɞȁõƧρóó@ōƧŏړŐóŎôƨóƨôòƧôóȄ߻ƦõͬƧŎםͩɜНԭ̑ô̒óŌóƥ@óƨɝσԬƨôעəςƦöŐɝȀ@Ȃφ̒óȀƨƨ̎@ƥƪɚŌ@ƨôƪƧôəͪôôƧŌôȂυɜƧɞƧóəɜ̑ρͪɛ̑Ȃóƨƥ̍ôסӐ̍ŐƧŏɝôƧȁॡͪòԩρŏ@əɝƧŋѵɜɝóρŌυɛͪρƩȂѵ@Ȁڕó@ȄɜʶφࡔڔƨͪѶͪԬʶôƩעʶɚʶƥôóƨςȂ"],
					encodeOffsets: [
						[98730, 43740]
					]
				}
			}, {
				type: "Feature",
				id: "yun_nan",
				properties: {
					name: "云南",
					cp: [101.8652, 25.1807],
					childNum: 16
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ôɞôɝ̒öôŌƧƨôͪôô@ŋƦ@ʶƨŐô߻ƪŏ@̐ɜʶѶНƧȁɜͧöô̐ςן@ŋɞʵ@ò@ȁɜǿóōɚƧɜφɞôƩ̎ƪóޠѺО@̐̎ƪô̎ѺƧƩƨƧ@ōóóôóςƪƨƨóôɛó̑ԭƥŌɛǿɝƨɛͩô@ǿƨȁѺŌɚɛ̍ןѶНɛƧôóƥȁƦͩôŎɞƨ̑ɜòôφ@ƨʵ@ɛѹōóȃəƨυǿóʵρƧƧŌƩɛ̏ȄñƧƧȀɝ̍ԩʶƧ̑υóŌƥʳɚӑóНƥô̑óӒѵʵѹƧӐןôƪφõŌƪ̒ԫŌƧؼƨƨסρȁƧƨȂóʶó@@ʴƨôôφ̎Ŏ@ȀƨƪɚƨóƨôôôςóޤƧŌƩŋƧԪ"],
					encodeOffsets: [
						[100530, 28800]
					]
				}
			}, {
				type: "Feature",
				id: "guang_xi",
				properties: {
					name: "广西",
					cp: [108.2813, 23.6426],
					childNum: 14
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ƦŋѺ̎ڔʵƨŐ@ƦמȄƪôóȂɜŌɚͩɜ@öóɜôôȂƦôɜȁ@ɞφóȄ̎ƨʶɞŋƨʴɚǿ̐̎Ԭ@ôñ@̏ƨρ۫ôɚƨƨНƪŐ̎ƥóƦʵƥŋ@ȃóƥƧ@@ŏɝǿôυƧȁѵɛ@əóŏ̑@@ə̍óƧó@ȁƩρóòНƥô@Ӓ̑@óŎ̍ƥσŎυ@̍ƨ@Ō̑ôóͪƨ̒óŌړ̏Ŏ@ŌôȄѺŎ@ɜƧʶυ@ñóɛƧ̒ɝóōƥͪ"],
					encodeOffsets: [
						[107011, 25335]
					]
				}
			}, {
				type: "Feature",
				id: "hu_nan",
				properties: {
					name: "湖南",
					cp: [111.5332, 27.3779],
					childNum: 14
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@քɜОƨ@öŐמóƪôƩɚ̒Ő߼ȁςͩɜòƪɜȀòñɝòѺͪ@ŏƨŋóɝôǿƨɚȃóəƨȃѵͩó̍@ȃƨóóƥƨƧ@ʵƦóͩɜɛóñԭɛōυȂ̍ƧƦō@ɛƥɛȀ̑óʷóō̍ƩŏƧОəƧóς۬Ƨ@̐óòԫ@̏̍əȀƧʳɝŌóɞƧƨɜóŐƨò@ȄƧŌρŋóôԪОóʶ@̎óȄ"],
					encodeOffsets: [
						[111870, 29161]
					]
				}
			}, {
				type: "Feature",
				id: "shan_xi_1",
				properties: {
					name: "陕西",
					cp: [109.5996, 35.6396],
					childNum: 10
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ςôöƨɝȂɞȄѶóóͪƨȀóŎƨ̍ɜƦƦôʸ̒@ɜƧςƪôõô@ƪڔ@ôɜóʶôŌô̒୽Ӓ@Ʀ@Ѻ̎ɜѺɛѶôöʶôƨóʴ߼۰óô̎ñƪѸƩτʶ@ȁòŋəѹóǿ̑ʵ@ȁ̒ʷυփô݉ôН̏ط@ȁƨóô̏ƪõ@ʳ̐ʵ@ɝɛŋƩŌɛóןôƧŋ̒ó@ŏ̐ƥ@ŏυ@ƧƧôן̏@ƥȂѹɜəɛóԭ̎ƥóóóȀןɛô@ŎѹōñƦ"],
					encodeOffsets: [
						[108001, 33705]
					]
				}
			}, {
				type: "Feature",
				id: "guang_dong",
				properties: {
					name: "广东",
					cp: [113.4668, 22.8076],
					childNum: 21
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@Ȃôôƨ̎@ɚ̒@ôŐ@ɚѶɜƨȂóφɞȀ@Őƨ@ôƦ@ȄƦŌƥʶƦôôŎôʸ̒ɜǿƦ@ɜƥŎ̎ƨφȁɜŎòƥԮŎƨōóŏɛƧɝəɞƧ߼ɜςȃñȄƦŎ̒ōôòƨəƨɚН@əƨ̏ƪʵυŌəɛóəԭŏəóŏѹρʵɝƦ̏ƥʳѶöō̑óóŋρȀυƧƥɛѹōƧôןɛŏѵ@óŋôʵɝƪԩõ@Ƨō̍@Ƨ@@ƦɝԮƪО@@", "@@X¯aWĀ@l"],
					encodeOffsets: [
						[112411, 21916],
						[116325, 22697]
					]
				}
			}, {
				type: "Feature",
				id: "ji_lin",
				properties: {
					name: "吉林",
					cp: [126.4746, 43.5938],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@נ@ôН̎ʵѺòƨōԬŎôȁɜŋѶô̒ŏƦōñǿòƧφ@ƨН̎@@Ȁ̐Őöʷ̐ԫ̎ôȂѺôòŌôƧ̒Őƨ̏̎ȁφ@ŋƩͩםȃƨ@ȁ̑ʶ@Ōóôɛƥѹ̑συ݇@ɜρƧȃࢯƨôəȂɛōƩɛ̏υρóõƪʴυφ@ʶôŌóρք@ɜƧ@ɝǿƧͪρȀƩó̏ŐƨȂ̍غړȃɛԮƨͪ̏ςƩôɚφȁƦôɜƧôʶφȄ"],
					encodeOffsets: [
						[126181, 47341]
					]
				}
			}, {
				type: "Feature",
				id: "he_bei",
				properties: {
					name: "河北",
					cp: [115.4004, 37.9688],
					childNum: 11
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@Ʃ̒̏ŌѺ̒ƩóȄƧŌƥͪòôñȂ̎ŐóȂ̒̐̎ôНɜנ̎ôŋɞȀѶ@ôͪφƨŌɚɜȃóƧƨƥƪ@ʳƩɞρ݈@υНφʵɜƦρƨƧ̍ɝóɛѹ̍ρŏ̑ôóƨ@ƧƦôƨɛ@ƥƨ@ȂƦ@@ôəŐƧʶƨŌυ̍̎ɛŋôōɝ@óƧ̍ƦʵѵʳôʵɜŏςôƪŋƨŌɚ@ôНƥƧ@ōѸɛ̐ô̎ʵѵНԭ@̍̍Ƨò@ȁɝ@əρυͩƪ̏ƩõƧŎƧōóॡȄɛʶɜȀ@ɞςѶƧƥςɛŐ@ɚɜɜ@Ŏôôςƪς"],
						["@@õə@Ƨɛ@ŐóƦφô"]
					],
					encodeOffsets: [
						[
							[117271, 40455]
						],
						[
							[120061, 41040]
						]
					]
				}
			}, {
				type: "Feature",
				id: "hu_bei",
				properties: {
					name: "湖北",
					cp: [112.2363, 31.1572],
					childNum: 17
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ñȄυƦöŐƩóנƨƨφ@@Ő̏Ʀ@Ő̑ôƨŌנóɜôƪŋɜŌѶօڔə݈òɞōɜŎôӏƦóƨô̒óôȃƨó̎ŐôƧƪ@ƨȁςƧə̑̎Н@̍Ƨŏρôԭͩԫ̍ʵƧóȀôɞƧŌ@ŐѹͩñòɞñɛǿƩɛñρͪ߻Ȃ̑ŏƪəƩóםôõŏƧ@ɛНƥȄó̑ѺƧôφóƨƨƦƪóɜŐôóòôƨóφ̐ƨóƦ̎"],
					encodeOffsets: [
						[112860, 31905]
					]
				}
			}, {
				type: "Feature",
				id: "gui_zhou",
				properties: {
					name: "贵州",
					cp: [106.6113, 26.9385],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ɜȀƦŋԮô̒ɚôōעƪƧʴɝ@ɛʶ̒ʶ̐ȁƦóȂô@ôŏ@ōôƨʶѸô@ʶƨɞó@ōτöòυƨ@@əƨô@ɛ̒@Ʀɜôȃ@̍ôʵԩНôóςŌƨŋ@ȃƧñôŏƧɛƨôɝƧʵ̍ôȃυ@ɝɛȂƥóóȁɛóõôɛ@əͪɛŋôȁƩóםȃ@ƥƧŏړʶѹ̍ƥŌƦȂóôɜƨѵО̎נəɜѹŋƧȂ@ȀóɜͪɞƧ"],
					encodeOffsets: [
						[106651, 27901]
					]
				}
			}, {
				type: "Feature",
				id: "shan_dong",
				properties: {
					name: "山东",
					cp: [118.7402, 36.4307],
					childNum: 17
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Ʃ̐φͪɚςɞ@@Ȃƨñ̎̎Ԯ@ѶОƨƧڔ@φН̑ŋ@Ʃ̒ǿ̎@ƨɜԬςôʶ̐ʶöԫƨƧנƥɜŎôō̎@ôŏóρƧŏԫôóƧԩó@ƥɜƧԭóƨʵɛƨ߻ӑɜНԩóô̑óƧʳəóɛƧ@õȀƧ̍ȃɛŐóŏυО̍óɝƩԩ@ƧɚԫȄɚʶƨɞʶԪ̐ړɛƪ̒"],
					encodeOffsets: [
						[118261, 37036]
					]
				}
			}, {
				type: "Feature",
				id: "jiang_xi",
				properties: {
					name: "江西",
					cp: [116.0156, 27.29],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ƧȄôɚəȄ̎ʶԬԮͪςóƨŐƪτɞƦōƥƧ@ŏςôóŐôô̒ʷѶƪƩƩǿ@ō̒ɛôυ@Ƨȁѹɛəƨѹ̑ƨ̏óƥѵʷô̍ɛȁôŏɝǿƧԫƧôʳƥōòȃρȄ߻ɛɝƨɞɚɜƨôŐƧŎԭōñƦòԮɜôɛôͪƥ@ʶƧƨôƦƧô@Ȅô̎Ѷͪ"],
					encodeOffsets: [
						[117000, 29025]
					]
				}
			}, {
				type: "Feature",
				id: "he_nan",
				properties: {
					name: "河南",
					cp: [113.4668, 33.8818],
					childNum: 17
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@φ̎ƪ̐ɞȄɚ@@Ȃעó̎ŌѺ̒ôֆॢȃôƨŎƨōƪöƩ̑ڔɜԩ̏ɝʵƧəʵԬȃƨəԪ@@Ƨ̒ŏô̍υȁƧɚ̍ôóŋ@ɝƧŋõ̑σ@ŏɜŋôɝ̒ƧɚôôطρóóɛƩ@óƨ̍ŏƧôóȄ̑ôƧóƥôóӐɛōɝŎ݇ñړɚѵֆ@ɞ̏ʶ@ʴƩöó̐"],
					encodeOffsets: [
						[113040, 35416]
					]
				}
			}, {
				type: "Feature",
				id: "liao_ning",
				properties: {
					name: "辽宁",
					cp: [122.3438, 41.0889],
					childNum: 14
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ƨʴƧôôӔƨô̎ƩɞН̎ͪ߼ͪɜɞɚ̐@ƨςŏ̒ôƦƨɜô̎ƪôςǿƨͩɞȀƨ@@ɛςփôóŋ@ʵφυƩʳö॥փρѹס@əɛ@ͩࢯ@ѹʵρƩʶφȀƧ݈̒۬óʸɝŎѵ@ԭԫןɛƧƨƥςɛυʶφО"],
					encodeOffsets: [
						[122131, 42301]
					]
				}
			}, {
				type: "Feature",
				id: "shan_xi_2",
				properties: {
					name: "山西",
					cp: [112.4121, 37.6611],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ɚѺñŌɚôȄѺ̎ֆφóςȂ̒ɜƨɚ@@Ȁƨŋôȃƪѹ̑̐ŋƪ̑Ʃρρóó@ōɛɛ@əɜŏƦρƨρѵ@ɝɛǿɜʵóօѹ̑̍ŋסô@ȁə@ɝȃ̏̍ƩυƧô@Ȃ̐ظóОó݊φք̑ʸ@Ȃ̒ʶôȀ"],
					encodeOffsets: [
						[113581, 39645]
					]
				}
			}, {
				type: "Feature",
				id: "an_hui",
				properties: {
					name: "安徽",
					cp: [117.2461, 32.0361],
					childNum: 17
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ó̎̑Ő@ƨƪѶǿɜ̑φƦʵ̐ƧѵôóƪôôυςƨȂɞŏ@̍ԫôò̑ƥóȃѶͩƧƥôŏѺôŏƦ@ƥͩƧôȁυó@̑ƧɛѵʵƩƪѵ̑ʸóóôŏρó@ŐƦƨƥŎσɝƩ@̎̍Оɚ̒ρƨƧȂôɜςôóظəó̑ƨóɞɛŌ@Őτö̒ƨŌ@ɞôŌ̎óƨəφȂ"],
					encodeOffsets: [
						[119431, 34741]
					]
				}
			}, {
				type: "Feature",
				id: "fu_jian",
				properties: {
					name: "福建",
					cp: [118.3008, 25.9277],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@̎óȁƨӑ̒̎ɚƨͩφŐƨɝ̎ŋóŏρ@ōƨòʳəóƨō̏õɛƧ@ƨѵƧōəŏóŋƧô̑ɝɛʳƥ@@óɛõ@Ƨ̑ƧóȁəƧ̑Ƨ̐@ɚəОƧƧɚóñ̑ŎóʴƨƨԬɞȀóŐɜȂó̎ѶʸôƦƧ̐Ѻ̒ɚƧѺɜƨȂ"],
					encodeOffsets: [
						[121321, 28981]
					]
				}
			}, {
				type: "Feature",
				id: "zhe_jiang",
				properties: {
					name: "浙江",
					cp: [120.498, 29.0918],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Ѷʶƨɜ@̒φôóȂƨƦͪ@̐Ѹ̍τȂ̒̑נŐמôƪƧôӑ̑@ƥρͩƨօ̏@@υɝó@ŋɛ@ôƩəóƧѵυó@ƩɜŋƧ@̍ŌƧɞυŏƧͪ̍ə̑ƧӒôȂ̍@óφ̑ɜ@ŎƪȀ"],
					encodeOffsets: [
						[121051, 30105]
					]
				}
			}, {
				type: "Feature",
				id: "jiang_su",
				properties: {
					name: "江苏",
					cp: [120.0586, 32.915],
					childNum: 13
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ôɞ̎φНôŐɜŏ̎Ȅƨöǿƨ@ôɜɚƨʴ̒ôôó@Ƨ̎əԮȃԪૉöͩ̐ƧòʵφƧôʵ@óړɜóŏɜǿƧɝρσȁѷ̎̏ƥóŐѹóŐƨƦѵͪôȄƦñ̒Ԭó@̎ɝŐƧȁρóφƩóóôƨѶ̏ƥʶυɛ̒ѵȀ"],
					encodeOffsets: [
						[119161, 35460]
					]
				}
			}, {
				type: "Feature",
				id: "chong_qing",
				properties: {
					name: "重庆",
					cp: [107.7539, 30.1904],
					childNum: 40
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@əȂòɜƨѺɛƦȁ̐@ƪõŏφƥòȃƥ̍Ƨôυ̏ƧôñóóôɛŏƩôƧƥôƧóυƨ̒ѹôƦȃ@փƥɛ̑@@ɜƧó@ɚƧ@ñφσõ@ŎɝôƧ@ʵѷóƧʵó@ŎóŐó@ôȁƥó̒υôóʶəƧȄς̎ƧȂôƨƨƨφɛ̎Őƨʷɞ@ςԮóŌôôφ@ɜֈ̎ƨ"],
					encodeOffsets: [
						[111150, 32446]
					]
				}
			}, {
				type: "Feature",
				id: "ning_xia",
				properties: {
					name: "宁夏",
					cp: [105.9961, 37.3096],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ల̒ôޠφӒςôƪͧυևɜŋѺó̎ȁ̍ɛ@ѹס@@ʵƧȁôó@ǿ̐ŏöʵɝŋɛ@ô̑ƥóóƨƧóôó@ƩôóƦ̍óȀƨŎɛӒôŐυͪɛ@@Ȁə@"],
					encodeOffsets: [
						[106831, 38340]
					]
				}
			}, {
				type: "Feature",
				id: "hai_nan",
				properties: {
					name: "海南",
					cp: [109.9512, 19.2041],
					childNum: 18
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@φɜƦʶ̐ôφô̎@ƨŎö@τʵƦԩ۫õН̏óƥȃƧ@Ʃəםƨ̑Ʀ@ޤ"],
					encodeOffsets: [
						[111240, 19846]
					]
				}
			}, {
				type: "Feature",
				id: "tai_wan",
				properties: {
					name: "台湾",
					cp: [121.0254, 23.5986],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ôƩɝöƧɝѵəޣ̏ρƩԭóōóͪρɞƧОôԪ݈ଦѶɜ̒ɛ"],
					encodeOffsets: [
						[124831, 25650]
					]
				}
			}, {
				type: "Feature",
				id: "bei_jing",
				properties: {
					name: "北京",
					cp: [116.4551, 40.2539],
					childNum: 19
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@óóóυóôƥ@ŏóóə@ƧŋƩŌρóɛŐóʶѶʴƥʶ̎ôƨɞ@óŎɜŌ̎̍φƧŋƨʵ"],
					encodeOffsets: [
						[120241, 41176]
					]
				}
			}, {
				type: "Feature",
				id: "tian_jin",
				properties: {
					name: "天津",
					cp: [117.4219, 39.4189],
					childNum: 18
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ôôɜ@ƨöɚôôôɚŏ@óƥ@@ȁƦƧɜ@óƧƨƥ@ƧóəН̏óѷɜ@ŎƦƨóО"],
					encodeOffsets: [
						[119610, 40545]
					]
				}
			}, {
				type: "Feature",
				id: "shang_hai",
				properties: {
					name: "上海",
					cp: [121.4648, 31.2891],
					childNum: 19
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ɞςƨɛȀôŐڔɛóυô̍ןŏ̑̒"],
					encodeOffsets: [
						[123840, 31771]
					]
				}
			}, {
				type: "Feature",
				id: "xiang_gang",
				properties: {
					name: "香港",
					cp: [114.2578, 22.3242],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@óɛƩ@ρ@óôȀɚŎƨ@ö@@ōƨ@"],
					encodeOffsets: [
						[117361, 22950]
					]
				}
			}, {
				type: "Feature",
				id: "ao_men",
				properties: {
					name: "澳门",
					cp: [113.5547, 22.1484],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@X¯aWĀ@l"],
					encodeOffsets: [
						[116325, 22697]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/chong_qing_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "500242",
				properties: {
					name: "酉阳土家族苗族自治县",
					cp: [108.8196, 28.8666],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XJ°lJX@lbl@XbV@VLnJlxnbUU@IVK@lVIVwnJlU@n@J@L@Jn@l_nWVLVln@@blLmV@@xÔ`nxVÈLlxLVxVVV_U»VWn_m¥XwVmnX°lmUUVwÞaVk@a@mmIUa@mwk@m@@U¯a@UV@@K@ykkmwkV@kU@ÑVkKWLÅamaUm@kyU@WkU@UaIUaVaUUmUUa@aVLXKWa¯UUbmJXnWnX`l@@xkzWÆ@VLU¦x@b@JkIkJ@LmbUamJwm@óxnk@V@xVnUVmVUVUbVlUbkXW"],
					encodeOffsets: [
						[110914, 29695]
					]
				}
			}, {
				type: "Feature",
				id: "500236",
				properties: {
					name: "奉节县",
					cp: [109.3909, 30.9265],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@WVXbUnK@x@b²kxmKkl¯_VV°VU@bnKVVV@@nk@nbn@°@VLČU@°WV@VnU@InKVl@nUbKnXWlknLlKUwnalLaVlUXmWk@UU@UWWIUyķ¹XaWW@XKUIVmU@W@UVU@KV@n»VkUkÇmUmVIUmULUbm@wUaKkkm¯ÑUL@bWVnx@VmxUI@klmkkK@aK@IlJ@I¯k@mak@mnkJVL@bV@UbW`UUUVI@VU@VVbUJVLUVVbUXVVxk¦VJUnVxnVVUJV@Ubl@@bXV@L"],
					encodeOffsets: [
						[111781, 31658]
					]
				}
			}, {
				type: "Feature",
				id: "500238",
				properties: {
					name: "巫溪县",
					cp: [109.3359, 31.4813],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nLWbXVLVUV@KIVl@b@lbUVnU@JÆU@V@n°KĢUl@VbÞKV@_VKXUU@KX@wlkkU@mWKUU@UôJ@XV@aVmÞIVaVL@»km@UkLU@aU@WWLUUUKkbwWa@KU@kaXmWLamVk@UmL@JmVUU@¯X@ċVUK¯@ÅnWKLkKULWK@UXK@wW@LkV@bVLlXn`¯xU°LnlV@n°Lnl"],
					encodeOffsets: [
						[111488, 32361]
					]
				}
			}, {
				type: "Feature",
				id: "500234",
				properties: {
					name: "开县",
					cp: [108.4131, 31.2561],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@n@naIw@@VVKLVbVxnVÆUnanKWXamKmk¯K@mkUm¯KV°w@Wm@UIUUlKUU@a¯KWanwmUXamKkUWUnU@KkUwWKXaWLUWkImaUUUKka±k@l¯wwmbUkXm@UJkIWXXbmUJXUV@°KllVXV@xmbnV@blV@VU`UL@Va@bULlb°VXbÜ@V@bL@JxnLVb@lVb@V@@zbXWXKVLV@@bUVVL@blVna@ll@zl@@J"],
					encodeOffsets: [
						[111150, 32434]
					]
				}
			}, {
				type: "Feature",
				id: "500243",
				properties: {
					name: "彭水苗族土家族自治县",
					cp: [108.2043, 29.3994],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Jlb@nVV@bXb@ÆlLUl`nVKU¼VxkbWnlUxlXX@°°WnnJ@VUn@Jk°L@VlV@nUJx@bVVVz@VnLlaKnalVlIU¼@nV@@anKUwVal@UlJlI@akU@UWXKVI¯Uak@@KmkXWÜkXWykIWwXw@laXamkVUUym_XmlkkmmakwmIUKU@Wak@kaW@kI¯WIk¦VUUmaUV@XkVUV±aUb¯b¯¥m@@ImJ@mmL@kUKUkkJbV¦"],
					encodeOffsets: [
						[110408, 29729]
					]
				}
			}, {
				type: "Feature",
				id: "500235",
				properties: {
					name: "云阳县",
					cp: [108.8306, 31.0089],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lbLVVVnblJVXXKWbXLVxl@LmVXVVlnLWbnVmxXb°L@bVVkLVVVJn@@X_WmkUK@alUKX@@xWL@VXLVKlLKXLÆm@ma@ml@mU@UUmL@aVUU¯U°`lknLlw±@a@wmLVWaXU@KWU@ak@VaU@IUVmUUwVmUIl¥UwUVWUaVUUKVIUa@UUUUJUUmknl@@VWV@L¯aUbUlx@@b@VULUx@VUxVVU@bU@mxUU@mUVklkk@WxknlxK@amLKUK"],
					encodeOffsets: [
						[111016, 31742]
					]
				}
			}, {
				type: "Feature",
				id: "500101",
				properties: {
					name: "万州区",
					cp: [108.3911, 30.6958],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ĸĊVInaWWXlJVIn@lWVnax°xkl@²LVLnK@bLkwlmXw@lllkUnVV@VnwV@@aVUUVw@UVwVK@U@a@kwVVa°b@KXU@U@mkÇÑamlkUVmn@VULUm@kUVkUawUWm@Uw¯mKUUmVUUULUKUW@XbWVkaWwkUUk@maUbmbVlk¦xUVUIWVUkJVVkL@UmJUUVU@lLUVUlx@@VbJUL¯¤@V"],
					encodeOffsets: [
						[110464, 31551]
					]
				}
			}, {
				type: "Feature",
				id: "500229",
				properties: {
					name: "城口县",
					cp: [108.7756, 31.9098],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VK@w¯L@m@UÅV@ImVUVka@@aUkJ@LUUVUKmLmbÅVmUUwUaKUL@U@xJmbm@nVJ@X@VkVnlLXx@b@bUVLU`UnbU@@mVVX@JX@VLVVklV`@bUL@VLVKn@U@UJkn@lmLmK@X@Jn@mbnÞWVXnJkKČÑÆ@VK@knaÜmXlUČW°kôÇÆ@a@yÞ_VmUnU@K"],
					encodeOffsets: [
						[111893, 32513]
					]
				}
			}, {
				type: "Feature",
				id: "500116",
				properties: {
					name: "江津区",
					cp: [106.2158, 28.9874],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@InWUUlU@LValX@°²lÒXxlK@Ul@@Un@UaVJ@I@W@UUUVUwVIUKUaUUVwn@Üx@XUlnnbJ@¥VklKUUlk@ynU@kVUUVWnI@¥V£VWVIUKU@UVa@n@Vm@@nlUaVkUwJ@blLkLW@XWmXkmmLn@m@U@UVm@UVUUlakUVaVkV@@wnaWUk@VwklmVIkUUxmJ@U@KIkx±V@IUm@K@IUKkbWKUbnm@bmVnbmb@xkxUJ@ULW`@bX@WVXL@V¯mk¯@UJ@VmLUaWnX@WJ@nkKkxW@UIV@@KkImmkK@UW@XaWIU@UIkbWbxXlLVbnV@bWlX@VxVLnl@nÆÞVÜ"],
					encodeOffsets: [
						[108585, 30032]
					]
				}
			}, {
				type: "Feature",
				id: "500240",
				properties: {
					name: "石柱土家族自治县",
					cp: [108.2813, 30.1025],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@kl@¼UbmVXJ@bV@nxVIVJULVVk@@LWbnJVU@bVbUJ@blLXnWV@mbnV@Vbn@VJVLnaVanbl@VlVXxlbXUWaX@VUUVwUUVm@I@WmI@amlLlK@alwnUV@kóVaÝk@UlbVK@VU»VUUVWU@U`ULkwm@@KmU@knK»VkJkUmbLkbmK@UUyUU@awm@@XXJ@VVLVVUbVnUJVX@Kk`WXXJWXUbmW@bkLUm`Xnb@JVL@LU@°VVXKVnUxVLUbmJ"],
					encodeOffsets: [
						[110588, 30769]
					]
				}
			}, {
				type: "Feature",
				id: "500237",
				properties: {
					name: "巫山县",
					cp: [109.8853, 31.1188],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@kVUbkKmbVxkLmKkllbV@@LXbxlaLVVVKXXV@@bVlKV@ln@¼°KXaU@Ulw°JXalIUaÝWXW@kVU@VUVWUUUamUw@aVamwn@VUUlLXWm£@wÇĉkKklmLUÒ¯Wn@ğ±kwmaWm¼U@@LUV@V@XVUnVJLW@XXWbĸºVzXJVXV@@VXlWn"],
					encodeOffsets: [
						[112399, 31917]
					]
				}
			}, {
				type: "Feature",
				id: "500102",
				properties: {
					name: "涪陵区",
					cp: [107.3364, 29.6796],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nèVblĖVVnL@xVn@nJ@LUVVX@lbUJV@@nn@VVVK@zV@nzVJVUlmX@@_VVVbnaVal@@knW@wnaVK@aVIJ@£kUVW@wXUVJam@Ik_X¥@WwkKkwmkUxnÅmm¥WV@Um@UlVL@JU@@X@UVkKVkKVkKkb@bmJVXUVVUbU@@`W_UV¯b"],
					encodeOffsets: [
						[109508, 30207]
					]
				}
			}, {
				type: "Feature",
				id: "500230",
				properties: {
					name: "丰都县",
					cp: [107.8418, 29.9048],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Þè@XUK@LlV@blbUJ@V@bnV@VVVXU@lbXal@VXnKV@maXUÞ@amk@aVKXVanb£°mnIVaUKVwUmWLUU¯V@@KUK@IaWmn_VlK@anXVaXWWIXWl_@LUWVIUmVaUUUK@UWI@Wn@VI@mkU@U¯Kl@ImVÅLwU¤óbUU@wWXkmm@LU@@VUIWVUL@JUnax@JnbUIWVx@UXlV@¤IUJ@bULmb@xmX@lk@UbmbUaUU@`W@kn"],
					encodeOffsets: [
						[110048, 30713]
					]
				}
			}, {
				type: "Feature",
				id: "500232",
				properties: {
					name: "武隆县",
					cp: [107.655, 29.35],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lwbVm@IVKXUVJ@UV@@KnnWlX@xVVôaV£xÆKnUVm@UmIXm¯¯@WkWVwmkXlaUwV»ULmk_VkK@ÅWa@aUU@mkaIb@n¼nm_@mmK@ULUVVmI@aUJ@XWJ@U`UIkm±kk@@lULmUmKUnVnlUVmI@VkVlxbkIVmLUxkKUXn¦ÆnmVwlnlxlLXx@W¦`"],
					encodeOffsets: [
						[110262, 30291]
					]
				}
			}, {
				type: "Feature",
				id: "500119",
				properties: {
					name: "南川区",
					cp: [107.1716, 29.1302],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VUbVJVUn@VLX@WVXVVI@VUVWxU@m@ĊX@@¼V°aVUX`@_V@VaUUVUWnI@alaLUlLUllLVU@@WV@@IUKVkn@@VlLVwnKUlJakwlU@UnJVUmkUVmXa@wVK@UUw@VVI@ak@alInwlKXUmaUW@wWLkKVak_ÇaUV@XbLVxUlWIk@UK@V@kU@VbUVUlVnLUV@lVXmxkV@L@V@Vk@WbUwmL@JUI@xVxkx"],
					encodeOffsets: [
						[109463, 29830]
					]
				}
			}, {
				type: "Feature",
				id: "500241",
				properties: {
					name: "秀山土家族苗族自治县",
					cp: [109.0173, 28.5205],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XlV@lzn@VnbÆbXKlLUÒV@@llUnxll@z@LU@@V°b@Vn@l@VÑUnK@UU@aUakVm@K¯wklmnnUl`nI@almkIUwmWVkUakkJmUUa@K@aU@@_m@@wUyVUUa@Um@awl@Wka±UkUykIWVb@bUVk@aU@UXUUIWakUWmUxUV@nUVWb@XXVVmXX@VbVLkVWx"],
					encodeOffsets: [
						[111330, 29183]
					]
				}
			}, {
				type: "Feature",
				id: "500114",
				properties: {
					name: "黔江区",
					cp: [108.7207, 29.4708],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VX@V@LV@VJUL@lVnnxlb@VXVXV@@W@UIVK@kUKna@£VWUaVUUalIVJVIUW_lm@bXKV@mn@JUUw@KnIVll@VanLVmUkVKXLVKUIVamw@UaU_lwKlwUWV_Ua@aUa@KUwm_Ó@wU@nkK@am@UkUKmXk`m@@I@K@I@mkVmIUxUJ@kUL@JVVlnklWnn`VzUVnlWbkb@WxXxlJXzWÛlWXnl@Ll@Vb°UJWLX@VlV@bkJ"],
					encodeOffsets: [
						[111106, 30420]
					]
				}
			}, {
				type: "Feature",
				id: "500117",
				properties: {
					name: "合川区",
					cp: [106.3257, 30.108],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XKVXlKVL@UnV@aValXXKU@WVwUaVU@IV@@aVWL@U@anVV@@bVK@UVL@bnJWL@VnUnb@@JnIlVl@@bXIWbn@UKVLVKXLlaV@VVnK@bVLmIV@KmknUUWVI@aVJ@_WU_VmUwU@KVak@am¯mJU_UJUkU@WkIV`UI@JV@LmmU@@mbUzÅ@VK@nUKbakb@UWK@bkVVbVÛ@@`Xk@W@n@lXL@bmb@VVJUn@JnUlnUlmX@`XLlbkJW@kzlb@`@b@b"],
					encodeOffsets: [
						[108529, 31101]
					]
				}
			}, {
				type: "Feature",
				id: "500222",
				properties: {
					name: "綦江县",
					cp: [106.6553, 28.8171],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@¦@XlVX@@UVKlVUX@lanVlUVbXWVXVVVUnKVUlwUwU@UJ@nmVkUVlwXam@VaUUUw@W@kk»mV@UmKkwVKVUU@@LUKVI@mV@XVWxnXVKUUUK@wWU@UUWnUlLXamUIam@wI@K@amImUUkI@makUkKWUUan@wamLVxk@UVmUUL@Vm@kV@I@ak@@bWVXJlLVbVL@@bn@@`Un@WbUKULWVXb@UVmbXWVb@bVmxUKUV@Un@V@V@nmnKlnnWWXX@lKkK@aIVxUlVbk@mn@@U@mbVUV@VLUJUXU¤"],
					encodeOffsets: [
						[109137, 29779]
					]
				}
			}, {
				type: "Feature",
				id: "500233",
				properties: {
					name: "忠县",
					cp: [107.8967, 30.3223],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VLÞĊU@W@¼V@lk@w²mlVUllVnI@VlKUUlIVXUVJVUwl¥UkUKUIm@aU@mUna@XUWmkK@aVIUa@aUVmIXa@Kl@UUVKUIUJmwU@@aWInUVa»k@@l¯n¤mabWUUL@bnl@bÝWVnbU@mLUWk@Wbka@WVUU@UmUmVkUULVlVUxl@L@VbÈÒlb"],
					encodeOffsets: [
						[110239, 31146]
					]
				}
			}, {
				type: "Feature",
				id: "500228",
				properties: {
					name: "梁平县",
					cp: [107.7429, 30.6519],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XLV@VV@b°°nnkb@bnJWVXblIUVxWnUJnVVLVUJlUnLVK@UnUVJ²nKVbVKla@aXlJkKlb@U°£KVIUa@@kwVVUkKV@VUkkUVk±n@xkl@U@»@XVÝĉUJnxWb@UXKkVUbUKWUkVmkkLU`b"],
					encodeOffsets: [
						[109980, 31247]
					]
				}
			}, {
				type: "Feature",
				id: "500113",
				properties: {
					name: "巴南区",
					cp: [106.7322, 29.4214],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nxnVlJlUXL¦@x@Vl@nKVVX@V_V@@KlVXU@lKlxXIl@ÈĊ@Vl@n_VJlnVlnb²VVVJVVmUUkĕUamçU@»W@@ĉnV@XwVU@UUJWUXUW@UKm@UVUIVaUUVmLUVUUUWWXUakVmUkbW@UVkUL@VW@kUW@mJUXVVU@lmV@zklVVkLUl@¦I"],
					encodeOffsets: [
						[108990, 30061]
					]
				}
			}, {
				type: "Feature",
				id: "500223",
				properties: {
					name: "潼南县",
					cp: [105.7764, 30.1135],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@a@a@_kalyX@lIkaWK@_nWVkkmmV@IVmUI@Una@aWK@k@mkbWaknmJUk@mk@@kUal@Ua@Wa@aXLlwUKlkk@KmI@VUJ@Lk@@VUUmL@amJU£kKUaWakLmU@bVVUbnbWV@xkL@bUbxUxVbXJVbUVWIUVU@kLWxkKWV@n¯VUbU@@VVX@VmaUL@VUK@VVbn@lVnI@@lnLULm@Ub@l@na@lK@XVVkJ@b@zl@@VnV@bVb@J@bnXV`lXXmVI@W@InbV@@aVKUblKVLUanLlmnLlK"],
					encodeOffsets: [
						[108529, 31101]
					]
				}
			}, {
				type: "Feature",
				id: "500118",
				properties: {
					name: "永川区",
					cp: [105.8643, 29.2566],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@bÜnWVLXlxVVxXxlVn@@bVblK@a@UnLVJV@@UnLVU@VXaVKVX@n`WUÿ@IUKlaUUUkWyUÛÅÝ@mmkUKUwW@Xk@amUUakKWwXaK@VVLklXVlkxVUL@bm@Vxn`IVxUVkLVUl@@lkXmmVUn@VV@Xb"],
					encodeOffsets: [
						[108192, 30038]
					]
				}
			}, {
				type: "Feature",
				id: "500231",
				properties: {
					name: "垫江县",
					cp: [107.4573, 30.2454],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Ċ°¤nÒ¼aV_lKnllUXVVLValULVW@XamwVIUKkaÇÑa@U@KkVwkUUVKlVnU@aU@VIka@akU@KVL@WÝçUV@VmbÅ¯@LKnnJWVkxlL@VX@VxmnXVWxUb@bkn"],
					encodeOffsets: [
						[109812, 30961]
					]
				}
			}, {
				type: "Feature",
				id: "500112",
				properties: {
					name: "渝北区",
					cp: [106.7212, 29.8499],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@bVVXLa@lnbWn@L@XVlK@VVLUVlbkLUKVVVL@VnXVL@VV@UbVb@x@¦UxVb@bUJL@LVVxlK@nk@U@WUVLlKXV@VblU@UUKVU@wn@VJVanLlkX@VaVK¯@a@U@U@VaUKkUU±maUkm@UUkbm@@Vk@@JwU@Ub@I@JmwUL@a@@KkVÇLkWk@kUU@@xUVmKUnllUb"],
					encodeOffsets: [
						[109013, 30381]
					]
				}
			}, {
				type: "Feature",
				id: "500115",
				properties: {
					name: "长寿区",
					cp: [107.1606, 29.9762],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VVUbXlX¥l@XnVmlxUx@@blVnnôĀlm@aVaXwWUnmUwW@@UkKlwUXmImL@KÆ°na@UUImyU@@yULUUm@@mU@VIkaW@UUV@KI@mmUw@mKUnUUIlVLUb@@V@V@b°ULUbW@klmKUbUIm@@xUVVL"],
					encodeOffsets: [
						[109429, 30747]
					]
				}
			}, {
				type: "Feature",
				id: "500225",
				properties: {
					name: "大足县",
					cp: [105.7544, 29.6136],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XUmaVaUU@anVlKXbValU@aV@@IXK@@bV@VxVK@UXLlUJXa@_@@aVKÅWVkwWawUa@am@kUWLU@kWmX@ykI@W@UV@na@LlLV@UkwWUKmXX`mIVl@bXLWVkbkkx@`VXm@@J@U@UUKUxk@WbUIVl@VXLWJUkUlUImxXlmb@X@VUJUnVbW@UV@@VVX@bnW@LVxUnlJUV@n@VxVIn@l`UVVVL"],
					encodeOffsets: [
						[108270, 30578]
					]
				}
			}, {
				type: "Feature",
				id: "500224",
				properties: {
					name: "铜梁县",
					cp: [106.0291, 29.8059],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VblLV¤nI@bnKVV@Ul@@KVI@UnJ@LlklVLkxWK@bXb@Vbk@Vb@ll@@nVlnIlmXblaXl@W@_Ü@UUalU@aXL@VlabaVL@mUL@UUÇXUWX_WaU»m_@UWULWb@UUVmK@VU@UImK@V@bkLxXblxXUÆUL@b@@`WbIkVWK@VULUwU@@a@WL@JU@@bkVUb"],
					encodeOffsets: [
						[108316, 30527]
					]
				}
			}, {
				type: "Feature",
				id: "500226",
				properties: {
					name: "荣昌县",
					cp: [105.5127, 29.4708],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VI@U@WnaWknwVJVkVlIXWK@UUkVJXal@VwVL@V@V@In@UW@_wlllaXUWK@aUknJW_Û@aWaU@@UVmUUaUImJVnÅUmVUm`kUUVWLnVU@VVmXK@nxmULkxImJ@nU`@X@Vkn@`@nlV@nVJVaXVLnK@bVV@nV@lbXW@"],
					encodeOffsets: [
						[108012, 30392]
					]
				}
			}, {
				type: "Feature",
				id: "500227",
				properties: {
					name: "璧山县",
					cp: [106.2048, 29.5807],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XzVlVVkbVL@JVĀX¼VXbW`XWVÈVVVkV@@UXa@alK@IU@UKWUyUI@wVUUWVak@VUkW¹@WXI@yVIUK@kWwkÑ¯±W@kUb@KkVVVmXJ"],
					encodeOffsets: [
						[108585, 30032]
					]
				}
			}, {
				type: "Feature",
				id: "500109",
				properties: {
					name: "北碚区",
					cp: [106.5674, 29.8883],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XVLV@@JkL@bWb@VU@UlÆVya@nV@nn@KU@IVJU_lJXV@VlVIV`nIn°@blUbKVI@aUaVw@¥@wUaVaU@@UUKWm@UUKUUVLlKkaVUUK@UkLWU@@KXmma@kbWKUU@aUamLnÞ@VWLk@@Wm@ULU@@UKUVWI"],
					encodeOffsets: [
						[108855, 30449]
					]
				}
			}, {
				type: "Feature",
				id: "500110",
				properties: {
					name: "万盛区",
					cp: [106.908, 28.9325],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VIV@@wVJ@InKVxXal@@U@U@KlUnwUW@kVUKUmVkUa@I@KW@@bk@@mU@m@k@a@aIUxmJk@wULwkKmVVX@VXV@xVLVVULmWXwWUU@@nUJVL@KV@UVULlxnL@VnUl¼@l@XVxVVUbn@WbkxUlVnU@m"],
					encodeOffsets: [
						[109452, 29779]
					]
				}
			}, {
				type: "Feature",
				id: "500107",
				properties: {
					name: "九龙坡区",
					cp: [106.3586, 29.4049],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XKL@V@XbV@lW@UV@@VXIV@UVKlL@KnnJ@VV@VU@I@@mVUVWUUmL@V¯LUK@UV@UU@a@U@yU@WLUK@X@KUVmL@@aXI@w@ammVk@WÛwm@UxVVVbVLUJVxVUV@V@X@JUIVbm@@Vk@@VkL@lVLUJ@zWJ@X"],
					encodeOffsets: [
						[108799, 30241]
					]
				}
			}, {
				type: "Feature",
				id: "500106",
				properties: {
					name: "沙坪坝区",
					cp: [106.3696, 29.6191],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XºlUVl@UbVXUV@xVJVzXJVUL@VV@VKn@@Xl@XK@UmÝnKVbVakkVm@kUK@UmIm@LkKULVU@WJ@UU@@VkXU@Wa@@UKWL"],
					encodeOffsets: [
						[108799, 30241]
					]
				}
			}, {
				type: "Feature",
				id: "500108",
				properties: {
					name: "南岸区",
					cp: [106.6663, 29.5367],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VVJVL@bUVVnl`XIlwXJlw°nnlIXW@UÇĉk@WJkwkL@WVkU@LU@U`W@UXUV@n"],
					encodeOffsets: [
						[109092, 30241]
					]
				}
			}, {
				type: "Feature",
				id: "500105",
				properties: {
					name: "江北区",
					cp: [106.8311, 29.6191],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nLVU@wV@lV@XllÈKlU@L@@bVKnx@I@JVaV@x@Il@@Un@laVVn@mkUIm`k@WXJmk¯mkxWIkxWJk_UmVUUK@UU@@l"],
					encodeOffsets: [
						[109013, 30319]
					]
				}
			}, {
				type: "Feature",
				id: "500104",
				properties: {
					name: "大渡口区",
					cp: [106.4905, 29.4214],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@k@@U@w¥WKkVkImUmwa@b@xWJ@b@nKVU@L@WVLXKV@@z@V@bVVU@@VVL°K@U"],
					encodeOffsets: [
						[109080, 30190]
					]
				}
			}, {
				type: "Feature",
				id: "500111",
				properties: {
					name: "双桥区",
					cp: [105.7874, 29.4928],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@WwUwU@kK@KmbU@@V@XlJ@znWlXV@XK"],
					encodeOffsets: [
						[108372, 30235]
					]
				}
			}, {
				type: "Feature",
				id: "500103",
				properties: {
					name: "渝中区",
					cp: [106.5344, 29.5477],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VL@VV@VL@aUKIUU@@JUVU@"],
					encodeOffsets: [
						[109036, 30257]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/fu_jian_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "3507",
				properties: {
					name: "南平市",
					cp: [118.136, 27.2845],
					childNum: 10
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@knyk@KU¥wV@nkWzUmk@@lKUa@aVI@UKUamKUUVaUI@X@UV@K±IUVVlUbUbUL@KWUXmWk@KkXmmkÅKUa@amUbkUkKWUnwUÇwVUUÝUKV£U@nKWwXLVKm¥@wUXkmWk@@wX@lU@yVImaXwV@knU@mbk@mlUXmU@mV@n@bnW@bUIWJImVUKWbUK@nkKaU@W_VUUmWmL@UU@bUWUL@V@bmVUz@`mUUVVbXL@VL@lmLUxmVamXkW@xWbUVbUxkU±@ÅUmmkLUbW@@`kLknVlV@lbXxlVUXVVUU@UbWkIWVUUUJkI@llbUxVL@VVUU°ULUmWXUV@VULWb@xm@UaVLVKUa@w@VbkmVambUUm@@VkK@@bxlxX@n¤@X@@lkLWV@nVkb@bWJXLWx@nkxmmbXn@VWVUn@VnJ@bVXl@VJXnWbX`lLUlJVI@@VXV@Vl@bn@@Æmn@VxXU@mVIlxVnIl@nVJaXI@mlU@aXkVm°klmnVV_na°@V@xÜ¦XKVnnUlVXbVKLXKV@naV@@VVl@@lXblXWnLlbVK²n@@VLUnlV@lXxô°V@UnaUUlKXLVUVVUbVVlUnJVX@VW@an@lb@nl@VU@anUVW@kaUm@InVVKVU@kUW@Uam@km@kVa@a@nwU@WlI@mVI@WXaW_n@nlkkW@U¥@kV@Uw@wU@@IXK¥VIn@nU@`@Xl@VVLnaWbVaUwnU@VIKlV"],
					encodeOffsets: [
						[122119, 28086]
					]
				}
			}, {
				type: "Feature",
				id: "3504",
				properties: {
					name: "三明市",
					cp: [117.5317, 26.3013],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lL@Un@VVnabnUla@Ux@VbULUKVbn@w@XaVK@UVUXWVnVKV¯VU@UUKVwka@klJVIVVXUlJXVaV@VUUVWkUWwkaU@UklmlK@_X@ValKnnÆV²@lVVwUaVXa@wlXnWbnUVwnK@kK@UWKUaVUnV@_VynU@a@UVKVXaV@@VnKnXVVUX`V@blL@mVLXaVLnUJXIVJ@amX@a@mnUV@nVWnkl@naV@ml@@KmKUam@UU@@UlKUVkUK@aVaUwVU¥UIkJ@wmI@mbkwkVW@UXKULU`IVKUa@LkkVmUU@WlULUWÅU@I@WWnU@@w@a@Uam_XyVIVWkk@mwVKXUV@nwVXkWÅU@aU¯KUnK@¯mULXVLnWVbVbUVm@Ub¯¼W@am`kbamLUUUaUXV`@x@XmJ@n@L@xkJUU@kU@mWm@kUUwUUVWl@VUkIy@kkaVUUmIWVXbWxU@kmVkK@nWVX¦WxU@@bkx@VU@Wk@kUbmJUUmkUW@_kKWK@knV¤kIUKWLUbV@Wbk@@VWL@VkI@lUXVxUVU@@mWIV@a¯nUaaUV@Jb@bÞ°VbU@XaUVmL@VXblnV°n@Vnx@VUUUlK@InJVb@Vlnn@VL@VWJUx@XlJUVVVl@LUUUJ@L@lUL°¦kVVnV@xVl@blLnlLVaXll@nVUn@xn@nml°X@lb"],
					encodeOffsets: [
						[119858, 27754]
					]
				}
			}, {
				type: "Feature",
				id: "3508",
				properties: {
					name: "龙岩市",
					cp: [116.8066, 25.2026],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@aI@VUbVb°m@bUXJ@nV@VUUwVW@klJ@UXK@Ul@Xa@UVaXKVLlJU£lm@XLlL@`VXnlVVnIVall@XV@@Ulw@aV@XwW¥XU@mlLnUlV@XwWaXUJVnUVlb@lzlJUVk@UXVVVxlVn@nXV@@lVVlI@w@K@mnI@W@wU_VWbVVVnKbla_nbX@°»Van@VUUaUamXUKWK@a@Uk@wWkXWW@wUUKw@_lywUkU@@U@kamVmXaUVUka@Wk@»UUUVKkbWUVUbk@mkxkKnIVUmW@kUKmXUmVaU@kU@m@KUWVkIWJ@U@UI@wUUUa@KW»nU@mVkUmm@XwWU@UUmL@w@mnVUU@aWak@@amxU@UxULWVXbVLU`mbUImVUbnV@@bVn@bnVWxLmyUbIUK@aVmakbVUXWUlKWbkV@WLUlk@@nbb@lkKmU@UIWJkw¯UUVVxm@@XkbWxXKlUzWJkUUL@bmKkV@@VUIUlWV@XK@VkbWx°xUb@LUbk@@VWb@LXJ@VWXU@@bUVVVVn@VVlLn@l@xk¦Vx@bVJXbn@JlnXxV@@nJ@X@V@lmxbUn@xVL@VVKlL@lnLVaVL@xkl@LxVl°XWVXVlJWnxlJ"],
					encodeOffsets: [
						[119194, 26657]
					]
				}
			}, {
				type: "Feature",
				id: "3509",
				properties: {
					name: "宁德市",
					cp: [119.6521, 26.9824],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@LVKVaVaUkVU²J@LVU@@WVJUbVVnLVbL@VUJ@bVbkL@l@VnyXmlU@xV¦L@lmz@lnL@bVVbVb@lnKVkVl¤@zXV@l@XJVLVKnXVKVnU@wUm@KU@UlVlw@U@U@UaUKlU@kXKlmXIWKXaVIVUVK@KU@@kJVUnLVJUL@VIVa@VnLKUnl`VbVV@Vbn@Vzn@lKnVlIVVKUalkXJl@XXVWVLVUUmVU@Unm£lK@Uk@WUXK@U@WVwVkĠkĢÇ°aUÅUwmaţɱUÇaw±V¹XalKôx@UVaÜʓͿVóbÅLJm¯Vk¦k@mamXkKUULakbk@mV@LkJWb@VkmXk@UVmaUV@amLUKUamI@KUaU@WbU@UUUUIWJUkm@wKkVJm@kxÇVUK@mUVUkmlkkVm@amwLVWU@UbVLkUb@VmK@XaVWU_VJnwV@@kUmWakx@kwWakIWxnbUJz@kVW@@x@XllnVW@xn¦ULWKXxmL@VU¤VLÞVVUÈxVmxXVlLlVanV@bbVLlÆnnlW@LXlWnXV"],
					encodeOffsets: [
						[121816, 27816]
					]
				}
			}, {
				type: "Feature",
				id: "3501",
				properties: {
					name: "福州市",
					cp: [119.4543, 25.9222],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lxna@nJ@xlIVJV¦UVxUb@bLVUlVkL@V@VVn@VbLn@LUlJXblx@lwXbVn@lU@mxUIV`UXWb@nLU@ValUKVaV@UXKnxbn@lUkllnUVnV@VLUÈlwn@UIlLxn@VlXIVJVVVV@XaV@Vb@LnJVbVLnK@bVUnbVUl@nWl@UXalI@KnUl@labVKVlLnWnbl@l¥°UnIÆKôa΀Ua@UUwÇWǓIUWUÅVkƨm@@£@KmLU¤ULˣJkUVǟUUķ@ĉVKUk@Ñ°wôÇç@īé@Åţ¥mīÛkm¼Å@VķVó°ō¦U°n@bVJXVVL@bUakLmx@xmxXzW`XbWnXV@bWLÛ@a@aXbWVkaÝwU@mlWKkLWWkLUKULW@kVmVUUÝUamV¤n@xUVUzkJV¦lJU"],
					encodeOffsets: [
						[121253, 26511]
					]
				}
			}, {
				type: "Feature",
				id: "3506",
				properties: {
					name: "漳州市",
					cp: [117.5757, 24.3732],
					childNum: 10
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@bl@Xb@bVVUm@nx@nKVV@XVWxn@VnUl@nmVX¼@LVbVV@xVJV@@XIlJXUV@Ln@lVV@UbVnnWVL@lnXUVmJLlwnll@VaUXVlaLVUVV@¼Xl@lbUVVWbnnUlb@@VV@aVUmlUaUny@kU@Wkk@WaUVk@@ammk@@U@UlU@aUa@wl@mXLllnLU@anVnU@L@VVV@KlXnWVnVanUw@w@wmnÅ@waUam@UkmUl@@aa@U@¥kôKwÈ¯°w@ŻkwǕaKÑÛk@ĕōřċ£ĵUKW»kÅŻLU@Ulġw@¤VzVUbkKUbmLmlULU¼UxmbXl@bWVb@bUnVUVbULU@@VkbVL@`U@WX@XV@b°@b¯@¤@Xm@@b@`UVVUL"],
					encodeOffsets: [
						[119712, 24953]
					]
				}
			}, {
				type: "Feature",
				id: "3505",
				properties: {
					name: "泉州市",
					cp: [118.3228, 25.1147],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Vlxkz@`xLVV@xXXWXl@xl@V@bnV°@LVm°LVbV@ÆXWlUmxU@WVULnx@llUXUJWzn`Vb@@b@xV@mXX@@JÆVVXVKXkV@nVlUl@KVbULJV_VKLVWX@lUVkIU¥lIVyVU@wm£nUVWU@am@UmWw@UX@@amVUn@@aUUlUVanaWUXWmUnkK@VUlVVUUw@XLWWXma@knmbVbVXbVL@XJlInlLwmXów@çV»ÇçŋaķƧóƅóKġ°nÅUķƑUÇW@¯xÇ°öÆlVn@lla@Lb`@VXVVx@V@bULVJUkÇ@¼XUKk@mmULkaWbk@x@UkL@a@K@U@UmKmbU@kV@UmVUbUmmXkW@LUU@U@KmVmU@bVmKkkWKnk@@xVb@bkV@V@Vl@nn@bl@VUXbl@XlV@@lmzVVbknUVb"],
					encodeOffsets: [
						[120398, 25797]
					]
				}
			}, {
				type: "Feature",
				id: "3503",
				properties: {
					name: "莆田市",
					cp: [119.0918, 25.3455],
					childNum: 2
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VbÞVVnUlUX@VKVLlKXXlKXLnkV@ÞxlbXUWab@bÜ@XK@aWUXmWaX_Wynw@wnwlKbV@aUKWUUI@amV¯Ŏ¥ô¯ĸUUÆ@n»¯aƿé@ţ¯nĉĬÝKóó@ÑU¼@èxWônxKmkkJWI@UKWaUUaamn@lnbWXXWK@VxUVkUV@ULmlnVWXXVmbUbkVVV@bm@UVn@bW@@VXxn@Vn@bVUX"],
					encodeOffsets: [
						[121388, 26264]
					]
				}
			}, {
				type: "Feature",
				id: "3502",
				properties: {
					name: "厦门市",
					cp: [118.1689, 24.6478],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@VlUV@nanL@V@V@L@blK@Vwl@XalbVKnnl@VLW»È@lVUIVK@a@UUwWUU@_aK@bkkm@UkõÅxóLl@¦@Vb@bk@VnVln@Vbb@xmÆn@x@xx"],
					encodeOffsets: [
						[120747, 25465]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/gan_su_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "6209",
				properties: {
					name: "酒泉市",
					cp: [96.2622, 40.4517],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ÇnÅaĉ@U¯¥UŹ£WUýUU±JkkUwyÞIČxĊĕĊ¯¥ÆUkţUÅÓ±¼IUx¯UÒƑÝÅ°KÝnğ°ÅU@@Vn@þ¼¯WnŎ°XLWlnVnbWnVXxmbabóUlǕUUaIUmlU¥k¥ĉwkkÝɛa@¯U¯°mVkVnKlōÑÇÑU@klUġkUŻnUW@¯k»mWV£UKnUmUww@UIVaXwm»Èmmwn¯ċ¯LĉUJUalka±Va@Uk@ÛÑ¯WmnUaɝ¤Ûmn¯m±x@wóxÛLġÒUx¯VÈJUbózÝÇKĉ¯ōlÝUÅWl¯nťbÝ@¯ǩLġmV@Æ¯ĢkÆmĊkVťLɃmÝXó°@ĢbVóVÝ¦ɱ@ƧaġUVĠÇÈV¼UVţwmbJÇwˋaXmÇ¯KkkmbXm¼V¼ǬŚ²¤ôŰÆƴô̐ŤǪnɆӨ¼ɆLÆłUĊxŎƞȘǔˎǬǪnƨŮǬö°»ġÞÜÆĸÒĊǀbƾèôÈ@¼¯þŤĸƧ°VĀ¯b@lÈĊʠń̐ȘKǀֲॗţÿǕý@ʊǓƨóÆÑǖŃôw@΋ʈƆÅÈVVĊVóĊÅ@ÞƒĬV@Þī@°V@ĸĢ°XτƜĠ@ÈaÜ¥ŐƅnğóĕVġUůƿŋĕa±VUťÇğÑ"],
					encodeOffsets: [
						[101892, 40821]
					]
				}
			}, {
				type: "Feature",
				id: "6207",
				properties: {
					name: "张掖市",
					cp: [99.7998, 38.7433],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ÈÒŎÒkmLUlU¯nV°@°ɜbÞĠaÈ»ĸlLVUÈ@Ċ@ýUm@@ÆVĠ¯ÞmLÆ¯ÞƒÑ°VVwJ²»ÆÔVlŤÅV¦ĉ°ĉĖċwÝJzVxll²IVVVþX¤źV°¦VĊ@ÆbÈmǔLĸĠ¯Ģaô¯ĸmÆÛUlÇĸk°XyĊUǔVǩnmV»a@ýnK°n@l¥@»żĊ¤mç@£ČU@mmVkÞUƐ±²¹°ĠwÅƑŃU¯V¯aÈŁÇ»ġn_°xŎKlxklx@Þw@Æm²bÇ²LlkWXať¯ĊaÑK±w@wUÅçV±Uk@@¯¯xU±±UU°ōxVxÅÔō°ó¯UÝ¦óbÝþ@ĉÈóUVUx@VUVÝwÅÈÇóVkk¯JÇkmmL@KÇx@bk@U°ķ²ó`mn¯°UwlÅkU`¦ɛôķz@ÅnÇ°U¼¯KmVk²J¼ƏÞķô¤UL@mnğ`ÇnUxÇ@ÛÿU@kŻ@x@móJkÅ¥VŹĉóÒĉlċ°ķUƽÜ@x"],
					encodeOffsets: [
						[99720, 40090]
					]
				}
			}, {
				type: "Feature",
				id: "6230",
				properties: {
					name: "甘南藏族自治州",
					cp: [102.9199, 34.6893],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ÞnKlnwX¥WÝXkxÞUn°aĊVnUUKlÞĶWXnĠ¥ô»@nmVL@¤°VzJanU@aÆwna@kU¯yX_aĉbwéXkWwÅa¯V¥m¯UI@@mb°aÈçU¥@»knwɜƇ°I°ÑÈmVU¯Xa@wW@wV¯Č¥l¯Uwnm@kaUaóKkk@Çab@ÒWa¯IÇxÛam¼VUxÒl@zÝÒ¯bÝaĉVĉwÇWzJmJn²mÜ¯U¯ĉ@ġ¤Åb@²nml@@ULVxVU¼Ålmab@°l@WIU¯@m@ó@UzţyXÇUÇVUUVLkbWakVWmUbkkKUÆ»n°Knk@aUVmnk»l¯Ģlw@_kKVU@na@lUk@¯¥mV@kmbWb¯Åõa@mkU@kÇkU@`@óóbl¼Uxn¼lVÈx@blVkVVn`XÈġÈ@ÇK£ÝJmUUnUĖmlUmKUnVÅaUwUĉ`¯n¯wW¼nxV@bĉnkIċŘkXU±ÒxÈ@X°`lVIÈ¯ĊVVVan@VaUVażVmblkÈWWIXaalL@wVbV¦lL@lĠnÒUnkL@ÆÞkÞKbñþW¦ÛċVULUºkÈlŎUxÆxÞUUxÒx@XbL@lÆ@ÒlXVln@bm¼J@Ånx@bnĠmxVXmbÈè@Ċ£ČWw"],
					encodeOffsets: [
						[105210, 36349]
					]
				}
			}, {
				type: "Feature",
				id: "6206",
				properties: {
					name: "武威市",
					cp: [103.0188, 38.1061],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@±¯¥@klwU»ÞÝmwKm¯ç@kVÇUL¯lVUKġġm@a@U@X£°l°LŎÇ@aōVÝwÔKUÅWJ¯lm@ÛVWa@klĉUmaLUanak¯J±KkXóÜÅx²Ç@nUÒĊb°@ÆkLXÇÆ@xÝnxWxţ¯¤I@ÆnVVVlU²ÆèV@x²xLÒĉbŦ°WbXklÞ@l¤XĊ`wl@ĢÈŎm@bnVUb@ÈÆÛLèÇUÒÅ¦lĸ`°ĮʟÆǓbĉôϚĊÆĢnŤé΀ÑĸĀĊ¦@@l°l¦Ȯ¦ɆÞĊKŤĵĸů»mŁyġķŭ@Çɱȭ¯mƧUĊķnŁŻ»UaUƛɞÝƨů"],
					encodeOffsets: [
						[106336, 38543]
					]
				}
			}, {
				type: "Feature",
				id: "6212",
				properties: {
					name: "陇南市",
					cp: [105.304, 33.5632],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ÈÞ@l`UmV¼@nnÆwVlnVVaLVÈ_ÿÞ@naxÆ@l_@VxnK@llLnxmÈŎJnbUxI°l@n¦lÈIlmX¥k°@kJk²é@klaUaVaU@@ÝnIWnmnxkºÞaV°V@nwKxôbÞ£VUbþLn»mVwIJ°@nb@°°IġUkÇKV@Å¯»lLnm£@anK@ÑÜn@»mL@£ykUUmbUÞÝ@kyÇbó»XUxWVzb±mÝbXawUamL¯»@wUKVwm¯ĵJ°ÅUWVkKVk°wÈVVÑlU¥kmVamknUw¯¯bċ¥ÅKkKkVċVk£kKVwÑa@kóyÛ¯ÇVkówXō¥Ç¼ów¯U±k@xIĉÒÅVmÈnÜ@n°bUbÝVUnnJ¯Į@m¦nVÜ@L°JXbÑ@aÈb@llôLVbb@lmnVxk°ċ¦U°@xX@xWb°UVÇn¯Ò¯Jɛƈmxl@¼"],
					encodeOffsets: [
						[106527, 34943]
					]
				}
			}, {
				type: "Feature",
				id: "6210",
				properties: {
					name: "庆阳市",
					cp: [107.5342, 36.2],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@kwĉ»VamV¯wIóVkl¯KmVō¯ÝWkL@bÝKō¦@@Lx@b@la@km@@l¯nm@UaÅ@óWUXm¥nw`@UUxķôÇ°ğ¦@VJ_nIVnalxkXJWn¯nVLxl¤nnVbklVX@xnxmV@bUK@nm@@xV°±aÅnkUWnUax@mn@¯LmUĀlU@lV@blLUblxklkIÇx¯°UXbaVUnV@°LUlnbX@`°nVmbnÆmVkLmK¦U@Xy@kl@U°K@¼XbW@bWnLVaVVz@xlVČ¥lbUxÞlVU@nÆWôn²VJlUƧLnmÜLXan@mw@wlUlV²mblwVÈlLÞ±@lVnUlxnkma@mkJ@kXVU@mn@¼VXUVlLnmVbôaVnWV»ÈUl°È¯ÆInÆU@kk»mKkÆġk¯@»mk¯@óÇlÇ@VykklUml¯Þ@w"],
					encodeOffsets: [
						[111229, 36383]
					]
				}
			}, {
				type: "Feature",
				id: "6204",
				properties: {
					name: "白银市",
					cp: [104.8645, 36.5076],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VKUÈl@è°nLnxÝÞV¼kx@l¦²°ĊóĠĊ»@ÈxaĊxlwÈVŤa@¯²aÇ£Jk£lnUÞ@°ô@ywl»lIX¥Ǫnw@ÑÞWlaÅlL@Uwĉakl@¯mwna°JV¯nUVÓÞÑm£²óWaUÇ@óÝUçV»ÈkkW@¯xV@XlK@wX@Vmm_@wÈÝKU¯ÇwVwÅK¯VkJXkWVaIm¯UkÇlVĀV°mxók@¼óWxĉÜU@UbzÛJÇk@ÆnVlÔ@kxô@ĬWL¯K@aÛImm@IUa@UÇêU¤VÒÇx¯ÒVlk@Wbĉ¦UbkWV_y¯Laók@b@nmbkx°"],
					encodeOffsets: [
						[106077, 37885]
					]
				}
			}, {
				type: "Feature",
				id: "6211",
				properties: {
					name: "定西市",
					cp: [104.5569, 35.0848],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@aV²wVJV_@LlanÅllŦçÜÓ_lnWaôkxUbmV@È°lènk°l¦`@nnL@ÈlÜIyVaV@ĊÛXwô@»lônwU¯ÿUÈkl°VnJUblXWIl°UV@aVVVmnL@lUUwmk£bV¥VUVwÛlaÇÝÞmk£LUy¯L@WlkKW_XaWmġU@akakXkmVwmŹVUbWónmwnWW£KÈnV¥¥Æ_klWbU¯V°aôbnaVwmaōInÇmwkK@kmLUw@`kÅ@wb@mÝĀÇ`UKUbmUUkÅxmm@»nUVk_Ý@Ç¦VÇè¯ban@@JV°nU¦°ÆbXxWlêxĊabW`zV°@lmbÅx@bmVbI`¦@ÒUVUI@ÆL@b¼@@lmxnL°ULÞğÞ°kLUL°xVnKVl@zX@"],
					encodeOffsets: [
						[106122, 36794]
					]
				}
			}, {
				type: "Feature",
				id: "6205",
				properties: {
					name: "天水市",
					cp: [105.6445, 34.6289],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@UyÈVVUnn@VU`UblzJnk@VbKU°lwW°nkVUÈl£°V@n¥VklkU±Unlw¯UkwmKUlmkUmnkym@Å@UmWÈU°l°anlJkUKlU¯Èm@kmWV»kkÝLUWUx±b@¯ma@¯IJUxnm¼KýaVUÝ¤óawLmxU@¯UbÝ¹lmwmnXmJ@ÞV@UbVbkbl@±êlIl¯@lW¦knÇJkm¥k@¯Jmbóa¯bUV°akXlÅ`¦U¦ÇmLX¤mXnxmôXaVźUnUxlnlWbl@bĢVnXWbX`lLXk@°KVzKl¤nÞÝÈkbÜ"],
					encodeOffsets: [
						[108180, 35984]
					]
				}
			}, {
				type: "Feature",
				id: "6201",
				properties: {
					name: "兰州市",
					cp: [103.5901, 36.3043],
					childNum: 5
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@lW²L°IlmbVbKnbĊVlk@XbÜU@kn°XIÆVLÓÞxŎUlôb°KzU`lXVaĊ¥Xal@kU°ÑÈwUÑV£ÈéV@VbJ@nnÜJ@bL°XK@īówl@kÓmUÅmK@m_k¥l¯mkçÇ¯@nUaVwólXbmk`ÛÔťèkkmÆkbK@U`UI±xUbWlXmbVbÅÒólkIWJk@zKŻ¼@xUxó¯LWb@ÅÒ±¦U`nbťĀUVbLU"],
						["@@¯lwna@mōÈ¯K¯kW¤@@V@bĢnĢVLU°k"]
					],
					encodeOffsets: [
						[
							[105188, 37649]
						],
						[
							[106077, 37885]
						]
					]
				}
			}, {
				type: "Feature",
				id: "6208",
				properties: {
					name: "平凉市",
					cp: [107.0728, 35.321],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ÆLUxÈxV°LÇÞ@xn`Ü@X@nĊÆwnJmwUxaUkw@V@waVmlLXÝl@XVĢmV°@nl@UUUWK@wÿVI²Òlm@nÝĊýVV@nJ°Ułm@kV¼nKĢÈ¤ôKblnKllVk²aĠ¥È¯ĸóVw@V_xmn¦VWôXÆ@Vbn@°m@kn@@lb@ka@wK@@UlKVaWXW²¹lÓw@_°n@@_lKÅķW@mLUWn»Û@l_Ç`Ûmm°ÅbWb@VWbUUKÇÅaġlmkUġl»LlUm¦@¯U¤ÇkVUml¯Xx¯kVLUa@mlIkyVa_UV@mmUVUÇVzUxUVU¦a¤lnVxVk@mKUnUU@bU", "@@@ż@mlkġk"],
					encodeOffsets: [
						[107877, 36338],
						[108439, 36265]
					]
				}
			}, {
				type: "Feature",
				id: "6229",
				properties: {
					name: "临夏回族自治州",
					cp: [103.2715, 35.5737],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@ż»Ly@lXIJlôkÆÑUanaWXkW@yk@ULmUw¯KVlK¯ĠÝÝVK¯mKnwk@@»@aK@ÅVJVU@Ñ¥_Uy¯@£UKmn@ó¼ğ¦WmĵXÝkVLmVĉU¯bmÝVwWlXÞW¦xkmmLÝ±U@VÞ@ÅÈW°XÜ¼ƨyUĮnWnXÝxUx°lVXJlôV"],
					encodeOffsets: [
						[105548, 37075]
					]
				}
			}, {
				type: "Feature",
				id: "6203",
				properties: {
					name: "金昌市",
					cp: [102.074, 38.5126],
					childNum: 2
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ĢÈ¼Çł°bU°VƒńÆǖŰnÆōĬǔaʠÅ¯ĭ_kķÆ¥VÑÈçÜKÅ@ÇVaUm@aōnġÇk@xĉ_Wk£@Ý±KÈ±aÅn@Ýx@kwlkwōL¯wm`"],
					encodeOffsets: [
						[103849, 38970]
					]
				}
			}, {
				type: "Feature",
				id: "6202",
				properties: {
					name: "嘉峪关市",
					cp: [98.1738, 39.8035],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@llĊx¦l¦kVVnJVbǖVkôVabnaWwUXmmamUXkWKō¯Xm°»ĉÇ@UVKķkÇ¼ğb"],
					encodeOffsets: [
						[100182, 40664]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/guang_dong_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "4418",
				properties: {
					name: "清远市",
					cp: [112.9175, 24.3292],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lÇ¯kÿaV¯VaÈU¥ÆÇIlxmnbUxlUôl°kWl@ôVwUanUl@xVkaX¥kU»a¯±@kka@UwmUkwJk±k@L@ÝWUwVÝxÇU¯ÇX@mÅ@@yĉ£VmUwȗ»ÇUnlUnWU¯`Uk@@x@bÇxX¼VV¯LĀkÝL¯@VĀ¯lnĊW¦kVÇôkUÇUK@ţU@aóÜUU»@¦k@VxKVbn@Æl@xbWnlUlxÈlVÈ°Æ@¼@xWxŎVK°¥nÆkŎ@ÈÑmK@¥k@ô@nôV"],
					encodeOffsets: [
						[115707, 25527]
					]
				}
			}, {
				type: "Feature",
				id: "4402",
				properties: {
					name: "韶关市",
					cp: [113.7964, 24.7028],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@WXk±Ñ@UwmUwĉwlmn@Æwn£mkI¥ÇÅ@¥aón£nWWw£V`Þ@nVml@xô¼IV¥kUmkamUkVWwÛ»mó£UVÅKmn@x@kbmm¯aXkaVĉaUbÝ²lIlxnVVx@lb@l²°bV¼lW¦bUlwk@mVVbUxó@kX¯lókVkwVmankwJÅÈ¦ÇVUbU°blĀ°kÈ@x¦ÆÜ°@°¦óaVUôlUlbXl@nÜVnKlnIVÞ°W°U@bnm@¥IV²Ul°VnalzXyl_Vyƒ¦lLlx@ÞbKmknVWanwÑVwČº@n_ÞVaVÜIl@KÈVJ@a£È@@kmaV¯W@_a¯KmbkÇkLmw@Å¥"],
					encodeOffsets: [
						[117147, 25549]
					]
				}
			}, {
				type: "Feature",
				id: "4408",
				properties: {
					name: "湛江市",
					cp: [110.3577, 20.9894],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@kX@aUUċlkJk@wVJXUWk°W@nKnwlUl²blU@lIl@XbWxnm@lW@wwUJX¯VU°`ŎóˋkÝÝkÅ@ÇmğÈřmwaĵVxUÛ»°ĠǷnýmóX¥ɅĵҏÇ@°²ĊUĖ±ĮU¤Ç°Ā¯ɐnżUĊĊĬV@è@ÔÒU¼l¤nĠbêVĠ°ÈyzVaVnUÆLabVlwÆ@"],
					encodeOffsets: [
						[113040, 22416]
					]
				}
			}, {
				type: "Feature",
				id: "4414",
				properties: {
					name: "梅州市",
					cp: [116.1255, 24.1534],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nÔlW¼x¦@lVllLkèa@z¤Ė¼UxlnUKUbÝlU¼lb@VxVklJÈwV¯@ĠlÛĖnbkÆźÞUÈôklmL¥LWnKUkVa°Vx@IVV@x°bUkaa@mV@@ywLÑUwVUVUbÞVVann@XwÇÿ¯²aVamkXaÆ»@»nw@¥UXakbWa¯KUw@¥m@kwmLU»UUJ@kmU@UUWU@yanwmçÛl¯¯UmKUmwVkmÝXbW@XWÝbk¯@±w@»U@W¯Å@Ç¥UU@IUakJĀê°þXkam@_J°m@X"],
					encodeOffsets: [
						[118125, 24419]
					]
				}
			}, {
				type: "Feature",
				id: "4416",
				properties: {
					name: "河源市",
					cp: [114.917, 23.9722],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@°VlmX¹laĢÒlm@V£@¦Ģklynn¼lW°zW°VbÈV@lÆbnnJkXVÆaÅW@UUw@kaV»ÞkVaVLkmVw»ĕ£@yblçkKkU@k¥wX»kmÓ@Wn¯I`@nlbWý¯éÿlI@XUmWUw@@UJUÇmKUV@xţk¯¯LWnUxK@Å±»Vwa¯@¤WX@Û¦@¤ÇIÈ¼WxX@WxwUnVbÅèmVa±²UWl@klÈ¤nôÜ¼XxlUnVlbVnlU¦Jó»@wnkmUÝ@U_¤XxmXm¤ôb@¦ÈÆ¦lJn"],
					encodeOffsets: [
						[117057, 25167]
					]
				}
			}, {
				type: "Feature",
				id: "4412",
				properties: {
					name: "肇庆市",
					cp: [112.1265, 23.5822],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@l@¥@V¼VôÛ@bV@ŤVLÈlVÈólUX¥mĉ°kÿU°@ÞKlÿ°KUUW»Èw@aw@@nm@w£kÓVUVnKk¥£Vam@nkKkbÆǫmakmLU¥UmÛwmVUmUJÇaUxÇIn`mb@Þ¯b@nJ@nlUVlVULW¯Û`Ç_¯`m¯IbĉWċzx±Jx¯ÆU_k@J@UmbXôlLn¦@¼ĊxlUXxUbLĠUnVĊwlUb@lWXm²@ÞWxXUnb"],
					encodeOffsets: [
						[114627, 24818]
					]
				}
			}, {
				type: "Feature",
				id: "4413",
				properties: {
					name: "惠州市",
					cp: [114.6204, 23.1647],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lbW°bnnla@@wnmÆLVUkÇl@XkV²±bnUÆçUaVmxXw@WXwÇ»ÈJ@£Ü¥@XW@£°bUx²¼@ÆLVwmX°K°Ťl@wVUnLÈVVIky±wkKU¯ÅkXġÑÛlwUwlm@mnKWaÅm¯óÇmğb¯alĉUwķbmb@lÞÒVnmĀŹ@VbVUnmakLm`@xĉkklVÔVJVnlVUnmJmaLUblzmkLaō@@zV¦UV²kJnÜU@VXUL@lJL@bÝ¤UnVb@xVnlK²Vx°VxlIlkVl²k¤@n"],
					encodeOffsets: [
						[116776, 24492]
					]
				}
			}, {
				type: "Feature",
				id: "4409",
				properties: {
					name: "茂名市",
					cp: [111.0059, 22.0221],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@LnÇlkKnkÆLUmÈxlUJló°n@ana@@X_@mÝóóU@aaU¯mL¯kV¯ÇVwkw@V±Ŏ£@@alw±Vk@mÅm¯ÿÅƧIÇ`ōô¯_UVW°IVx@xkX@mnwXWa@kkJ@kVa±kkVmxmL@¯XXlWVUI@xlIklVČV@blW@@nUxVblVxkôlxnynIÆ»Æ°aXwlKbVnXbL¤kLèVV¼²IlĠVXynz°KVx°@VlLlblK"],
					encodeOffsets: [
						[113761, 23237]
					]
				}
			}, {
				type: "Feature",
				id: "4407",
				properties: {
					name: "江门市",
					cp: [112.6318, 22.1484],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lUXx°JWnnÆXVWX@ºVLV¯nUVnbôxaXmWXIUb°xlKl¯KxXÞ°XÈ¥Ü@ĉÞUç»nóVmax¯UÅU¥Ý¯@ç@ș@çĉÅUmUç±ĉKÝxÝ_ÅJk¯»ó¯nmèkǀWx¼mnUÜġ°@¦@xLkÇaVnUxVVlnIlbnÆÆKX¦"],
					encodeOffsets: [
						[114852, 22928]
					]
				}
			}, {
				type: "Feature",
				id: "4417",
				properties: {
					name: "阳江市",
					cp: [111.8298, 22.0715],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@°nKV°b@bôVÞô@nVlÒôÆUnlnn@lmkmVkaÈkÆÆk¥ÅÞ»ÆKXkW¥ÅLmÅkamJUkUVwUmÈblKw@@¥Ģ¯VÛnm»Xwlƿ@kbWaʵ@óLl¯ƽ@Ln°Æ@nUl²kxb@@ō¤U²@lxUxÈU°l"],
					encodeOffsets: [
						[114053, 22782]
					]
				}
			}, {
				type: "Feature",
				id: "4453",
				properties: {
					name: "云浮市",
					cp: [111.7859, 22.8516],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@VIl@`V°Åw²IwČyĊXa°Jn°_È`Ü_°XKVkUUVk@mmI@°a@Ýnam_ÈJVwlĉX@lUómaUmVU°UK¹@WXUWmÅXm¯IWwkVWlÅLÝ¼Æl¦ÅÅÇlbUllnknm@kmVmóÅkÑUW`@@bmb@¯mkôIkVÇwnVÅKmlLklmÈKVĊK°²`n¤nUbWlxVxLUx@°nXm`VklVxmnnx"],
					encodeOffsets: [
						[114053, 23873]
					]
				}
			}, {
				type: "Feature",
				id: "4401",
				properties: {
					name: "广州市",
					cp: [113.5107, 23.2196],
					childNum: 13
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Ș¼VxUnĊ¤@z@Æ@nÈW°ÈVwUÞVxÞX@Kl@ÞVaĊbU@ml£k±lUkkJw¯UUw±kLUm@waUVmÞ£@aKkI@KVUW@ÛVmlIU±VU¥@yğzƧÇƽĠřÅnī±m@²¯l°@nÝÆóUll@XnÝVU¦mVV°V¼Jnb@°mbn@²¯¯wVw@@nmxX¤¯L@VLUm@@l"],
					encodeOffsets: [
						[115673, 24019]
					]
				}
			}, {
				type: "Feature",
				id: "4415",
				properties: {
					name: "汕尾市",
					cp: [115.5762, 23.0438],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@@VxnXWV@bVJV@ÞÅU¥Ċx£UWUwÅUU¥WVUkĊÇnkV`°LVwnU@lbĊ¯Vnal@@çkUÝ¥ġaó¯ÅaÅLŻÆUýmy¯ó@ĉÆóȯwÆXbmL@nknVxkxÜĢÒWÆlV°Ll²xlz"],
					encodeOffsets: [
						[118193, 23806]
					]
				}
			}, {
				type: "Feature",
				id: "4452",
				properties: {
					name: "揭阳市",
					cp: [116.1255, 23.313],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VÈ¦Æ@X°V@@¼x²°@lÞaWXX@aÞWlnUxVnnL°V@kmĢl@ak@mlk°aX±nwm±²¯JV²@wW_maV»U@m¯ĉUÑJlabVnlĸLlƅÛÇ±wÝ@ĉxó@è@kmbUĉ°ka@mVxU¯KU_mlĉÈVlXUV¦ÆVxVVX¤ĉwV¦ÝÆ"],
					encodeOffsets: [
						[118384, 24036]
					]
				}
			}, {
				type: "Feature",
				id: "4404",
				properties: {
					name: "珠海市",
					cp: [113.7305, 22.1155],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@è@Þ°V¦VÆ°wnbUÆ»nçÆ@nxÜ¤²llU°VnÈJÞ°UôéķUklô£VVˌKÞV°£n¥£ȗÝy¯¯mÅkw¯bÇĔğ@Ýn¯ĊVğōŁŻķJ@Ț", "@@X¯kmèVbnJ"],
					encodeOffsets: [
						[115774, 22602],
						[116325, 22697]
					]
				}
			}, {
				type: "Feature",
				id: "4406",
				properties: {
					name: "佛山市",
					cp: [112.8955, 23.1097],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ÈbInVVnUÜxnVV¦nKlnbÅǬlalL@mnUb¤l¦LUmUVlÔ¤@xmnVl°_XVVmkVmÈ@kn@VUK@°KW£nw@m@Ux°x°@±mna@¯amIU»U¯nUV¥ÞUWmk@Vk¯UknÑWÝĊÛ@Ç¦W¯WÝwLk°kL¯wVaWJXWnbwkVW@kĊ"],
					encodeOffsets: [
						[115088, 23316]
					]
				}
			}, {
				type: "Feature",
				id: "4451",
				properties: {
					name: "潮州市",
					cp: [116.7847, 23.8293],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@°Üknèmxbz@VVX@VnV@lIVVV¼nKlxn@@¦Vx°LXblaWbV°£¯W@nW@aUñVwW»@¥ŤÅUÝǓÝóV@ńÇkUVmIUwÅVWÇX¹@W¯bkl@nlb@kġn@l"],
					encodeOffsets: [
						[119161, 24306]
					]
				}
			}, {
				type: "Feature",
				id: "4405",
				properties: {
					name: "汕头市",
					cp: [117.1692, 23.3405],
					childNum: 2
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@U±°I±n²mx²@WºXÈÆUVxJUnlVÈ@ŃôUǔÞVçn»VyĢÛVm@»kaÝUÇ¼óÛÈķKċ¥X¥Wwğk¯@wķKkUmabkIVÒ°Ċ@nVU¼bn`Xx"],
					encodeOffsets: [
						[119251, 24059]
					]
				}
			}, {
				type: "Feature",
				id: "4403",
				properties: {
					name: "深圳市",
					cp: [114.5435, 22.5439],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ÞL@xbVVK°X°Kô¥Vw@anUèlkĊl@wn_lKnbVmUaUź@nÿUmÝÑ¯Ubk@ÆkxŻ@aÇXwJ¯LķÝUĕóĸóêWº@b²nmĬÆ"],
					encodeOffsets: [
						[116404, 23265]
					]
				}
			}, {
				type: "Feature",
				id: "4419",
				properties: {
					name: "东莞市",
					cp: [113.8953, 22.901],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Ŏ@blKnykVaKnbnIVmUkUmUIUÓçmV@bUxó¦¯LW¯LUUa@wÝKğŚƾƨÈĠy"],
					encodeOffsets: [
						[116573, 23670]
					]
				}
			}, {
				type: "Feature",
				id: "4420",
				properties: {
					name: "中山市",
					cp: [113.4229, 22.478],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XÒlmV°ôÞÅ@m¯°k±@@aX¹¯VÝÇIUmV¯kk±Û£mw@ÅmèÅ¼mô¼èV"],
					encodeOffsets: [
						[115887, 23209]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/guang_xi_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "4510",
				properties: {
					name: "百色市",
					cp: [106.6003, 23.9227],
					childNum: 12
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lklWXL@VIl@XnJn@VUUalk@mK@kny@UlU@a°UU@VmaU@Ua@UWw@n@KmLm@alkmnIm@an@VIUamWÅImwU@@a@KX@JVLUVmUaVkUa@m@@Ulmkk°UaVUlKXbVwVIkaVmUk@KVk@aaW¯m@w¥laX@KmakVmnUl@nxVKInU@yVaVIV@na°KlxX@@_lmXUV`VIVV@n@lbn@@WUkValK@²yl@VUV@@K°L@KU@@UVaXIVVV@naVkVa@K@UUK@UUaLWaw@m@K@UVV@mVUUVKnLmVLKbVK@UUIkmI@mUIVK@IUK@VkL@WU@mU@WmUk@I@VJk@WwX_@amK@UUWkIK@LVb@mVmakL@J@bU@Ux@xbmI@`Iwm@UbmKUaUWa¯UkJWV@XJUU¯LUmV@ma@kkamKwLUUmWVkkm@aVUUkVKnVVUmXK@UW@km@Ukkm@@W@UkUy@I@aUUmb¤U@kUmL@bmJU@Ua@wkLWWkL@U@VaU@LUakKWbkUWVkKkLVLUV@JVbz@V@VmUU@kVmK¯@VU_VWakVmIUKUaU@@bml@XU@@V@LmKUVmVUKKbkaUXKUL@x@V@l@mxU¦V@lL@V@Ln@@VV@nlKUaV@nLUbmJnL@VWLkbmV@@LWXLlxVVIVV@x@V²blUVmLVUK@kWWXUlV@Xl`LXl@@Vn@VnbV@lVUVUÈVb@@`UXU`l@@XUVm@k@xmVknUJVXUbmKULmbx@VlJ@LVbkKUbVLÇUUVUVmU@VaUkUKVUwmLkUUVVlbkaXmwKUVVU@@V±Uk@VWUUm»XamUbKk`U@UnWW_kKmbUVUVmnUV@nJVUlUbU@UV@n@JmI@VmbnVUXlx¯kKmnVV@L@VbkVUmm@Ub¯LmlUL@VWLkmkLmmn£WmnKU_mWbnbmx@U¦UJU@Xmlk¦@mnUUm@@Jn@lVÔVJnIVWI@aÆK@I@aVKIlÞnnl@nl`nbÆX²l@xV@llbVn²VVl@nnV@IlW@Un@@kVa°KnÈmVaVXUlaVÈUVlwôUlynIVaan@lVXbI@n¥la@K_n@bÆx@XnJVnKVz@`VXVU`@b¦UV@VIlxUnVKXÈbVllbVbnVn@"],
					encodeOffsets: [
						[109126, 25684]
					]
				}
			}, {
				type: "Feature",
				id: "4512",
				properties: {
					name: "河池市",
					cp: [107.8638, 24.5819],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lLVlbVV@nXVlI@JVXmnW°bIVV@ln@nalVUbnW@kVkÒlbVKn²°bUlV²@X@`nbaUI@°wlU@aXJVI@aVK@wUamIXm@XUV@@bV@VmImnUUwVaVKXUnVK@akVwV@nL@UV`n@@XlnIUJl@X¦V@aUIVm@anV@UwnL@VlbVL@KVVXUWwUUVUka@UVJnUlbnalbVVn@°LV`Þ@XVxV@@bVlUVVbXnWlXnml@XXWVXJmbUI@VllUVkn@@VWV@Vnb@VXUJVnn`lLVka»lVLnw@WV@lInw@WnU@U@mknUVóKwUmUXUU@@wVJVIl@XKVVVbVIJ@Un@lVLnmb@U@Ul@nU°VUVJnnVJV@@mVU@@wkUVwkKWkyUUkU@alkÈ@lJ@xIl@UUWVkUw@Kn@@kmaVUlUULÇUUKl@UUmL@aXU@mlUUwmKkUUVKVUaKUnK@U@Vl@XUWUKlwX@b@K@XkV@UwWJka@aUwmV@U@@U@wUm@»kLWVkIWXnmV@VkbmKLUbkVa@aa@@aVU@aVak£@±UkVU¯VUUJVUI@kxmUmWUbLw@K@aU@@aVU@Kma@aka@_VWkk@UWVUKULWKULU@KUnwVaUKxU@UmaLm@kVmVa@UkmI@@KmIkxU@@KU@mmakI@VLkmWkkJ_U@V@L@nxXbKVb@VVL@V@LUbUlmbU@UUWJUb@VV@@L¯K@LU@UVk@±z@kLUbVl@Xm@akm@U@UUJU_VWkn@`W@kw¯LmbU@UJUb@zmVJULmwk@mVUnlnb@LWkb¦@x°nXb@bUl@LVlUnlbUJUxWakLUVVb¯llkn@V@@nVbUlVbUnVUK@IW@L@bV@nxÆJnXVbUJm@@bnmJnkl@bnnK@Lm@Xx@VVbV@nb@UVV¯@bkV@Vmz@lnLl@kVbUVm@mI@WkJ@UWKkXkl"],
					encodeOffsets: [
						[109126, 25684]
					]
				}
			}, {
				type: "Feature",
				id: "4503",
				properties: {
					name: "桂林市",
					cp: [110.5554, 25.318],
					childNum: 13
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nU@JX@`XLm¦Vb`lVXXW@VblČnVlanLnmVLK@_Va¥@kUa@VmVbaV@XVVzlVVK@knKVmX£VKLlbn@b@llL@xĊôXaV@°È@¤bnV@@Wl_VU@WnVamwwVbn@KVLX@VmVUxlV@nVV_nK@mI@Wn@@IUĊ@@wVWX@@I°VVm@wmU@m@IUVklkUmmkÅV@@aV@@Wn_UKla@kaVlVanb@k@@KlVn@@aV@nIWWUUaVU@kKmwU@UImKk@UU@w@W@k@UkW@mk_W@Ua@a@¯mV£@mUUam@kWakVama@UUm@nw@alaUmnUlVlIVLVyk£Vm@k@UUJkK@kmKUwKkWK@UXImyVwnI@mkUlkUKkUVmw@kkJWUÈm@_k@@aaW@UUJUwU@@IWKkmUUV@nVl@bVb@bUUXakw@WUkbkKbm@xUlkLm@@wmKUX@UaVWXVmU@@UUUxkmWXkKkUWaUaUbL@`UL@LV`UXmK@VmakLVbkLxUJUIVbUVVb¯KV@Xnl@lVXbmÒnV@L@VWKkVUIWJkIUamUUbm@UkU@JUbW@XWxUam@kbVVUnUJmUUV@bU@UUV@Vk@bmULV¦U@VU`VLUL@xVbn@UJ@nWJXXVVV@bkxVbUxL@x¦@UlXUVVlULV@@nUb@xlnJVnlVknUlVUbmU@bVx"],
					encodeOffsets: [
						[112399, 26500]
					]
				}
			}, {
				type: "Feature",
				id: "4501",
				properties: {
					name: "南宁市",
					cp: [108.479, 23.1152],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lKnbnU@Ua@KLlJVX@VnL@bW`Xxl@I@UJl@nV@XV@nXV@lK@UVL@JULVJ@nnJlVJ@VULaLUKnmKULVVU@nU`lIXllnK@UlJnb@nV@LV@lwnJ@L@nJl@VUbUn@lnKnbVV@wVLUbxVm@LVVKXLVKVLXU@VllUX@`lb@bnbL@UV@bV@@b@LxKVanXVUUmVUUUaVUkyUUaImK@mUUVUkKU_@W@UVVVIUWUVaVU@UUKn@k@al@ll@bnL@bVUVX@V@@bKnblmn@V_@aUalL@a@akK@kVKUKlwUUnV¥VmU_VWVIVaX@VaalÅK@LVJnalL@LnKwlVUwmX@VXlLUVnblaUmVUVwXU@Wm¯Va@ÞKnw@wmk»UVW²a@_mW@U@IyLVUUKW@@LX@VUV@@yVU@UV@nwUUmJka@IU@mVkaW@UwUX@`@kLWUk@mkUUm@kUUWkUkWxk@@VK@nV@UVaUUJmIkV@UamLUbkVmamLka@kmL¯WI@wJmwx@akU@aUKmbkaW_nW@_U@Wm@a@wkwUKmk@bkbw@mKUkkU@J@bW@kVWz@bVUaVUx@ULkJWbXVVX`@mJUVU@@Lk@WbU@UJlnXlmVx@Ln@b@KLXWJUUW@kaUVUbmV@nnV@n@lVLVmLXmXkV±@kxÅLUbJWIÅJ@ImXalkUamKkkL±aVwKUU@mÞnbWJXm@lbmKULWUUVkabnn@Vl@VVV@VbVbnLWLXJWxXLV@@VV"],
					encodeOffsets: [
						[109958, 23806]
					]
				}
			}, {
				type: "Feature",
				id: "4502",
				properties: {
					name: "柳州市",
					cp: [109.3799, 24.9774],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@wUaV@nVaUVklmkUUmmIk@waVm@U@VKUkVUkWV@¥@wKVwUalw@aUUUWWXI@mVIm@Ua@wVKUKV_UV@U¥VKnal@U@VU@VV@aVUnVVIVmUUlan@VbXwWX@Va@IlVVn@VanVVblJXIVJlUXL@U@KmUnÑWakU@mkJUI@mk@wUmmUV@JXaWIXWmaUIJkk@WnJ@aUak@kkJ@kUKU_@myUóWUkm¥kUmL@KUKm@k_UmVa@k@@UmU@mm_JWIUVUWLUlbVUJÇVUIVwKUVk@mU@n@lUL@Km@@l@LVzJmUU¤m@UbV²U`U@@¼Vn@x@V@@VnUVx@blbXIVxU@Wl@@LaW@kxLXVWVk@@U@VmLVLbUVULVVlnLVxkV@nWV@bnKVVk@VLVÈVKVVkUnb@lm@@LVxUlVX@VkJ@wkIÇ@kl@blVVVzXllLUxlV@x@UV@nU@UImmUIUV¯mVk@@V@VamnUKkm@@VIUJUaUUWLk@UJUI@xV@VVWVnxLUômVV@VkVVVUnV@UVkL@VVV@bVxla@bkXVJVn`nU@bb@bVL@VnJ@l@VaU@@_lW@UUU@Unlll@XLl@@UX@°bVWVanLlknVV@VVX@VVnUVLmbXJ@nllXX@`VXlmaXVWk@WkwJ@VL@JbnU@bn@@bVKUnVJVIVVVL²a@bV@@Vl@nUVakalmUL@VUL@Va@mXl@nK@UlKL@Vl@@nkllb@Vnn@nVV°lVInwlKXxlU°n@@I@UnVlakUJWkUK@anUWK@_ÞJ@U"],
					encodeOffsets: [
						[112399, 26500]
					]
				}
			}, {
				type: "Feature",
				id: "4514",
				properties: {
					name: "崇左市",
					cp: [107.3364, 22.4725],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@JVzl@V@Xn@ll@VlnX@@VWLnUVmUULVlUV@blnUlnXVVKxnLlb@lnbU@Vn°KVVI@WXUlI°VXbVVbnLVan@xJ@_nJa@wVwV@@a@IU@UU@WKXwWIXKmKUaa@UUUUk@@UmmalbVUXVVKnLa@knWXImanÝV@VLUx²blKlnLVbklWbn@JÆIXJIVaÆKlw²@lUnWWnKUUK@k@mmU@mnUVaVUb@lVXVXIWK@Lam@@KUwnWkkmVIV@Xal@@KV@VUnI@_UWWUkam@kkm@ka@mk@wkJWIUU@WXkWXkWWLUU@UakLWXV±VIVWUU@anUWaUK@IU@Vak@@UUKWa@m@ak@@wUkla@mUaUklakwV¯¯@WWUkLkKmakLUnV`UxWX@Jkn@bmlakkk@b@l¯bmbJb@VXnbVV@bJUkkKWVU@mÛVUUW@UVUJWXkVkKmUL@WW@UVl@XXKWXJ@XVlmbUxnnm@UlVnV@XVm¦VJb@mLkKÇbXblVkn@l@bWnX`V@@IVV@VV°n@@_naÆVVbUVVbUJnzlVUlXkV@Vlx@XVnxbKUK@b¯VVUVL"],
					encodeOffsets: [
						[109227, 23440]
					]
				}
			}, {
				type: "Feature",
				id: "4513",
				properties: {
					name: "来宾市",
					cp: [109.7095, 23.8403],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nVlw@VJUIVVUV°lU²V@l¤Ub@bUV@b@b@bUblVaKnLla@UnUWmXlJXUlKV@V_U±Van@V£nVIyU@K@kn@@LVK@k@mnVl@VULUxVJÈUVIUaVkXKVVUXJIn`@nnV@Vl@@UbVnl`n@VL@LnKlVn¦VlôXVnz@V`VL@llIll@Vbb@mIXl@lIVJnbWXXJWb@IUnVVn@xl@nVJI@WU°LUaVUUaVJVIwlKUalKnb@UnLVWU_@KVK@_KVa@VKU¯VLVKn@laaUkU@maVUJ@k@Um@XmbkyVaUIUU@KV@laVn@KXKWUkUk@aWUUVw@aXKmVaUUkmIlUU@wUaxUmmU¯U@WLUmVIUym@UVmUa@wmw@çm@aWLUJUIUamKmL@ax¯¥kU¥U@±kUVmKU_mJUbkKmLÅÇ_@WWUXUmaVUkKUWW@nVxkUxmL@KkKmbUI@KLkÆbUbW@UbUJUXV`UnU¦mVVkxVLUL@llL@b@bkKVb@bU`m@knmaL@a@@UWVUU@amK@akkk@@b@lmVL@VUVUbVVXUJUU@V@XV`lLUVVV@nnLJVbVlzUVVbVVnUVVU"],
					encodeOffsets: [
						[111083, 24599]
					]
				}
			}, {
				type: "Feature",
				id: "4509",
				properties: {
					name: "玉林市",
					cp: [110.2148, 22.3792],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VJUXVVXlWX@VxVnX@@`ULWUXÅbWK@mULUUmJ@n¯b@l@VULVxxXU`VXXJVIV@nm`@nUVXn@lWVn@b@Jn@nU@Lm`@Xn@WJ¦U@@VnLlV@@Xl`nIlJnkVLw@KVK@UaVL@bVKXlUUKVK@IVLa@U@WLUlVL@bU@@blb@VlbUxVbXUVJ@xVLUlV@VUbVLnKlXJ@Lb@an@VanL@`VLKV_UWl@U_a@WVInlVUUUVm@I@W@wVakIWm@U@XwlaVbnI@m»Va@aXaVLU»@aVa@kKkL@KmU@WzUK@wU@VWUUVUUKUa@mKmbUK@_nWVaUkVaUaVUVLXKVVUVmVI@UkKkLm`UkW@UwWW_UaU@WakXmK@xUXJkUUWUk@WlmJ@km@@aUKzmyVka@kkWVUU¯lmU@@wkkmV@Vk@mÅIUka@Ub@m@UUU`mUbWaWmbXXKWIXUWm@Å@y@UkIUJUUWLUWL@UkVUxW@kaWbKWnXxW¦nm`XLVlUbVbUxI@JmLUKUb@VW@@bkL@b@VlU@xk@L@lxXxWXX°V@VVVbUVV@UVVbULVnVJUb²baUb@VVVVInlV@VnXaVUlIVUb"],
					encodeOffsets: [
						[112478, 22872]
					]
				}
			}, {
				type: "Feature",
				id: "4504",
				properties: {
					name: "梧州市",
					cp: [110.9949, 23.5052],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VbXblVlLXWlnwVV@VV@UnWUXVb@VWXa@kVKUaVaVkUlyX@VaVmUwUaVU@UÈymI@aU°@nWV@VaVaw@IV@VmnLVK@kmmna@VbVI@aV@XbW`ULUVVx@VbUV@bl@VLXblJn¦lL°°@n@K@UlLnKa°LWbnJ¦UÒVUllLlVnKnbWnnV`w@@Xa±nl@XKV_WVkVa@kVyUa@wU£UW@UIVW@@awWaX_WKkVmUULmak@UJUI@±m»k@m»VyUImnmmwnkUmVaVIUn_mW@»Vk@VwkmmUXa@IaVmm@Wm_U@mIUWóLmUk@laXmmkUK@UmKULUUmWUL@VakU@Ub@b¼VUKWb@bUbn¼@mJUakbWx@@VXnlJUb@x@X@JUnVVUVmkUJ@XbV`k@VXU`LUK@_mKUbm@@b@U`@nlV@bUnbVbn@@`VbUbVV¯bm@@mJXb@bVnUllVXUlbUl@LU¦VVmkLVb@bl@V@XlK@V@nUJUz°mwmLmlXbWVU@UUUlIU@VVmV@@¦bXbWxXWlXVWL@LUmkbU@@LVVVJUblzna@WVn@@lIUVnbV@Vlbkbm@ULUKV°UL@"],
					encodeOffsets: [
						[112973, 24863]
					]
				}
			}, {
				type: "Feature",
				id: "4511",
				properties: {
					name: "贺州市",
					cp: [111.3135, 24.4006],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nL@xn@lKVkwn@alLlaXV@lxbVWV@aUa@aUk@mVUnVlXL@JV@VxVIVX@b@bl@@`ÇnXVlI@lxUnlVVLkllV@nmJUxnzWJ@VXLlLVxnL@lLlVI@V@lUnl¤UzK@Vl@LlLnb@VnVVU@kaKnxn@VkVJ@ÅUlakmWIUaVanm@_UK@UVWUa@klXamU@VmVIXW@lUVknVlKVLXVXW@b@VlnnVL@KXLKn@lb@UnW°@VaXWVb°aVa@I¯aUkUaVKVwaXk@aa@wkm@alanUVw@alK@Umkw@UaUmU@WXUaUK@UW@UaVWI@¥Xa@w@WWVXwU@mKUXUWVU@a¯kl@akU@UULmK¯VUVW@U_m`U@@xVbUz@lUbUlXU`WLk@m²Wb@@xU_mXmmamLkUkKVkUVÑ¥mIXa¯KbmLkK@V@Lm¯@¯kKm¥kIWaUKk@@aVUUa@UwVUKVX_WaU@@bUJUa@mbnn@lULmKUnU@@JxUbUbU@mX¯@V@bnJÇz@VUVVbVxUnUbW@kzVUlUbVbUL@lWb"],
					encodeOffsets: [
						[113220, 24947]
					]
				}
			}, {
				type: "Feature",
				id: "4507",
				properties: {
					name: "钦州市",
					cp: [109.0283, 22.0935],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@IlVVlnL@xlaal@nVLlx@x@bXnV@@`mXX`lbnaVL@blV@bwnxI@xXJ°nKl@lbnKnblUVanKVb@lUnJVIVUb@VU@mL@Ul@XwllVVXV@lVnlVnl@XVlK@@_VWVxX@lbUnV@@JlbnIlmnVV@UwVK@U@k°a@mnIVVVK@nXLÆaVWXVK@_W@Umw@UXWWkUUVWUIVaUkJUVWbUmU@mkUJUU@UVab±aVaUIUmVKUaVUU@VUUaUUU@W¯XWWww@k@Kl@wkV@U@alK@aX@@UmIUWUI@mmkXU`U_WJUnUJmUk@@amLU@UVW@UkU@@VbUWVUk@@wmKkUWLUWX@JmIlUkkKWKkLWU@UKWa@bU@@a@_UKWUUUmJmw@nV_@ġğKóLmbU¼VÆ@xUX@Um@wklVnUnlkaUV@lV²WVklWXXbWlkVkIm`UULUU@UWx@XU@@lWLU@kbUbV`UXllUV@bmb@LnKVbULmnVVIV`X@"],
					encodeOffsets: [
						[110881, 22742]
					]
				}
			}, {
				type: "Feature",
				id: "4508",
				properties: {
					name: "贵港市",
					cp: [109.9402, 23.3459],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@n@VzUJnVK@XV°nVVnwVb@xVVknJlVVUbnWL@bUxVVXbl@lVXkWXwWaa@¥@nUUUV@JVkVVV@XUWanknKxn¯VyVI@m@UkL@W@Uk@aUalKnUUV¥@KVkkaWVkUVkUm@aWanI@n@°aUUVaUa@_m@UamaV@akU@mV_@a@KWIkmLUKaUVU@kVUK@wUIWVUaVwka@Uka@aV@@aUKVkK@X@VbKU@JULVLkVWUL@aUKb@VUL@LxUKmlkImJk_@WU@kmK@UV@¥XIm@@Wn_@KmVm@@I@aUmkXm@UWV@mn_@mUUJWIUWV_WwU@mUknVVmxU@@VUV@zU@UVW@K@X@VLUVKz@J@VnX@`±bUXV¼ln@xmxÝL@Ubn°@XWVUxUVVnkbWVXV@X`ÆÈKnlLVanIV`nLVUl²V@V¦l°¦wb@nKnLVbVJIVXK@bn@ènx@xVbUnV"],
					encodeOffsets: [
						[112568, 24255]
					]
				}
			}, {
				type: "Feature",
				id: "4506",
				properties: {
					name: "防城港市",
					cp: [108.0505, 21.9287],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XV@X°°UlxkbVlVb@nkbVl@xl@@b@nXbVL@Vl@UbV@@JVLXbmV@bVVUXUJU²WXlKVb@VVXKlXWlXXWV@VXJlI@xl@nlbn@lln@lbXalIVK@VwUVbU@aXylUX@@aW@U_UJmUnVKUamL@Kna@aVUkkVWU_ValaV@XK@kV@@WwVXV@VKVVn_lJlUXkWaXWlkXU±kU@VUlbkVmUmlk¯ÝW@mb@¦VxULmkJUU@ma¯wmkX@VóJ±bUVUXÝWklWXXlxUabIğÇ@U@mVUKkkm@UJm@XnWV@x"],
					encodeOffsets: [
						[110070, 22174]
					]
				}
			}, {
				type: "Feature",
				id: "4505",
				properties: {
					name: "北海市",
					cp: [109.314, 21.6211],
					childNum: 2
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VaVLnK@IJVwUaVaUkWKn_mX¥WwXmLXalbU£UyVÅ@Ýwm@°lLÅUmkmwÛaƑLÝUUm@ȣÆV_Ó@£UUV¼U°W̄ÞVbXbôx@b@bmV@ÇUÝ@@ĢU`m@nxnIVVVXVL@`@bV@@aXbVL@XVlKXLlLVlknJ@IWVXXKlVnL@xl@UVVXa@UV@VlX@VUV@nK@bl@nVVIVmXIV`V_lWnn@VJVXnJ"],
					encodeOffsets: [
						[112242, 22444]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/gui_zhou_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "5203",
				properties: {
					name: "遵义市",
					cp: [106.908, 28.1744],
					childNum: 14
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@@UnUlJnwJU°VL@bnVUwlJ@XXVlU@klVUJknlUllL@bUJ@xULUlUblVkblbnwUXmla@wV@VK@L@UXaVKVLXWUVa@U@Im@@W@£UKUakKWIXU@al@@llUnL@W@Un@@VlUV@VIUanKl@Xb@lmxVb@b°bb@nlJVVnnJ@b@LV@ln@LmV@Vx@blnVKnlJXIlwJ@Òb@nlK@Un@UL@VVVVUUUVKl@VUVLJ@UVUUw@Wm@UVÈVlbUb@JLlX@@xLmk@@nlx@bUJUzVJ@@LVxUV@bWxnLnVVK@_K²xVbV@n¥@aVI@b@l@VaKnb@n`nmmýW@U_wV@VlVV@Vn@n@nI@Jn@°¦VaUU@mVVWVaUÅU@aVKnVbVUmmU@a@kUwm@aUUmUUJ¯lakUaXaWUUaVkkamkmUnVlULVlJ@XU@UJWUUwk@aU@WbkWL@U@WU@@XUKmV@aUVwUĕUJUamUUVUÑmnIVJ@kl@XalJVn@KVL¥@UWIXWmU@mVUKnUWLUKUaWUUKVU@U@anUny@UlUkK@w@a@aVU»UkVw@WmkJÅmUUVmwXalLXWWUnam@XkJ@UVU@U@W@@U@I@Wl@Ènlw@KXLWblVUkalKUUVVaV@@wnIlaUmkUKWU@KkUkLWaKUUWUn@VK@LnnWJUIVkUWVnV@V@@XK@VUIUJ@IWJkX@VVJIVkK@I@UVaUWk@m@wnUWKk@mxk@@lV@bxmb@x@VUmLkUJ@nVV@b@VkLVbU`¯Il@U_UW@UU@K¯wm@xL¯¥kI@bkb@Ua@m@kkW@XVbmV@kV@bWbUbV@¦xXlmVk@¦bkaWL@KUImK@wUK@VUIb@bmK@LÅy@akXW@kbWlXblL@ULUb`@UkUymX¯@mUJUUJL@Lm@@WX@lUVlXll@l@Èk°V°X@VU@UVll@XUJVXUVm@@VXLWlnV@Xk@mVULnxV@@bmkL@VWLUbU@UVm@b@ķ¥UnmJ@UUVkkJUlÔU`UIW@°kLUlUI@WVIU@mWKkXk@WU@bXW@J@xX@l@LVl@xLVxXX@xKnxVknbKVV@ULWlXU`@nUlX@llVXVUKlkUKlI@anKVLXKVaUIVWV_VK@VnLlU»VKVLm"],
						["@@@KlKkUUVVX"]
					],
					encodeOffsets: [
						[
							[108799, 29239]
						],
						[
							[110532, 27822]
						]
					]
				}
			}, {
				type: "Feature",
				id: "5226",
				properties: {
					name: "黔东南苗族侗族自治州",
					cp: [108.4241, 26.4166],
					childNum: 17
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@VV@XkV@bUbWJU¼Vb@Vnb@b@J@bL@LV@UVlUI@aKULVb@bkJmxlLVxknVJkxnKmnnL@bn`WIXlWLU@UxVbUVmKVXI@JVIVJ@UL@W@@UmUXUlVUVJXImm@KL@UVmVXVLXblKlV@LXVLlVVnkbmJ@xnXl@bXa@VanaÒLmVnIlÞ¦°k@b@@lVnJlUnVX_@lVlKVUUxVLVWVIXJUlnnWlI@KUaUUVKn@VaVXV@na@mw¯@mUkJUamI@lk@@am@@IUmVImUUw@anUVaUU@LU@WaWUXWWwV@VwnU@L@ynbl@@X@aJ@nW@@Vn@lVLlxnIl@@UWKUnIlJXIVllIVV¼XK@aVIV@@bn@VKXLVKVVVInwJ@UWI@mX@WKnI@KmUUVJUL@VKW@@k@aU@@W@InJWUXwWI@W@¯wkaVaUIl@nValIXWWI@UUm@anwWkXWWIUbk@UJmIUamKVUUUVVama¯VkIVVUlKnXVwX@@WVaUUVa@IlaVmknawkUU@U@mUVUVwl°LVbnJVU¯la@mX@@UWKXU@aV_V@@JlkU¯@VnK@km¯kU@WUW@mmU@kmlU@wkL@WUkL@VmLJ@b@V@bknUUVK@UVKUK@Uk@Wa@LUVVnUbmVk@@UU@@aV¯K@U@UU@WmUL@aU@WVw@IxXll@UXK@KXXVJna@wWa£naUKVm@UU@mUmalm@@XkVm@U@VLmWU@kkWxU@@bVV@VkXVlV@UUk@@mI@KUwm@UmVUUwU@lwkV@IUa@mUaVIVKVa@w@U@UJkb@n@bmJ@XmlVUxWXkJmUkUUVWxUlU@aULUmbU@@WXkmL@xUV@nUxÇm@XLWbnlnVnnUVUnVVz@lbUVVlULVb@V@nUJkwm@Ux@bWbUK@UULkaJbUU@U@lUK@XUJmnJ@bU@UwWax@zkJWnUJUUVVV@bXn@xVb@JLm@Xw@`@bkb@VmXUV¯L@mW@@n@V@L@KIW@@aaUx¯@Um@XbW@@LV@bnVWVkKUzlV@bÆa@lnI@VV@@LnVVKUaV_VJVbnU@bn@nX@yVIVxXKVLlUVaXU°J", "@@@KlKkUUVVX"],
						["@@UUVUkUmV@ln@VXVK@K"]
					],
					encodeOffsets: [
						[
							[110318, 27214],
							[110532, 27822]
						],
						[
							[112219, 27394]
						]
					]
				}
			}, {
				type: "Feature",
				id: "5224",
				properties: {
					name: "毕节地区",
					cp: [105.1611, 27.0648],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@UkV@kW@Xn@@KKVIVVIn°@nWVzl@V_VaVK@kKWaXklaX@lW@bÆz@KnL@aaVJ@UVL@xnLVJ@LXKlba¥l@nUWkw¥U@VaXa@amLkUKm¯kmkIUaKUIWkKm@anw@mlwXImUk¯@a@amU`kkKWVkxmUUak_mJmw@wmXUW¯X_@WnI@aVwkWWýÅU@WLkUaUbVV@lUVVnm@kUmV¯kKLwmVUUaWVaaWw¯wÈ@VULUVUUK@nWJkIl@Umxnbm@kbUJa¯bUbVxmLUVaU@VUUWxkVVV@bUV@XWbnlUbbUJlbUV¯b@z`WbXnmbawUwVWUbUxmbU@Uam@VkVawVaUWI@mUKóz@lUlÅ@WIb@xXxml@XklULWKUmwUa¯KUXWJkaULmKkLWbkKUVImWa@kUaULW¯LK¯@kbL@bx@J@bmnnlUlzU`U@@Ub@mn¦°bUVx@bkVm¼mx@mkmVV@bkxVnaVV@bU@mL@b²`lIVV@lXLlbVxn@@bl@XllIVnbVn°°wlbXw@mVa°lVnU@mVLVbn@@b@@WVnUV@Xlxn`VznJVb@L@bV`V@UnwU@WUXKV@UUlmUUlaXalLmbIVbnJVIlVVaUUnWVXnVLk@nWnblnlb²xxVKVXlVXLVWLlUVJna@wVL¼@JVX@`@nnx@nWJU@Vx@XXKUblxU°LVKVVlL@KnbVUnJIlUnKl£VWxIlJ@nVÞUVVnbVX@V_°lnK", "@@@UmWUwkU@Um@@VkL@V@VVkV@nbVa@"],
					encodeOffsets: [
						[108552, 28412],
						[107213, 27445]
					]
				}
			}, {
				type: "Feature",
				id: "5227",
				properties: {
					name: "黔南布依族苗族自治州",
					cp: [107.2485, 25.8398],
					childNum: 12
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@V@IöalK@UV@@KUaVIVVLlaVbVWnX@@LnUlxl@naVLXVVaVUJ@lUUanWWI@VlV@Xbb@Vn@VmVVbk@kU@VV@XJ@zn`ULW@kK@_WVUK@LUb@Jlxn@nnWlU@@bx@XVVU@UbVb@n`VI@VVLUlUIUV@KmL@VV@XIV@@lVLVmXV@WLXLW@U`nkb@Vl@UL@VVVLllX@`lIXbJIXWLaVL@XXWĢb@bmK@L@°@VnxmxnK@xVn@VkL@VLakbl`VnnxVnUlV@@VVXV`@k°JV_UalK@U@aUU@mIlVnKV@U@wnaw@akU@l@nwl@XLmV@xnl@VXUb@V@JlLUJUI@UlWUnLVUUaVwV@XKWkXJm_@amKnmmLwlUIlmUwkKnwlI@aUaVKL@bVJkVUU@@KK@a@I@ama@UUaV»XIVa@alU@WUU¯IWVUbkVUKWLUwUJ@zmWm@@amVUaUIU`VbULmU@KU@@UmJ@kÅb@akUVylLXUmU@aU@KX@Wan@V°@Vwb@bX@J@LK@@U@mX@@n°KVUnW@Ula@a@_x@WnK@IUa@wWm@aUUUVVVIXmlI@ywXbVxV@@aInmVI@WVL@k@VVVaIlbVK@VVLXa@aVwn@lxVI@m@UUaVKUkVUka@UymUVVUmmUmmkXaWK@ÈnVw@mVU@wKlnXW@V@naVVKUk@KVIUW@mk@KXU@Um@@lVk@UVJna@UWaL@a@Xa@kmmVUUk@mkkamJImJUUmIm±aUUkambkamVUU@VlbUbVVxXWVUU@VUakU@UmUVU@mnUVVnUbVJ@bUW¥kLVamVkUaWJU_UVWKk@@nlUVVJUXm@Vm@UnVlmbnmJUbULU@@UUKWVIWxnJVb@xUL@bUJWIkxbkb@xVJbmU@kW±LkKUkVa@a¯am¥ULkalÑlKXUWXaVakImV@ka@UUJ¯aXmmbKWU@wUUaUaKmU@UXlWb¼WLUKUb°UlVbkbVL@VJ@nVlUbUXmJ@VX@lbUbU@@bWb@VnLVJ@bVVUzVL@lnL@bVVVULmKUkJkbm@xVb@VkKVnnV@b@WXUnVlVVXVJUXlVXbWV@VU@Ubk@@KWbUUmL@JnXV°XJ@_`UbkXVVlÆkb@VLXVV@V@kKXX@`V@@n"],
					encodeOffsets: [
						[108912, 26905]
					]
				}
			}, {
				type: "Feature",
				id: "5222",
				properties: {
					name: "铜仁地区",
					cp: [108.6218, 28.0096],
					childNum: 10
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@°a@aÈbVUlU@aVKnVVVUlyX¹lWVa@UVnUVU@m@mUl@mÞw@xnIVbna@KVIJ@kwV¥UXÇVkVW@kkKWU@aXUWmnIVa°VXbmL@VVbnVVVUbVbJVbVKXkVKVanU@aWnWUWa@Unk@mVIVK@wXxlLXbVJVlKbl@VI@maXalVVVbX@@aalnkx@b@Vb@Vnx@bVVUXn¤WXn@Vl@Vlzn@`@I@KUU@V£namVkXa@aVKnnU@anVlKa@UUU@amk@»kU¯@aVWnkWmkImU@akaVm@»VUV@UKnkW¯XWlkUKnIWa@nmlIXmWUnwUwWm@wULmaUJkIUaaWaklwkwmJmU@bkJ@XUJ¯W@XbWbUKUkWJUUVKnn@UmmXUWa@mU@@UI@WmXVykwm@kaULWwU@¯lKUUVU@mU@UkmaUbmV@bxVnVUJVn@Jn@@bl@@knJVblInV°@nx@mbU@UWUbm@ULVVVb@LkJmXkmVWIUJUXUKVwVUkLkU@W`UmkVmIU@k@@a¯lÝ¥kmJUnKÑmbUb@Wbak@mWU@UbUVVkLlbUVkXaWK@LkxÇmk@@X@J@V@@X@VUV@VIWln@mbXVWXkKWbnxVUnVÆInl@XUxVl¼UV@b@b@xlLkV@VmzmV@b@VUVVLXVVbVLXKmVVLU@nnVWXXJ@V¦UK@LUmkIWbk@@lUImJnVÒVUnVVbVIVĖUxV@bnUVL@WV@@X@VKlXXaV@@blVxXVVIV@@WkIUVKUkVmlnnbllUVbXVWbblVkb°VInVVV@bnVx@l@bnVVnUUamUL@bVVÆUbUXUn@VVUb"],
					encodeOffsets: [
						[110667, 29785]
					]
				}
			}, {
				type: "Feature",
				id: "5223",
				properties: {
					name: "黔西南布依族苗族自治州",
					cp: [105.5347, 25.3949],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VL@Vl@@IXW@kVUVbnW@XlKVVnUVlL@baVbb@xX°ÔUxV@kbm@VxkxWJV¦@ÈnVKxWXJmV@nÒ@xVbn@@blLk`VX@bla²JVUlnn@U±lw@wnw@mlwVIX@@m@klKnkaKnwmmXkÆVmU¥l@nb°n@aVwVmVIVnI@a¯@mU°l@@VnI@JV@UV@b@IUbVJmXöºzllUbVa@aXUl@U@llLnKVaUa@UmK@UwVbnKV@VwVK@UXV@Vbn@w@UWnX@a@mI@UUKlaUaVk¯VaVLXK»XaWk¯mkğwmW@mIVkwJUIÇVwUUkVKkm@UkmU@WÅwm£Vm¤¯IkJWa_lUbmJzÝJkUÇVU@bUÝnm¯LUb@`mL@VkL@VUmmk@UU±Umka@kU@ķymUkk@mmkÝmUaUakImV@V@VÅL¦JUXmJXWb@n°Æx¼nV@LlbUUbmL¯@ÞbV¤nbVx@bUVlblI@KVVUnVJUn@VlLUlmLUUUxmK@I@@VW@@bU@UJmUkLVVUl@b@V"],
					encodeOffsets: [
						[107157, 25965]
					]
				}
			}, {
				type: "Feature",
				id: "5202",
				properties: {
					name: "六盘水市",
					cp: [104.7546, 26.0925],
					childNum: 5
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@ôyVL@nXJVUbxbUlU@nVbV@naVwaVUXVxxbnaWmXa_@y°aVUkaVIaVamkXa@WVU@aUUlUXwVV@UVbVUnKUwVa°abVIlan@manw@VklJXI@mLVVVUVK@UÇk@KUa@UkaVU@UVWV_XWVXVWlLXKlLXaÆKwVL@akKm@Uw@@XUVk@VUI@wWK@aUVI@UkK@mLW@kImJUÅVmkXUW@UJkx@nmx@xkxV²m@kmUV±Ikb@aUWl_kK@am@Ua@wÑ@mnUWIXwULm@ÇU¥XIlwUwn@laU@Vw¯ÓW@waUab@akKUmVUUkL@WmXUaUV@lWX@Jk@@UUKULmLUJmzkKmVX°VUnWKULL@mU@UnVJ@b@UV@X`m_@l@@bmbXJmnn@°wnn@VLX@V@nVl@nk@@bl@nn°WlXzW`XXVKnUlxVbUb@VXb@VxÈbVlnbmn@kVUL@mLUVVL"],
						["@@@@UmWUwkU@Um@@VkL@V@@V@VkV@nbVa"]
					],
					encodeOffsets: [
						[
							[107089, 27181]
						],
						[
							[107213, 27479]
						]
					]
				}
			}, {
				type: "Feature",
				id: "5204",
				properties: {
					name: "安顺市",
					cp: [105.9082, 25.9882],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lL@bUKxÅLWbkKWLkKUXUWWXU`UX@VUVlb@VVb@Ll°xXxbbXUVbVnUxKlL°nUlVn@UmVU@kUUVablVXKV@ÆXþlXUxnU@mVK@_@ml@UU@blU@KnLVyUw@@UmkWVw@UVK@VXzVK@nVVUUW@kVJnla@nKWkaWL@Uõb@JU@mU@@_WWL@lUU@WUUK@lakÅUUlWVa_@`WIU¯mW@InKVVXa@Ll@VaV@@UXUWakUVWUIUWUkUmVXW@@amUUmLl@UUawn@laIVlnLVKUUU@amK@kUKVyUU@aUImK@UXa@aV@VakaW@@UnIVWVaUkb@mWX@Vxm@UaU@W@VULUxU@mLaUx@VnL@VVbUbmLkK@kVk@WV@bUbVakkyõ¹nWUIVa@J@aVUU@@ImJ@Uk@¯V@n°@bmJUUJUnUxbm@¯mak@¦VUnÅWlnnmxLbmlkL@l@nWVnlÆUVnIlJ@XnK@lL@VJVU@bXL@xVJUl@VU@W@Vxn@"],
					encodeOffsets: [
						[108237, 26792]
					]
				}
			}, {
				type: "Feature",
				id: "5201",
				properties: {
					name: "贵阳市",
					cp: [106.6992, 26.7682],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nlLXVJLVblJn°lnLlVnKlU@nUUa@WlX@ln@Vb@la@alJ°¦Kwn@°xLVkUmmwUmk_labK@UlK@UUm@wLmnwmw@U@¯@KnL@aaġXWW@UKbKWXJIWakJ@_kWkKUU@UVKk@@UlamV_X@WKXK@WUUnUK@kU@WJU@@UnK@LVUVJVkUK@UUJm_@UaVaV@UU@Ww@aV@Xkmmm@kw@IVa@KVLXU@`lLX@VKm_@yI@WU@UlVl@UanU@Um@UaWaU@Uk@XJmXVbkV@IUVUbWUUKmbk@kwmV@K@mWUXUakbKUUUJVb@LU@@VkL@VXKlbXmL@kbmUI@lVXUVU@mULWy@UUL@VUxXnl@V@VxUzmK@LkVa@VVk@@n@`UL@nmV@bmJ@X`WX°WVn@xnxnIl`VbnVlwXUlLl_nV@b@bl°VnWJkx@nmx@b"],
					encodeOffsets: [
						[108945, 27760]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/hai_nan_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "469003",
				properties: {
					name: "儋州市",
					cp: [109.3291, 19.5653],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@à®¼jpnr``pRVHÊÌ¤Zt^JÖA[CâlTébQhRPOhMBcRSQiROE[FYdGNOEIH]MgEAMLLIAG_WMCSL@ED]PCLYC[ZIHgjSxJTMbHNEFCMEE_HSDFHSLECRNSFDRICHNADGPI\\RZGIJTIAHLDQOHG`GTNCOIC@eIGDWHIS[kiE[FMbECZS@KKS[FDWsCeRuU_DUQNOE[LKGUBM¨EDQP@HWHGDImXCog_~I_fGDG|QDUWKBC\\ore|}[KLsISBHVXHCN`lNdQLOnFJSXcUEJMCKSHOUMDIm_DI`kNDIGEYFM\\YPEEIPMSGLIKOVAU_EBGQ@CIk`WGGDUM_XcIOLCJphHT_NCISG_R@V]\\OjSGAQSAKF]@q^mGFKSW^cQUC[]T}SGD@^_aRUTO@OHAT"],
					encodeOffsets: [
						[111506, 20018]
					]
				}
			}, {
				type: "Feature",
				id: "469005",
				properties: {
					name: "文昌市",
					cp: [110.8905, 19.7823],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@hĲ¤Ī¯LQDaFßL[VQìwGF~Z^Ab[¹ZYöpFº lN®D´INQQk]U[GSU©S_c}aoSiA£cÅ¡©EiQeUqWoESKSSOmwćõWkàmJMAAMMCWHGoM]gA[FGZLZCTURFNBncVOXCdGB@TSbk\\gDOKMNKWQHIvXDJ\\VDTXPERHJMFNj@OwX@LOTGzL^GHN^@RPHPE^KTDhhtBjZL[Pg@MNGLEdHV[HbRb@JHEV_NKLBRTPZhERHJcH^HDRlZJOPGdDJPOpXTETaV[GOZXTARQTRLBLWDa^QAF`ENUPBP\\Eji`yºEvåà"],
					encodeOffsets: [
						[113115, 20665]
					]
				}
			}, {
				type: "Feature",
				id: "469033",
				properties: {
					name: "乐东黎族自治县",
					cp: [109.0283, 18.6301],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ªVLP`@PEdNRAHOPEAKHEVL`GZBJfvdTAXNNTZJFPrHHNpKTD\\ILHbEVd^JOHLh@NNBnHP`\\xH@NBRLJTlNv_^CTLd@bNDVFbxdFVUPBTKOGEOUO@OEBXQP[H_EI\\EbeYa@UO_JMEJ_IEDKJUGMDcNUd_FMTEJSGoZ]EIYGO[YWgEQ]a@WHEDQKUSDUGAbYBUpSCYNiWqOSQEoF[UcQISWWNMSDe_cLQ_UBiKQOOASQAWgSā]ZaSPÝZ]XMXS[^oVËNgNKlE RôEø"],
					encodeOffsets: [
						[111263, 19164]
					]
				}
			}, {
				type: "Feature",
				id: "4602",
				properties: {
					name: "三亚市",
					cp: [109.3716, 18.3698],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@®ĂhTBXTRPBRPjLVAR`dKf`TCNXMTXRJVdE\\FpTRrPjXZMTDVoZABaVHTCLVCRGF@X^bFRhZXP\\ZHHMA[^wBWXJlW¤EJ[bCTOFWWMm@ILMGWQ@DQ^QNWFSHEbF`OXNbOVNKTEPDTLTCCVTREfvfEHNbRAENH^RJXCFHNFRpVGHWISDOTMVCZeGamaLoLÛD¹¹ėgsia{OųETtlÉwr}jR±E{L}j]HąKÃT[P"],
					encodeOffsets: [
						[111547, 18737]
					]
				}
			}, {
				type: "Feature",
				id: "469036",
				properties: {
					name: "琼中黎族苗族自治县",
					cp: [109.8413, 19.0736],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@bRFnHNbHgN@NPEnbXP@bND`NT\\@\\QZb@`@J]V@XhDpWnCJGHGXO@CR§FANHVKLF\\MPVR`CvVfQtDPKpGHG@S`WJP~^dSTHWX\\RHTFACQTIAUPOU@MG__IaYSFQKNSbORHXCZeTFJgB`YBMNMFi~IVDV[tGJWXGDQRGF]JrALgESLSAYDGIaFeXQLS\\MKSLSQYJY}eKO[EHiGSaK[Yw[bmdURgEK^_kcSGEOHKIAS]aFSU@Y]IWFUTYlkP_CUOUEkmYbSQK@EMWUuAU\\M@EpK^_ZMDQ^OXwC_ZODBrERURGVVZ\\DTXcFWNIAWJWAYUUFYEWLQQaCIZeDM`cLKRGpanJZQd"],
					encodeOffsets: [
						[112153, 19488]
					]
				}
			}, {
				type: "Feature",
				id: "469007",
				properties: {
					name: "东方市",
					cp: [108.8498, 19.0414],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ºxJYZQIYXLl@dR\\WZEn]bA\\S~F`KXaDeTiNO^EEKWEDQXITBXaWaDQMUJOIaTWf@NJV@dSxGZFu_@WMKAU}AQ@MwG_[GOAmMMg@GKP]IUcaFKG[JSCoLGMqGEOYIMSWMSBucIeYA_HUKGFBLOFGPQBcMOF_@KO©UAtERadwZQ\\@ÊJÒgòUĪRlR°KĮVLJ"],
					encodeOffsets: [
						[111208, 19833]
					]
				}
			}, {
				type: "Feature",
				id: "4601",
				properties: {
					name: "海口市",
					cp: [110.3893, 19.8516],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ńZƂtĢ¬æßFuz¹j_Fi[AOVOFME_RBb]XCAKQKRSBQWSPY\\HbUFSWSPoIOcCOHIPkYCQ]GdGGIFQYgSOAQLK`MFUIGa@aQ\\GGUFcHKNMh@\\OYKAigsCgLSF]GOQO]@GM]HyKSHKPW@Pxi@EMINYREXWRQ@MQcFGWIAwXGRH\\yDI`KJIdOCGRNPNtd\\UTMbQYi@]JeYOWaL[EcICMUJqWGDNZEXGJWFEXNbZRELFV]XQbAZFrYVUBCLNFCHmJaMIDDHXHEhQNXZ_TARFHVB@DTQIRR@YHAJVnAbKFUEMLd\\c^ÍÞ"],
					encodeOffsets: [
						[112711, 20572]
					]
				}
			}, {
				type: "Feature",
				id: "469006",
				properties: {
					name: "万宁市",
					cp: [110.3137, 18.8388],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@^J@ZTVbET^JBGLFPTHld]`FLQhcVanx\\\\ZbLHTGj\\FLP~fIZRZPVTQFSVAFJE^NDLEE[~LjsxVTG\\NZZNGlLRRGLJTV@hPZANN^@T\\NEPPbDZXO`d^HSvcJDIV\\XZAJUFCLNP@PQ¤@[ïKLÑIÏ]ÇE±I{uYśUćFcYUmsVeBSVgB[RO@aYYPO^]@UVaNeDShMLG\\EfFVE\\F`"],
					encodeOffsets: [
						[112657, 19182]
					]
				}
			}, {
				type: "Feature",
				id: "469027",
				properties: {
					name: "澄迈县",
					cp: [109.9937, 19.7314],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@T\\GJCXJH@fJDDPNCNJENN^NLHBNSx@DDYbBLLDRbjZTj@`XXTlG^Xr@PJLW\\WLTlWR@HDJTD@X_PO@STMDNTMVV@NLDM`M\\XM\\JNBH[PYZúYzŸ`Ċ\\ÎÝd]c[NKVFLEBaUmBIZGQ@JQSR@CUAEGBQ`SWYRMFgWGCGJCbNnIDGMEDKVAZUEqBYRa^WEUFKYQMaFWXEHIFWMYHCrXVIIiaK@aMCUYNSIISTwXALKH@XWXIEIJQCG[IEQDE_XSBaa[AIPW@]RS[FWS[CD]PEBYNGFSaSyJG]@ugEUDQlGHiBKHUIoNSKqHFaPMICK]UUHIPDJMuCA[SCPIDIOILGAEmU[POPBVSJDREBGS[QXWSGcT}]IO_X@TGHoHOLCX\\ELT@LYTDaFENF\\lj"],
					encodeOffsets: [
						[112385, 19987]
					]
				}
			}, {
				type: "Feature",
				id: "469030",
				properties: {
					name: "白沙黎族自治县",
					cp: [109.3703, 19.211],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@D\\RV]dTXELnHr]^@LETBBRTHPi^[@U`QTHDJ`MGSogDIPKdJ`WVNHCXHl_DJR@AH`FBVPUJLHKNTJOFFZON[ZEHFCJlMJ_Cn`CJVNGPLTNDFIdVTWEIPmRKMc_kDMWGGUTAtJLK~\\f{pqD[LAVXRCH{HC`eJ`}@W^U@I@_Ya[R[@MSC_aMO@aWFmMOM@haGGMEmaQ[@MESHaIQJQMckBIw[AOSKKAMPSDSLOAV_@@`KJRbKRDfMdHZERgAWVsDMTUHqOUr@VQXTT@TfgL^NH\\@heTCZaESNObHPHeZF\\X^ElM^F^"],
					encodeOffsets: [
						[111665, 19890]
					]
				}
			}, {
				type: "Feature",
				id: "469002",
				properties: {
					name: "琼海市",
					cp: [110.4208, 19.224],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@TP\\pATHTGlZDJGAQjE\\Rb@jVBDCN`JZ[NCNHNXbULPrP\\KNbMTLjJJRFP`pNLZz^FLRHjVPZ@hxVKbHBHMNNJFRlLzGPnNHhIrHHADcPWdUAmEMVQDSKYHY\\EhBN^HpXGNDBNNBnIßÅ_g{³So]Ã£@ORO@KMEDIVYB[WJUICudGTc]P_YWaCOOMFS[]@MMYBgOU@ISHKQQkKMHYY[MSHwUit}KF\\KFMCF]EIUBETSROUKTLT[NKTWREfJbCHBZKTFTKh"],
					encodeOffsets: [
						[112763, 19595]
					]
				}
			}, {
				type: "Feature",
				id: "469031",
				properties: {
					name: "昌江黎族自治县",
					cp: [109.0407, 19.2137],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@`ZĤd`òü BSPGP@VSbQ`@]HC~T^SE]N]FkW]E[fYGGOPaTMbFDYfS@g[MGK]he@SSSRW@UVqrPVGNStCXUhBFQGYNcCeLQQaLI@_`@EUwcEaCUaMc@SK]Du`MSkKI~BVNL@X`EvYwHcTU@MIe@SXJbIPNVCRXbWbSAWJCRXFFL]FMPSjCfWb_L}E[TaBm^YF[XcQk@WKZJYRIZw¹ "],
					encodeOffsets: [
						[111208, 19833]
					]
				}
			}, {
				type: "Feature",
				id: "469028",
				properties: {
					name: "临高县",
					cp: [109.6957, 19.8063],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@jD`hNd\\^dZädĒH´Op@ùZY\\OAGIMN[[W_NCNMKU@NUMSNCTSP@`O@WSCCI@GXQSkXKX[IK@OWqH]SkWW@_SiiYQaKCAKZaCCw@MTGAMKM]FMMIMDSM_HGHRPKCBGSJJIYH[QOJCHMBDGQJECMTDQKFGTCEGTF`NFEDMFaGSNwIiTGhYJD\\KZODC^@FTKND`XBHKJNKFBNhG^FJMPcHEZF\\QPRjQTAdgNOPgQaRSê"],
					encodeOffsets: [
						[112122, 20431]
					]
				}
			}, {
				type: "Feature",
				id: "469034",
				properties: {
					name: "陵水黎族自治县",
					cp: [109.9924, 18.5415],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@R]NC`YL]FoN@V[vBXVFNL@TRZalnVFVP`DlOZkVSXEE_F[EUFeH[NKTgfCbMVU^@P]ZObZP@\\QhATUfAtUasñiāEoI]eYǯ@aKmaeWuCºKÜKpnbHbYfUDSNCPJTRAHJTDJSfDNLHXC``VBNGTYCQDIXMDSP@xLNEFRNXBIpVNLXah@RgF@`qOML@LJNSPLbaHAh@Jdj"],
					encodeOffsets: [
						[112409, 19261]
					]
				}
			}, {
				type: "Feature",
				id: "469026",
				properties: {
					name: "屯昌县",
					cp: [110.0377, 19.362],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@\\OnVBFKHPJCJOJTDB\\vDINOCGJVVL^JDONEbrGTLpMVJLGjAHGRkVChF@vH^zIbTETMHAZOFC^\\DXT\\EffAP\\PdAV@UIYfS|S@YPICMeM@sC[_A]VQEwyHSMuNcAUlQJMVGMS@mVBZPFO\\CSFQK[LqDMACiUa@[QiFBRIHYCHkGSBS[oSOqBIE^QHCRWHIXsHU\\UC}JEjMNAN_ZAIhSEYfWDQGaPMTLERZTJb``NHV@"],
					encodeOffsets: [
						[112513, 19852]
					]
				}
			}, {
				type: "Feature",
				id: "469025",
				properties: {
					name: "定安县",
					cp: [110.3384, 19.4698],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@JjDNdJ\\FbKPXfZ^Ij@RZNaVSc[MsMOHQPDJcLIJ_zCG[HQxWJBHXdENRR@XQFWZQQGOFSWUCI[WCJuRGLXNMPLhCl[Ta@SqGgJMGOmyHkKEQMINMAGaGULgwY@UOGiKQ]EYyMKoO_QEIIKiNSMa[LqOKOaVMWMGMDY\\_IKrL\\ERT[DEPYOUA@nNTUHINkRBVMdNvGTxzRF^U`BD\\@tfNDNOJ@Z{TeTJZ@VUcB[OBOeeQT@^OXBJb\\AbWTF`RCJFH\\RDJIJFXW@WLGBKxWTSJJMTVZND@bbL"],
					encodeOffsets: [
						[112903, 20139]
					]
				}
			}, {
				type: "Feature",
				id: "469035",
				properties: {
					name: "保亭黎族苗族自治县",
					cp: [109.6284, 18.6108],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@FJp@fxpQ\\ApN\\GNPNBM`HLMrXLXj\\PEHnI@WUCEM\\GTc\\GZYHTPBHRCPTdH\\K\\@HXiBJILJJAVNTOZJNtFPC`YxDPWci@IBgbGKaTOIM@KNKrP@_hE@QbgKWUMJoWAQMFEKM@wTONCJWRCZDHSAM_UD_GWMKeCITSCGIQBGXUHQoMEEGWDQIG]FMQBMaFGueFeSQDUSDSKOCSFMLUaPWM_PaEGFETMX]RCRR@HXKN@JNnXXESPaDI\\£FkXWIAX]xB\\GN"],
					encodeOffsets: [
						[112031, 19071]
					]
				}
			}, {
				type: "Feature",
				id: "469001",
				properties: {
					name: "五指山市",
					cp: [109.5282, 18.8299],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@TCNOLBTLBPx\\AJdlNRRIbJTGNF\\@RcIYbmHoLQdKN_fCJYbDRRXKZFVEZVXBXIJBXMdESW[CUYHUVQFQAqsEIMPYMSBUIIJKAIjGW[@[LGScDOGQOAGSYZ[HSd[HFNVD@XmJFG[OWiWKNqGKN_MAMO[HoM[BoRewo@Y^HpITSFENc`MVCdHNIVCLJFI`NFIP`@VZbaf[FFJG`O\\WRFA@PVPFPPH"],
					encodeOffsets: [
						[111973, 19401]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/hei_long_jiang_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "2311",
				properties: {
					name: "黑河市",
					cp: [127.1448, 49.2957],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VÈÞ@kxnX°VÈa°V@kôwbJVkXlVUx@lL@xkVV°VbxlVUnVxk@KkVbIl@°kVl@lÆnkll@@VVX@V²bUlVlVUVÇn@nkJlkVb@x²V@n°VUnlKUn`@n°bWLnVUblVUVVbknV`°kkl@@V°@nzJ@XxlWXb°n@bĠlbXbbVbJ@Vba@@lbUbVmn@lVmnIW@WbÞ@n@x°@ĢaƐéϚnlČ¯ĠŻÈwm@ôçUmm£Xy°UV@wÈ£Ǫ¯kõÝçUÑUķĢkVÑÆÞU°nŎ¥ČUĊx°m°¦żVƐx°Ç£@yUônÞÆ@Èĉ°Kô¦WkWUbÇ»@ÈĕWÇÈ£ŤU@n£ÆUUKVamanwÅmÝJ¯k@JIkaVaUUÇbkaÆÑkWmÝUÛÝ@wnU±@kkV¯KUkJ¼U¦Å@ówķaķůV¥Uaó@Åwm_kVwĉĉmmn_V»a@UVwķóU¦LǫéóXÇmōLǓÇķxÝkĉkmakbUĶ°@W¼@bÈÆ@ĖLl@°J¯mkl¯LÝ±LamJ@¼VƧUóUXċb¯ńVbkÆÝI@llxk°V²V@UxÞL@b@b`ÇzkókÝ¤@ğ¯WLĉÇLmmnċVkbUaL@¯bU°ğLÝÝ@"],
					encodeOffsets: [
						[127744, 50102]
					]
				}
			}, {
				type: "Feature",
				id: "2327",
				properties: {
					name: "大兴安岭地区",
					cp: [124.1016, 52.2345],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@kϙmƏêġb¯@@wmÝ@XV@Ill@bUxl¯VlVbV@ULVlUV_kxVVVÈÝJ@¯Ulm¯x@xóÒĉ¼m¯Wxţ@Uz¯WwnUwť@knW£óVUUwğyó¦WIVmmI@±kwÇ@@b@ĉ¼ó@¯wó@¯aó¼KÅaUwmWUwÅI@aKó@UaLaVÅwō¼UUÝl±I¤VxÇx@zkJmnnmbnzxll¯ČkJl°@kbmx@x@kêmVnWxôXxU°bWLóJnÇWĵV¦UUbbÆġKk¯VU±aXmċÑUwĉKġkVxkÇKkbIÛXWl¯bX¯KbĊÞVÆnĸ²lxU°n°òÈb¦xVb@¯Vx@¯VķÞČlĊ°KĸȘI°¤ČIôò»ƨnȰKǬ¦ôWŎÈƨwlnKVXmbX`lbwkVWXXL°aƾaĊ£n°@°¥ŎzÞ¥»alwôkƒJa@ĶK£bU°ĊxźVÈUĠ¥ƨVI@XU°x°Ln¥w°UmwXmÝV¥Ģ°@nU@mÆ£¯lKÜw@aÅU¥UaÝIkmV²nn@Ķ»@Uk¥VKÞ@ÞÛ@kVmĢa@_Jómǖ¯ÆwóÇa@alUwwĢřk@wÆWXUWXWam@_ƒ»ÇéXaĸwVa@ÝKkUWkXkKXxn@lĊV@¯m¯nřÆw¥"],
					encodeOffsets: [
						[130084, 52206]
					]
				}
			}, {
				type: "Feature",
				id: "2301",
				properties: {
					name: "哈尔滨市",
					cp: [127.9688, 45.368],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@°`_JlU@@V¦°JUnLôlnŤ@@ÈaUÒVbkbl¤zk°ÇVÛô°IlVUVôUxÆU@bźĀº@¦b@l²UVl@°ÒĠxnXxÆVô¼Þ@Üx²KÞlVÑ°UȰôlwô@²ĸ°lanV@VŎUll@bÈnÜmwĢ@la@ÝÞb°UXblŎ²ÆkVI@nJnĠ°knÜbĢwna@akÞKƒĀaIVbU¥wĠwkôxnLċVçkaU±IUmnġW°WôĉalÞÅĵ¯@W¹XÝab¯a±X¯ºLaVmkLóbkaVUKVkkKV_@aÝykk±L@ÅU@yV_aU¥ówÇx@UkVn@lkÅlwWVwUkĉmkklW@abVwnWWwWL@UUÇLÇm@wJĉL¥@Ý_@a¯yUWw¯¯Uġx¯aÝXVmaU£ó±¯nwa¯óÅVXmanUlUXkWa@mkIğamIklÇUkĊzkKlUōĬl@nX°@llUxŹ²mKĉVWwk@UbUK@bmVmIVmwaWxXlWČmºÞÆbUxV@ĵńWÆĉLkWUbaWzkbĉ`U±LklōwUVÝ£UW`Uwk@mk¯VkaõVX@WbLK@XƧºWzxK@lmX@bkVVÆk¼Vbk@Vn"],
					encodeOffsets: [
						[128712, 46604]
					]
				}
			}, {
				type: "Feature",
				id: "2302",
				properties: {
					name: "齐齐哈尔市",
					cp: [124.541, 47.5818],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Þ@ÞĠKV¯a°@KVblaČUmnnKĊÈKX°Ġ@Þ£ôllÈy_@a@aKÝVwU@±¯Ulkw@kÞJlÅUa°ŃČaWVôƨVU@»nIb²KÞ°Klkn°¯I@kK@ĕÇÅ@aX»¯@VĵlaÿVamI@aÅÝउýĊȗJôȁÅkmƑÛ@kxġ@@laVk¯»īŹak¥Å¯JUaWU@@wa»KUkÆkUmUmwÛ±±UUbUUXwWwÆÝklkUanaWwnKlkal¯kaƽakÅxa¯@amb¯VlÇwÛĀV@xmêVÆVVaôVwÈx@ˌx¦VÞ¯VlmX@L@¯Ua¯LmV@°XċKV@UÈ@¥@wġIUkm¥Źw¦¯lmn@°kxVV@¦óamn¦l@nxlĉVómxnÒĉĀĊ¼þǔêÞ°ˌĠÞÒ°ĀɲĀƨźˤȤƨĊ°w@£nymwnkUUV¥ôÑVmkÆmUUVamVIkmôlxkXÞþbll@kVƆVxV@¼VÒ@UnnÞJ"],
					encodeOffsets: [
						[127744, 50102]
					]
				}
			}, {
				type: "Feature",
				id: "2310",
				properties: {
					name: "牡丹江市",
					cp: [129.7815, 44.7089],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@U`lLUlVLUlbaôlKnUbK°¹²W°baÞbknyUlUkamř²L@m°@lm²n`ôÅlKxÜKnxV@l@ÅXyW_k@wmŹĕmX»Ûl°ôÈ»ôô_WW@Ual»wU@@wUV@VXI@wĢ͑ÞȻaU_@mUkly@¯óV»XmWUXUWmnm¥nUUaWLk»Æ²IÇawÅaÝ°¯nUa±a@¦õÆğ@@ÅbxUÜnÇłlb¯¦ôó»m@±Uk@Wwa¯xUV°xXbÇÅUVK@¹KUaȯ@ōÝXallÛkalÇUǫÇÅÇakbÝƆ¯nl¯@¼VUx@x¯W¼Æ¯mĖĬ¯ČVkķÅmx°ô²V¤bUnÞW°bĢw°V°XxV°z@bÞ`@¦KĊI@xnÈÈKV@VXKxXmXUxab@kXllĊnVlUxXkxlÆkm@UVl@ÈwôxV¦bU`@zÆV@²KllÞz@b"],
					encodeOffsets: [
						[132672, 46936]
					]
				}
			}, {
				type: "Feature",
				id: "2312",
				properties: {
					name: "绥化市",
					cp: [126.7163, 46.8018],
					childNum: 10
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ऊþÆÞ@bnJUbĀnblĊÞlĸwǔÈŎKÈnôWǬêKV¥ĸôUx@VbU¼m`nnĊĊxlUmkaVÿLw@°»UmbKmÝUwUmVknKUUl¯KUUÈnK@ĠkX±lX°L@¯¥@wV_mĵ¯WwL¯UkōÇVUlwVó±¯aVka°wVk°mÞ¯ŦřÆl²ŎkU@mUkb¯ķ±ó@kxȯó¯VUÒkÝ±LÛwÝ@ó»ÅUWwmğw¯Ñ@UkV±@ka@¥¹Źÿ@aÅVwóVVUkU¯JÜóÈUl¯yk£laUaVÑÇb@ţ@kmómKV¯IU¥@@kVI`@ô¼blUlbÈb@xÇKkĢɳaÅɆō@VK@z@@¥ÆKnÜ@@aÛUwwnUķ@_V°@klVnULVVÞbVl@°@nxn°LÅÆlVÈmU²@VmĠLxn¯xkWzJwnLmbXbW°Æ²@x@JVxLĀ²Æ°I¯ºÈ@ÒnÈ"],
					encodeOffsets: [
						[128352, 48421]
					]
				}
			}, {
				type: "Feature",
				id: "2307",
				properties: {
					name: "伊春市",
					cp: [129.1992, 47.9608],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@K¯kWW²ğl@mLÇVVLk°VVmLUlVnxVnÞLnaV¯¼@xKUĀlbn`nÆxô@VbU¦ĸŰĸbôxÆ@V¥»IVl°LUll@²mVx@ÞÜÞVnlXÅÒlbÈaVVUblbJ@I°lÞInÆmxnbUbVLÅVm¤@ţVÇ¤XÈÇĖ@È¼aXVÜaXbWnzŎařKôbUlw@¯naÆKnUU¯Üa@mkkVUĊmżÝǖK°L²lÆI@¯¥ĉƛVaÞk@ÝVaĠlnUVwóma@wĉ@aVxamX@a@UaÅLaVW_nWm£nWm_ÅV¯m@mó¤Ý¦¯ÅalmX£VWUÅwmÇ@@IVWUw@aI@k@wŎ»WÅVaKIka@¥lUkUlwÅwVyÈwWU@a¯U°mÇ@UçaVa¯mV»ÅwÝUlUkV@kmUkX£w°@@ÇaÝIamÛam¯lğmmI@JUl±ÅōkWa¯VÝa@Þkbġ@xÛnÇm@akkōVōl±kÅťŚÝ°¯nUl¯xlbU°b²ôUxkVÈUŎVl°KXxĶ°nU`@x°¦@"],
					encodeOffsets: [
						[131637, 48556]
					]
				}
			}, {
				type: "Feature",
				id: "2308",
				properties: {
					name: "佳木斯市",
					cp: [133.0005, 47.5763],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nbÞJb@È¯@xW¤Vln@lUVlkÞVÆxU¼°nUbbVèÈ@nIn@ĢmlUw°żVUn@lnL@VôbwĊlJķĸĢlwôwƨxVVUŦxLźÈ°`nnĠwŎJÞĶwôJ@¤XnÜĸln°¼È°lUbx@l@ÞÞÈm°lôwL°¼ĸ°Þ²nĠ@ôwÞ`ŤIVÒĠU@VJĸbÆ²@°ĊKJĶaĢȰ@ô¥°n¤bČU@VxmUw@aÝţÇķ@ĕķīU¯²@ÆmVÑô¯X¥ċç@ĉ»U¥ÝţKWVÅkUVÝŎUmÇÝx¯aķxÛUóL¯a±óōb¯ÑÅVÿ_Åķa@UK@wm@Van@UmmLVa@VImmXUWÝUÅKUwÝUUkVk@l¯XÅ_J¯kJmÅLa@¥U@¯Vz¯@`@¼mxƥŏKÛk@±laÛ@@Xm@@xƽ@WŎnˣĕÅ@@aÅ@@nÝbÇ¯@_UkUWkbwÝU@çWlw@anI¯lyX°m°VaÛm@mVwÞK°XlaXmm_@UkwÝK@VIXmV»I@a¯ğWbġaU_¯JU¯ġĉkō`±nÝÆkbóĊ¯XĢXmVn²JVlbUèČmKwlóğxxV¦UaJbƑÿÝLl@bmbġx"],
					encodeOffsets: [
						[132615, 47740]
					]
				}
			}, {
				type: "Feature",
				id: "2303",
				properties: {
					name: "鸡西市",
					cp: [132.7917, 45.7361],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@LKVVnkbVÈb²U°VnklVlaÈL@anU°ÜmXV`nôLèxlLXL²aVVmÈX@ķlnUÈl`È¹@Ť°U@xKnnVmlnnUllVnnaŎwlVÞÒ@n¦LV°lwVkLaÞlnÒ@xmLÞ¤Wn¼WÈLVVUxlÈôWVaU_VKKXUÆbnnôKbÞw°bÆWXamVwKUw¯WUkUlJUwVUa@@kmyzmĉw@kVwkW¯ÅKU_VmxU@aW@@kK@wa@K@@kVUaky°_Vmkna¯K@Lwġk@@IÇóXwVakmV@mwXUWanlĉ@ÇUwKóܛǊÛm°@wÅ@±b¯W¹WVwŹĕ¯kVmōb¯w@awmVUUbVIkaVwķxk¼b@VXXó`ó¼Çó¯kÜ¼WnźĖnxl@X`WzÆ"],
					encodeOffsets: [
						[133921, 46716]
					]
				}
			}, {
				type: "Feature",
				id: "2305",
				properties: {
					name: "双鸭山市",
					cp: [133.5938, 46.7523],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@UUwómÑÞÑUÝÝUkmmÅyV¯ī¥Uÿĉ¯mÇkaWbÅX¯aÝxaóLmmÅaWVLULV`UbXókÇVwUUÇKX»XmÝ£nK@wmÑkÝbKUlx¯kUKm¥@ÝÑkUōxmbUmkVkmmnkUmmL@w¯Vţ@Çºk_ÇmVk@ĸVxVÈ°lLkllUbōwnVW¼nlUx¯XmWUnÝ@xÝUó¼¯J@LVbkJWnkbW¯ÝLUxn@nÜb¯U¯nWkz°mJ@bkxX@èÞVxlaXlVV`°@ÈÞa@mÆ@@bÆ@ˤĖmXōƾ@@wn@@WÜ@kb@²ÜlŐLƦnw@»_°@y°UV@@¦bÆKnI°lIÆ`°W@kllUVÞVVxLÆÞVXWVnnUJ@UbnKVnm@Ubn@@xL@VbÆĸ`UĀÆÒ°Ŏa²ô°bôKÜVĸw°bÞwÈVnÞōVUÆlXU"],
					encodeOffsets: [
						[137577, 48578]
					]
				}
			}, {
				type: "Feature",
				id: "2306",
				properties: {
					name: "大庆市",
					cp: [124.7717, 46.4282],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@mÇ@ÑÇ°¹¯J±ÅÿKUwI@w@±ÅX¯WanamKxIylX°wmwğKUn±@nVÇUÅkÆ¯Kmmw@@¯UkÝaUUVKmUlk@¯U`ĸ@VmxVxÜ@bÛ@mÅL@¦@@yLUŎ@ÆɅɴblġÈL@wÇaakkVa»@ó¯_ÝJwÇaÅXnyU¯¥Å@wbÝaLmm@@VUlbğVm¯Xm_`¯_UxmLa¯b@maó¦Çk¤V@bóJknVxVXx±aLUbVxkLVlLWl@nX@VÅbWlÈnxbWÅbm@xbml°bXbWXVmnn`Lmnbmb@k@mwU@@¯Jlbk°lbkmLXxmbVbkllÅÞxXxVWVVa²VÜ²nxVVnÅlVlL¼b@xV@XVbIÆ°¦lźbĬ°¼Ulb@kĢ@lw@ƒÜlnȂÆóȘIĉ"],
					encodeOffsets: [
						[128352, 48421]
					]
				}
			}, {
				type: "Feature",
				id: "2304",
				properties: {
					name: "鹤岗市",
					cp: [130.4407, 47.7081],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Þ¥ô£nn@°ÆUn`mXn¤mX`UXbÆKVb@@bnWbwUbĊ@x@nbWVm_mm@ó»UmÅWXkĠ»²¯¯nķwŎ@ĊŎK°bĸUnÑKČ¦ĠÈbÆknJÆUĢV°IVƾwaVkÇ¯¯»mķkÛWm@£óIĵxÝōIğxmm¯_ÇŹKwťUVUƧwóxxġkĸķIkĉxóa@UmK@kVmUŻ¯Vxkġn@mmJ¯n°V@bXVÇxUzÆxkxlVkV@¦lbJLUbÆXō¼@xl@J@bVxXU@JÈ@nxVÆUXW¤knÆb°"],
					encodeOffsets: [
						[132998, 49478]
					]
				}
			}, {
				type: "Feature",
				id: "2309",
				properties: {
					name: "七台河市",
					cp: [131.2756, 45.9558],
					childNum: 2
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@²mŎ_lĊĢV°°IV`ĢbaĠX°@bJU¼WnUJ@ÞLlxV@n`lIUa@K°Iô»ÞVwÞ@VmnX°WVwmkX»UmŎxVaklkkKÇ¯UUwÇWUnU±bKWKkwçóKmU_nW¯ÛmV@bÇKkbkUml¯U±VÇaUamlUULKk@U@mwÛLwkLóÆm_±nk¯@@n±KnŚlbkVVmzlWXº@Ķ°"],
					encodeOffsets: [
						[133369, 47228]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/he_bei_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "1308",
				properties: {
					name: "承德市",
					cp: [117.5757, 41.4075],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lLnlmxnIVVlUnb@VVxXJWL@LÞVnnVJ_@wkmKbxwXkWXXKlb²K@nVVVbL@WlU²lKVnUJVz@VVb@lÅ¼mVUVnbôaVX@°Ub@lWbX@b@bVb°x@VxÈLVlaÆ@Þb²k°@lVU@Xn@VWLXb@¤VXKVVVLnm°_ƨ¤@aUIVaalkX°kV@alwUVyU@kó°na°UVUUmUÆw@mkLVUWVIWLnn@xlVnKmyU@U°UXaV@U¥U@UÆ@aVUkWU¯aU@WLUV@bkbmKULmKkUVUkmVIUwlWV²Uml°U@WLUwVm@UUK@_KUUÜaXw@VKUU@mVIUUlmnIVVVbÈVlKnbVK@nI@nVnwVLVKKVnb@aUIVW@In°@lVnI@lWĢ@°UVL@b@VyUUa@w@WUnU@WÇ¯K@UkkJWaÛbmk@mVaÞU@amkW@mXUKkÿ£@akl@Um°UXwlaal@nmlXnW°znW@awV@akbĉ¥VmU@IVUJkUmWUKbmkUaKkUVU@KV@@klwWaU@kmXVènbmlUUKX¯JkbI@JmIUWU@Lml@XkJ@UkK@aVKwWaIWwmU@mU@J@UaċUaUUVkI±k@UU@UbVVm@UVKLlkIWaULUWXUJU@WbUb@lkXUxm@@JVn@J@bnb@Vkx@bLUÆnJaVXnKVVmzX°V@_lJXxWXK¯bÅamU@lUIbñJ@LÇKkIÇ`kxWL@@@bUVUb¯xWKkÅVlULW@n¦Ul@IlmUUUVm@kWnkKma¯XUKWmnwVwÝLmVUbUVWb@LnxmxVmbXx¦@nb@`V@kbLUmVUlkbVXkºmnm@@xk¦bĢÜl"],
					encodeOffsets: [
						[118868, 42784]
					]
				}
			}, {
				type: "Feature",
				id: "1307",
				properties: {
					name: "张家口市",
					cp: [115.1477, 40.8527],
					childNum: 15
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@kġÛal¥@wn@nml¹UWlaVknUVKla@U@_ma@¥WwnaUwnmw@KXaVUVaUnmWUk°lnUVUXWVwIWVóKUI@WXxUU@mma@kUKWLkw@yk@aVkUUċaUU@Wk@Unm@UVmLm±IUkJkW@aI@m@UVUla@VXVXmVwnkWKKU_k@m¥mX_JmnU@km@U@KmUVU@U@Umk@@LmW@Û£Wka@wk@aI@mmk@mUa@UmUIwW@aWUbU@kbÇ@kw@makVUkU@am@aU@mxkUbKUXU±KXVWLUK@wkU@V@WXUa@WbUxJI@¦VèVVX@±ê¯KUI`¯UULVx@V@UKIVkLmVkKm@nUJÝbkIUJVXVVxVbUVJUn°bVmlU°XnK@Ul@lVÈVUXx@W@VXVKÞbn@VnbVm`UxkW@UVkLKm¼@lUnUJVnVXV@Vm@@LVklIkl@VWlULWKUL@mJ@blbUVUlmzUJUxm@UUbċÜk@Ub@VLVV¦ôbVmUKUkU@m@VlVn¼WbUJ¯@@°nIllÈl@nXWlLkJ@bkxlxkxlXUlklJXL@bWn`@nÆXxlL@xl@XbLKlVlIXblVUbUJW@lX@VL@VVXJwn@WnL°KbVbl@VI@K@U@nmVmV@XUWI@aXm@VUUkWmn@lmUUk@mUmK@UnwVĉ@mU_V@XJôVVULVUn@llUnJl_n@ml@XlLlw²LVJUL@VmbVblVXmVnl@Ť¦nn@Ü@bl@@XV`Unb@VlLVb²JXn¥ÆÑ@¥Þ@"],
					encodeOffsets: [
						[118868, 42784]
					]
				}
			}, {
				type: "Feature",
				id: "1306",
				properties: {
					name: "保定市",
					cp: [115.0488, 39.0948],
					childNum: 23
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VbXW@@UlV@xVLXKWU²LVVWLalVnwV@@bn@bVVllUnb@lxÈ@laV@aXV@bXxJnV@VVb@nnl@nJ@bll@aU_VWUwVUkUmUkb±mVwU@VIUW@UWk@VU@ynLm@IV@bnKLVaVmnIlaXwV@@WVL°@@xnX@V`V@VbUVVLVKnwnL@ll@@_V@VVnaÆ@KVXÆ@n@wKmUWm@km@kÜKXU@ÑW±nIUwVKla@I°wU±kkmm¯m_JnawW@IVaUama@wUmU@mVw@aXk@mWa@£km@a_kVmUnWW@¯bkUmk@VÇm@@kUUKUU@UVUamVUaWIkb@xU@@amUkKVkam@@kVUkUWmKmUkLUb@xmJU@UImVÛVmnUwJU@VX@UWm@Ub°¦UmxklmX@`ULU@@UW@@xkn¯@makVUmxUb°lUbUbnUJUUVaLkbUUJUU@mUUUJka@xUIWJUnJ@Vz@kb@`@bln@lb@X@@@XlbnbVb@VJlInlbVw@UKl@lbnan@VbJôLnUzlV@lÈLVbVK@LVxVWXX`WxXzbV`UXV¤nx@bVlVnVlUL"],
					encodeOffsets: [
						[117304, 40512]
					]
				}
			}, {
				type: "Feature",
				id: "1302",
				properties: {
					name: "唐山市",
					cp: [118.4766, 39.6826],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@VVl@²lJUVVbČVVb@@InV@VnXxJXbxUL@bLl@VlI@WnkKV@VXnJ@IJla°IWLVVnkmaUçWVkôaÜ¯@nV°wnJlaV@VUnUUaW¯wXWWwna@£UaWKU¯¯@aVUkKUamUUn»anIVwUWlk@LlWVakU@K_lbÞU°@y°n@KÈkWWţ¥ĉōkġWUw¯£¯Çwţw@kK@k¥ÝwÅbÇ¤ÛťVlW°@ĸx@VVVULVLkl@V@X`Ub@Xm@UWbk@ÆVbnLWV@lnXUbl@X¯lmUVkKWLkK@_UK@U@UmmUxmVXLWVULkU@`W@ULUK@XlJXzV@@xml@VU@UX@Kk@WbUK@Xn`XmJnmkxUVbUVlVVxUbV@nKlLkVKÞbVKXI°KVmVUIUKULVxVJVLkV@V@UbU@WUU@UbUK@b@nV@VkLmb@b"],
					encodeOffsets: [
						[120398, 41159]
					]
				}
			}, {
				type: "Feature",
				id: "1309",
				properties: {
					name: "沧州市",
					cp: [116.8286, 38.2104],
					childNum: 15
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@ln@UÈl@Vnl°aX@mXnVlU`@bln@¤Xb@nWl@bUx@nnVV@xnbVbUb@JXxbmXa@kUVwlWkKôVm@wkkK@kl»ÈmVKXkla°@XVV@VI@ml@@Vn@VX@V@J@VxUzVV²blVk¦@Ġ@@»@VK@VÈLlK@XnJ@alIUlaVVb@n@aU@WUIV@mUn@mKXml@lL@LnWb@XV@@aVVbV@VVIVWÈbIÈ»ƒǟlWaVUÅUUm@kVUWVkaUwmaóUJUU¯ÑU¥mk¯UaKÅnÇyóXmWÛX¯aċbÛaJWÝU¯»aóóUm@IVVl@bLUJWLX@@xXUxl¤V@VnVUVXVbV@@@VVn°V@ţU¯VUmUWV@mUXabUKUwUaÇKnVk¦Wb@VnLmV@bkV@nxW`Å_UVV@bUklVX@VmlUx@VVL@xVWVL@VW@UUm@"],
					encodeOffsets: [
						[118485, 39280]
					]
				}
			}, {
				type: "Feature",
				id: "1301",
				properties: {
					name: "石家庄市",
					cp: [114.4995, 38.1006],
					childNum: 19
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@la@y@UImVXIVJw@lbIVVnV@VVIVVlaKbVUVVImVaaVk¯VanwVlUnb°@lm@wX@@VV@VK@_nWlknwV¯¥Van@VX@W@UVIVxnmÜUnUVJV@nI@wValKnV@kmU£na@mVk°KLVa@UU@UmknWWkXU@aWW@@km@UaU@@klK@UkaWaUnamm@Ua¯wWU@UkL@Un@xVlUXVJUbLmU@aUWUkmKkLUUm@mWXammkkWUm@@U¯JUUmkU¯@mKĉxÝwÝ¥LUómwkUUUWVkKmkKmLXlxVLVxXJ@nVJnz@VWL@`nX@x@kVUUmJmIXxJVnUV@UVV@LU`UXVVlXL@l@b@VmX@bxn°UbkKWLXlW@@bKmKULmakLUlmb@Xb@xmXU`Vb@`lLx@nWVXL@°WlXnlbKVKXVb@X@l_lJ@V@XnI"],
					encodeOffsets: [
						[116562, 39691]
					]
				}
			}, {
				type: "Feature",
				id: "1305",
				properties: {
					name: "邢台市",
					cp: [114.8071, 37.2821],
					childNum: 18
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nKlLnlLXUVVlVnxôVKÞ¦ÞxĊwnL°@lVnVV°I@Vn@VlXnlnbWnXn@VVlKnLVlVX@bnVKVaUIVWkU@wVm@¯@U¥VmU_°lKkw@LXVaU@wUUUKlUóW@UVUUl°KwlKU_naKVnlKkkWWa@IJVa@IlJnU@KVUUmVlaXUl@lm@kXWÝÑnk±k@wğ@@U@mKĉLmVJ@zmlnWLUÝJU_@@mJkXUVlbklÝ@Ýab¯@¯±JÅwġaUU@kU@mVI±bUKLWUXJkaLóKULWbUVkKmnk@@bmLUl@b@mnmJkUULabnmn@lVV@¦n@l@bznx@`Vz@bxnV@xllbnKVx"],
					encodeOffsets: [
						[116764, 38346]
					]
				}
			}, {
				type: "Feature",
				id: "1304",
				properties: {
					name: "邯郸市",
					cp: [114.4775, 36.535],
					childNum: 18
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@bVKlVnInm@@akVnK@al@nmlLVUXaVKôLKlbIVWXKVL²aJnU@lV@VVĢbÆx²I°°@aÞbÞ@lkkaVUlWnI@@V`ÞIVXKmnk@yInUĊKÇkUUamUUk@aU@Uk@WUwVkVJVkkw°a@mK@UX@VVLVW@wwVa@¯Xm@@lUIWaU@UWkXWmU@UwmUkKmn@lkV²VaULUVmJUUUwLma@UmkIUmLmVmx@bLUamKÅL@VmbkU¯KÝamzkJUb±VkbL@lU@WIkJzkKmKnUalWkkKW@@nkbk@WW¯XUVUJ@XlJ@X@XlWLkU`VUnaWaUV@UVIaUxUUmVK@I@W@ÇU@@U@b@nmKXmx@UxkVWUX@`VLlL@`zXÝb@b@VUVkIUJVz°KVlnLlKnLxlLVVUVlXUJ@nnI@mVUlbn@@m@bVnV"],
					encodeOffsets: [
						[116528, 37885]
					]
				}
			}, {
				type: "Feature",
				id: "1303",
				properties: {
					name: "秦皇岛市",
					cp: [119.2126, 40.0232],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lnV@Xbkx@lU@@LUVlVLVbnlaLXVVnlIVUJV@UnĊ¦lab@nJ°UmV@wn@VUJVI°bnWlXnWVLVK²bakklI@aUaVUwVUUalaVwnUVak¥X@WkLVÓmmUK@_lW@n_UK@alÅ@ğÅƑŃÝm@ÑţÇlL@¯mz¯@ÝVak`@LlVUbkXK@klVXUxJmbm¼VnVVblLUV@b°V°XLVb@¤mbXxWX°xXVbmVUVU@kbmI¯xmU@Û°óbUl"],
					encodeOffsets: [
						[121411, 41254]
					]
				}
			}, {
				type: "Feature",
				id: "1311",
				properties: {
					name: "衡水市",
					cp: [115.8838, 37.7161],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@KVlV@X°xb@VnnmbVXblb@VkL@lV@Vbn@@l@XX@bWVXlmXnlVV@@VUbK¯LUl@nmbV¤n@lLXnlVUV@ln@lbUlLnV@bV@@wlaXJVbnUVbVU@VVLVVn@VVX@@UKXUU@wUK@UwVnk@UUWlkV@aUVUÆ`X_w@mlU@anUmK@UXal¥UmÈLVbVxVLabVW@nXUVnV°UŤV@U¯Um@U@@UUaWVUmUUU@k£VwW@wW@XKIUa@wU@@al@UK@_mKXKbUU@aVKm@Xm±@kbÇakLğVaUw@a@mkUJk@ykw@£WX@lknk@WVkbUVnUVL@mVkI@JUbI@JXbXllkLUmLmbV`kLx¯LkVUV@VôXkVVLVV@xVUbW@KxlL¯kV`UnV¦°@"],
					encodeOffsets: [
						[118024, 38549]
					]
				}
			}, {
				type: "Feature",
				id: "1310",
				properties: {
					name: "廊坊市",
					cp: [116.521, 39.0509],
					childNum: 9
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@laU@UnL@VWbklWxnIVVV@XJlbUlXVbn@@KmV@@X°WVInJmn²@lmVbnL@amKV_kwlmX@@LVamaXaaVU@UnJVanLlUkaW@UaVakK@IlKUU@an@ln@alKUkIVa@a@klaUKUV@UkUV¯KVV@kUmU@@a¯ImJUU@VV@UL@U@@WXUWa@Ukwm@X@@w@al@@aVIUmVUUUVWUknK@I@l¥kU±aUUVyUw@@I@UUWm@@Uk@@nUJU@WU¯@kbWlULnÇk¼@llLl@xUnóLlkXUxV@lWbI`°nnnllV²¯x@JkbLUVxmJX²@ÒWVÛL@lln@XnnVL"],
						["@@@kX@Valaa@KWI@UXW@WanaUIW@UaUKķk_W@UVUKU@b@UamxVXnJUbWVXLVbn@W°kb@U@Wó¼mIU¼k`V@bVbl@lX@lUôVlUIV`lXVn@lUlVn@l@UVaIUWl£UmVWU@@UUKlUUUnVL@KUnLVWUa@U"]
					],
					encodeOffsets: [
						[
							[119037, 40467]
						],
						[
							[119970, 40776]
						]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/he_nan_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "4113",
				properties: {
					name: "南阳市",
					cp: [112.4011, 33.0359],
					childNum: 12
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lKl@nVV@bn@VVnmnLLXx@VLlKVUIXWÜ@Člbl@XUĊUlwnWLÞwm@ÞUVmnVl@nXJXLm@VnnJlaI@VkxVb@VlnJ@knKVn@°aVanal@XK°b@¯VJXIVK@al@nVk@nKab@XL@blVVKVLXK@VaVI°mVaX@V_@a@yUkVwVIVaJ°@anIlaV@nKnXÆm@wUUV±UUWUKnaWwXUWmÅ¯Vam@kakImUK»lan@VXXaW@@UlUUa@a@UlwUV@Xal@@anIVaUK@VXmwVmUmVLXl@nalLnal@nKlkV@@UnJUXnl@nVl¦V@@VnJ@nUVVVVIn@VaJÆn@@K@mka@kmWVaUI@a@k@@aUL@mmaVIUKUV@@IU@mUmmL@K@UUUU@mW@@nU@ğ»mVmbk@klW@UXnV@LJmlUnUJUUUW@UnkKxmLa@@@lUUbmUVWk@@nkUmam@UakJU_Vm@ÅlÇLUVmVUwULKU@k@UVUlU@@U@UaUUWaÅzJaWLklb@bmL@kKabWUV_@mV@b¯JmXUbUK¤ÇLUU@b@JkLWmkUWIkJ@VmX@JUbVXU`¯VV¯blK@LXKlUV@Um@@Uk@kxWkbL@KkbmL@UXmaU@@l@x@blX@xUJ@bULUlULÇ@@VnU`W@@nÛ¼U@@VmKUkm@VVX@@xÇ@bUbVb@VX@@xLUb@l¼XLlbUlVVUUb@n"],
					encodeOffsets: [
						[113671, 34364]
					]
				}
			}, {
				type: "Feature",
				id: "4115",
				properties: {
					name: "信阳市",
					cp: [114.8291, 32.0197],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VllInJlknJVkVU@mXlUÞ`VnVVU@U@y@nXlKVnJVkXKWaXIb@yVkVUkVwn@K@nW@kKlUXVVUlbnUV`n@V_V@llX@@Vb@bV@@nlVUb¯WLnbmb@nLnKbUbVWnLlaX@VVUX@Vln@`kL@ll@VXVJÈIVl@XÞJ°UnaLlylU@UXKlnn@lanLWWnbVI@KXKVL@LVWVL@UVKUIVWX@@XÆJ@In`@lJVI@aWÛnK@UlK@UU@VKnlmnXalUllLUbVVknJ@nV@Vm@al@@xnVlJVUU@w@ak@XW@_mWnUlŁUmVKV@VXwW»XWaUwnkWUkVUU@@@WlaUkkaIWVkm¯xmIUmLUVaUIó»m@mmwXk@amk¯¯l@wmkLmmU@UbkUWJ@XUbJ@b@l@znÆmK@Xk@Ub@lm@I@akmVKUUVUkU@U±JUbk@IWmkxa@UUVUWVkIUaW@UlLWn@VkJI@VkK@L@bmKkJmUUaUKWXk¼VxnJ@V@@VULV¼@@UkaUlWL@U@W@IkKmL@KULUWULWKUXUJmIbK²UWnWKUUkLUmUUam@UU@mUL@xkV@VV@bmV@Vk@mwkUVUx@mbXÇnVbUL¯WnUVLVb@xnlWnU@UVUVVUbVVlVkn@llVUXUWUXVbUJ@bmLUJnb@nVK@bl@@@bVJUbnX@lb"],
					encodeOffsets: [
						[116551, 33385]
					]
				}
			}, {
				type: "Feature",
				id: "4103",
				properties: {
					name: "洛阳市",
					cp: [112.0605, 34.3158],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VVUllLXl@LWn@J@bKUVmnL@`VblLnbV@b@JmL@LnV@VV@¯VJVnXL@nm@aÞ@ak@mImVbXLynLk°@°aVJnUV@UVVXk@WJ@VXLlUnJVnn°U@»°Uwl@bWmUXÆ@VLXU@m@Ua@Imkba@naWW@_@WXUV@@U²@K@I±U@¥kKWLóLla@£Um@kWKXU@mlLXUVKUU±J¯_@`UL¯Wmk@WakklUnVUVaU@KUU@mmK@_a@KX@VaUIm±kaVKVUkw@kaW@kbkL±UUaK@UUKVak£@UmmL@lIkmU@Ualw@UJkbmIUmn@WKImWk@mUUnÝV@nÝxKmXkxĉVWVk@kaċÛ@WXJUV@zmVWnbUbVbLlUnlUÒnWVVWnk@@Vm@kxm@Unl@Ll@@V@XnkJVV@nlVXxU@ln@a@VLnWĊ¦nx@lbVKXLl@ÞVLXJl@XXl`lIXVl@XlXUVKwV@lanxzUbVJ@VVX@b"],
					encodeOffsets: [
						[114683, 35551]
					]
				}
			}, {
				type: "Feature",
				id: "4117",
				properties: {
					name: "驻马店市",
					cp: [114.1589, 32.9041],
					childNum: 10
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@n@b°UÆXnVlnLÜ@VLm@n@na@Jm@k@lVVxXX@V`lLVXVV@VVÞLVV°²@labnxV@@bLmlm_VWnIWUna@lLbnV°VL@KVLVUVaVLXK@mÆXna@wVma@Xw@KlL@a@Va@wUkaWnIVla@Kn@Vn@VUl@nKVnJ@LnK@aVkVUUW@VakUVanI²XW@UUU°KnUVLl@XaVK@aU@KUI@W@_lm@KkLUKV_U@»@UVJ@XV@@mVL@K@U@Kk@VwUUm@kmWL@VkVkzKmb¯VÝI@WUkÇJUIUWk@@klK@_km@UVWUUW@kbmKUXaVamLmK@namaXK°VakU@mU@@aa@UW@kkU@U`m@U_mVkaUVWUkVL@lmX@Lm@UxVlUUl@zaWJXbWLUlmIUkLmW@@z@VUVUUmÝ_kVW@nUVUlmIklmIkJUkl@n@Lm@ÅIUbm@UJUUVU@mmI@UU@k¥mUk@WmVmI@VU@klmLk@mbkKmb@WkKUVnUnnxW@UVLUbmJ@bk@WbU@Vkx@V@bVbkV@V@XWbUWm@kb¼VLnlJlb"],
					encodeOffsets: [
						[115920, 33863]
					]
				}
			}, {
				type: "Feature",
				id: "4116",
				properties: {
					name: "周口市",
					cp: [114.873, 33.6951],
					childNum: 10
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lnb@xlJ@UnLlKXUlJl_KnV@xVL@bkbVVUè@Wb@UbmkVmbXVJnUl@a°@@bLVblXxInmnLVwanJÆw²IlmnXVl°VVbÈaVb@lkn@VWnLlUVmÞUUklkVkUaVaVaUwK@kkaVWmw_l@nUVVb@baV@VV@zXJl@@kl@lk°WVnÆbnbUVJI@VKVm@kK@_kK@a@aU@@wW@@k@aUW@IUWVUnLlUlVXKVwmk@W@VWa¥@k@lnUIÇKUaU@UUVmIUVUk¥Vma@¯k@Wanwm@@n@@m@UIVkUVamUXWaVU_@mUVUImW@aUIĉK@VmIb@lU@@nJkU@KIUmmLk@UVm@Um@@LkbUmJXlbV@xUb@@bkK@LWx@bUn@xmbÅW@nWLUKUbUVKU@LUK¯mU@VV@xULUVL@bU`WUz¯aUamKUa@@xkX@x"],
					encodeOffsets: [
						[116832, 34527]
					]
				}
			}, {
				type: "Feature",
				id: "4114",
				properties: {
					name: "商丘市",
					cp: [115.741, 34.2828],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XVl@lLÈ@VkV@V»UanWX@VaÆÇô@ÈaVX@xVJXUÞUaVLĸbXKlV@m°Vn_nyXX»mUk¥lK@a_@yInaVKVa°_@WXI@@KVnIlbnaV@l@a@_w@lwUKmXa@UV@»Vw@kUKVUUm@w±VUXUKUwmJUU@km@@±mXkmUI@mmKUwkbWakLWaUIkJmX@l@@VUX@JWbX@VbULWblUVULknlV@bVJkmb¯KknWmk@@nmVkx@VmU¯KUnUL@JUIVmaÅaUm¯Xlkk@@lk@WI@yUUU@b@aUaUmVk@`nxUXlb@lLVxUbUbVbUllkVlÝVUnkVmKUXm@kl@nUx@xnxn@`VX@V²x@V@b@Wl@zU`VUVVbL@VbW@bkXllkLWV@V@VVÈwlV@@XK²LlbWnnÆL@VnJWn"],
					encodeOffsets: [
						[118024, 35680]
					]
				}
			}, {
				type: "Feature",
				id: "4112",
				properties: {
					name: "三门峡市",
					cp: [110.8301, 34.3158],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@WKUmUI°U@@UmU@KnK@IaU@makKUa@_KnmVUL@a@IXm@KWkkKVkUU@aUW@UUIVaymwkbU@xLVUWWkk@WUkJk_WWk@WIUKÝk@WKULka@mwĉ¥mXUK@@bm@kVWwkU@mUUlIWm@@Uk@@KkVmn@lwn@@Ul@XmUXUmVÑkmkVKUaVamaUXn@ykLUK@WwKmKnUm@UmaU@mUk@kL@lxċxUnkVmnXxWb@`kzWJ@VLmVUnlmUL@lW@Ub@VXUb`VLUbUJ@nmnUlUUm@@bUJlnUU@lxkb@@XJUn@kb¯VVVmlXXlJlzn@VlkVW@bkKbmkUbVblXVxKÈnwÞlĊKlVnKlwX@lL@xlUnVn@l@lmX@ÆÈb°¼ÈwVJlx_°xalUÈxlUnbVxnL@lllbmn@nb@@VL@V@@VLJnIVVlKnV_"],
					encodeOffsets: [
						[114661, 35911]
					]
				}
			}, {
				type: "Feature",
				id: "4107",
				properties: {
					name: "新乡市",
					cp: [114.2029, 35.3595],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XVlLK°bUblbUbl@nX@WXVVKVk@@mb@UbnW`kLLV@VVLnKlVXIlV@@a@l£nWlkVa@°bnUlLVlnabnUVUXKlU@@lk@aI°y@ôkUU@wmônkWakmlUkVmkUlmUUm@nkUKWanamULXW@UVnUln`lblL°KXV@ĠJ@L°JUVwanK@UUImmkK@¯±Um@IVmUmmÅnWaUK¯aUkw@W±kVxUVwnÅJUIWaÝJóIbm`ÝbÅImJUI¯¥¯@mU¯UJmnUVóUkl±V@zXlbWVXL@bmmº@@XmJUXU°llk@nWJk@U@¦U`m¯Wx"],
					encodeOffsets: [
						[116100, 36349]
					]
				}
			}, {
				type: "Feature",
				id: "4104",
				properties: {
					name: "平顶山市",
					cp: [112.9724, 33.739],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@l¤UbVL@VLVb²VlKlaX@lb@lxUVULbln²VJUbW@@Lb@`nL@nVV@LVUbUVmkVllXbl@Xn°VK@_°`²IVVV@VUVJnInaWK@U@KLÆ@nmlXXWVUUw@klKVa@knyVkVanIJXUl@XbVUl@@aa@mXkbnK@UlK@UUUVaXaWmkUm¥nWmXaWakl@VmÞbKVL@aVI@mUwVm@KÅméULKVaUk@kUK@UWXI@VlKXU@VVnInVV@VLlK@UUkKU_@WWUwU@kln@@Imb@@mnUKÛ@mKUkWVXxmbVLXVVU²VV@xÅnmWmLU@kbmJ@b¯IUbJUUxVl@z@bU`W@Ub¯nUJUb@WLUKULkU@aWK@abmL@lmUk@@bULWJUI°@¯aWLk@mbUb¯b"],
					encodeOffsets: [
						[114942, 34527]
					]
				}
			}, {
				type: "Feature",
				id: "4101",
				properties: {
					name: "郑州市",
					cp: [113.4668, 34.6234],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@nWVUKÅ@WnVnIV@kÆwV@nn@lxÞlnôJzXJl@nalUČVll@²UlkôVVUnmI°VnV°@°¦VJnIÆJÞan_VmU@ama@kU¥kaUklw@UIV¥kVUI@mmUÅmUlwVU@amUJWbUakVVé¯Im`k@wVWmLkU¯XkWmLmx@UUbm@@xJ@LbW@UUVWUkVK@kaIUamKUkkmmLUkJUVWXkWmnÅ@KL@@VXLmbmJUIUVU@ULWVkK@nWVXL@lVn@¤bkôKXKlL@¦²V@JL±@@VU@WV@X@`XXmb@blan@Jb@V"],
					encodeOffsets: [
						[115617, 35584]
					]
				}
			}, {
				type: "Feature",
				id: "4105",
				properties: {
					name: "安阳市",
					cp: [114.5325, 36.0022],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@°kVaV¥kVmUkWkWVkVKUwkkmKUU@awWWXWakKWkXmlaIVmX¥U@a@WnK@kVI¯@KğI@WU¯LkKak_kmmVU@VWXKnVmbXbVLmln@VVknlVUnVlklnXbmlmlXblnÈlWbn@@nK@VLbVV°VVzln@VxIbU@WLUa¯VUkWõ@¯kkmxk¼lXUlVbVLnlULmU@lLkVUlX@xW@¯mU@UmIUWL@aXakU¯anWk°@kkKmmUIWaambUkkKmV¯a@UblkmXk¤@@b@UbULWVnb@lUVVnmnVVUJ@bWXX@WJkL@blVU°UV@XlWnXUbW@UVkVVWbnLUJWLUK@Lnn@blVUnUblxVUVJXUa@UbLnUVV@mVIVVn@UbV@XbmbUV_lVXUWanJVI@WkI@WVIVU°WXXl@la@mX@lLXlkVbmXylIXJV@@kKla²UVaIVyÞb°LlVna@UÆKnLVbK@anwU"],
					encodeOffsets: [
						[117676, 36917]
					]
				}
			}, {
				type: "Feature",
				id: "4102",
				properties: {
					name: "开封市",
					cp: [114.5764, 34.6124],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lUVbXaInV@bUVxknVVÆnn@VJlUU¦VJ@kxVllb¦lV@nb@bVUnaôJÞIXbVJÆImxUVwU²l@XxVl°bVLXb`XklUnmVblL@lmx°LVK@UXIVaWlL@Uk°KkVaVUXmmI@UÅKmmXka±KL@W@kUÇxUU@@UXUlKkklW@aXa@UKUaVUUV_@yXk@@a@U±w@UUW@_mmw@wVwmUaÇbUa¯UUkmWkn±JÅxmIbUxmKmnJWwkUaK@a¯@bk@mVUIWLmwm@Ua@WJUb@LUl@UUmLUbWJ@VL@VmXWWzUJUê"],
					encodeOffsets: [
						[116641, 35280]
					]
				}
			}, {
				type: "Feature",
				id: "4108",
				properties: {
					name: "焦作市",
					cp: [112.8406, 35.1508],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@V@VL@x@bXWV@XklUWX@J@nI@KlLKUVaV@JlL@KUk@KÞLl²_@nWlLUVV@nLWVUJVn@anV@awÞUVLVxb@lW@lbXnVn@@¼L°mKVn@bnl@nVK@blbLWU@VWLXV@nlKn@lVVbXw°nV_@¥Vl@XI@mlkkV¯VWnI@W@n¹n@aWKXUaWk@yk@kċUkVmbk@WIyóImÝkkwm@mU@xÅlU@mJXak@x¯V@¼¯VmUmmIkVWK@UXIl@UWVUU@mVUI¯b¯@lmKzWKUanJ@nlbÝ@@b"],
					encodeOffsets: [
						[114728, 35888]
					]
				}
			}, {
				type: "Feature",
				id: "4110",
				properties: {
					name: "许昌市",
					cp: [113.6975, 34.0466],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lIVnKlnVlnLVbJlb@ULVlUXVVX@a@KI@wn@aVV@nwnKlXW°lVnKUXx@ln_°JVIXyXnW@UK@UXIVanKVV@Vk@KVaXI@Vbn@nxKnaUlnVa@Xa@VçUUla@aUK@wmULk`kIWVkLmK@V@XUln@JXV@nmbUóImUa±@@ÑóVUUk@UlKVU@akWVUUlUUaUK@UUKWbUkÅJ@XWa@XbmJ@nUJ@bUKLÝaUnk@lXbWbXnmn¦lVXnWbUbVV@VkL@VmLaWl@nb@bk@UVWak@WVImJUbUlmz@lUbkL@lVx"],
					encodeOffsets: [
						[115797, 35089]
					]
				}
			}, {
				type: "Feature",
				id: "4109",
				properties: {
					name: "濮阳市",
					cp: [115.1917, 35.799],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lLXbWXXx@bVVnLllVxULUlXXlVlUnlU¦Ub¯lnK@VbVb@XbVLKVxVVnIlaba¥lU@wnalLnVVlVLXnlWVXn@@lVI@WnU@mÅW¥aW_k@WwXy@km@wUm¦lUxVLV@UwJ°x@VX@Vb@`VX@VX@llIVbnJlIbVlJ@mÑ¯Lóa@KUakX@UK@wU@lWUUÝ¯ImW¯aLUKU@k»k@mwa@UnKWI@UU@akVWKk@a±bóUWKXUmkKUmLbUx@lmLX@@bVW¦UnJkbWnXl"],
					encodeOffsets: [
						[117642, 36501]
					]
				}
			}, {
				type: "Feature",
				id: "4111",
				properties: {
					name: "漯河市",
					cp: [113.8733, 33.6951],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@LUnVxnIWa@Xb@WÆIVlXaVL@VVLVbkVVUVlX@bUVkLVl@VVôU@Ò²@VbnôJVan@mWU@ImVk@WkI@wmak@wlW@w@VbnLVb°bVyXV_@aUKVVK@wUU@aK@kmbXVmJUX`knnK@aU@mwakb±@¯UUÝKUUU@WU@VkLUKU@mUmJUU@WVkL@UWJX@VVL@lVlUbLVKnêÆ"],
					encodeOffsets: [
						[116348, 34431]
					]
				}
			}, {
				type: "Feature",
				id: "4106",
				properties: {
					name: "鹤壁市",
					cp: [114.3787, 35.744],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ón@xVVól@¯zJ@bkl@@kVWLUVmVXbVJnnlLl¯@Xlm°bVlWb@bKVXnJ@VV°nX@@wWVklUK@knVVKmkUKUaVkWkl»nwl°lö@lXV°UVbXKV@aJw@UmkUy¯UUUaK@UL@mm@XaÇkkmWank"],
					encodeOffsets: [
						[117158, 36338]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/hu_bei_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "4228",
				properties: {
					name: "恩施土家族苗族自治州",
					cp: [109.5007, 30.2563],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VKbX@lbUVnL°@VlVnUl@VUX@aVmaXlaUUU@wmaVUn@Vnmmk@mU@knaaU¥VamX_@WUmW@_kVaVKnLl@VVal@k¥@kUW@kUKVUlUVÑW@kÇaU»ValmkUVUVak@aV¯_@WUkmVUlU@aalI@akkVWUaWXUWwWVbÆ@lalIVK@Um@UUW@al²a¯UağÇm@bkk@w@@WaULmxIUb¯@U`UXJmL¯aKXWUL@aknmK@aWUXaWm@I@UÅmVU@aUV@bVI@WkUbXkm@VakwUKULWKXmJ@XUK@mL@KUwVaUI@KU@mmnmXka@»V@@UUaw¯yVk@UUVmmkÛÈU@mWUnmxmlUbV¦UlbWVUL@UUIUmÇKVVbUVVxknLUxV`VX@kJVVUXWaUVVlUnmKUbkI@WULmK@L@LVlLnmUIWV@akn`VXUJIVlUVVbUX@¤mbnLmm@UXk@mm@Uka¥@kV@@KkU@aUKWbkLWVkIVk@UbVlmX@bU@@mmL@bn`@Ln@llVLVk@XVVU@`VXU¼k`VULka@VllVIn¤VU@@blÜbkx@bkLkKn@bn@@b@JUnV`UnVbVKlVXUlbn@°Vx@@bnVbUllVn@VVK@UnW@UVUlnkVÈÞxVbVVIxVaÆ@@aka@UVaU@@ak@Wl@nbVIÆ@Jk@L@VlXnlla@VJnw@UmwXU@aVK°ÒnllnLlbxnKVaV@l¦²nVl@llLx@XVVĶ@nax@U@alXUVaLÈþV°XxWXkK@mLnlUb@bxnLVlVVkb@UJ@xWXX"],
					encodeOffsets: [
						[112816, 32052]
					]
				}
			}, {
				type: "Feature",
				id: "4203",
				properties: {
					name: "十堰市",
					cp: [110.5115, 32.3877],
					childNum: 9
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@@a@w@kV@nbVK@nUla@laÅl@nlVakwWX@WkLaVmwV@anK@UlIXmWkk@@mmLkWlwk@U_mKXwWK@U¯K@UU@VUakmkIyUUVUmanU@mlwk@_mWXaUWU@Ç@U@aUaVwUKUIVkK@UWIXmaV@k@Vm@UnwlUamk@V@ULUamxUJkU@I`WkkK¯XWak@@W@IUVLWJkXkaÇVUK@kUmbmUUUKbkKWUkI@kKÝ@@aUm»nI@mU@UnWV_@aUmWbkLUl¯b@akkk@WkkJm_k@UV±@J@bnU@@WÝIUJVbXL@nlJkx@Wn@VkJmbLmU`VbUL@xVn@XV@mVVnnJVbUx@VnVUbVVx@nbUK@b@bJm²VUlbXzVJVJVbn@@Xmb@V@bVJÈ@Vnkn@°aVVV@XKnalLVmUnnVKVlnLWlXXKlk°XWkLUVVV@nU@ml¯nmbk@W`Å@mbLWm¯UxnêVèk@mbVnUK@kKmXk@@JUIlÛLllnbVnlJ@LULnlÆaVLnV@nkVJ@lkô@²bÆm°wLWV@VXKVXI@W°ÆVKb°UJVIVV¦XKVL@lInaVÝnUl@@bX@nmVL@lVLlVLVUnbVW@xXnbU°¤V@a@kWKUUn@VlnL@UV@Ü»@mX@V_akaÞ@VK¯@kkW"],
						["@@mUkUUm@nllVKXXVK"]
					],
					encodeOffsets: [
						[
							[113918, 33739]
						],
						[
							[113817, 32811]
						]
					]
				}
			}, {
				type: "Feature",
				id: "4205",
				properties: {
					name: "宜昌市",
					cp: [111.1707, 30.7617],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@°`U@blUbUVlVknUbV¼Èb@lXUÒkVUVVL@lVX@ll¦k@UbU@kmKULUbl@`nXV@XW`nUbV¦bmb@lV@nnlmnUm@UVnb@xVVVkbWnbVnVa@an@UaVUJXnWlXX@l¦@lKÆXbXV@VV@°¯°xXxXV@nV°UVWU_VWXkmaVnWVkn@lln@lb@UVLXWlnX@aXUmaVK@UXUU@WVIWXXVU@¥VK@UÞa²LlV@kV@UanKma@UVUnK@UVLXyVLknJ@UV@@UXKWUXaV@Vb@mVLnKWm@aUUm@@UkK@UlaLXKWaXI@alKlmUk@wVKXL@m@WWn@UVa@K@wna@aW_XWWkXbVW@k@U¯WWwka@UUaVIVkU@m±@U@@wVKka_@VV@XUVwU¥yUkm@V±ÈUKk»ÇLmmLk@ó£kmWwm@UIkWKXwWU@kLwkbmabkK@VLkmWIUKkUUÇIǫJXÅJULVÇLUV@UK@kI@WVI@UaWmXVVUL`±kÅLmKkkÅ@UaXXxWVXVbUXll@bkJb@bkVUVlnV@X"],
					encodeOffsets: [
						[112906, 30961]
					]
				}
			}, {
				type: "Feature",
				id: "4206",
				properties: {
					name: "襄樊市",
					cp: [111.9397, 31.9263],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@Xl@Xb°WlLXl_@JlVVInwVbVK@@UnlVbkmx@VUnl@U@nbWXJ@VlLUVJVLUxVb@b@VÈ@XVVWbnX@`lkx@nmVnbUVVVzlJnlVbUV@@V°L@VXLWxnLV`l@kxlXnK@nl@XlWn`Xnl@@UVa@VÈK£VLVanW°U@UVU@`VInmV@nV@Xa@aVW@UalkXKblIyÆXnlJXbl@@VV@nklU@`nVKLVKVb@VU@UÈKUVKIlUX@V`lIVbn@nblVVmV@@XXJUVV@knKVn@`@XVnKwlLVmUUU@U@aXL@WlU@UUW@UmU@KkLWaXkWmXUWm@U@nk@UmK@U@UaUVUUKV_@al@namWUI@KUK@aV@WUIb¥ULUJkImK@U@KV@U@a@UkU@K@wVaUwlU@mUULmKUkV@@anIWmUK@I¯mKkl@LUb±lUakLmk@WwUKÝVUIm`¯n@Uk@makJU_@Jma¯ImwUVkKbaUÅ@wWaU@VU@mXIVmmUkJkwm@mIlUKWzUK@VmLUV@VnbmLVbU@@lkU±KbÝV@UL@¦VWUWXUJ@XVWV@VULnbWVbW@kmWXUK@Vkam@kkm@UlmXUnbWlUXV`UX¯VmUU@Ul@Lll@nnJ@LnWmbm@b`", "@@kUUm@nllVKXXVKmU"],
					encodeOffsets: [
						[113423, 32597],
						[113794, 32800]
					]
				}
			}, {
				type: "Feature",
				id: "4211",
				properties: {
					name: "黄冈市",
					cp: [115.2686, 30.6628],
					childNum: 10
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VVUnWVXnVJ@U@V@VXV@@IVJUn@V@L@KlIVlVanLVbnVlIn@@a@Kl@@IJlI@aXU@KlKkVblJXUVlU@VbVkVKXn@VlxVa²I@VlVUxln@bJXklaVWnLmÅ@y@k@aI@W@aXIlVVaV@nnlKnLVW@IUa@a@KUVVlI@wXKVV@IUla@lUXwWnnalLlxXLll°@XwVKVaXIlnb@nln@Va@U@k°UmÆUVaXIJV¯ÇUmmkU@WaKmakVm@U@aVKkkmKkVmIkÇ°£@aUUVaVVnKlkXmk@lUVaX@@Um@UmlUXVUVU@wK²¥Ua@I@UVl@UV±UIUÇ°»VkUmVI@a@Umĉ¯V±bŹĖğaÇL¯lmkX@óĀ@mÝêb±WkLn@xXx@@b@V@LW@UblţX`kxWnXô¯¦ÆV@L@JVLxkK@V@bkz°llXz@JUlVla@XUVbVKXnW`XXV@laVV@VX@V¯xx@xULVbUJ@n@LU@VmmakbUK@bIWWUUVkUmkLm@VJkb@nUJ@`V@kXaUaVmmLkUmJ@Uk@U±lkzmJUb@bVUxVXU¤L@JX@VlL@JkLUVU@mnUl¦@V"],
					encodeOffsets: [
						[117181, 32063]
					]
				}
			}, {
				type: "Feature",
				id: "4210",
				properties: {
					name: "荆州市",
					cp: [113.291, 30.0092],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ÈJVlVVLXJlnK@UlLanblaxlK@XVWxXLlJ@VnXxlnô¤l@nKnÈKl¼VL²ÇUn@VlzV¦UxWVU@@U`lbUL@xV@²@@nlVUUJVb@VlbXx°XVWX_VKUwVKVa@UVKUUVk@KnblaUU@wnWl@UX@lÆ@@aIVmUkxVJUbÜ@Uk@WWnk@VVm@I@m@Un@mXUlVlUnJ@knJVU°@@aÆLX@llL@¦nJV@XblLVa²U@UlW@VX@`@LV@@bXJlIXml_lJU°bKÆLnVVl@öVmXaVIĢllUlVnLVlX@@bannxVLbn@°ÆXmmkĉ¯w±Uċ@KÝÅƧŃÝçUw¯m¯k@WkV@¯UIUJW¼kbUwk@W`@¦Uônb@VÆlÈ@VU@£UWWnUÆUnmJkUÇ£VWUI@aUU@WkI@Ua@JW@k£kaWVUKmnkKbkkVWbVmUUmwU@kk@UakUUa@V@nlx@lUb±lUbnnWLUyk@UamUK@mlk@Wb@VXL@x@xWI@a¯¯V@bVn@LkKmL@`XmKmVU@@bkL@V±bk@UaaLKUVIWXamVVbUK@b@Lm@UWkxULWVUnm@UlUX"],
					encodeOffsets: [
						[113918, 30764]
					]
				}
			}, {
				type: "Feature",
				id: "4208",
				properties: {
					name: "荆门市",
					cp: [112.6758, 30.9979],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@n@lxlInVUnWJ@nUVV@Xb@xVÆbalLVUnx°JnbI@V`lInbl@@V°mn_VJÞUVLXx@nllKVb²kVa@KlknL°@JVLXnmJ@bU@VlnLVKV@nX@lUKVaXal@VKn@¥°L@UnwbnaV@KV@VUX@lVXI@KW@@IXWV@laVLKlaXUVVnkVWV@lwXblIXWVkVmaU£VaUmVIkU@y@WakKUamU@UUK@kmK@w@@mK@LV¯U@WwkmULamVVUU@IbUKUakmm@UakLmxU@UÒWlULţÿmwkIUm@akÈblW@UVUUk@JW@XkWWUkUKUIlw@aUWknWUUmnIWaUwVaÛaVUIwVlUnJ@bÅ@@kVWk@mX@xVVkbma@LUlVVUL@VUbULVxULW`UX@V@lUXWaXlWXX`@bmb@x@LUb@VmXX@@nWKUL@xVlknkL@bWJXbWLKkb@VlL@Vn@VV@bnXmLUK@nUaU@WbXVWL@VU@@V"],
					encodeOffsets: [
						[114548, 31984]
					]
				}
			}, {
				type: "Feature",
				id: "4212",
				properties: {
					name: "咸宁市",
					cp: [114.2578, 29.6631],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ÞÆLČ@V²°xĊnlWnÅ¯m@aK@°nJwnVIUaÆJÅ@wwVXW@aV_l@²V°lĊwlaXLwlUkalVVaX@lVXI@aUXJ@U°UU¥VIVKVklanLVa@VÈIVV@nk@aVa@mV_@aK@klKUa@UnKWk@@lU@@UW@@nUWUwmaVIXlV@mLXblJ@kV@kk@KU@WkUWVÅwkLmW@UmL@lULKULak@maUUÝwUJIbKUU@aWK@kUWVkUwVw@mÝ@I@wkW@aww@LU¥kJ@nVJIkVVnkVUkyUIUl@xWUkaW@@°kzWxkLUWmzk@@bVVVb@@XlV@Vl@bVbUn`Wn@WbVVI@`LVbXLV`mnU@@lL@LUak@Lk@WbUJn¦@lVb@xVb@n"],
					encodeOffsets: [
						[116303, 30567]
					]
				}
			}, {
				type: "Feature",
				id: "4213",
				properties: {
					name: "随州市",
					cp: [113.4338, 31.8768],
					childNum: 2
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@n`lwkUmUVWX@lk@VanUĠ¼V@@mX@@nVVVXLmJVLnK@bV@@J@VUn@VaVUUUVWVLV@@Kk_@almaVkUU@WVVUVLXmmk@wUaUKUV@°@kmaUaÈmWmUVklaX@lVnxl@@UnaUk@VUVwVKn@VVn@VbVJUknUmmVmk_VwKUUmVak¥@UVKVIkW@UmIVWkIVkmmLkwmVU@LUU@VVXL@JmLUbmK@UUKmkKUUmVUaUnÇlk¯mJUnmLUaUJUaWL@UkJU@aklkU@¯@KWLUmUUWVkbLUKkbU@WX@JX@@LWJkUW@UVU@@LUmbamx@V¯K@¦mULk@WbUbLkVW@kVVxUb@x@LlV@V@b@VU@L@VLnlJVIVK¦aVJ@XU@bLV@LVJnXmbk@@bU`VLUVVb@V@VnL@Vml@@VXnWVXnWlXblK@LnV@VVX@VkV@XWK@bVV@VV"],
					encodeOffsets: [
						[115830, 33154]
					]
				}
			}, {
				type: "Feature",
				id: "4209",
				properties: {
					name: "孝感市",
					cp: [113.9502, 31.1188],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VnXK@L@°lVlkb@VlI@VXKVbVIVbnKVmnI°lÈkVmVbnUVVlLnVL@VnLVanK@IWKUUV@V@KVnUlxnKlnUlJUXnJ@VlXUJUL@Vl¦UbnVVLUxl`UnnnmVVlnVKbmVX@a°Ý°LaXJV@VUnKVXVK@LnKlLUbVVX@VwVJVn@@UU¥V@@UUK@maUVUkkJ@L@K@UmVUI@JU@W@U@UV@UIWmXUVmUUÇ@UVmIlmnmakK@akaW@UwVUkKVnUlKVwkVU_WKUkVW@UXaWkUa@w@VU@XaW±@IkbKb¯L@WXkW@UakL@UV@UmVUmL@UXWVL@aUVUUUVU@yUUIUa@wUKWVU@kWk¯UkwVKLUxK@nVxUlUUWVUmw@wUUyXWlX¦WbUV@U@blbUVVbXXl@lVL@bk@lxkVVnVx¦`UnkL@V@L@@@xnL@lVL@VnVVblLXb@@zlVUJVnUbV¤bUnUlWXkJWakxU@UXml"],
					encodeOffsets: [
						[116033, 32091]
					]
				}
			}, {
				type: "Feature",
				id: "4201",
				properties: {
					name: "武汉市",
					cp: [114.3896, 30.6628],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nbnmknJVUÈ@@U¥VknmV@VUlK@IkK@UW@IKV£UWVwU@aVanIly²kVl@@VnIlVnKUnVbblWU@@_VI@mlaUIn@lKVnUlVVXXJ@aVLlanbUnV@@K@mVIUaVK@ww°w@UW@UUUkbU@WWX_WmULaVU@WkbkUV@IWyk¯kly@a@UlLwUK@I@KÅUW@Å±Um@wl¥ka@@_Vw@ķa@akw@kKW£XVUVwVwUaU@VUUxWKkbĉx¯k±Uk@U`@bWXUx@xÆÅIVbUJmxIm¯@UmxnUVVbnJV@L@@kV@bVn@UVULlx°VXllV@XUVL@xVbJVV@zUVVVUVV@bUKWX@VnKUVVnU@@VlKVb@lXW@X°KaLla@JX²Wb@UV@@xVbXlWb@VUXVlXLV`UlUxkLmVUlLUVVxX@lb@blL"],
					encodeOffsets: [
						[117000, 32097]
					]
				}
			}, {
				type: "Feature",
				id: "4202",
				properties: {
					name: "黄石市",
					cp: [115.0159, 29.9213],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VUVV@VbUxaWUblUVmnKlX@bXJVIlVUxVVVIUzlx¯@VbnL@xx@UVaXKb@XkWU_Vm²klWXVKl@nXV@@wmlK²XaÞén@ôÿ@lWn°kUKmmUÑUmm@wkImWU@UakL@bVLUVċ@bUK@alIXKWK@nXnKmkUVw@¯b@LlUL±Wn@KULUaW@kL@lL@bU`@nUb@bmlU@UÇJ@UUbmKkblUULUJV¦¯V@VWIV@bWJkUW@UbkUlbkV"],
					encodeOffsets: [
						[117282, 30685]
					]
				}
			}, {
				type: "Feature",
				id: "429021",
				properties: {
					name: "神农架林区",
					cp: [110.4565, 31.5802],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@n`lIXll@ll@b°aVklKXaVn@bU`mX@VV@nmJn¼V@bÞ@lL@lJXVlLaVLVnVnalV@VLÈUlblWXIKVU@J_@annaXm@KmI@mkk@KVkWWw¯w¯°@UUU@WaÅWkL@¥@kWWXkWmIUVVbm@@bUbmUUbW@UVk@mVkU@U¯mKVUkaW@aULÆVbb@VÅ@Un@VLWl¯L"],
					encodeOffsets: [
						[112624, 32266]
					]
				}
			}, {
				type: "Feature",
				id: "429006",
				properties: {
					name: "天门市",
					cp: [113.0273, 30.6409],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@K@UlKVm_¥UwUmlUkwl@@aUK@kkWWUaVUka@aV@VUXaW¥Xk@WWIklm@ÅxmIVÝUkxka@bWJaUL@W@l¯UULUbkVUa¯bm¤UnÇUkmUUxb@VkXÇal@bVnlJnxŤĀVKXkVÑV@nwlKVbn@nlVbVLaJ@VVUnUbVKlnXxV@°U@KnL"],
					encodeOffsets: [
						[116056, 31636]
					]
				}
			}, {
				type: "Feature",
				id: "429004",
				properties: {
					name: "仙桃市",
					cp: [113.3789, 30.3003],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VK°VkX@@VKbXI@alblwÞVUnJÆwn@lkXJ@XWVzV@xnxVXUVVVkUw@mLVwKVU@Um@alU@@@KUmIUaVUmnwmwmb@aW@UkmKkUkVġkUJWbnUõ@UkmUÅKL¯aVkIk`WnkJ@xVLUVVbUbk@WlXbmVxnxUblbUV@@VUV@nVL"],
					encodeOffsets: [
						[115662, 31259]
					]
				}
			}, {
				type: "Feature",
				id: "429005",
				properties: {
					name: "潜江市",
					cp: [112.7637, 30.3607],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@UbVxbXmJVnXVlmVX@bkxVJVLVlXXWlX@@IVlVUaVwVlnÈVVmn£°aVbUlaVUK@mVU@U@VUkaVamwUwnWaXkl@VaUaVUUK@wWI@aU@@K@_UW@kX@V±VUbkKWaU@mI@¥kKkW@ÅK@b¯@UVmI@lmIkVkUWVnm@@V@n@JUnU@mlXXl@@V"],
					encodeOffsets: [
						[115234, 31118]
					]
				}
			}, {
				type: "Feature",
				id: "4207",
				properties: {
					name: "鄂州市",
					cp: [114.7302, 30.4102],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@°¥WóXmlw_ŤWkVaX@@K@U@a@WwU@mWk@ULWkX±lUnV`XWl@aWLUb@Vw@wmKUa@°kwyVUJUUVwkUUJWI@akWmLUnkVaXVbUxUVWX¤lL@lx@bb@ĸUx@`@lbk¦@xn²VÆX@"],
					encodeOffsets: [
						[117541, 31349]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/hu_nan_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "4312",
				properties: {
					name: "怀化市",
					cp: [109.9512, 27.4438],
					childNum: 12
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@n@b@XnJ@k°x@aVUnlUXnV@@VnJWUJVnIVV°UbVVVL@²LUVa°V@aV@nmUXblLXWVXVmVLVK@an_`@X@l°VlXXW`nX@Jmn@b@nV@Lm`bUbn@VUVl@nIVbUlV@LkJUnVV@xVblVUbU@zUKU@mx@xUnn@@WV@lbUb@nVWXXV@VIV@VUnJ@VUz@JWbXllI@VXVVL@Vn@Wlb@lXVlLaV@VJ@XX`kVwVl@bkbUlVXIlnLVamVwV@@nV@XaVJVbX@lwV@n@nV@VWnIVVUÆ@Xxa@IUUKmk@mVIXmWUVJnUVU@anaVwkU@UXa@W@m_@a¯@@K@UVbnK@blIlbXa@WW_n@VU@¯bmyUkUJÇÅ@WU@kWKÅwnm°KVkmankVWnXVWV@UwXkV@mUlLnaVaX@VUn@VnVK@xlnXWU@a@@klakVwmUaV@wmIÛ`m@mVUXmlIXVI@K@aU@UaV_UK@wkUmmUKWXmVkUL@mU_nK@aVU@Ukak»@U@ymU¯UUVKkam@nka@mwkLWb¯mka_VaVKUIUw@kKmU@WK@UnmaULkU@wUalWV¹U@@WUI@WU@_@W@U@mU@WbbUK@Um@@UmbUwWWkk@WUa@anUUwlWUwUU@wlJVUnnV@@mnI@mK@U@wa@wUm@_mVUUaVUk_kċUkVWL@mlU@kn¥W@UwUWV@VÝU@lXLWVUbVLXlVIlknmU@VUJk@@@kVmwmVkxU@@XmVUb@xnKVLl@VxUxkIU`@bWVXX@JWL@bkb¤@bmUUU¯Kkmb@VVUVVn@@Vb@`lnxmblUnbk@xUmV@bmWbUV@VJIl@nVUbK@nn@VbnJVIlJVkXJ@X@lmx@bnnWVXJWXU@UlU@mk@@llb°xIUbnJ@VWbXVmI@JVX@bk@bWL@JUXUK@U@U`n@@Xm@XVW@@nX@@`ImxU@@JUI@KLmK@UÅUUV@VW@¯kUU@UamVUUmJ@nxmLKkmJkwkKm_mKXU@aU@b@Wk@ma@zUJVUmbUlU@xnXlWlXXblK¤V@@nUVVLkVl@Xb@VVKnXKVx@znW@X@@lVK@X@JXbWbnn@JUamLVVXIVxnK@aWUX@x@VnI@WlI@anVIVxkl@lbXXxVVVJVInbV@@ln¦ml@XXVWbkJWb", "@@XLVKVXVKUa@UUUmV@l"],
					encodeOffsets: [
						[112050, 28384],
						[112174, 27394]
					]
				}
			}, {
				type: "Feature",
				id: "4311",
				properties: {
					name: "永州市",
					cp: [111.709, 25.752],
					childNum: 10
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lxUXVlXUVnlVĢJVbUXVJV@XUW¯VIUK@klW@Un@nl@V`XUVL@l@Vx@XXW`UnUbxUlVnUVlb@VnJUVVVInJlUVnwVklKnwLVJVV@nIV@nbVa@KVVVUUaKV_nVVJ@_VWnV@n¥lI@anl¥X_VKlwVlULUVVV@U@VXL@IUmn@VU@wmKXUWU@m²l@VIXWWkWUkWlkIVamUXamUnmWUU@@UnlK@XJl@kVUk@mWKXkl@@aVU@UVWUUVaIn`VUVLnw@U@K@U@w@UVmUU°K@UnV@bV@Xk@KVm@amkaU£VWUUmUUwm`UbULkaKXU@kVmU@aV_UWVIn@yXXK@klmVV_kWVUn@WUU@UmaU@wnwWanUmmXkam@UakLmK@bxUUUU@Km¥Va¯@kUaVUlmUU@mUUÇmUkUybbUaXUWWbÅLmL@VaL@WWXUKmmk@a@UUKXW¥kU@VUkxmVkUWbUJnVJ@nVJXzWxk@lVbUX@VVL@`mbUnUnVV¼k@Ulm@mwLb@lmLUK@UamWkK@£Ua@UkJkUmbVlkX@bWbUVnnUVl@bbVK@VX@lbV@nU¤x²Knblb@xVô@l@b@l@XWxnVl@VV@XLVlLUUXV`bXXmJU@@bm@UUkLW@UlUKWUUbwUmL@nklVVmVXXm@@bUKlÆnXkllVUVVL@nUbV@V@nnV@xUn¯U@JW@UX@xĉ@`m@@LV@b"],
					encodeOffsets: [
						[113671, 26989]
					]
				}
			}, {
				type: "Feature",
				id: "4305",
				properties: {
					name: "邵阳市",
					cp: [110.9619, 26.8121],
					childNum: 10
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XIlJIVVK@n@VVVKnLVwVmnLVK@U@wJ@wVIÆ°X@ÜÈUÈxll@kn@VwVaXJWXn@@WVL@UUKVKV_U@@aVKx@UaV@lk@XylbUaV_Vnal@WU@aI@aV@@aVUl@XmUXWaXml@@kk@ma@V_UnUVUUWJUa@kkaWLUmk@@LUVWUkJWkK@¼UnWJIkV@b@JUIm@UlVm@Uw@a@kWXWKUknW@WUU@kmxUkVmIUJUUVmI@UkaUVUmVkwVaVmX_WW@Uw@@kUKWVU_k@mm@@VkX@lVLUJX°WVU@UIVWUaIUġmkVUkWUVWkwWXk`mI@¥kUVUUn±@mXkWknVUVmmU@@XVUk`@Xk@¥¯»mbĉó@mkU@kUKmX@UnmL@lULkKUWUU@bUaUn@Vb@l¦Ub@l@UKmnKUnlUVVbUVn@`Vn@xb@x@VL@nmJ@nU@mmUVkI@xVVVxkXVxmV@bbXVl@XlXVxna@Vn@@VVLaXaV@n@@V@X`V@@XVJ@XV@UºkXVb@xlVVKnbm@VXLV@nlL@VxJVULUb`lb°nXalKnx@lbmn@lbULVV°nV@z@Vl¼lb@VUV@bmLV`@nKlVnUXWVLnnlV@xVLU`VbV@"],
					encodeOffsets: [
						[113535, 28322]
					]
				}
			}, {
				type: "Feature",
				id: "4310",
				properties: {
					name: "郴州市",
					cp: [113.2361, 25.8673],
					childNum: 10
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@²zVaVlnVl@nVkJl_XJlIVmnL@mV@VXn@lV@XzV@lyV¯²U@UlJ@XVKnVVIXl@UVLV`@n@JI@mlIKVLnUlVUVVLXaKVLl@nb@WXV°KUnVVL@xVJL@b@LUVVVUVXbmbVbn@@lUbm@x@XVVV@@@bkImx@Vm@Xbb@l°XU¤aLmnL@bl@@VUX@VxnVanLnW¥XKVwnUWXmVIUWÆLVxLw@wVmlU@¥XWUkwlÇn_UwWV@VU°wnUy@aVkVlnL@lVnw@VlJ@bXx@bVKnb@U@WVUl@@Vnbl@XLlK@aVLVKnxÞn@aLlmUaVUm@ÅknUmaUKmVk@mkk@UlWUkVm@w@kUU@WU¯¥@wÇ@aVIlUV@kUWU@UUm»@k@mKVkUKUwaUaUa@kkUWJkImaU@UK@maUzk`@zy@XmJkL@UUJmUkV@z@kkVmK@¦UbWL@a@UbmKmwUKXkVUUkmVkw@UUKmL@WUIWaJW_k@@WmI@mk@WkWULUUVKUUVm@Ub@nUÇ@U@wV@Ua@aL@akl@kUJwó@@L@V@`@J@xnnmV@bkJmUó@nJWUUmU@UV@LkWlnnmVXbmxxV@nbVV@XVm@UVlXU`Ukn@lWLWzm@UJVXU`@bVUn@lWVLlbVKVan_VxnVVVUXV¤bnl@bUn@LWlU@@amU@V¯LVVUn@V@x@V@L@VmxUKUVm_JUbVV"],
					encodeOffsets: [
						[114930, 26747]
					]
				}
			}, {
				type: "Feature",
				id: "4307",
				properties: {
					name: "常德市",
					cp: [111.4014, 29.2676],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lUmkUwUyV@VW@¯VaVmUU@KVUVUVLnaWnkUÓV_@mVU@Ýw@ka@kVmUmK@IkaUamKkXWaUW@WUk@@KVU@aU@L@J@XÇVUKVak_mWkLWakVUbmLUUmlUVKUU@kUWW@UImJ@xkLkKm@@X@óÝ@UUk@UKVULKXkWWbkaIUWU@mUk@WLaUJġ@@XÈÆVIlVnz°aV@Um@X`@XWbkakJ@amLaU@V@L°@@bn`@@XWb@VVlUxmb@bUVmVUIXVWnJU@nnlVLV@JbWzk`m@UVK²VxkLVl@Vn@V°xVKVkVVlUblx@bUÆ@@nVnUllkx@VW@@VkLWxUL@bÝ@kKkVõV@bkXVVUV@VkUkVLkVa@@¯xUxmX@JVb°WXkK@Vm@kVbbn¤xUXkJblxnXÆK²l_@Wnan@UL@bJnIlV@lU@@¯ô@lWȂIVKVmU@aXaV@lwVXn@@K@UVKUUnUbn@lWXlJnULKV@l@²a@UlK@aV@naVXWV_nKlL@KUm@a°U°@VXL@a@wWmXal@k@VLnV@@bl@VnX@mwVa²aVU@mk@"],
					encodeOffsets: [
						[114976, 30201]
					]
				}
			}, {
				type: "Feature",
				id: "4331",
				properties: {
					name: "湘西土家族苗族自治州",
					cp: [109.7864, 28.6743],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@KL@wnK±nnm@WUkÜÈn@n»@mVamkmUl@VnmmU@wUan¯VKLnVWlInyWUI@WWk@KXUn@mnUmU@WmkV@kXaaVaUmIk@kaX@Um@UKWU@UkJWkXa@IVy@UmIUVU@UJU@WXWmU@VakaU@@Xm@Vm@wnwV@VLyV@VakUUa@wUUVmlI@KUVkUamJk@VU@UmVaan_@KmU@@anm@ImWX_WWUk¯@k@W_m`@bULUKUnUWWXkKWaVmnU@@b¯UUbV±K@UKUUVa¯UUmJUVIXmI@UU@WmVmkUV@b¯w@lmI@W@a@m¯LXbmJVLklWL@V@XXmbVVU@@VU²Ul@VlX@b`XxzUmkUVÒl@bXLWxXVl@VbkLma@nmVmULVbmVUb@lnzmbUÒVl@°nLVlJkn@bmJk_VmmkblxÈx@LUbxVb@Vn@JmLVU@nV@¦VbnJ@lVVbkxbm@UxVLV@n`UnVVVkl°zxVb@VU@@ÆlXnWm¦nbVK@XVVUVVl@XKUV@nVL@WnIWXLVKVLlxUbVKXVWbn@@UnKVLVbJU@aVU°b"],
					encodeOffsets: [
						[112354, 30325]
					]
				}
			}, {
				type: "Feature",
				id: "4304",
				properties: {
					name: "衡阳市",
					cp: [112.4121, 26.7902],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lV@XV@mXVlXLWX@l@bVxn@UVkn@VJ@I@alUJXIVm@»LXllIXVVU@Kl@VnXKlb@lVbXIVVUmVVU`@nbl@@lXLVVVKVbnXWJ@VXbWxXbUlVK¦nLVVUVVbbK@ULnK@Un@VxlUV`UnnL@VVL@JV@VUnxnKVbV@@VIVUnJUVUl@nWXllIUaKVbÞLV¼²`V@VIUwlaVmXa@IWanK@U@mkVVUVaX@lnaVLÈ@¥@kkJUWJUaXkaUmwVXJ@_lWUU@¥n_KkamUK@amKnKbV£¯W@kaWan@@UnwlJ@a@@UUU@Wwn@Va@km@UanaWaUVUUVU@K@aKUI@wKUUVm¯LWUX@mak@UKLWbUKVUkUmVUKLkJ@nJ@I@mU_UK@VWkUJmUUL@WkI@V±VU°kzU@Wy@kUm@UWU@@nmKUnkJWIk`IUlmk@mUUkUb±yUX@VUV@bk@WlXL@nVlUlk@WI@kLm@VV@XVmnnVWbnVUblJXkVlXXlWXUJk@±@nXVWVnL@xUVm@Vn@JWK@UV@UUVUVKUkkxULW`k¦m@bkJm¦U@mUX@`UImUU`LVbUVUU@LUbmaU@mJU@UUIKmxkLUl"],
					encodeOffsets: [
						[114222, 27484]
					]
				}
			}, {
				type: "Feature",
				id: "4306",
				properties: {
					name: "岳阳市",
					cp: [113.2361, 29.1357],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@wUklmUUmU@@UVm@wUaV_mmUKmwkIkJmUUnm@@UUbUKUmÛamm¯xVLkbÇÆUVUzkVUlUUKWLX¦W@VUUUaKUbmLKm@akU@amVaUUVIVWkk@wk@@xmLlmÅwmbVlXlÝIWVkK@kkVL@VWKU@Ublnam@b@bnW`@XUJk@UUWKk@UKnn@xmLUVm@kbVbVnV@Vb@KnVLWXÆVĢ¦VblnUJWz@ÆVóUVbkVaÅx@¦lVUbVVknWKk@wKVUÅl@zkb@`m_mJ@xXmbVb@llV@n@llbXLUXalUlalVnwnLVKlVbX@@IV@blJ@bVL@VVVUXÈ¤VnkVÑXmlbnVKkÑÅ@UmaVç@±XUlIxlV@VaX¯lUVVUVJnV@°°n°Vxĸł°¦b²¦lJ@U@aUK@kUm@_m±VIXal@Kl@bV@KK@km@UmUUaK@_UJaXU@Xm_VmUk@WUk@kU@a@m@UaUUU@al@nyXXWWwkly@¯n@@bnV@k@mVIVlUUmlUJUwIbXVaUal@Kb@VKVkXVl@VkUU@ylUVVaVL"],
					encodeOffsets: [
						[116888, 29526]
					]
				}
			}, {
				type: "Feature",
				id: "4309",
				properties: {
					name: "益阳市",
					cp: [111.731, 28.3832],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ÆxXL@lV@ĢVIbXKl@nVV@XVJlbXalXWLVKUVLl@VV@ôÞ@@Wn@lLlK@wnIVJX@VX@lVVULVnkVVnKValUXblKnXl`UbVLÈU@W@IKV@@bUV@L@lXV@VXXblWnLVblb@JnLVUn@llb@x@ÞUV@nU`VÔmlXmbUKUVUV@LVVUnUb@°UX@UVzVxnlVkVnlVnaW@wnIn`@_la@ykÆVULxl@XLlmUUVakU@¥ÆwblUUaôVU@ÅXyVImkUaġ¥ÅUWXKmU@La@UmUUUalan@VUnK@wmmL@VlXLVVl@VI@WX_m@a¯mKUkwW¥UK@_UWWLUVkUWL@WUIkVU@JwkLUUmJVI@WkXm@VmkKUIU@mmm_@VUV@kJċwUU@KUWkkW@IWW@km@klwkWVkkUV¯m@kWLU`mIkmkXm@@`@L@xUKWkU@VL@JUU@mbUKVa¯WVnL@`lXUVkU@xW@UbUWVU@UJ@lnU@mnÈmVa@bULwUb@@VkxmUUUVK@IUmk@akm@wmIkK@bVWXkm@wULUmm@UVW@UbmbkKVnU@WlxVU@UXmWUXmlnbUl¯Lmn"],
					encodeOffsets: [
						[113378, 28981]
					]
				}
			}, {
				type: "Feature",
				id: "4301",
				properties: {
					name: "长沙市",
					cp: [113.0823, 28.2568],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lVUllXkx@lln@XX@JlXXlV@LVVČxlI@VU@Un`nnV@VJlLUnn@lW@XUJnIVVlKx@IVlUVJ@XXKlVVUXKVX@`VLX¦lxVnL°an@bkmVaV@XL@UKlU@llLXUÞJWkUknaÆxnknK@w@l@xllUXUJVVUbn@blV@bnLnKVaLVbVVUX@W¥XKVLVVklUVyUVÈÅlaUK°wnnÜbnVVLaVV@n@VmnVlIlJna@Valkn@na@amwm@UXwK@aUUVUUaVawWK@kU@UaW@kKUU@kW¯XWan@kmmÅ@@I@U@KmLkaVUKkLWVUk@UVmU@am@kkk¥UVUKmaUb@UbI@aKkkWm@W¯K¯b@VmaULVxUXlVk@UxVJVbUb@xUL@ULWWLĕmxVVL@VbKUwaÅ²WwX@@WUWLU@VbkV@aU@@VUnmJ@VUn@VLUK@UmUIk@UÇmU@@UW@J@LbUmVI@aUmW@@bkXUx@lmLUbm@UbkJ@V@XmlUbkKm@ma@kUaVU@aUK@mImJUIkVUVUakbWwka@UWKkLUamKUXm`Å_UULmaU@@lUV@X"],
					encodeOffsets: [
						[114582, 28694]
					]
				}
			}, {
				type: "Feature",
				id: "4302",
				properties: {
					name: "株洲市",
					cp: [113.5327, 27.0319],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XUnwĖKXXVK@VK@wVaUaUIVwl@kUVWUwVKnb@U°a°LX@XnllL@bJVa@VanbVLUV@al@@UV¯ÅÇ@Ummkw@¯yVwnUVVVUkmWVnKVUa@WXkVKn@lUVUVVVXIlV°VnI@VlKnV@mwVm@LXKWkU¥wWw@k@mX@KX¯V@VUVa@VnKWkV@VUkm@aWa@wkUWwkmV£VÿXUVL@mVIXaò@nW@aU@@am@aUUUmXmWUk@nUW@_maVmwUkamaUL@awW@akI@UxUm@kmKUklU@bzVm¯xUVU@XVxm`kÈlxXVW@¦kVUn@xxKUwÅKVXUJWnXmVUxWL¦XmmKbmUUwW@UV@k@VLnlbLm`@¦VVkX@`WIUxVnlbWVbXIVlI@l¦Ç@UKmbkW@UbUVUl@n@VmLXb@JWbUnkbVxUJUxWXXlWL@V@V@XXJWxzUVVVVKnXW`@bkIUlnLVJUbUIWVXlWV@XklVbnn@xl"],
					encodeOffsets: [
						[115774, 28587]
					]
				}
			}, {
				type: "Feature",
				id: "4308",
				properties: {
					name: "张家界市",
					cp: [110.5115, 29.328],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@InWVw°w@@blUKlUlVU@VUUUlW@aöUlUlLÞ@@aVKXwlK@UX@@UlwkVkUm@m@ÅV@akwVaUkUUlUL¯w@UUm@UkKlw±UULVn@l_XyWwÅ@VUUmJUXU@@mmU@kxW@UaUIWbU@@mU@UxnUbmKkWJkUVal@aUkUxlW_@WUIU@bkKWUJVnUbbWblU@nl@XnVmV@nmWV@LXl@XJXVmzkJUXmKULm°Vb@xnVmnUk@VnnlUb@nm¼m@ÛÇVl@Xmnm²mL@xK@LUl@nULÆx@V@VXVWbXXl@nLlm@bVKXWL°bnU@VaVU@mVwJnwVK°zn@VVba@Ċ¼"],
					encodeOffsets: [
						[113288, 30471]
					]
				}
			}, {
				type: "Feature",
				id: "4313",
				properties: {
					name: "娄底市",
					cp: [111.6431, 27.7185],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lLnJ@xln@bnlV@JLVUVnVlw@U@VaxVK@abnUmÇnV@km@I@VUVVXVaX@@wlVVUkW@_mKXU°UbVLnaV@V@IUKV@XlVL@w@K@_n@lWlnnJV_XK@l°nU@WVU@kV@nbVKVl@nLlLXU@lmkw@nW@UKVa¯IVn@@aVUUKl@nXVKVn²aXblKnLlmVI@KUU@akLUaVaUXm@a@wVUVKnLnWlXln@@U@anUVm@UInm@IUK@UmKVmU_kVUwm@@VmLK@VLaUaVUUUmK¥ULkVWaXwWa@UXImWUaULUUWKk@WnXbWVWnk@UV@bU@@bJ@bV@XkmbUU`VbkaWz@klU@b@VwUL@bV@U`ULVL@VUK@Xm@XWWIUbUxm@@lkkÇwVÛÇW@¯ÅUJ@xIx@@VULmKUnUxmKULUUm@@ULUJkIWJ@b@LJUWkJWnUV@nnÜ_nJxU@VbnUxlkb@l@"],
					encodeOffsets: [
						[113682, 28699]
					]
				}
			}, {
				type: "Feature",
				id: "4303",
				properties: {
					name: "湘潭市",
					cp: [112.5439, 27.7075],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Æ`n_VWnLVblKXL@VlbXxlaVbUVlUVJnInJ@VL@bUVVb@lnbn@lLVank@W@UlIVan@VanK@kVwlW@aX@Vn@bUJVna@KIX@@VV@nVÈl@VJn@VVLK@UVm@UnIVm@UV@@blUUaV@XKV@XW@XxÆ±bVxLUa@UKWk@wmmUalk@WXUWkXUVJVaUImKVklJ@aX_mWULUUVUyXwWI@W@U@UXKWkXWVwU@±_U»ÝKUaLVbkJkWmXk@UVVmIUVJ@UU@UamLmwUVU@mnJ@VUnmV@b@Vm@kkWmXmKULUV@x@bWnVUbVblK@bVV@LUJknmKkLWa±bUmULmWk@VLUV@bm@U°JUbVLX@@mlxkn@WVKkmK@k"],
					encodeOffsets: [
						[114683, 28576]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/jiang_su_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "3209",
				properties: {
					name: "盐城市",
					cp: [120.2234, 33.5577],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@n@°ĀÞ°@¦ULWKkx@bkLWb@lUlVXXJVbnUKmxXV@bm@@XLÞÜ¦XlVnmzVJ@n@²ÞôkÆÞaȰĉwnǉÜóéVÛnĊīČǉĉ@ō@KÞUlU@kklÇÈÑÑlġXɛ@UġaU@U_W@n@kaUL@VW@kKmkUV@bkbWW@bkzma@JWI@KUKUL@U¦`@XUJU@KmXw¯KXkmy@aUIWJXXmV@K¯UU@@bVL@¤VLXbV@@JVXVK@JVn@bkKmakVVXUVVVlI@`U@nzVVb@¤n@@UlKXLVVI@V@nV@V@ÈUx@óVōkÅWó@mU@bk@Ýwk@WbXxm@@J@zV@kVbVnLWVUXWUXUWLU@Wl°z@VkxU@UVWIxWJkbĬnW@@bUl"],
					encodeOffsets: [
						[122344, 34504]
					]
				}
			}, {
				type: "Feature",
				id: "3203",
				properties: {
					name: "徐州市",
					cp: [117.5208, 34.3268],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XKVX@WnIVx@K°Lnll@@I°KnVaU°x²mlx@VanU@ak@akmV@@w@Ua@aUwVwUw@w@UK@£kaĉlóIÇVk±@@kUKmVkIkxW@Ua¯UUm@UVI@WVIJV@@Um@UanaU@mI@J@XV@XaVlkXVaUUWLUyVIXmWak@XkJókJUL@KWkk@ULU@WalUIkJmImkVbV@lV°kXUKWKULUmb@VUlVnb@VV@IVKUUmU@ak@@bmV@xklUU@UKmV@nJVbkXKUamLUJ¯UUVmIbVVLl`@LLU`m@kXUVU@VlxUK@xkIWbUKx@VkVVnb¯@@U@xkmbkLÇKb@@XnJ@LmVkl@@XlUVkxakVVb@bVnUbU@@xVUVb@nIĊ`XVVôJ_K@xlU²KlkU@VaVVÈm@kVUVmnamUUaVXIVJ@ç@¥nkVLn@@XVK@VUX@JVUV@UnVJVLUJVLUVlnIbKnU@m°VanI@anVKVLanlKblKÞk@¦@¤@VKnLVKLKVzlWLX@VmV@VbnU°@UalkWXLVUKWkUUW@£Wa"],
					encodeOffsets: [
						[121005, 35213]
					]
				}
			}, {
				type: "Feature",
				id: "3206",
				properties: {
					name: "南通市",
					cp: [121.1023, 32.1625],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VJ@bnzWl°LxnW@LVVI@W_V¥@VKVL@LXJI@nbly@aXXla@aVUnllLX@@UVKlb@@mXV`V@bĢlkČÇÆȘ¯wnĕVĉVÿUƒUĠŦğlXÑVǵ@±ōLʵĖ¯lÇbÝÞ¯xk@Çkķén¯@ğġƴǫ@kVVlUbL@xULÇóLUl¤@nkVV°VLkxVb@laUXUKWĖklVX@¤UUkb"],
					encodeOffsets: [
						[123087, 33385]
					]
				}
			}, {
				type: "Feature",
				id: "3208",
				properties: {
					name: "淮安市",
					cp: [118.927, 33.4039],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nźUôÒɴèl¦nĖVkbmX@xVlVL@xUb@bUJVnUxlKVLÈxmzXV@lW@XVb@bÈVxnbVIXa°LaÆVVaXUlK@aXIÆVlXKVUlIXalK@alwXLVK@¥Ý¯¯ÿ@mVk@aX@mīlaXIwXJVUV@lw@U¯ybUaUġUÅaUKVknaġm@kUm@wÆIV±nLÆwÇnUUk@ƅÝU¯JÝI¯¦Ul@b@@VVL@l@LLÅmL@b@UaVaUWmLUKV¹KLWKX¥WI@mXk@UmaUVUU@VmL@WbkIUWUmVóIkbmm@UbVLUxmJkU@bkJWbnXU`WzKUÞÈlVbLmx@kè@Æ"],
					encodeOffsets: [
						[121062, 33975]
					]
				}
			}, {
				type: "Feature",
				id: "3205",
				properties: {
					name: "苏州市",
					cp: [120.6519, 31.3989],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ôèĊVnX°¤²lxƒÈÜ@²x@J@b@X`nIUÆUUV@bl@VVnL@L@xJ@X@blJXnW@@`XbWkV@UbVxXUxkV@LóxVbUVW²VJĸklUǬ@ĢƳĠ°@mƒī°»ÈÇ¥ULUU±a@bU@¯U@KnImUVWUkmXUVU@lIVaUUVWKUbUkWKU¥n£WakJUkULK¯LKkVIn@VaUVUUUkVk@U@amUkJ@UUlwX¥W@@UkVmk@JUakL@kk¯ÝmJUn@nmVXlmbVVkn@UJ@±WUxV¯a¯KōbÅ¼ÇxUxUUlWL"],
					encodeOffsets: [
						[122794, 31917]
					]
				}
			}, {
				type: "Feature",
				id: "3213",
				properties: {
					name: "宿迁市",
					cp: [118.5535, 33.7775],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XbWnUJVzXKVVUbWklUWbU@@W@IJ@nVmbVbn@@V@UIUJ@XUJ@VVn°VVbX@lwlJnUVL@l²@lÈUôJĊklb@¤VL@@xVxUxVx@bVb@@xU@lnmnXmXLVmV@X@lxVnVJôLLXax@b@@KVL@bn@@m@@alLUUVaU¥nIV±I@mXI@aWWXU@LlUXWW_XWmaUwÇ@aaWUX@@kWUynÇwUKkLVwUmVI@aVa@wUKUk@wWnlaUmĕk¥ɳçóÑŹVmmzkVmm@a@Iók@@LWU@`WbXLWlkImJVn@`nXVbXmL@Vn@l@nUVl°Xx°U@LVĠ@z°@¦UV@Xn@VJmV"],
					encodeOffsets: [
						[121005, 34560]
					]
				}
			}, {
				type: "Feature",
				id: "3207",
				properties: {
					name: "连云港市",
					cp: [119.1248, 34.552],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@lzXxmÆV@@¦@l`XnlKXXmKnLlab@xmbm@kL@V@Vl@@VUXJXmb@@°Æ@èÈzlW°XĢJlÈ`lInbWV_@m@UUķnôw°ÆmnaVVÛVmĸ»Ģw±Ý@@mUInyUmWkÛ¥ÝK@Wn@@aWUnwVLmUaWIUWVk@kkJUVWLUkÅWJ@bkLWVUbÅUb¯KWbUJWXX`WXkV@KWVXX@bWJ@nJU²mJV¦UbVVkK@b@@nm@@aUK@L@@awWbKóKUIUmkwW@U@UnWKnmWn@bl@bmVUb@kw±n¯wVUb"],
					encodeOffsets: [
						[121253, 35264]
					]
				}
			}, {
				type: "Feature",
				id: "3210",
				properties: {
					name: "扬州市",
					cp: [119.4653, 32.8162],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VUXblVVVb@xV@kzV@lwVLUbVV@VU@VbUblb@nkĶ°IÞV@ƆVlmVÈÅxmKU²ÅJ@xVn@lĢnmbUlVLÆbĢVVbVaXk@VXKVVWXVWXUmKUaWaU@¥@£XWUUV@@ynam_VWkUVUna@ÆV@mnkWmXkWUW@k@@akkllWUI@UnKl¥I@VVma@a@I@U@a@anK@UmK@ÅVUnJlkI@aVwka@mVIUW@UWL@WÅbmIULkaUWUxkLUKWlXL@VImÅVUmĉLUól¯I±l@ÒUbVbUVVXUJUnVV@lnbl@"],
					encodeOffsets: [
						[121928, 33244]
					]
				}
			}, {
				type: "Feature",
				id: "3201",
				properties: {
					name: "南京市",
					cp: [118.8062, 31.9208],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@k@ma@kUUVmVIUWVUUaVa@Ñ²k°Jôk@Wmk¯KmX¯aUakKWU@XULXaV@@mUaVUUl@VmkaUXm@WUUna°IlmVmIUW@Uk@@aV@VVX@VI°»nmU@VKVan@m»UaU@U_@WlIUaaVaUala@¯n@kaUkUUWKU@mwkUUmmL@K@LmUUVKVÅImUJVkVVLèVLVU@WLV@nVÜULVUL@bW@XbWbkJUUVUxVXmVk@WUUkVmIV@nbnVWbJUkUULa@Jma@XkK@VVL@L@JLUVU@V¼nXlbm@kbUKmn@lVb@VXXVUV@b@LVbÆxXbl@@lV@UVV@XVK²VlI`UbVbUlVVn@WXn@@VUV@@KmbVLXÒLkKV@nX@VVUV@bnVllbmnbIWVXU@`lLlknVnmlLlbUmVInK°nUU@l@VU@Vn@@alI`VIXaVaVa"],
					encodeOffsets: [
						[121928, 33244]
					]
				}
			}, {
				type: "Feature",
				id: "3212",
				properties: {
					name: "泰州市",
					cp: [120.0586, 32.5525],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lUU@@y@In@WwXal@Þxl@@anVô@ÆXlŎôU@Vw@ÇUU@@m@UJUUWKkL@Vm@@£aUUmyV@@_kJUUVUUWlUnblL@aUmI@ULUW@IU@WaUK@£UK@aV@°V@LnUWWXIlaVV@£UWlkXĕVLVWb@kUalwUKU¯lU@mk£VôKÈVK@wKVaUkķlUI±ğ¥ÝUŹ¯ôm¦ĸ@XXK@VVXUJ@nlbUx@blJkmIUV@ÆnL@VmL@b@b@V@J@bnbU@UJk¦mL@VVJkXkll@b@@lXXVWlXnml@nÅU@mbUVlVUXn`mb@zU@VVWX@¤¦V@Xb"],
					encodeOffsets: [
						[122592, 34015]
					]
				}
			}, {
				type: "Feature",
				id: "3202",
				properties: {
					name: "无锡市",
					cp: [120.3442, 31.5527],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nLÒlxUVkLam@kVWUULUxVVVbUV@bVLUnnźÞVĠ¦XVUUaôw@KlUVwWUwVa@lUXWa@_X@WmkI@a@WI@w@KmKUUk@@aVUVVÅmJ_@W@a@I±wÛ@ƑÇkw±¯£mWĉUóçK¯VkUWK@XkV¯UWabmUaUUblln@b@xbXWX`@VxUblL@bn@Vb@`m@XbWnn@l¤n@xnVlUVLÆWkV@VbÞJ_nl@nKVU@aUU@mVk°WVLUV¯bVXbXlVn@VmL@xV@bl@nW@X@VVJ@²VJVU"],
					encodeOffsets: [
						[123064, 32513]
					]
				}
			}, {
				type: "Feature",
				id: "3204",
				properties: {
					name: "常州市",
					cp: [119.4543, 31.5582],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@LnxUbVVL@xnnWnn@VVXn@yImx°La¥n@VkKVwW@nXVJ@b@UVn@UnUV@Lb@`VLklVÞnÆ@VaXLlÈJmmVUK@aVUUaUUVwVKXVlUn@blKVUkwÑmKUVUI@±UI@U@WmX@k@aU@wnK@UUmWkaWU°aVUUK¯XUl@nVV@bUVmLk@m`ÝIUaU@lÅXUKkVmU@wmk£m@XmWan@@_Uam@@akKVaUw@W_XWa@w@akmm@mL@UJmnUK@@XnJWLkKUb@VxkWLaWVUImVULUK@L@lkLVVVllbm@@°kbVbUbbVbkJ@XV`V@Vbn¼"],
					encodeOffsets: [
						[122097, 32389]
					]
				}
			}, {
				type: "Feature",
				id: "3211",
				properties: {
					name: "镇江市",
					cp: [119.4763, 31.9702],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VĊKnVÆUnJ@UWKXkVLlKVwXVlbVKnJÆaķn¥°óÇIkWKUbÅ@mUÝlkUK@_a@KVUVm@mVU@@aUIW@mXUxLUlm@¦bK¯nwJzm@UW@UmmXmm@wKUUVamwKm@UbUL@Vmn¯¼JUW@UUU@@bl@@VVXJnnUk¯JmbVVXn@VWlbUnk@VVUVb@nU@WbKWV@XVlLVb°bnW°Lnl@X"],
					encodeOffsets: [
						[122097, 32997]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/jiang_xi_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "3607",
				properties: {
					name: "赣州市",
					cp: [115.2795, 25.8124],
					childNum: 18
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@`l@Èbln@KVLl@V@bÈlnKXkVlVL@lJnb¦VKVVnXW@w°@VUmlnUV`UbVUV@xnKVI°KXKVkVL@al@XaLVlULWVVVL@bx@VXVmb@x@VVV@nn¤lb°b°KXXWbX`lbXxz@x`VIVUnKLxWXLVKVbVLVU@wnW°b@nalXmXVJn@U²mKkVlU@@xlnaVmlKn@JVLlnVl@XXÆèVlUX@xVLXVb°W@wnUWmXk@KLVwUmUkUKUw@wVaVK@k@WnkUKWkwlmXL@KVUlLVKXmWUL@aL@malaVk@aaanX@VVUblbJnXaVwn£K@UWmUk@UaWIV@bJW@KmmU@aUUUkmKkVKlUUnKVUlVaV£Å¥WUUK@UkUUw@m@mIkUUWLK¯Uw°¯@wUKUbKm@kkKUL@UUKV¥U@manw@k@U@Wm@@U@WwkmwWaUU@UUmV¯kw@@kmkKkUW@UK@ÅV@XWWkXa@Ul@Va@KVaUUU@aXwla@UkVWaXk@K@lmkUmV@Vmbk@»XI¥VUkVUVU@anKVUKUalU@wX@@a@K@ÝwL@UnÇlUIkJmn@bVVb@VmnkLV¯U@±lIWm@kaUI@aÇU@K@KUIkbWbJUIUyX¯UbU@méUUmUkWKxWIkJm@V¥U_UJUwmVkUU@@knwm@UmkWJkL@n@VW@@U@knm@kUml@xÅx@@XUJlb@VXJVxn@lbV@lULnV@VlnV@bWV@bXL@lVLVbV@blLn@VlK@xln@bX@laLVbnKUVVbKlXVVkxV@nnVUblV@@z°WWkbIkWL@LUJ@bUI@b`@UmI@mkK¯XWmUV¯@UUVUUam@@VULWUJIm`IUJKUkW@UxnWbnnmlXbmIUVmV@Vnb@VLUKWLnÒVVV@VUL@kJUV@bÈ@V°@XVV@l@xUz"],
					encodeOffsets: [
						[116753, 26596]
					]
				}
			}, {
				type: "Feature",
				id: "3608",
				properties: {
					name: "吉安市",
					cp: [114.884, 26.9659],
					childNum: 12
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lxnb@V@bV@ln@nlIn@blVXKnk¼@VUKWL@bL@`UXU`@V¦XLĠ@lJ¦@nV@l°nn@mVXna@nbKn@lIV@VanJ@_lKVVnL@LK@Vn@VbUVanKlLnbnJVbnWVnVVanI@Vb@LbVKVanXVbVJVU@aXLllbôlÆ¼XxVLVK@Xn@xnVVVmb@LnVVKVXV@@mnaVXUVnVK@_UaUmwnKV_anKVL»K@¯ÝU@U@kWlUnlknKVnaUkma@UIUwl»Åw@VwV@nn@ÈXlKVmna@kVw@anm@n_WWk@mUkUK@ImkLUnbkm@wV@klUnLV±m@UInWkWmb@¯amX@xUVUKUaULWKXwKmLUVUJ_@wyWwkaW_XaWW¯L¯akam£@mUU@U@wnaWU@Uw@aUKUXUVKUkKWbk@@bUKUlWL¯LUJmLwU@UVaVU_VkmnUV¯@@xXmWUUUL¥makI@UKUkWlLkmÇ@aUk@UKL@kmÇak@_VlkL@`lbnlLVanLnbmVÆln@kJlbknmKUbÝmmwULUK@bkLWKULUUma@Kk@UV@L@llbVzxUxnl@bVLm@IVJXVlLV`@bn²@J@V@Xmbñ@WbUJ@bm@@LUĬU¦lV@xXb@blnUV"],
					encodeOffsets: [
						[116652, 27608]
					]
				}
			}, {
				type: "Feature",
				id: "3611",
				properties: {
					name: "上饶市",
					cp: [117.8613, 28.7292],
					childNum: 12
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@VI°`nm¤²@bVJUVVXUl@Vmb@xV@XbmVV@lkLmbn`VbnU@VaUnbVllUXVa@w°VW@_VWLnVlbLVbnlKnVK@IUW@_@am@ÑUólK@U@WU@VwU@UI@aUUaX@kwmJV@yX@kan@mkwVmmI@aUU@aUUW@kVkV@@anK»XVWnIVUl`@_W@wlUV@UWKnUbn°InJlUV@VnIbWn@VklL@l@Vn²m@U`kI@bWJnV@°VXnJmXVmx@VVL@bkLmWULUmU@bWXb@llnX@xkxVVnVV@¤nLnVxnJVXX@bn`VIb@blmlLnaV@blWXnlUnbl@KVanUVmm_XK@kWWnaU@UnaWUXaXamUkKmXUWLX¯WakKmnUWwXa@KW_aXWW_@WnIVl@XULnWVknK@ImyUUÆbXKÛ@W@IÆUnVÝlkVK@mUIVwkUVaUm@aVIVyXIaÈwmmk@UnanVUmÅaó»lwW@kkUVmUK@WKLUmWULkamKLk@Wa@wk@UU@U@mbUIWVKUXWmkUmVmU@LkakKw@w@U¯UUn¯l@bmn@xkJWxkL@VkI@mkmJUI@V@b@VVxnbWlkÈkVLbkKmVL@V@²nxWkLUL@xlKVxbXmVnWJ@Þ°@nxUKUw±`UImVmnU@kalm@akwU@UUJmxU@@U@kU@Um@@KnVm@kKmkU@@WUnkLWxkVUwmKmLkUbmKUbV@xUnkJ@n±UxVXUWJ@LUblUnm@W@nknUJUVm@kXllknVbÆKVVb¼V@Ul"],
					encodeOffsets: [
						[119194, 29751]
					]
				}
			}, {
				type: "Feature",
				id: "3604",
				properties: {
					name: "九江市",
					cp: [115.4224, 29.3774],
					childNum: 12
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@WUkVUkmaVUb@mVUam_nalK@kUnUWaU@@wna@UVkUWVUUI@a±n£m¯_JU@ĉ¦Ul@UVKmmLlm@ğ¹m`Uk¯@@UVK¯@UUK@amkmKkVVUa@UkUKUaL@VVXUJ@n@WUbnVb¯V@LÅlÝIJÅkÝm@UaWUU@UmUXmmwVUUKWUX±mUam@kWzUaVmÇw@aÅLmKXUWKkL@W¯IwVwlkUJ@Um@ÛÈWKUxWkaUU@KkLVl@UKUX±KUb@nVVUbUVmaUlUL@aUL@@nUlWzX`@V@lx²@Vlb@bVÞ@°nl@UxVL@lUbVV@n²xVUVmnUÞbaJ@IV°xnbl@nbÆ@VwnK@VnXlK°xnUlVXV@Vl@L@lk@W_XK@KkWxUL@JnVx@aX@VVUaIXlmL@bVVX@VbnKa²XVWk°a@UnV¤nbmLmW@XbmJUbVLaÞKL@K@U@aVKlbV@nXlJxV@VnVÈÞKôbźĕČmV@Ċ²xÆIV@Þ¦ĸ¼ÞVlVÞnxln°JkLXWVUVUVwnJVI@yn@lXlaXmWI@w»ma@UmK@akKkXmW@_kaWakKWk@@K@IWkUa"],
					encodeOffsets: [
						[119487, 30319]
					]
				}
			}, {
				type: "Feature",
				id: "3610",
				properties: {
					name: "抚州市",
					cp: [116.4441, 27.4933],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@°V°UnÜ@n@lnLlV@bV°LlnLllVzVVXlVV@@L@xX@WlXm@UVL@V@n°kVmVUnKlaXxVbnlU@lVVnaVI@aX@VJ@V@bb@Vb@X@lUL@@VlIVm@wUVanLalVnKnLVxlUXwlKVm@k@Una@mWIXKWUÛVk@a@UVWn@@kl@@WXlW@_Um@UVK@aLnalInWV@@xnI@¥Km@kKmnk@mlI¤laXbVblknV@UKXVlUXa@@Unw@±mU@ak_±a@UJUIVKW_Xa@aWUK@mmUVa@IXa@UWmannlmX¯WKXwVUVw@XUlK@klJXa@kkmm@Uww@¯W¯kw@WmbULaUUU@mVUUWmkUbKmkkK@akU¯¥Ulm@akU@m@KVIVV@KUkUVUkaUWbmIkaVaUU@mWbb@bUlkbb@nK@bKXVWnULkKUV@LWKknlxXVLml@X@lULUb@xVxVLVlVnUxK@LWlXnmV@x¯XaWUUK@wVWUkÅçm`@mn@bUx@lmbUnkLÇWm@mU@Ux@Æxk¼VxVJ@nbVlmbUmLklmkVlX@VV@°Þ"],
					encodeOffsets: [
						[118508, 28396]
					]
				}
			}, {
				type: "Feature",
				id: "3609",
				properties: {
					name: "宜春市",
					cp: [115.0159, 28.3228],
					childNum: 10
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@VlbnK@b@JLlUnx±ĀXxÆWX@l@V@@blJ@nX@xUbVVUbVV@bVmnmJ@bmbm@klUbLmb@lVb@xUX@bVVVbV¤@LVVbXlVwLXÜÇn@@VIlVkUxx°J@XlKXLVWnLÆK@bÈxUnVbylXn@VbnW²XVLVVUnxWnnV@VVVXVbn@ÞÆlIÞJÆk@K°UUamVa@UUU»@wV@VkkUKUVW£U@UmW@@aXkVUnVlKVVUUkVmU@kWaUanUVVamIX¥W@@aUaUVW@_mW@UnIVVn@VbVm@bVL@anKVUkWKUXVIkx@nabVKb@nVJ_V@VwVUVVXUlUUaV@X@VblabnKlkVaXa¯@m@UKVUn@WXkW@@w@KU@UWkUUUykkmKk¯KU@akUmK@k@mmÛ¯V¯U@L¼UKmLbU`mLxVnVb@`LmUVUUWmb@nU@UWULmU@KnaUUmUwmJ¯IUJWIkVkaWVUIUlWaUIUVkKmbUIÒlVUnn@VlLUJ@bUX¯@aWVUKUXKUbm@UwKWa@a@VkUWn@Uak@mbXWJXbm@mLaWVk@wL@WmanU@knwWmkaWLKWUXaU@¥lUVVVbnw¥nKV»@aUk@a@UJ@kmLma@mbUWnm@ULÇº@LXnmxUm@UbkbW@@akLmWk@UXmJmUkV@VUXVlULmKUxkL@lmXnJ@Xl°Vnb@bU@WbKUX@VmKUX"],
					encodeOffsets: [
						[116652, 28666]
					]
				}
			}, {
				type: "Feature",
				id: "3601",
				properties: {
					name: "南昌市",
					cp: [116.0046, 28.6633],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@X@m@VIUW@UKVbLlV@VVbUlUnLnl@bVL@V°UL@V°@Vln_Ġºn@knKnLVU@VkĊ¥Vk@U»UaUÅLUalmkklWn@VUVIlm@mXn@VmkVa@KXIVUWVw²@m@U@VK@k@WUa@a@aU@IUW@@bUJmbUU@kkVmUaWwkbmLUVUnlWbUbklmLakbUaW@U@VbkVWVUUUVUx@U`UI@maULamb@lwJWUVXLlUVmL@bUK@aUnUam@UUmJ@VnX@`UXVVb@bX@W¦nJUbUmVVbXb@lVUnVlVUUkLmUUVWl@bX@VnV@X¤VUVLllUU@@x¼VV@V"],
					encodeOffsets: [
						[118249, 29700]
					]
				}
			}, {
				type: "Feature",
				id: "3602",
				properties: {
					name: "景德镇市",
					cp: [117.334, 29.3225],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VVX@VbmzxUlU@mbmL@V²xVbUVVblbX@VkVykValKVI@bn@n`lVWnX@lL@WKnVIVa@¯nK@alIXJVIVWUwn@nUnK@alI@a@anKm_aW@UWmIUwmmK@£UUmUUlwwW@km@kWaXaV@VnVKnXlK@aUK@UnwWUnmIUW@¯mUXI@alJV_n@m±@U@kkKUlm@XamJ@UVUkmI¯JmamVXL@VUkV@xX@`k_UVmJUXW¼mL@bU@UllX@VV@bVV@bnJUnlx@nmb@lW@zUnIlx@WbVV@bVJV@UxV@@X@VkLVôÒn@@b@`VX@J"],
					encodeOffsets: [
						[119903, 30409]
					]
				}
			}, {
				type: "Feature",
				id: "3603",
				properties: {
					name: "萍乡市",
					cp: [113.9282, 27.4823],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VWnL@UVWLXaV@@ama¯Uk@WmInW@klKVwnLVKUkVW@UlUnVnIVWl@nXlK@bX@laVan@VnwWm@KÈ¹VK¯m@kmU@¥kIğ@WKU¥@V_VW@_K@aXKVL@Ul»mWLkU@amkJm@kmU@@a@UmakwU@Xl@VXk`UIW¼kWWX@@lxV¦XlW@Ubn@mUkL@UmJ¯UkUWVUaUlm@UXWlnUJ@LmLUnXll@bUVUUmVUn@¦xlnn@VÆÈU°kbVVxllnL@VnVVUl@VanL"],
					encodeOffsets: [
						[116652, 28666]
					]
				}
			}, {
				type: "Feature",
				id: "3606",
				properties: {
					name: "鹰潭市",
					cp: [117.0813, 28.2349],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@XV@nlL@lUnm@Ln@@VlV@@VV@nwVI@VVlx@bknlbV@nmnUVJ_²VxVLw@m¯@ÝXImnUWaUwkL@wVKlKXmw@±@UKnUlLaKlUlÇXkmaUw@U@a@UUkwUJ@zWJw@WbkVWUL@VmUklUaWakb£kJ@nmlnlL@nL@¦mJ@wU@mXkJmbK@bUL@VVn@`kXW@Xk@@lm@UX@V@blÜUXVWLXJ@nmb@V@l"],
					encodeOffsets: [
						[119599, 29025]
					]
				}
			}, {
				type: "Feature",
				id: "3605",
				properties: {
					name: "新余市",
					cp: [114.95, 27.8174],
					childNum: 2
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@m@@WULUKWwÅ»ókakkWK@bUVUIUamWUbULa@KUa@mJUbmUXUmUamImakKmLUbVUam@@UL@KKmUUkL@`mIUb@U@V@bVl@b¼UmL¦mxUaUUVk@¦VWbXVLXKlbXnmx@lmVnb@XKxl@XUbnKn@WaXIWnal@Vb@XmlV@U@bXbLVxn@VaLVWVLXUb°@VW@aVIkK@UmVmkUÑVJnalLVUVJXbVkVJXUlblUXJVI°JnI"],
					encodeOffsets: [
						[118182, 28542]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/ji_lin_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "2224",
				properties: {
					name: "延边朝鲜族自治州",
					cp: [129.397, 43.2587],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Wxĵm@ó¤VX@@xÜ¼ƨ²xWxVV@XVbWXllaÞU°Ċ@ô¼LôÝWanV¥Ñnĉ°¥ÅX¥°¯@w°w@»°k£°mÈŹmÈbÆŎ¦K°z@kxl¦UbU¤klVKŤÞȰ@@bV@nVVUlÞ¦lUllVlU°ÑU¯V°wbXxl@V²@nô¼ó°kmVk²ĕw@wVÞÞ@@Ġö»¯@bnb°mÞ¯°V°ÈJmX¥mamUÅUlaU¯@wKkl±n@@wkÝVUUl±¯I¯bal@kLmakb@ġŹé°Þb°ékLmwXaÅb@bVlbVbÒVbUbUUanwakbVUVak¯ULmxV°UxnôŻX@JXklbkbĉabWU@kWUU¯@@klm@@Å@awWXlKkI@WbUaVIUanU@ĕ¯KmUnWUwm@£ċèkUmbUmm@@nkJUalwk@@nmWUan_óaWmnw±KIwl@UmI@an@@mlUÅmV_KUk@U`@_KUmU@U¯mmb¯@kbImV¯LkbKÛ@ÇnɱJóaÝĢkb@xÒÇll@²VÆUVVUÇ°XóxlV¯lV@bV@nx@¤@șŎnxV¼knJnKX°¦UlnVbUbÆVnÞWVX¦llb@l°VJôÒnLVbbX"],
					encodeOffsets: [
						[131086, 44798]
					]
				}
			}, {
				type: "Feature",
				id: "2202",
				properties: {
					name: "吉林市",
					cp: [126.8372, 43.6047],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ôlzaÈV°K@mLWlnVxUVÈ@ÝĬUÈnôLa²VmĀkV@ĠĊnU@bV@b@nl°UVnÞaôJ@bV¦mlkbmVXx¯@VxmnbbÈKV@bÈLwĠyônmnbÜ@nnVx@n²KJ@kal@nxÞULź±Vwkw¯LWWUkŎīVww°yVĕ°wÈVlkÛ»@wW@Uô£@nĶXwWaUamKóÑUI¯@kakkW¥XUmÝÅUVaUamVk¥W¯LmIlmU»mwȚō@£kJUÇk@am¯y¯UVwa@wġx¦K¯X°Ċ¯¦U°ċWULÅa±b¯@UkÅWmVkIUlóċ¹`óIlXWXxmbULÝbƧ@x¯bÈl@x¯zaÝ¤@nmVWb²bmn¯J¯Ò@n"],
					encodeOffsets: [
						[128701, 44303]
					]
				}
			}, {
				type: "Feature",
				id: "2208",
				properties: {
					name: "白城市",
					cp: [123.0029, 45.2637],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@óǩŁ@WlwUaƑwÛÅÇéĉamKōÇ@IôġVȁÑŹçÝUƧċĉwóóÝ@Ƒ»ğL¯ll²@ƆÅV@¦mÅb@nmlU²VxlUn@VbnWbÇbkÒn@èlnlUÒ°Lx@¼ĉb@ÒUċxÅènLVxÒbÅJ±a@_ÅJÅnVbKlnUÜĊ@UxXVÆnmVJÞ¯VĠwXw°xWLxKV¦ôUwVÝǬóÞÞ¼ÞkVôȘxÞUlVn¦ÞĊa°wb°@bÆwlŤL²`z°@V@@nJVnl@@¥nUmmn@mwnmmUnk@mlwUaLnwn¯°anWakIÇmXwÆamUXUlJXaUUklKUknmÞV@K@VWÞ@VkUwV"],
					encodeOffsets: [
						[127350, 46553]
					]
				}
			}, {
				type: "Feature",
				id: "2207",
				properties: {
					name: "松原市",
					cp: [124.0906, 44.7198],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@źèȂÒUóĢ@JŎÈLnĊbÈêÜÆƒxVbkx@XǪłôkÞ`Wb@n°abKnVw°`_X`W¦ĊIkmVakwKx°UÞbU@ll@°¦VWaÞbxÞI@mVI@VkÅUWK¥nLa@@È@°Æ@nU@KÞalkUwVékUWwkUVkkJk¯@»ókV¯ÆÇI@bĉô¯@ķw¯nmmÅL¯wVUÞy@UówÇLkmm@@UóxkkĉmL¯wVwkWWXmLõm@kÅ±V_ô»ÛÆ¯@VaVaĠVlmğwķUóÝƽ£ÇJkbǫaƽLW@nxÝ¤kzy¯XɅm@VôÇX¯Ė¯ºÝnUnLVlUÔmV"],
					encodeOffsets: [
						[126068, 45580]
					]
				}
			}, {
				type: "Feature",
				id: "2201",
				properties: {
					name: "长春市",
					cp: [125.8154, 44.2584],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@U°xÆKnn°mĸx°@Ċó@aÈJ°ÅUôl@¼l°IllUlVXxlVUêVxkllnÈUVll@Vx²IÞ¤VUlVnIôlÞlwô_bVaĶLXÅÞÇ@K¯@wÛaçn¥¯WXyW¯XwUmmÛ@manómğzxÇK@aUÇLamanUw°@WwnUalnk¥U@aóIÝbUm¯Vmk@@aU@amVğĉ@lUnÿ±UbóKmVÇÞī@ÇVUUwmXkKn@L¯ÇUbyókōè@bn@lÝX@x¯ô@ÆUV_maXm@aóJWxnX@VVnĖVnUJ@nōÆÇ¼V¼kxLklÝw@xx@zV`ÅbmxU±xUnnmknğUbUUb@Å°Üó¼U`Æ²@lönKnXWlXUx°xnKĊllôw@Vn@lnÈKôx@VÝzV"],
					encodeOffsets: [
						[128262, 45940]
					]
				}
			}, {
				type: "Feature",
				id: "2206",
				properties: {
					name: "白山市",
					cp: [127.2217, 42.0941],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Ul¦kÒÆ°IlÒU¤ôz¼lJUnÆXVl°@²aÆbVKČXV¯°¥¯ĉ°WL¥Ģw@xbUx°V°znb@ÈlVlI@w@mU@akU°kUôwWÈ¯VUVUÅ±U@kÈkÑw@laÞġUÞ£@ƅKnÑĢ¯@WaUaVUVkkw@a¯@¯ÝVXnW@@WkXmK@xkKUb@bW@Uw¯mmb@WKUbmUbUaWbJĉIVW@Il±LkmUbUm@nkKWa¯n@`UbmaĉL@bÆ@W`L@n¯Xb@kb@xL@VkL±mlUIU¥mL@lÅx@_la@UaV@kmmK£LmKUnÅKVbmXVlèĉUUbmlĢÅ¤Il¯bÇ¦l@ô¼Ģ@x°l¤nal@xb"],
					encodeOffsets: [
						[129567, 43262]
					]
				}
			}, {
				type: "Feature",
				id: "2205",
				properties: {
					name: "通化市",
					cp: [125.9583, 41.8579],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ÆlXnĠxĢ°lÈ°K°kXm@¦VbkŤJnÝ¤kVÞVVkÈb°y@wkÇ°awƨ@aÞKVnaWwXWkôJ_ČºôVk»óyV£kÑJÅ¯lÑk¥Va@wkbmk£¯@wġó»@kÈ¥°akJÆ£ġnkVaĊVkçWUnUaÆLVmnLKU±@m@a¯UbmV¯m@_KUaÅWó¹@UanmWak@@wmI@y@mkJVa@UaIkJ@n@Um±kkxmIkbÇm@°bXnV@°ÈmlÞ¼¯XVº¯LmkWWXLmVVlkn@@lnWÆVxbmnm¯lÝaVÈè@¼VbÆ°ÞUVJkxIxIV¤ÒXxmn"],
					encodeOffsets: [
						[128273, 43330]
					]
				}
			}, {
				type: "Feature",
				id: "2203",
				properties: {
					name: "四平市",
					cp: [124.541, 43.4894],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Ɇn°WzlyÞ£mwX@ƾKǬblaÈIƾ¤ôÞĸVĠxnmmV²wVnwÆaU_@yw@wÞxlkKlwU»È»ŎÅ@mVIUmmĕUU@mWXwIô@bWnnbU`V@Å°ó@wÞW@km@aŎç@m°Ñ°Inm±aXaUn@mƑU¦@Ç¯aU£aUġ¦ÅÒJōUŻókUÇ@¥¯ak¯mUVak@@aċçÅaUm¦Ý`XbÆ@n`IxĊÞōÞml@Ub@Wl_¯JkÇUÝÆÅb@nllUb¯±a@WĉJġĀ¯Unóm¤xôaVnxôI@xV@bmÆ@lnLmÞ¯ÞxVb¯þ"],
					encodeOffsets: [
						[126293, 45124]
					]
				}
			}, {
				type: "Feature",
				id: "2204",
				properties: {
					name: "辽源市",
					cp: [125.343, 42.7643],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@żôŎVIÆÑĢ¥VbV¤°bÈ@V¥ƒÞ£lÇUUUÝlÞ£mţIlUa@¥nlW¯L¯kÇġ¯ğwWmÅk¯UVUbWlXlmnbUx¯xVVknlUbVÇKUb@VnbmlnzUº±bmJUbWÈnèmÒ@X`WL"],
					encodeOffsets: [
						[127879, 44168]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/liao_ning_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "2102",
				properties: {
					name: "大连市",
					cp: [122.2229, 39.4409],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@IÞmVk@wXWÜbnwlLnU@nLlbXW@awnbl@XLa@Ċ¥@LULnJ@xVnmV@VXXV@VJkn@VÜKXXôJlbxl@IVbnJVLUbnlnVwJVU@XUaUUlwn@°nVKnV°_VJwl@nwlVIXWlIVVnK@IWmkIVaVU@WÈUlmU@UWUalkXġŻ@kI»mmakUmĉUŁV»²ġVĕ@aUU؍IɃ`ȃ@kw@Umwĉ@WķÑIĉÇbÝLkymbIwÇmÛbmbU¯ÜõÈkÆVbŎxnXVÆnǪ¦b¤UxÝnĉÒmĊVÈ¤ÈbÆ¼ĀÆÆÞźbVVbX°²¤"],
					encodeOffsets: [
						[124786, 41102]
					]
				}
			}, {
				type: "Feature",
				id: "2113",
				properties: {
					name: "朝阳市",
					cp: [120.0696, 41.4899],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@na@UVI@mÑWkaV¥UI@wl@aÈbm@wVak@@K@k@a@UUmUUalmU@KÇUÅ±¯@±kUKVkUaaU@¥m@@¯k@WLUmkn@mmIkm@amU@wVmkU@Klk@UmaXIWWULaULVbmk@UUmUk±_Uym@mbkImaX¯WWxWKzU@WkJWwkV@Um@UbVVVVXb@VWX@W@Vkb@VnUK±aUUlwXÇWKknU@mmUkLUVVUUVUawbkKmwnIkJ@nmb`kmVkLWwUm@UUUK@UmaUa@UUaWK@mU¯Wkk¯VmUUxVXUVmL¯ymXkWUbmXUKVknWx¯JVnkLl@VVxnxlĀVL²WlXl@bÝVUn@bnlÜaXblIVl@@È¦@VmbXV@@xVVnUn@`°@VnXU@K@VV@VmbnVn@ln@bx°Ub@bLV`ÅnW@@lUnnWVU@Vbkl@Xl`XxVUblkX@°¦VUVVbUlkV@UbVbkLUxmJkX@bbxVKÆlXXbnnala@Uk@UVVklKVUXKVU°KVan@VUnLKVLWVaU_@mmUXa@mwXwVkVWXkk@k@klm@wXKl@U@KVUUUVaUV@alLxUx@b°°VnnVxlIXJmxLUVlV@bnX@VbaVx@XJ@bn@VVXÈl@llX@lUVô°°@ÞVbn@Vk@VW"],
					encodeOffsets: [
						[123919, 43262]
					]
				}
			}, {
				type: "Feature",
				id: "2106",
				properties: {
					name: "丹东市",
					cp: [124.541, 40.4242],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lzXJU@²x@@V@bUVmKUn°n@lnVKnV@n@VlV°WbXn@VzJ@¦@bkbbUl@bkbJ¯zWULWbklVnb¦VJ@K°Ukl@@WbVn°@Vm²UnX`UÜLXmVXlKVbUVVnUbnX@VUL@lUbWx@²kl`n@Vlb@nUVWVLVU@aV@²bl@ÈmxWXVÈUJVl@laWnXKÈkÈ@Va°bÆm@XV°IVV°UnalVUn@UwVU@@VVJI@bl@XK@wWmXUUVbkJVXnJVI@mknwlKXL@`l@VI@UUaVKÞnaVm@aÇ£XWU@aÇUU@mbkKm£@WWL@@Kk@klUbWKUkUU¯UõÛmUUaVUU@WU_W@kVkJ_WKkV@bUL¯¯±mk¯ġğÑ@UmwKUaka@am¥ÝIUWmk@wmţLKʝbȗKWĢklVbX@VVknÇV@XUVUblJXn@J"],
					encodeOffsets: [
						[126372, 40967]
					]
				}
			}, {
				type: "Feature",
				id: "2112",
				properties: {
					name: "铁岭市",
					cp: [124.2773, 42.7423],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XJm@¯mXUlnVbUJU@bV@UJWL@VXLmJVbkXlJXxVL@b@V@n@b@`Vbk@lxknV@VVV@bUL@bV@@bVK@VXLWLXJ@LV@nbWJ@IUVx@LVJUXVxVx@VV@@LXJWL@VU@@L@VnL@bVVmVX@@VVInJmbnLWVnVULVVU@VVmX@@JVzl@nVVKVXÞ@mk_lmUUWV_nJlUÞÑÞVVUVVLUVJ@IVna@@KV@XwWknwnKlalUwaĉÝwJl_@aUaKUUU@WU@WXUÆ@@UVK@n@UnVVblK@bllb@bbW@Xbl@UlnLl°°b¦nKlVnIV@UWU@WXkw@am@nm@aVw@I@KUaVIm±XÑlknJVnVJaX_VaUaVKmwnkmmn@lU@U@mnaXlKUmUIVmklaUK@UlUVUW@UkVma@UUU@JmUU@@bmbKWV¯XUKm@ka@UVKVk@aUKmLkKUUÝUmbXbÇJ@k@WU_@m@klm@UXKVaUI@KWUXaÇWkaWUkWUL±U@lUU@UJI@V¯JmIm@@aU@Uwa@UV@VkIV¯aUkWkb@bVL@@VVVUXW@Ua@@bÝbUVÝ@LmUkVUbVllLUV@LXWbUXm@U`@kxlnnJlbnIllLXlVlUXmVKnV@L"],
					encodeOffsets: [
						[126720, 43572]
					]
				}
			}, {
				type: "Feature",
				id: "2101",
				properties: {
					name: "沈阳市",
					cp: [123.1238, 42.1216],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ȚĊÜ°bLlÞxUbUn±@ÈnVÆL@xnLlUVbxkImJkn@V±LUxkV@bbKVKnzVl@L°@VaxÞUlbôxVV@@V±bn@llXLöXĶnal@nkVJVI@aU@@aVK@aUUUU@lmkwl@Ua@_@a@m@U@aUKWwkIlWUanIWK@UXKVIU@@aVVIUamVknW°n@WI@KUmULWnkVkUWKkkmJkamIkmlw@V_n@VWXaW@KVUkKUkValUnVK@ÞVUÞa@a@VbX@VWUU@U@UK@ala@IkKmUUa@U@VkkWVwU_@KÜUXbl@V¥XUVmXakÅlUUkIm`UIUJW@UIKmkm@UUJImmU@VUXU`mIUbUK@LJUUl@X@UbJkU@nm@Uam@@aUmLKwmWXUK@kUaÇa@JUIUa@aKVUUXmUy_@lmbkLUKWLX`n@bVL@JXLWX@Vnb@Vm@UbnVmL@V@x@LUbVV@V@LUVl@mb¯U@xU@UVVV@X@VVblJ@bnVKUnx@llnL±¤b@k`VXÆK@kV@¼kl@bWIUl@VmLnbm@@JXXmb"],
					encodeOffsets: [
						[125359, 43139]
					]
				}
			}, {
				type: "Feature",
				id: "2104",
				properties: {
					name: "抚顺市",
					cp: [124.585, 41.8579],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XVl°bUlJ@UVU@bVxV@@bn@nJ°I@UJIVV@V@k²VVKlXXVblÈXWbXV@LVJUbWL@Vkn@l@nV`@X@lÈIWanaÞVVVlLnKVL@bUlUL@Vlbn@VL°WXULna@aV@nV@IVV@VbUnl@VXnKVa@UUnyWkXaaVk@aabnm@_WKXmWanU@alaUl@XJVLVxX@wnKnVlw@V_@a¯¥@UkKWUaUUanK@IaU@WUaVw@klUVyUUVUUÇ@Iôba@mnUma@kXa@UWak@Wal@a@WULmU@U`mIUU`mUk@@UUK±nkJbUam@kwm@@a@UU@Ua@@K@VK@kmKU_UKUUaĉWmkkL@`LnmlkLkbmK@k@Ulmb@b@xUVIUlmVXXxm@JUUk@WUk@akx±@¯x¯UmbKUUVmUU¯UmVVnWkÆlWbUnWVU¦k@WaÛV@LV`UxXllU@@VVbnVlL@J"],
					encodeOffsets: [
						[126754, 42992]
					]
				}
			}, {
				type: "Feature",
				id: "2114",
				properties: {
					name: "葫芦岛市",
					cp: [120.1575, 40.578],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ll°XnV@XLVb@VVbnb@VLVV@VVnXxlKnUl_na@mlImJnxlLaxVbUVVUVUKVlnnV@lmXLÈWkxVV²bVLm@Ula@UX@XW@UWaUUUUVan@V@lUXxlIXV@yXLwXXW°nblJnan@Vz`l²nVVVl@nUaVKbVKnXVaUaVUynXK@kVK@X@m@mLXaLWU¯w@a@UVw¥°ó¯¯y¯UÇ¯»w¯Im¯ÇUUl¯»ţKċÑţķm¯w@mU_ómk¼VnU`±IkbVlnnU¼±Lk`@XWl¦UbmVUxkXVlkbllUVb@bkVmx@XVV@Jb±aULkKWXkWmX¯aUJmIkVm@xU@n"],
					encodeOffsets: [
						[122097, 41575]
					]
				}
			}, {
				type: "Feature",
				id: "2109",
				properties: {
					name: "阜新市",
					cp: [122.0032, 42.2699],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Xnb°lVlnXVJLlVnl@zÆxnK@bblKVLn@@VaVLVK@L@Vl@XVVInVVKVwlUXwlKLVVb@aV@XlUXbVW@nlWnXKV@@V@XUVVLUVV@@bVVV@@ln@VbVUXVIxVanJ@UIVWL@UV@@¤V@nInwWklnIVxlnzUVÇJ¦VVÜLĸUnW@aV_WĊXXaKnkl@nmLa@alUVw²K@UlmnIlJwaVUkmK@wÅKmU@Ç²VmVaÝwkKaÛ¯șĉķ¥ğ¥@kUWkƏīÝ@@akUK@KWIUm¯nU¯JmwUVmIkJÇLm@UImJUU@aW@U@@nUbJabXVWn@UVmX@V@b@l@L@lUb@xnÇabk@@xVJU¦lbXÒ@nUJ@Vmb"],
					encodeOffsets: [
						[123919, 43262]
					]
				}
			}, {
				type: "Feature",
				id: "2107",
				properties: {
					name: "锦州市",
					cp: [121.6626, 41.4294],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nJ@nlmVnXKl@@°n@@¦VbVbUlVL²l°@Æ²ÈV@LVknVbVVnnWVU@XmWUabIVa@mV@X@@bVVnIVJ@nÈKlInJVUnx°IV°mVnXJ@LLlV@b@ÞƐĬXllV@Ġ¦ĸ¦naWW@In@manK@UVkXJ@alk@»lU@ÅLUWl_@a²£Kkm@kwVmULm@akIUa@U@WUUVUaÝ@ğwkmĉ£UW@@bÇL@ma@_mKlXUwKLţÓ@UWw@K@UI@mU@UV¥@°UnJ°@@_KUwW@UnaWUmmI@mķwUaÇLóVĵwÝUUW¯¦Ux@Vb@xV°XKWbK@n@nW@UL@lWLmzUVVbUbmWXXWJbn@Vkl@LlVUn@xnV@bln"],
					encodeOffsets: [
						[123694, 42391]
					]
				}
			}, {
				type: "Feature",
				id: "2103",
				properties: {
					name: "鞍山市",
					cp: [123.0798, 40.6055],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lxĠÞ@bV@@w°Vna@UkV@K@UUUVa@K@w@UnKmUVan@@Uma@UXWWK@IUK@amW_XKVLlKna@kmKVak@VU@VmU@anIÆan@aUVnb@blLV`ÞLlUbnaKn@naVU@¥°IVK@anUUKVaUVak@mJkXUVwkVUUa°U@W@WlkXWlIXUlJlaxIVVXLll@nLV@lLXlKĊz¥maUlkXaVKX°yIla@aVkala@a@¥IUy@WmXa¯kU@U@mmUULkmm@¯VmnLVU@a@U@±w@VWIkymLUUkJWXJkUmxk@xUI¯`mUULm¯m@kxVVbWV@UVIUx@bkVVVxUbVV@V@zJVXUlnk@@lkLlLUU±Jkm@UIUVLUVU@K@UnnV@l@LlaUJ@zn`@nWlIUVUUUV±Ln@nmL@VUVkLVlUxVLVlÅXma@@akLmWUX@JUnVJVkXJ@X@`WXVUVUIlbW@bVUVL@`Un@¦U`@bUV@z@Jm@@XV`LUL¯J@IVKmKÅI@JnWVnLnVxV¤z@bmV@VUV@bUL"],
					encodeOffsets: [
						[125123, 42447]
					]
				}
			}, {
				type: "Feature",
				id: "2105",
				properties: {
					name: "本溪市",
					cp: [124.1455, 41.1987],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lb@VnlnVVUb@VJ@nnJ@bmXUx@xVbkbkWLUxnl@Ul@xWx@nUV@¼UllknkK@bmbnlLVJX@VIVJn_lJVVXUmnU°VVVUnVVLna°V°w²@lwbl@XVl@VVIn@wWWnUVkJVUw@@anaVk@@lnLlalKnkmK@_lKnlĊXVbVVLV`nL@lUL@@L@VbV@@V@bn@lxn@VbalI²mVL@Vl@nV_VVnJV_@nVKV@X@bkXbl@XblylUUk@Xa@UVIlK@UUWVULlm@UUUnKWU@K@UXmXVa@U°KVUUWUk@aUVKkaWkKUknaWa@U@m@mk@aUJk@@_WKkLmxl@nUJmIUWlIUaVWVXn@xWLk@@aJUI@U@UVVxm@UVkmb¯VUU¯JWU@Ån¯aUbÇ@ÇlLmWXkbk@UIÇVUXWwÇnk@±aU@@bUVUKUXmV@kaUm@k_±l@XwVa@kVK@UWmVaUmVUUakLUWWnÛKVW_m±VnU¯@Uma@Xk@l¯V"],
					encodeOffsets: [
						[126552, 41839]
					]
				}
			}, {
				type: "Feature",
				id: "2108",
				properties: {
					name: "营口市",
					cp: [122.4316, 40.4297],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ĊĖÆn¤°Ċ¯ŎWô@xXbwnKl@nX@VUVKmL@VU@UxÝ@VlbxU@VUb@bk`IUlVUnV@@UV@@JnXlK@b@nbÆWUkUKVwUklKVU@UnK@mm²KVUVVVUJXk@mm_@yVIbk@K@kmUm@VLV@VUKVUVJn@l²IVVKklK@kl@kmVUWI@y@UUUVawUUUl@akmmVaUKmIUaJk@wkaóIWWÛL@UlmUIU@WW@UnUUm@wmIVK@Kĉ¦@bWKk@max@bWXkamK@mVkKmxÛaWX@xUlÝnJ"],
					encodeOffsets: [
						[124786, 41102]
					]
				}
			}, {
				type: "Feature",
				id: "2110",
				properties: {
					name: "辽阳市",
					cp: [123.4094, 41.1383],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@`VzWnVUVL@bVbVJ@IÈbVb@lVLXWnxLnKVb@n@Vbn@mV@lIVa@@WkVVI@KVLVanJV_VWUV@nnJVIVn@na@alLlmkVk@»VU@mXwwk@@VmkVwXKllaUa@wVwnW@amI@mUI@VaUUkmm@UkaL@UIĉyLWkkKU@mKk@kWKUUJwkbkIWVkJWXkl@X@X¯VVbUVlUxVWlnI@lUbVUbVLmV@bUL¯J@¦UVmbm@LmbakVÝKU_kK@amaVUbm@ÅbmJ@bVUn@UVl@UbnL"],
					encodeOffsets: [
						[125562, 42194]
					]
				}
			}, {
				type: "Feature",
				id: "2111",
				properties: {
					name: "盘锦市",
					cp: [121.9482, 41.0449],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Vbĸx@nnJVnXmb@VXVxL@`¯@mI¯V@U¦@VV@nJ@V@LXx@VŤÔKLVxWknL@`b@nÈK@a@VXĊ¤nVK@aVU@UnU@ayU£UwmmKXUm@IÆJnLUL@J°IVKKU_@Wn@@I@yVU@aV_@¥Vm@_UKUV@aXkaVJVUUXW@_@WWIUlUIVm@IVW@IU@@VU@mUVVkJ_l@aVa@UVwka@UÞVwV@@UnKLVU@UmWk@mLxWa@wóUVUIÇÆĉ¦¯¦¯xʟJ"],
					encodeOffsets: [
						[124392, 41822]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/nei_meng_gu_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "1507",
				properties: {
					name: "呼伦贝尔市",
					cp: [120.8057, 50.2185],
					childNum: 13
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@m@Łkklô@£kJ°ýɅķÑó¤ğLĉÅlÇğŁW¯¯ƥóÿlwkţÈéÝƛó°ÞÅxV¤ĉĖWƒ¯lȭţυ̃ɱÿķƅˋğɱřÝţϙȍƧĊţ@¯kWKUKm¹Å@ķJU@ƧÑƧō¥˹Ɔ@L@ÞVLn@VōČWJX¦@JŻbU@ţÞmVU@ȁýóbkWWLÅ¯UWġkmó±UŹôV¼ƽ¼ł̥ĖƽǬʉxĉŻȗKΕ̛ʵƨʟÞ˹»Ƨţ»Ǖō˷Ȍ±ȚʊĠUɾɜɨmÜ֞߼˸ƅȂ¯ǖKˢğÈÒǔnƾŎŐ@Ċbôô̐¼ƒ@ĊôĊÞĀxĖƧL±U°U°ĬƒČ°ÜêɴȂVł°@nxŎèbÈÞȌ΀Ǹl²IlxĊl²ÒmôĖÈlĵºmÈêVþxɛČʉÇĵVmÒÈɆôƐŰǀĊ°ÆǬĮƾbyĊ@ĠƒXǀċm»ôw°Ûk¥Çm¯çkkÇǫţǕéX_ĶWǖīŎaÆĵĸĊ@ȚȘĊLĢĉVÆĉʊÇĕóaU¥ĉ°mkÅ°ġUĠřk°mÑČÿÛƒWĸ£ʠÆxÈÞŎÞ»ʈ²ĊÇČalÒ°Ť±ĸzĊKÈ²m¤Ŏ@Ò°¼nyȂUźīǖƳÈē°@ÝĶ@Èkl¥ÇçkxkJXÇUÅ@£k»óƿīÛ@lÅJl¥óý@¯ƽġÆÅanċ°é¯¹"],
					encodeOffsets: [
						[128194, 51014]
					]
				}
			}, {
				type: "Feature",
				id: "1529",
				properties: {
					name: "阿拉善盟",
					cp: [102.019, 40.1001],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ƏnǟƨʫŹɆÿ°¯ÆV²ˢżÿ@ÝÆŁȰ¯ȀƳĉó@ğky¹@īwl£Ź¯Ŧé@ÇÇxŋĉƩUUŃōLÇĵóÝnóç@ó@ġƱ¥çWUçÆō@éçťKçȭVһƽ̻aW¥ȁ£ʵǊǓƲɳÞǔlżÞmĠóĬȂɲȮ@ÈĢŮźÔnĶŻǠŎȭгŃċóȭţΗÆƑÞƧÅΫóȘǫɱȁġlÛkÇ°ȁÈnõl¯ôÞɛÝkĢóWĊzÇɼʝ@ÇÈķlUČÅÜķnέƒǓKȮŎŎb°ĢǀŌ@ȼôĬmĠğŰōĖƧbЇƧōx@ķó£Ål±ĀƧīXÝġÆêĉK°Ýʇƅ@ΌʉżÅÒϱʈ@˺ƾ֛।࡬ţશóЈèʞU¤Ґ_޸Ƒʠɽ̦ÝɜL׈ɛϜóȂJϚÈ@ǟͪaÞ»Ȯź"],
					encodeOffsets: [
						[107764, 42750]
					]
				}
			}, {
				type: "Feature",
				id: "1525",
				properties: {
					name: "锡林郭勒盟",
					cp: [115.6421, 44.176],
					childNum: 12
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ʶĬĊIȘƨƨ@ĬÛĢșŤĉĬĀóUÈŚÜènŦƐȤȄłϰUƨťƾÑ܆ğɲƜǔÈèʈƲĊƞƒɆ¯̼V˺Ò˺ȂŤVĢêUÜxĀˌ˘ƨÆ°ѢmÞżU¼ÆlŎ@ĊçŎnÈÒͪŎźĸU°lżwUb°°°V£ÞlĠĉĊLÞɆnźÞn¦ĊaȂīġŃ¯Iĉůl»kÇý¥Ŏ¯én£ġÑÝȭxÇ@Åçķ»óƱŎ¥çWÿmlóa£ÇbyVÅČÇV»ÝU¯KĉýǕċţnġ¯»ÇōUm»ğÑwƏbċÇÅċwˋÈÛÿʉÑ°Łkw@óÇ»ĉw¥VÑŹUmW»ğğǉVÿŤÅźī@ř¯ğnõƐ@ÞÅnŁVǉóJwĊÑkĕÝw¯nk¥ŏaó¦ĉV¦Å`ğÑÑÝ@mwn¯m±@óƒÛKˍƏǓ±UÝa¯lōșkèĬÞn@ŤġŰk°ċx@ĉ`Ƨĕ°@ţÒĉwmĉ@na¥ķnÞĉVóÆókĉķ@ÝkƧƧÛa°Ç@ÝÈUóbÝ¼@ÛÒV°@V¼ˋLÞɅŤŹǠVÞȗŤÇĖÅōbȁƜ"],
					encodeOffsets: [
						[113817, 44421]
					]
				}
			}, {
				type: "Feature",
				id: "1506",
				properties: {
					name: "鄂尔多斯市",
					cp: [108.9734, 39.2487],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ĶL²ĬVłƑkkl@ȎŘWńÈĬȗ¯ºlz@ĠĊôŦôÒĠ°kÞÜn@¤UĸèĸbŌÈXĸLlÒĢxɲÆ¤ÈÛƾJÈÝ°UÅĶ»²VW¯ĸJôbkV@ôlbnĊyÈzVôab@ĸÞUl°yǬ²Ǭm°k±lbn°@È»JXVŎÑÆJ@kLÆl²Ġ²ʊůĊġřóƛÞÅ@mmLUÿóĉƧ@»L@`ČĸmȗÑţů±ĉğl¯ĀwÇçƧŤÛI@±ÜĉǓçō°UwôǫůķƳÅ±bÅ£ÓÇwnÑó@ȁƽ@ÇƧĢón»ŏĕóĊ¯bÅVȯÅImōKULǓ±ÝxċŋV±Āȗ°Źl±Û@WÒȁŚŹНŚÅèŌô¼°ȰɞȂVĊ"],
					encodeOffsets: [
						[109542, 39983]
					]
				}
			}, {
				type: "Feature",
				id: "1504",
				properties: {
					name: "赤峰市",
					cp: [118.6743, 43.2642],
					childNum: 10
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ɲŁĢǉĊwƾōÞĭ°_ŎŃźȹƒUČÿl»¯ôķVÿǬƽɅġÅÑǫ»̐ʟȣU¯wVWÝÈġW»Þ¹mÝƒɛŎÿŎōͩůV¹ōéċóŹÅVVĢǩʈ@Ėċ@ķÛV°¯xÇÅţ¥»°Ûôĉʟ¥WýČ¥wç»±mnÅķ¥ˋVbUÒġ»ÅxğLƧbWĖÅx¦U°ÝVóŰlô²@¥ÜÞÛôV@²±`¦¯Ý@ÅVÒō¼ô¤V²ŹĬÇĊƑţxç¯Lk»ʟlƽýmłÝÆƏ@mö°Ġ@ŚŹĬţÆUĀĠǊĠX¼nźVUÒ¦ĊxÈ¼@ôlx¯łʊÒÜĀˌÇČxÆČÈƐaxÒĠn¼ŎVÈ¼Ģ°ŤmǖČĊþLV°ÞU¼ċÈUÆzÈa¤ôbknXĀè"],
					encodeOffsets: [
						[122232, 46328]
					]
				}
			}, {
				type: "Feature",
				id: "1508",
				properties: {
					name: "巴彦淖尔市",
					cp: [107.5562, 41.3196],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@²@Ζǀݴʶհĸƒ¦Ķ̒Uˌ¼ӾÇƾ¼̨UÞĉƧéÝ»ĕĉƐȍōǪakóó¯a@ôţaV¯Þ¯°@²él¥ĵğťwōxó¯k±Vó@aóbUÇyĉzmkaóU@laóķIX°±Uĵ¼Æ¯VÇÞƽIÇÜÅ£ɱġwkÑķKWŋÇķaķçV@£mÛlÝğ¯Ñťóǿƴȯ°Åł@ÞŻĀˡ±ÅU¯°ɅĀźƧʬmǠƐ"],
					encodeOffsets: [
						[107764, 42750]
					]
				}
			}, {
				type: "Feature",
				id: "1505",
				properties: {
					name: "通辽市",
					cp: [121.4758, 43.9673],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ôƲĸ¼Æè@ÈȮwƾ»ʠĢ¥VÆ@²¥@»ŎÑ¯ĊJŤ£k»ÆÇX¯̼ōī°aX£ôƾȁź¥aôŤĢL°ĸ@Ȯ¼ÈÒʈŚôVXůÆaĠƛÈKķĉôÿ@ğÈĉ»ÇVnĉVwXĠÝ°ČÿĸwV¯¯ǵ±ĉǫÅÅm»²Ż±ƽIm¥ţÈķ@¯ƧJV»ÞUÝç¯UġºU£ţóaÅÅlƧī¯K¯ÞÝğL̑ȍƽ@ōŎōĀƑɜnÞÝºX¼ÇĢÞUX°xVʠȤ̏Ǭ¼ÆÒɆĢǫƾUĀóĸ°k¼ċĀƑVŹȺōń¯`ÝĮƽŎĉxġǊɱłō¦"],
					encodeOffsets: [
						[122097, 46379]
					]
				}
			}, {
				type: "Feature",
				id: "1509",
				properties: {
					name: "乌兰察布市",
					cp: [112.5769, 41.77],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ʠǠÞĸɲȺƒÒȂƛŎaÆÈĕȘţUÝźǟɆţÝˌKU»@U¯ÜÑ@Þ»ôaVÞÇÈ@¯ÜbƨƨÞlĸ@ĊôlôÅĊUÝĸm¦bmĊ@nĊxŤÑ@¯ƨĖĊ_@Čwl¯ȭLÝ»ƽ¯ķůǓ@ÇǓbċÅÅÆwÿĠÇU£óa¥¯aŎğĠţkw°»¯ůlÝĵkÇ»Ý°ɱƧǫaóôɱ»Çk¯ŃóʇŐŻĉǊŻĢ¯ÒÈUl°x°nÒĬónĊğ°ÇŚĉ¦ʵV°°ĬÛżÇJȁńʇʹó˂ƽŎÆţ¦"],
					encodeOffsets: [
						[112984, 43763]
					]
				}
			}, {
				type: "Feature",
				id: "1522",
				properties: {
					name: "兴安盟",
					cp: [121.3879, 46.1426],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ÆXnlŎ°@LVLĠþxĊUȮĊnUĠV@żaW¯XIŎġ¥Ý@K@w@K@I˺ŻŎ¦ƨƨÒŎIÆ@X@VºnX°lŎ@ƾĉˤƒȘǷȘÑÝÝÞbVţĸÿŤxÈĖƐêÇKnĸ¥ô@ķÞUnÒl@UÅaīˋ¯ÑƧx@±kXřƐƏÛéVˋ»lō¯ĉÅÇÓǫÞĖġV@ğ»°ĵÇÞǓ¼¯mÛÅŃĉĠÇƾb²çéż¯VğÞml»ōÑVç»V¯¯ĕÆU¯y°k¯¯V»ôÇÑ°a@ŹkġKţóbŹ¦ƽȂóW¤¯bĬ̻ŎW°ÅÈl¼ţ¤ĉI°ōÒ@¼±¦Å@Uġ¦ʟƽ¼ÞĢÒm¤êō°¦Èþlk¼ĊŰ°JĢńȁĬ°żnÇbVÝ¼@¼óĸţ¤@°Ånl"],
					encodeOffsets: [
						[122412, 48482]
					]
				}
			}, {
				type: "Feature",
				id: "1502",
				properties: {
					name: "包头市",
					cp: [110.3467, 41.4899],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@źxżĀǔÆǬVȘĀŤ¥ÅƾōôˁʈͳȂŃÈIÜŻ¯ī¯ōm¯ɱĖ¯ķÒÝIÝ»ÅVlÅôÑġğVmÞnnWçkWÜXƝÆwU»Șĕ£ĉÑğ±±ÅkK@lÅIōÒUWIÇ¼¯@mka²l¯ǫnǫ±¯zkÝVķUôl²ô°ŎwŦxĶĠk¦±ê¯@Ý°U°bóŤ@°bôlôǩbŎƏȎĊĖÞ¼êƨÝĊ"],
					encodeOffsets: [
						[112017, 43465]
					]
				}
			}, {
				type: "Feature",
				id: "1501",
				properties: {
					name: "呼和浩特市",
					cp: [111.4124, 40.4901],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ʶUĊ¥ÈřĠ¯ĉômīÑ¯mwk¯ÇV°ÑżġĊǉǓɱţǓƝóX¯ɛÒóa@nÝÆôƜŚĉĢʉŰĊÒ¤ȗĖV¼ÅxWƞÛlXXèmÝmUnĠĢóÒkÆÆUÞ¼ÞJĸÑ°ɲĕ°Ŏn"],
					encodeOffsets: [
						[114098, 42312]
					]
				}
			}, {
				type: "Feature",
				id: "1503",
				properties: {
					name: "乌海市",
					cp: [106.886, 39.4739],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Ș°ÇīXŃŗ@ȍlkƒlUŁ±īĵKō¼VÇôXĸ¯@ťê°źk¤x@Ĭ"],
					encodeOffsets: [
						[109317, 40799]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/ning_xia_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "6403",
				properties: {
					name: "吴忠市",
					cp: [106.853, 37.3755],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nLV@VLaÞbn@@l@bUVlUVzVx¤kÞVèXn@nm°a@UÑ@VXnV@VaUVKUUU@@U@@KVa@U²@wXkWnk±lLnU@UmmVKnIVWnI@UK@UK@@UVKXkmWLWUXmlkVwUyVa@ww@aVIK@aVÈwKlLVV@LnVVVnUÜ²°WÈIUÆ@nÞ¼@¦@UÞUVW@UxUxVnbKb¯ÞU`VbǬV@XXÆVVl°InmnUô°¯anam£WVXKXmkôaVU@Vak@@wman@K@UÛUWKXUÇ@UIb@alW@akLUKV@@Ukw±InL@kmwkWmk@JUIůVmnnU@m@UKVKlkUwknVUKmbkI±KkmVkKb@U@aVkUmn`kIlaUK@UUKmbUIÝUa@mUa@am@UUULUK@bmKkbWI@WXwlkXWa@k@kKLVkkK@L@JUVmzUKlwUUnW£XVlKUwVU@aXI@aWaUw@W@_nam@¯UkWVkUWaU@nwmJkUVkWVUmUkJ@ImbUa@@WÅ_mJknmak@@mXaUV@xU@@VUnkV@Vn@`ULUbWLXVW@kbUJ@XW`@nÅĖWJ@m°@xxbnUaw²lÞ°xŤIVVULÛWbbkVVXÆ`UbVL@kx°LlV@VWbJn@bl¤ULV°@lmL@£U@@aUwmKULVxUVVx@@kU@mK¯LÇa¯@"],
					encodeOffsets: [
						[108124, 38605]
					]
				}
			}, {
				type: "Feature",
				id: "6405",
				properties: {
					name: "中卫市",
					cp: [105.4028, 36.9525],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@°@Èb°KnL@lV@@UwVUUwVKnLVx@bV@¤@nK@k¯UVKk£@amIXa@UkU¯Klw@UKVaÅ_UWlUaXaÜVKUUţJ¯wÝ±kxVbmaw@wn¯@XIÆĕm@X_@WVIlaX@WUXKVaVK@_Um@lUVm@U@Vw@VUÛwm@@W@ImKUkU@UaaX@wWaUKkw@UVaUamLUnk@»±`¯@kW@UaykbI@VWJkLWUkJwU@n¤mL¯wm@Um²XVWbnV@bmxVkxUblLUV@kVWKU¼kU@mn@JnV@bUnmJUn@k@XlxLVVnKlLVV@@LkKULVbk`WL@lkXW@kV@UÞUlÇXlkaUbmV¯@@L@V@bkb@xlWbbW@±@UJ@IU@mVkVxV@@lIlln@Vm@VUbl@JLmKÛXmVkUKULU`@LĉwKUXlVUl@VbJX¦̼bÞxŎxɜĖĠŎaô@"],
					encodeOffsets: [
						[108124, 38605]
					]
				}
			}, {
				type: "Feature",
				id: "6404",
				properties: {
					name: "固原市",
					cp: [106.1389, 35.9363],
					childNum: 6
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@Vnn@°xnK£mV@xlIXVlKXI@UJlazVbX@l°@²_@¼mlVnKVbUb@VlxVLXb@xWbVbV@VlnL@J@Xn@ÜxbW@nl@nblmnIÆ`@X@Vbna@aVUUWVk@kbWakbU@VwW@_l@nmn@@alVlk@UkmVak@@aUXaL@¯@KVa@axWI@KnkVaVJn_lJ@X@m@nVanUVb@mXLlJVWnLlaVVaVX@KXVVkVKlknKVa@aVU@KXb@klJUknUm@K@_UW@alIUamaU¯kJma@IUK@U@@UW@@aXLVVJVaXIKlaUkUV@ambUUJkIWJ@wUIV@JU@UwV@@Um@nU`@UkUmVUxWUUV@aÅb@aWXkKUUUUaWK@wnm@IVU@aXwm@UmVaUalk@anKUwlUwlkK@wmaUkmmIk@VmkUUbW@UVUnW@kV@xkVmbVnU@UbUV@ak@kkW@kLW¤@nV@VU@W_UVUU`VLUV@IUVõVULU@UUUJ@wmkUJ@WI@l@bkKkbVVbVbUL@UUJ@Vm@@L@xbVVVLVlVwX@Vb@bmUkbk@@JWIUVÅw@Km@UkWKXxWLÅ@UVUnWK@xkVW@KULwWVXVWzXVVKVXkVV@VUbV@UVV@@LXxVL@VbLnKVLVxXVmb@l"],
						["@@@J@aU@LWK¯UUxVVn@ĠLUW@UbUUUa@KUX"]
					],
					encodeOffsets: [
						[
							[108023, 37052]
						],
						[
							[108541, 36299]
						]
					]
				}
			}, {
				type: "Feature",
				id: "6401",
				properties: {
					name: "银川市",
					cp: [106.3586, 38.1775],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@UwVK@UVWÞUbwV@knV@@KU_VK@Kn@W_XWlL@Vn@Ċw@Ula@Wanamī@a»ŋó@aÆÅɲÿUaV_°ÝaLaUmVwVwX@VUVÝ@@¥Ý»@mVÅÇJ¯XÛ±VUmUmU@KUUkKLÇxU@bLUJ@bx@xUbVzUxklWnXVKnXWlUL@V@VL@VL@mJUXmJULnn@VmVkK²mlXWlx±@@VUb@L@@VV@VVULVUbU@WmU@Ò@V¯bmn@V@lVnUnVWXVl@¦VVUn@x@XL@¦lXxVb"],
					encodeOffsets: [
						[108563, 39803]
					]
				}
			}, {
				type: "Feature",
				id: "6402",
				properties: {
					name: "石嘴山市",
					cp: [106.4795, 39.0015],
					childNum: 2
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@U¯ķó±ÇÛ¯ķmbXb@kb@Vĉxm@@UkKWXX`m@@LULV`@L@mU@lUxaÝVUX@VULxVkLWV@JnVLXVlUV@zlVL@V@bn@lU²WVLlLVbUVxUx@xǀLxôÒkK²VaU@wXa@WÈĉUa@bÈkm@¯"],
					encodeOffsets: [
						[109542, 39938]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/qing_hai_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "6328",
				properties: {
					name: "海西蒙古族藏族自治州",
					cp: [94.9768, 37.1118],
					childNum: 7
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@V£°@laXô±źwô@UlżaÜnKw@Uaa²LmÈLÆÈxlaUawÞmÜbÞUnJ°akôÑkwÝVğwÇ@ÝkkV¯¥@ò»nŤ¥XImw@mVwa@ÅwmLkaWw¥l»kçó»@WÑĉğ@ĉŃUwóřVómĵ»Ý@VǕ¯kÝĊÅk°ÓUklkU±IÇÞk±@ƽJ@UġIk@W¦VÑșÓÅnťKULn¯X@¯mUÛ@WÅmóKknōbxÝ@U@kw@ÿÇLţÝUkmwklċVÅU¦LkUWlÅÑ@a@ÅÑ±UóġŹ¼ÈĉmŻ@@wkwKl¯Uġ@lÇUÓ¯_Waĉ²Åló¼VbknKÇÅ@ƧĢō°Ý@ğWÅxUUm@ÝXÛWULUè¯@mbUaLbUWġxIUJWza¯by@ōÈóLU`ÇXUlUĉV¯nmÛbǕLklUĉVóaġƏbġKţnkbÝmmnÝWȭÈÝXţWókUÇl¯U¯ġUɅĀ@°¯¯VÆnmJ@ĊķnóJUbÝXUlVkL@lVxnnmb@¤Vz`ÞÞŤ@VnÆJV°bUôJkzlkl@²ó@ÆÇ°kĖÇbÛU@lmbXVkzVɅĀXˢlńĬŹ@éÅ@ĉńÆ°ğbUlɜ_°@xŦkbVbƒKĢŤVŎ°@żÈźlĊôKôb@nôxŦÆ@ôŎL@þÆb@nnWˌbÈxInaŎxlU@Ñ²±ğVUĢƨbɲ@Þ¥ôUUķWVô¯ĊWʶnôaŤˁ@£nmnIôǪK°xUXô@Ŧa°mkXÆÞVŎkĊ°ÞLÈôyVaIlwX°UVwĢÑÜKôw@nV@m°nmnÜɞ£VbmXn°ÜÒ@xx@Vb²UlbkxVnJUnVVĊ°KČm°nxÇnn¤±¦@UXVV@lVbmVVÈVxÒ°IbźaČbVw@VLƾÑ@Ŧô¯ĊkôÑ"],
						["@@@@nòVaw²bVxxÜaČVô_ĊJIVmLa°@Ŏ¥XlK@klKVbUb@nUĢnaÈ@lmǬ»Ġ¯nmnƨVyÑǖĠ»ɲIn@@ÅĢƳ@¯°ôVKÈbVIÇ¥¯@Ýó@ÑnīWKkk@¥¯ÅaX±VÅw@±Ġ¯@»nWmw@@¯VUUWçKĉa±VkkV¯wx@UJx@bknÇbmÅ@Uw±U¯¦UKm¯I¯ť¼ğĊ@ÇŹÈ¯@Ý»ÇnˡJbÛèÇnÅK¯ġĠŹW¼Ålm@¤n²Ýb@b¯l¯@Å¤W¼nV@x°@Vx@lbUblbX¼WÇ²lU@¼V¦@bÇlVxUbVxÞbVbm¦VV"]
					],
					encodeOffsets: [
						[
							[100452, 39719]
						],
						[
							[91980, 35742]
						]
					]
				}
			}, {
				type: "Feature",
				id: "6327",
				properties: {
					name: "玉树藏族自治州",
					cp: [93.5925, 33.9368],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ɆÿĢV°°VÈklVôŤXÞWȮÇÞXnmÞnlaŤmĢLƐaĢôbĊUVlkǖKÜan°mĊUVVkÈWV_ôKŎÇ@z°abXyVIJĢwVXaKVbna°@VçVKXÜÞWn@VVÆwXĠÞ@Ŏ¯ƨġÆ@ÈLlmUaô»ÆkĊ±Xb°`ÔVkÈĢ@Vk°Llx@xż@ĊnÇź»ôĢ²VÆÒ@@bÆÒXklVKV¥ÆČUklnxlç¥ċç@±m¥wÅJ@VmÈIléÈa°U¥@kÞVK²ÑW°w²ÑK²ñyÆÝVmw»kkWĉJWUVÅwLmÅ@@mwkn¥VÑ»°°@@»¯LlaJônVUÅ¯U@W¯UmÑ¯¯k@WykU@¯wV¥kVwţk»wWÇĉĶçKÞÇaĉbIlU@kwWXU°w±@UKn£WĉKWxkĕVamwXw@Wmnk@aVkbĉLlImmwUÇWxnÝJn@¥ÆkwaXÜĉ¯ÅV¯¤mkx¯kķÜ²VWôŹVU@V£¥@°wn@m@¯@UbUôķmn@ÆÛ@ÇýVaUÇĊV@Çlğ¯xÝŤlVÈÈVx¤VxkK@@x@kVĖġ¥kIWbXŎx@nxÅUW`_@±UaLUxK¯WbkVlbbmLÛÆWIUwWkwÝV@kIéUbUUkV¯Km¯k@UmÝ¯m¯mLÞĉÛUmġ£UxkKm°Lwk@kVmKVUk@¯a¯ĢmóKUUxImlÅnÇbXèVVU°@@xXnm@¼ğ°@²ÆxU²WÆb°@¦llXLmĬ@ÒÞô°@È¦UJÇaLóU¯@°ġƴ@Æ@mɱJğ¼ǕÒUzƧmnmğ°ǫ¼knÇ@bġmmV@VaUaLkl@kLWō¦¯@bKUnJĉIó`ċUÛbwUw±axbñUm@@babÇÅXmƒÝÅôVbÞblUÞVÞU°VUx@UV@l`¼nL@ĊLW¤kXķWġXUVVVķUbVb@°kVVxÈa@Č¦ĊbaźJU@ÈVl@XkôaWĢÞ@laĸUÆb²mÞLĠÞÑôbÒĊaJVbm¦"],
					encodeOffsets: [
						[93285, 37030]
					]
				}
			}, {
				type: "Feature",
				id: "6326",
				properties: {
					name: "果洛藏族自治州",
					cp: [99.3823, 34.0466],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ÞVŤÈK@ĀlxV@Þ@wŎalmôLnXÆÜ@nV°@°WmVKŦLÆmȚÔÒUX¥l@ĢJV@ƾI@wW°Ån¥kÅÝVwôÈç@lÑĊĕaJnaÆLVw°kny°UnkÆVČĊll¦Vƾ@@nUźÈÇIn°XwÞKô¦VWV£@£°ókċ±Iam¯Va»ČĉV¥°@mk¥l@Ċm@aUmwX@wÆxmĢ_`VnÆbKVw@@nUVğVmVVöIll@@çÛm£UÇw°@VU¯»m¯JōĖÅLa@»ĉĢ±`U_k`ÇçókXlK@akÝÞ£WċkÝkxJÝ¯ÅwxķxmIÅx@k±J@ýŋ¤UkmV°ÅÝxkwmġnÝVU¦ŤlmóXk¤UKç@mVkK@klī£m¯VUbW¯¼ċb¯ĵam¼mVXm@k¤ÇXÇbU¯J¯¯È@bVXVÒ¤V¼kxÝV@lVWxÛ¦W¯mKnlkU@nƑUĉÝ@ÇºÛċUĉ¥UÞÅz±òL±Ò¯xX±ÒLÝU@lV¦¯ÇbkêÇJnU@ÆIxn¦@²Čè¦è"],
					encodeOffsets: [
						[99709, 36130]
					]
				}
			}, {
				type: "Feature",
				id: "6325",
				properties: {
					name: "海南藏族自治州",
					cp: [100.3711, 35.9418],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Vxń@ĊĠĊXÒ°UƾĕÞm°£nb@@LUUWÛº@nlÆǬĠ£ÞV°UXbVȂǵé@kWanm°@xzK°¯ĠVVkwLnm°kÞxÆa¥@wnĉÆ@_l_VwmĸèŤÅČU@Wn@ÑmKUnğK@°¯UÿV£nmLlUUÛé±óókkmnakV@Ç°óÝXWəÞťIţxmmVÛUVȂÓnWyȁĉkV°WnkĊa¥_K°ÿWna@mU¯wlÝIU¤UXó¥ÝLx¯WmJÇÈŹmV@ƽ@Uk¥ĉkċÅUml¯Vmz¯lUxÅKmbIbĉĖkÒ@ÇèóUxÆÞlm¦Æ¯X@x@²ÝlÈJV²klVl¯ÔlĉÆÞ°lUǖÞ@Ķ¼nUôôŚ"],
					encodeOffsets: [
						[101712, 37632]
					]
				}
			}, {
				type: "Feature",
				id: "6322",
				properties: {
					name: "海北藏族自治州",
					cp: [100.3711, 37.9138],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ōmġxƽUm±LǿþġÔ@kxmWb¯I¯mIUx@bbŹVÇkĵblĉI¯¥Um@Æ¯È@aóUlČ»@w»wXaó°ţçÝkUaV¥ÅbÝw¯lmnKlxUğU¯°Lyw¯@mnXbl@êȁǶUWa¯VÝUğ¤ǫkÅ@mÜ¹XVV@K@ma¯¤ÝnƽĖ¯V@¼ôlèk¼¦xXlbnKÆx@bUx@nnxWJţ¦m¼ñ@°¦lUÞlÈ@ĠxÞUlxÒól¯bmIÝVÛaÝnxVbkbÇwÅÇKn±Kbb@VxLmÛŻbkVó@Źxó²Wkb@¯U¤źĊ@lUX°lÆôUlLXaV°wxUb°xÜôÈKVkÈmlwkÈKwKVUŤĉŎ»»Il¥na°LV»²¯Üy@wĢ°ĸwlwĢw°±_lVk@°bÆ¯z@l_@Ģ±lÅVlUaÞLVnKlnÈ°IllČawÞÑ°xUU@wVkmĠLô»KÞýôaÞ¥ôĀÞmÆmUŎV¥Èl°²°a²¥V@@wamm@Ñn@Æ£żVĠ£@W¯Þl@»@Uk@"],
					encodeOffsets: [
						[105087, 37992]
					]
				}
			}, {
				type: "Feature",
				id: "6323",
				properties: {
					name: "黄南藏族自治州",
					cp: [101.5686, 35.1178],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ôl²ôÜêVVkKmnU¤VĀ¯°@LmĠVnLÈL@alb@al@n°V_XmWUÈamaVIn@naV£óVWU£°axÈ¥@aĊwÈ¹@óağbm@kw@maÆw@In¯mm@UkkWÑÅ@@kċÅçVkÝJÅkVykŹl¥@¯ĢUÜX¥òýmmXÝÅlmU@£WlyXW»Åbl@aI»k@klm@UxUUV¼¯XlaUnķI@x@¯KĉUU`ólČ¯ô@¤ÞJk°xVn@mbX¯ĀL`¦ĉbml¯XUlȂĊXzmȁÔUÜVUnnŤwŦJɚÝXÞW¯ô@ÈlUbmln"],
					encodeOffsets: [
						[103984, 36344]
					]
				}
			}, {
				type: "Feature",
				id: "6321",
				properties: {
					name: "海东地区",
					cp: [102.3706, 36.2988],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@Òb¤ÆI°ôU¼°UnnWx@b¯L@lUUWbXxWlƨnxVUllXVUnL@lȀý²KVnƾĢwV»@mÞ£nÆÞÑmLKUaVżĕWVk²ÆÝ@Xw°@ô@a°wóUUmIkaVmÞwmkny¹VÿƧnÅm£X»naV±Ýw@ab@am¯ĉVó¦kÝWKUU@WanUb@ôÇºĉxb@Ç¦w¯bV¤UXôU¤bmm@UJnbÇbXVWn`¯Umk@@bka@bÇK"],
					encodeOffsets: [
						[104108, 37030]
					]
				}
			}, {
				type: "Feature",
				id: "6301",
				properties: {
					name: "西宁市",
					cp: [101.4038, 36.8207],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@kmKVUWkVkUmwƧXkWwXaVV@k°K@aXwmmV¯V»¯óÅJ£amX@ċVţÆķçnUx`k`@ÅmĊx@¦U¦blVÞŤèô¯Wbx¼@xċ¼kVôbÇ@Å°@nV°¦ĊJkĶalÈźUa@aVwnJ°°JanXlw@ĢÓ"],
					encodeOffsets: [
						[104356, 38042]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/shang_hai_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "310230",
				properties: {
					name: "崇明县",
					cp: [121.5637, 31.5383],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@uŏu»GPIV±ÐɃŜ{\\qJmC[W\\t¾ÕjÕpnÃ±Â|ěÔe`² nZzZ~V|B^IpUbU{bs\\a\\OvQKªsMň£RAhQĤlA`GĂA@ĥWĝO"],
					encodeOffsets: [
						[124908, 32105]
					]
				}
			}, {
				type: "Feature",
				id: "310119",
				properties: {
					name: "南汇区",
					cp: [121.8755, 30.954],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@`yĉNǕDwǏ»ÖLxCdJ`HB@LBTD@CPFXANC@@PGBKNECCBB@EBFHEDDDSNKAUNBDMNqf[HcDCCcF@EFGLEBa@ACoCCDDD@LGHD@DJFBBJED@BGAEGGFKIGDBDLBAD@FHBEF@RFDMLE@SGANFFJBANPH@@E@FJjRIACDMDOEKLFD@DbDAJI@AP@BGHFBCBGDCC@DCA@CECGH@FKCEHFJGBFDIHACEDNJDCVFBDCRKRLDLITB@CjNJI^DBCfNVDHDFKHAFGDIICDWBIF@@CFAjFJNJBBHD@CJ@AEFJ@@DH@BFBCPDBMFEQGDIFCNDHIP@HDABFACBJFHEBSZC@DP@@JDBƤ~"],
					encodeOffsets: [
						[124854, 31907]
					]
				}
			}, {
				type: "Feature",
				id: "310120",
				properties: {
					name: "奉贤区",
					cp: [121.5747, 30.8475],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@~T~JjZdDbLXDLCB_J@@FHFZJJIAGH@HGR@BENBLID@@LFCDF\\FpDBDb@FAHKFE@dEDDdC\\GreNMACVMLBTMCCFCEGFAA@DAFDLMHA@OD@BMEWDOC@AS@KGAI_DcKwÕísƝåĆctKbMBQ@EGEBEJ@@MBKL@BJB@FIBGKE@ABG@@FMFCPL@AjCD@ZOFCJIDICIlKJHNGJALH@@FPDCTJDGDBNCn"],
					encodeOffsets: [
						[124274, 31722]
					]
				}
			}, {
				type: "Feature",
				id: "310115",
				properties: {
					name: "浦东新区",
					cp: [121.6928, 31.2561],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@EN@JJLNHjLJNR^GRYVBNZJRBV@PDvbLNDN@LGNER@nCNQNuT_TIVFV\\Z\\XnDrI|[Ʉś²ÏJUHOƣ}CA@IO@@CYDATGFIEDAEBBAGCO@GJMCEDCJRHEFANOCADAEG@@CI@FE@BDIC@AGIAIMiEEB@DE@AJCXJDCJEHGBELGCUCeMAD]CIJiM@DSAKJKCLQDQACUECDMIFCBDJGECHAEIWCK@GLMCCGEACNKCEJG@MMBMC@@CIJUINT@JAJSTEPZZCP"],
					encodeOffsets: [
						[124383, 31915]
					]
				}
			}, {
				type: "Feature",
				id: "310116",
				properties: {
					name: "金山区",
					cp: [121.2657, 30.8112],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@L@BIHFN@@EE@@EFBDGDAADVDD@@EF@CA@IIsRE@GDAF@BF@CV@|FBCHBLCNHAFCADBMDCFZXHILBVEEQA@MWFARJJ@DCX@@TEFBLHAAERE@AJABRPBNK\\BrJ\\VHGND@CNADKDADQjGAGNC@GJ@FCFFHC@JF@@dLBDSFADHVG\\DTEPDDHJALIJkJDJCDIPE@YDCBiK@DONE@EH@BAF@HLJA@EIA@ALKNA@@FIFAFHR@NALadsæąyQY@A±DŉXUVI^BF@FFF@HBJEDFFGFEBSRkVEXGHFBMFIVW@GAEEFOIAIPKABGWEKFSCQLQBSEIBC\\FdBLRR@JGACFDDEF@AWB@LJJYNABBA@CUEGPaO_AIE@MYMFIGAEFECHSAAKAO\\[JEDB@E@MMA@@AGBKMGDFFCDDFEDFJF@NPBAFLHFH@EDDHBADDC@DDCDHHCDDFDABDAD@FEFOBCJ[D@HEDDNJBDDHABJIBBvGLBJAH"],
					encodeOffsets: [
						[123901, 31695]
					]
				}
			}, {
				type: "Feature",
				id: "310118",
				properties: {
					name: "青浦区",
					cp: [121.1751, 31.1909],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@RUNKdOFDJCbRFMLAHPLDN@JGL@@APBWYCKN@TU@SHGCEJIDIJKVIZVNM`iNY@CIE@CA@KBOEGEUFCCSADEIEFCDDDIDDHC@CKIeDCG@IG@DHWFEEGCH@@GO@@O]CNpeEQDBFME[JC]DGF@CKOA@QSB@GB@@GW@@ED@AQIJIAAFE@@DO@CFI@KNG@CDACAFEGKGBEGBDCCAIFCCLIECFI@MBCLDHGNAHSF@DMB@EEKBA@@C]DEICFG@ADBHGFKCDAKKHKD@@FHGAANGEEFCHKCECBCKG@ADKCNE\\[A[I@@mGBDQQEO@BCE@AI[AML@JGACLOAFKEMM@EQKC@CUCBCCBCHEA@FF@@FM@GEAJK@GNF@EXPH@FD@M^@HIADJCFDBER@DK@@DE@CAKFOCCBDHIBCNSB@GFC@GQEEOWFICGDUAEJIDBTAHJHEB@DIF@NE@H|HBDBEH@DKBAHEF@HEEUB@FGFGCCCE@AHOB@NH@PRLVNNFBX@RCPbAvMtBfH@DJF@ELBFA@EH@HNED@FFB@HLC@CJ@@DJ@PIRf@HE@CFF@GPHD@DKE@FFBEFFD@DEFCA@DD@IjCRFBAHFDKD@HF@@PM@H@BlbDJDBFEF@DLXB@HCD@@IFCBIFEJD@FDC@FBALLF@PAACJERACAJCBD@EL@JD"],
					encodeOffsets: [
						[124061, 32028]
					]
				}
			}, {
				type: "Feature",
				id: "310117",
				properties: {
					name: "松江区",
					cp: [121.1984, 31.0268],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@DLDFRN@FNELPBDKHB@INK\\BBJF@ADP@RFCRHA@nJ@B\\[\\MFLDBCH@DLDADFGLEDFFMHBBGH@EC@GLLLCBLDHEAGBCH@DEFJ^C@DB@LAFFA@CNE@GTMBGHKCAD@NEJFDKJDDJEDBCDHAAFLHFHBEBDDCH@LMJ@DEP@@CF@BEJBJIBRC@@FX@@HA@@HTA@RPBDLE@CHD^\\INFAERCfFMo^D@PP@@HG@HDFFXECGH@@JDHfCLJ@DGDCCCJCCEDJFCFTBDDVEHFPFLAB@NBFCFKFC@CHIACNOHWHCAAFIDD@CDAGEI@ACFMF@R@R_@GQED@EGFEQEDE_IAHKAEXCQUOQCUDEN@ZI\\DDmAMHCICDSOC@EG@BKHIGMIBCGOCSF[CUHCGEBCTKA@cE@@IGDEEEDI@@HMDBHiHCRCBCLMB@DMCGH[UqI[AMLOAAQIB@BQFBFGBAKFE@SW@CDI@QIEBNXB@FRUFKAGJYWDENCCADBBEMGKDGAAD{EU@@DAEE@CB@HQFJt@JDBE@@FC@"],
					encodeOffsets: [
						[123933, 31687]
					]
				}
			}, {
				type: "Feature",
				id: "310114",
				properties: {
					name: "嘉定区",
					cp: [121.2437, 31.3625],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@F@LI@IDKJADKIEJICADGACFECCJ@HKCAFOHAJI@aCBEE@ICAEB[GFGCKL@FGEIFADMLCAEJM@ELQECEIG@BE^QKKLQCA@EHBIGQ[GEHOMGGDHKH@JOECFCjCBEFDNCACMBCILGTABDLEEOEIG@GFIMM@CGKFBFCDE@@GEAGEEACIcGaHMFITIHDN[AKF@FS@OA@BK@IHM@KCGOKBENaQIDECcPMLQVFHFB@BFBKLGD@FAJOVGIACQ@A`LPCB@JEF@RU@ANS@@RCL\\HIFpRBFRBBDKLLDADJDGBFDABHBEDNF@DGBBBADKDAHC@\\JJFBDEH[DEFDH\\LX@XLBLbT@DNJLDCEL@VJABJNDHB@HBHYFBAA@GNFB@@AFB@AFABFLFBHFCL@HJBAFBLC@DN@HN"],
					encodeOffsets: [
						[124213, 32254]
					]
				}
			}, {
				type: "Feature",
				id: "310113",
				properties: {
					name: "宝山区",
					cp: [121.4346, 31.4051],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@mÖoÖi½[s[YEUJU`SCIEBCCWJY_LIICDWU@@FaBCJIB[ICH[@@CDKEE@MK@@IMCAEBCH@AMFI@SMGEFGB@FK@BHCAIFJNQD@FEBDFMBKGACG@ECWH@@CDDTOEEBGEK@GC@EE@GPHFR\\JHGA@FDBKRLL]RAFH@FJFDKR@FINBFKDCNEBFJEHK@DLEH\\HFADB@JFFDA@bIJGBEPDBGLI@DDEFBDCHDBIJJFCLIBCL@JKJE@ADHDBHJ@HIBBDFHBBAEIJ@BJFAVL¢"],
					encodeOffsets: [
						[124300, 32302]
					]
				}
			}, {
				type: "Feature",
				id: "310112",
				properties: {
					name: "闵行区",
					cp: [121.4992, 31.0838],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@T@@ELE\\BCMJGJSNEbGdHDJFBJAFIEIFCEWG@@gMENSFCVJFAxR~B@IH@AIiI@GE@FGEAFQPDRiV[\\DFSGMHAXHDOMCJCDETBBNVJJI@DD@ANNNH@FILDDMFBDHNDHKL@XDFGLD@EHGFD@DDB@CDDHCDAEAHG@ABOJ@BIaC@CECLKPFNCDCJBiQEIF@@@OGBMIAEEBMTHF@NKEC@QFEGA@EBCKAACHCLJHEFHHB@AFCAIEACIC@HG@KCCDC[ECEED@KC@KJMAAFQ@GHG@BHIJYIGE@EI@A`KDWCaKcCiY}I}S[CYJM@CFDVPRRVWDFLBBG`JCFRFEFFHC@RF@HQ`Q@E@ENBDJ@HFCB@DCCEJBBGDGXMPBDGJ@DEDELEDMA@DJF@DMZ_jMNYUUJILCJIJDFGH@TSVM@DLXZ"],
					encodeOffsets: [
						[124165, 32010]
					]
				}
			}, {
				type: "Feature",
				id: "310110",
				properties: {
					name: "杨浦区",
					cp: [121.528, 31.2966],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@V@CXJDKJZ`XIDDFADJvSRMDM@mFQHM@KCMKMuaOCU@BDAJSX@HKJGD@PNJCJWAGT@R"],
					encodeOffsets: [
						[124402, 32064]
					]
				}
			}, {
				type: "Feature",
				id: "310107",
				properties: {
					name: "普陀区",
					cp: [121.3879, 31.2602],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@F@@FHDL@HFFAPFCSDC@@XGFDH@BDLHNACEFA@ERCIMJEDBAGL@@EHAFENHHJ\\ONQBQCIBC[MKACKI@GGGH@I_G@CW@[DMHCDIBMTDHN@JNHEH@FJFPKFACSBKHDJNABDMDECAFiDEDFDIPG@GLHCNH"],
					encodeOffsets: [
						[124248, 32045]
					]
				}
			}, {
				type: "Feature",
				id: "310104",
				properties: {
					name: "徐汇区",
					cp: [121.4333, 31.1607],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@RADL\\NCPHFfLJaJ@FWLGMGIK@IFMDOYYFOTSBI@IMSAMSACFIDNDCPWGGBHNET[CU\\QjOCERFBEHF@@HjJBJG@@J"],
					encodeOffsets: [
						[124327, 31941]
					]
				}
			}, {
				type: "Feature",
				id: "310105",
				properties: {
					name: "长宁区",
					cp: [121.3852, 31.2115],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@HFFB@HF@DCAELENSJADCNG\\CX@@D`H@JHGHHJ@BINBFUGEDO[MCKQB}AwQEBUIEDMTNF@hH@FXEDFJEJIB"],
					encodeOffsets: [
						[124250, 31987]
					]
				}
			}, {
				type: "Feature",
				id: "310108",
				properties: {
					name: "闸北区",
					cp: [121.4511, 31.2794],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@CSG@BQGODUPWTOBQAAFMECKBGEMFKEOHADDJARMR[PGI@TEJBNG@ADBFND@JL@@NFFCL@D\\@DG\\JJADI"],
					encodeOffsets: [
						[124385, 32068]
					]
				}
			}, {
				type: "Feature",
				id: "310109",
				properties: {
					name: "虹口区",
					cp: [121.4882, 31.2788],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@bA@E@QHSXBDIMI@OHCLI@GTWBIACQAYIOFGCENBBARSPOXCVHPARH@DT"],
					encodeOffsets: [
						[124385, 32068]
					]
				}
			}, {
				type: "Feature",
				id: "310101",
				properties: {
					name: "黄浦区",
					cp: [121.4868, 31.219],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@NEHFLAFDHDPEAMZUHQQ]IMKJG@EPERABHBGRUCCNGV"],
					encodeOffsets: [
						[124379, 31992]
					]
				}
			}, {
				type: "Feature",
				id: "310103",
				properties: {
					name: "卢湾区",
					cp: [121.4758, 31.2074],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VDHQGABAFQFOH@LIiKKHEXI@IbAFZB"],
					encodeOffsets: [
						[124385, 31974]
					]
				}
			}, {
				type: "Feature",
				id: "310106",
				properties: {
					name: "静安区",
					cp: [121.4484, 31.2286],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@DLLB\\NPGLFHUDMYABEeKEVMAAJ"],
					encodeOffsets: [
						[124343, 31979]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/shan_dong_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "3706",
				properties: {
					name: "烟台市",
					cp: [120.7397, 37.5128],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ŤLLllVń²è°xżĢĠÆlÒŤbV¤ĊXnlĢVĊÒÈ°ĊŰÞèL±@џn»VUźċ²»ÆkôVɆkĊŃ²kŤVVwUUVmUa@KkU@mUmmk@UwUkmW@UVIXa@mw@aKULax@Uk@UbWU@yULmK¯@kXVUwm@@JUUknWKUVLUbU@wWykIa@w@mUI@aUVynIWak@@Wbl@@knmK@wnIl°Kna@V¥ğ@ġUķ»¥@UōJX¯¤k@wmI¯k@mwak@@lX@bUJ@VbknWxkLkxlLVlkLmb@bU@bU@VbU`Vb@nL@mbU@VnUVmnU@mm@kIUWVIUKVkkUJUnmL@VmLUaVWaXamU@U@KUUmVUJUVÇwğnm@mXĉV@l¯xnô"],
					encodeOffsets: [
						[122446, 38042]
					]
				}
			}, {
				type: "Feature",
				id: "3713",
				properties: {
					name: "临沂市",
					cp: [118.3118, 35.2936],
					childNum: 10
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@bXll@zlV@lXXmkbVVlU@Vn@@Vmb@XKVXWJ@XXl@ÈbVLUl`@XXV@VVUxVbUxVb¦@WnXVJ@bnVUzl@°ÆxUKlU@mUUnUlUVWVUnVV@XX°V@Vll@VkaXVl@Ux@bmbXLlKlb@b@bUJn@@b@n°x°K@an@@UlLVKVbXb@bVVnK°LVa@UVa@XwKVxnLU°@naV@UWUkWULmVwÝKUUla@aó_@mK@aUU@WUkwVm@aVI°W@@IUw@a±¯@¥kUVUm@awkw@K@kVKk@maXalI@alLWXblaVLVUV@LnK@l@waXaLlnUlLmV@n°J@_VmnIVym£UKmI@WnIVm@anUVmÇ_kġIÅWUXÇm@U@Ý¯Å@@naWIVW@IkK@klKn@naWImk@abkKkLWnWkLWmk_@UaVUKmLUw@mn£WwUmUaóV@UkUm@UKULUwmJUX@WW@XÒzVblJXWXk@UVWKX¤UL@xU@@VUaU@@XmVkLmWkXUyÝLmKXnV@n@lx@bWLnVVn`knULmxUlWLXVb@VK@z¯x¯¼WxKUn@bk@lVVVz"],
					encodeOffsets: [
						[120241, 36119]
					]
				}
			}, {
				type: "Feature",
				id: "3707",
				properties: {
					name: "潍坊市",
					cp: [119.0918, 36.524],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@l@@UK@@L@bX@@VlL@JLUVnX@`ÜXn`V²mJ@bU@@nb@l°xnnĸVÆ°@Ċ£Þ@lWnÑnkʶJmó°w@kk»V@»¥k@V@kw@wVmaÅmaô£ŎXI@mlnKla@mV_UK@kUkw@alWIU»m@WUIl±UUÅUbkJ@a@wUKUaVIÆmXIWaka@m@Ul£XKVw@UIJUkmJVkU@aWKImV@UxmL@bX`WXU@U`ÇkUak@@°UblXkmLUKmL@VULóVk@@Vlbn@Ub@ċaUJUbIUlVLUVVbVKXVlVXU@mb¯@VmKUwLWx@Ub@VUb¯KmLUU@aWaUaULkK@Vm@@b¯L¯w@ma@m@UUU@U¦lJUXVmkb@nmXVWkbIVxUV@VUbWLXVLW`Ux@nk@Vn@x@VkJ@V`mXk@VxV@lVI@VULVUIV`°bVXXxV@VWVnL@xVUb"],
					encodeOffsets: [
						[121332, 37840]
					]
				}
			}, {
				type: "Feature",
				id: "3702",
				properties: {
					name: "青岛市",
					cp: [120.4651, 36.3373],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@nUJXL@blVUnIVlIVJ@UxWLk¤@V@nlbXbWJÅnUJVbVL@x@blIaÆVVVk²VJ@XnV¼JkX@blxlV@VLU`@nkbLkm@nWJōó¤bnÆbUn@xlxU@l@¦@¼Ul¼ĊUnW@nĠmÈxUVIVnUVV@LV@nVWbXbUVbnK@UnKVmVIllUVLUJVXlJ@nnV@nmVUUm@Vna@K@mUaV_UaV@aV@@aanlKUkKklwlKXwlma@UVI@akW@l@bnxl@°nJxl@°£WŎIUÑn»lamô¹Ŏ¥VaUUkmkġWɱIUUŹ`@kk@ĉƨřV¥_Ç@Ĭ¤ÝL¯m¯£ƽóķwUW±ī¯kōaĉĕkğmó°bW@UKkLUaVmz@V@UxVn"],
					encodeOffsets: [
						[122389, 36580]
					]
				}
			}, {
				type: "Feature",
				id: "3717",
				properties: {
					name: "菏泽市",
					cp: [115.6201, 35.2057],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@¥IVUÈmÞ»@UlU@Un@VW@UVmkk@aVUUKVÝ@UVknK@UV@VVnIV@wnmwmKXaWaXI@UV@Vy²blkVKkamU@kb@Um@VmUkmKmkXKWwkU@Ul@UnK@UVUUmKXwUVLwKU@@Wl@@wUkV¥@@I@W@_V@VWUw@UUa@aaWa@@_mKUwl¯amzmV@WKnU@kWLķaUKbÝVmV@UWÇbÛ@X°UbW@XmVlk²UJUbmLÇxÅWUzl¯Ll@VkKXUbWJ@bU@¯@kbLmKka@l_WXºVbUz@Jn²V@¤lXnV°Ln`WbXLôVlKVUxXnlXLlU@bVV@XJWLUVnVV@@nl°nnVKÈbVXÆJU°VnXVkV@@xVL@Wlb"],
					encodeOffsets: [
						[118654, 36726]
					]
				}
			}, {
				type: "Feature",
				id: "3708",
				properties: {
					name: "济宁市",
					cp: [116.8286, 35.3375],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nam_nKlVLXaIl`_@KVVXI@m@w@@k@Knô@n`VbV@@LL@KVVn@VX@VLJl@VUUU@Uam@UkwKWaXamkJmIUVUÈblaUnV@kVKl@@lXL°kVJ@VÈnVJUX@VLXl@xVLnU@VKV@aIUaV@bĊUxKkVJXUlVUVaI@WUI@KlUnwmWk@WXIWUL@Wna@Um@@UVkUUlanWW@kkU@ykWkaWVUlÝbUU@kJUIU@@JmaókLKÇUUkKWLk@WbkUUabmKn¯°¥V@XwV@VanaVaU_@Wlk@WÈ@VUÈVVÛmaklKÈ¯lLVUX@lK@aX@@kV@VmV@VwnJV_UWUwXam@kW@wVUkKVIUUVmU@UV@IVK@aUL@aV@LmUKmx@ômLkUWJ@nXmlUxUL@VknVUU@VL`Ub±LkV@kUKÇbÛ@UWó_mJ@Wk@@X@VLxUKVWxLVnUV@VmL@Vk@VlVXxWLnlLnVlUnn@@VlaV@nlbULkl±aUzU@@VWJXbWbnLnxm@xUmJUUU@@VmLUl@VUÞVLUV@bllUn@VUXm@@VkV@VÝ¼ÇnUVJ@¦nnlnVlL@Þb°KVV"],
					encodeOffsets: [
						[118834, 36844]
					]
				}
			}, {
				type: "Feature",
				id: "3714",
				properties: {
					name: "德州市",
					cp: [116.6858, 37.2107],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@¤@VmbVXnVVbVJX@ll@zlVInl@@bVxUbĠl@ÈblaIxXVWb@L@nULWVXXWWLnL@`@LUVVL@lVnJU@UUkanVôôb°¼VÞXIÜbČabôWXÞWÈzÆmnLVJ°ÈnlV²lbnW@@UUVmnwmkkKWkla@mVIUKUaaUwmnJU@@amIk@@bVlkX@mmUklUUa@_UaUUV@wwWkXmW@I@WUaÝU@UXaWUU@UUVW@UUUWUn¥nUVa@m@k@alU@wkLWa@UUm@@wnmUwla@anKn_@alK@Ý_@@WUUUmlkaIyU@UwU_Wa¯yU_mWUwkImm@InWWUk@@UVWVkW¯U@VL@b¯b@l±¦@VV@lUbV@kxVnUl¼XV@b@lV@nIWxnb@UULxÅxm¯aUwU@mUÅVÝKULm@bmKUXó@"],
					encodeOffsets: [
						[118542, 37801]
					]
				}
			}, {
				type: "Feature",
				id: "3716",
				properties: {
					name: "滨州市",
					cp: [117.8174, 37.4963],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Vb@`bVkVlnV@nlWUk@al@nJ@bV@InmVxbVbVLUJ@nkblXlLnlmxnUV@V@mXnlbĸ@nnVxb@lnXV@UJ@nVxxnxVbÆVn¯ƒĕ@@wÈçUÇlķVIb@Çmk@¥k@UkUK@aWakUóJW_UW@wkkWK@U@K@XUUkmUUalKXala@U@kkWlkÈl@kVmVIVmU_awnwVW@wwU@wU£wkJWIyUI±bkVUJ@nmVUklXmx@lnbWkVUkLWxkKUUmUkbJ±LÇxUKmkUmkkWamUaVkJÆ_²KĠ@UW@wU¥nUWwK@aÝUkÅVaVK@akLW¯I@bnbVx¯JWñWbUL@nV@VmbkUUV@IÇak@@bWak@WJUJWL@bXV@@VJlb@zUlUUImnbVmz@°UV@VbV@@V@L@xLmKUnmJVXJ@VkLW@UVUL@b"],
					encodeOffsets: [
						[120083, 38442]
					]
				}
			}, {
				type: "Feature",
				id: "3715",
				properties: {
					name: "聊城市",
					cp: [115.9167, 36.4032],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ô@VWnLan@VKÞLÆUnVV@xVbn°ÆwwKVV@maXwmJU@@k@aWUk»VUmlw@UVa@kUU@²¥@k°a@aK@UU@mmm@ówÑ±¥¯@@wKmwI¥kU¯UmakJmIUaVkKUkm@VUUaU@UaKUK¯@wUVUIUKVwk¥wbV@xn@lWnXxlL@`XlJX¦l°XxW¦@¦Uln@@@Um@@VXVmx@¯bllUnUJ@VULVn@bxVVL@bVlnVVblVÈnVlIVJLôlJ@xl²"],
					encodeOffsets: [
						[118542, 37801]
					]
				}
			}, {
				type: "Feature",
				id: "3705",
				properties: {
					name: "东营市",
					cp: [118.7073, 37.5513],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ͬUǪlô@°Uw°ōĠ¯»Ģç»XÇ@wwƑaÇkwVƑ¯@ÅķUmm¯w@ka@mV@@anIU±m_ÛW@_mWVUK@IkK@UW@@a@K@L@Vk@±U@UV@lm@mUU@kLmxV¤@xVx@xUXmxxbV`UnUJnU@lÇkkllX@l@VkbWbkLVbnVVlWV@@L@VXLll@xVXX`ôIlVXb@bVLVll@@¦nlÈ@aUJkĸVÈÇè@x"],
					encodeOffsets: [
						[121005, 39066]
					]
				}
			}, {
				type: "Feature",
				id: "3701",
				properties: {
					name: "济南市",
					cp: [117.1582, 36.8701],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@²¦Òôxn@nn@V°VlXUUX@Vl@XVmX@JnnlJVxnXV`°zXbV`VxV@zJlbkVnVV@X@`@ÞkL@bm`mL@bkbxnVm@xn@VV@XbKl@xkV@b@l@nUbmVm¦XVVV@VUXVVV@XVWb@VÞVVb@X@JnXlWXx@xUVV@aVKVUX@lK@UIUWnIVmnLK@w@K@UU@a@UVU@¯nyUmanVJVVk@ykaIU@@WU@aXKIVXIl@Xb@al@Èb@JVUlVna@UmU@VKXaòX°IUwma@aU@UU@wVW@Ñw@aI±`kbUkwUmJ@UkmÇUUkmKknUV@mJUkaWka@KmKkULmyXa¯_@WmImmbLmUkVUbUVJbUkkWJkUlIUmkLlK@knaVmkI@mWaLUKUU@@VmLUVLWK@UUUWUkkVmx@Vl¦"],
					encodeOffsets: [
						[119014, 37041]
					]
				}
			}, {
				type: "Feature",
				id: "3709",
				properties: {
					name: "泰安市",
					cp: [117.0264, 36.0516],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@n¼WnxL@x°@¥Uk@nwlUVlXVV@VXLKVUnK@UV@VVLKXb@nlJUnmb@lkLKlVnJklVXIllVaIVUValUnVKannnJ@X°`WbnzKlVnL@LbXlbVlnI@VUU@UmV@U@U¥@VmV@@_Ua@m°@@kmUUm@UVmn@nX@@aanJVUVLmlIVJn@nkVLVa@KVmVLXVVL@@U°bn@VaV@@K@aVkbWaXUVymU@aUImWX@¥UaVwUaVwUUU@WW@k_VUKÇa@nmxkV@LVJ@XJUbVkUWVUIlLwĉVaU@VbJ@bUUL@mVUK@wWkK@UVWUIÇm@UUI¯lWK@kk@UL@lmUVkbÇaUVVnJlInWbXbLxVln@VbV@VUV@kIUK@UWm@UU@LK@KU@Uam_ó@m@L@l@@x@nWJUU@L`k_JWbUKkmLn`mb"],
					encodeOffsets: [
						[118834, 36844]
					]
				}
			}, {
				type: "Feature",
				id: "3710",
				properties: {
					name: "威海市",
					cp: [121.9482, 37.1393],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VbUnVVUxĊ¼¼ô@ÞÑ¯WǬLŎUÆW¹UÇō¯ÑÝkţţóġóLł̥Uwm¥kÝmkkKóbÝ@U¦@mb¯LkmJ@xLmn@lk@a@X@lXbmJUzV@bVJ@n@xblJXzxV@VaKVUXLlmVV@In@VxUlW°@nLVK@zXVVal@@VwbVKL@bnx@WbUJ@VnXVlVxl@nnnV@lV@L"],
					encodeOffsets: [
						[124842, 38312]
					]
				}
			}, {
				type: "Feature",
				id: "3711",
				properties: {
					name: "日照市",
					cp: [119.2786, 35.5023],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@UaVUUKVkJVaVIČb@Vam@ka@Ul@UôVK@UnKVLnKlkWVa@¯l@VbÈlV_V@XWW_@anKVwUmVw@@UnyUVblKVLX@aô¯ó¥mÛĊÿÈ¥Þ¹lUī¯Kĉ¼ʟbÇVUUXmakJUnmV@bUnmJ@XnJVLn¤UzmJUn@`¯ImU@nKVkkmKWbb@xk@mL@KUUVUKkbWaXkK@bkJWbnbl@UL@lL@lxx@bnUVlV@¦²°@bVx@J@¯XUJ@bUnlxVX@VV@bL@nô`@bkbVVÞLxnU"],
					encodeOffsets: [
						[121883, 36895]
					]
				}
			}, {
				type: "Feature",
				id: "3703",
				properties: {
					name: "淄博市",
					cp: [118.0371, 36.6064],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nlKV@nVn@@kVU@²VVaU@wmKXU@UUWwUW¯aU_JUVVK@UJU@kUw@UlnWU_@lI@U@wUml@@mVwX_KWUXKVa@UVUUwJlaXWUn@mlanUVWkIV¥V@VVVI@a@akakLWKna@aVwk@WUbUlk@k@U¯UWWU@mUUVUXkVmVVV@nkVLVÅw¯k@WVXbaUl@bV@@b@xkVVXVxkJ@nk@@VLUlVbVXUVVUzVLVbUbVVWVkLmkJ@n±@UxUVVkV@bx@ÒUX@xVVV@°JXlK@bULUblÆÞV@bLXxmV¦V@xXVğ@±LÅ`IUlVbnbXllVnnlVLÈwK²IlanVVVlLwXlKVlUXma@knwWlkVnU@mVIUl²aVJzXJlI"],
					encodeOffsets: [
						[121129, 37891]
					]
				}
			}, {
				type: "Feature",
				id: "3704",
				properties: {
					name: "枣庄市",
					cp: [117.323, 34.8926],
					childNum: 2
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@yUUUkl@@aVmLXw°»°w@yL@UUaWXKVknwVKlm_UmmUXK@aw@k@mUWmUL@@@£@KbÝV@akwaULmbUKLUU@lm@°mL@nUJVxVXU`mIUxU@UnU@@lW@@bkLW@UVkKÇ°kLlbnUÜÇUUVÇ@@Xkl@XV`UbmbUbU@WxU@¯¦m°nLaVblVXal@XKlLVVÈLKôlnbI@V@VJI@lVVÞaVkXU"],
					encodeOffsets: [
						[120241, 36119]
					]
				}
			}, {
				type: "Feature",
				id: "3712",
				properties: {
					name: "莱芜市",
					cp: [117.6526, 36.2714],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lmnLVlÈVln@VnIVlxVla²_JlUUUVVw²@@mlInlKXUUUVaUaKUVyUUWVUUaVkUK@l@@mlIUwUWlU@w@aU@@LU@Ubm@¯a@V@UKWUUKUn@LUbUKmlm@UIkJnUKUVmIb@b@mWm@Un@VVnnVl@¯@@nVb@`U@Un@¦@V@VUVnV@"],
					encodeOffsets: [
						[120173, 37334]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/shan_xi_1_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "6108",
				properties: {
					name: "榆林市",
					cp: [109.8743, 38.205],
					childNum: 12
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ýVnIW»W@»kUÇLÝU¯¥ÇIUWWÑUWwX¯m@»n@ÜÈķô@a±kČ±wÑmwçċmU»ÆkkVyImĉÿ@Ý¹WnwÇVÅazmmĉ¦ókVmxxU¼VkVm_UlVlk°IVkmJa¦kLmmV@XmKnlUôVXbb@UaÇLğÜÅw£mKnmċwÅ@UkbmaVn@m¯aUJm_k@kWXyl@@kÅamwLUÞmWÅzUKUk±@b@nnKbX¤mzVVxÇn¯@ÒknWVUbkķÈÑWkk@VaU@mUkbÝÅ@Ý¥ÇbkĬXV`kLÇVmalUUanV±nwmkJ@In°KVw¯UnÅ@¥U±bUU±mWbÛKWnUm`UƒVK@bmnmÈÅ¼@VL@xxmŤ°n@VmK²VllKkô@êÜV@VXLlm¦UV°Ș¯²ÿ@¥@ÆĊ²ImĶnnb°bKVĸLlÞ@UȮÜ°IVÞÝÞlx@ķĀWUxèÆ@°XnlĊĖ°mnV²V°ÒÆ¦aÞ@zll@bÞĀl¼nKĊ¼óÈb²±IǪÒ¯ĖV@lxnVlkJlaXwŌĉ@VnlÆĕUÆLèŌŤôxÈlU@xlaUċĕXmIWmnkVVVW_@aÈWUUmk@¯çVm»±W¯n¥VmkXw±ÇVw"],
					encodeOffsets: [
						[113592, 39645]
					]
				}
			}, {
				type: "Feature",
				id: "6106",
				properties: {
					name: "延安市",
					cp: [109.1052, 36.4252],
					childNum: 13
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@kkÇmImUwVkUU²WmVkm@m`mIĢĕUVa@mXÿVVkyUýĕ@l_UmnWKVkţ¥awğ@@aôWakUma¯¯a±£kxmmxUwÝ@xmUb¯KwóÝ@kmm¹Ub@lklVbmnnVUV@xUknƧJUX@LÇWkwLķƧÅwWJkLkþĉxWzJUnÇk@Ɛk¼ÜÔÈKè@°lÈÆk¦ln@l¼@l¯L°UUVÇ°¹`m¼mXkbUaV@U¯x@¦ÇUUmlmUVmnnmlkw@@¦ÅÇLmx¯Ikl@¦mÆ°VUx¯Lm@JInlmxU²mVbkVbUnÈlKU_WlīÈaÞ¦Æ@ÞlanV@VUbl@XlÇÒĸlVaUXlm@Ñ°ÈmUwUnyW£amL@ma²@lVVLÆynXÝVKnxÆb@lk@WzX@lln`IV°b@nmUnbaVlÆ@ČxmnnL¤ÆxĠÛÈKVb@aWaUókVmnL@WUnnKl¥bnIlU¯JlUkVkn`lUUV»wnwlUôĊ¥nnyÆb"],
					encodeOffsets: [
						[113074, 37862]
					]
				}
			}, {
				type: "Feature",
				id: "6107",
				properties: {
					name: "汉中市",
					cp: [106.886, 33.0139],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lKnb@nlWb°bkxĸwVb@łnlĊ¥L@XlÈVblÈKbakVwôml²`n@nVKlk²xŎ°¦VUJĊw@çnWçÞVkUóÛ@¥kwUmX¯WÑk@UymIUwlUn¥mUk²a°¯V»@ÝVÈÝċÅÅVl»@l@a°±@_kammÅba@m@Å¼KknõĠ@m¯LÅwLVxmb@¼kV@mw¯wVakKW»X±¼¯Vkxb¼W@nx@x±bóakb@ÝmU@ķÓÛLkVUmk¯¤ÝLUlÝ@Ýzx@x°bmX¯aUJW¯k@bÇWwÛwWx@XWlb@VÈUlwLnl°VlUô¦U°¤VUxVXUxlbkVVlI°ÅVlU°m@kÇU¯xUlLUlVL@b°ĠInĠ°ÈnK@xÞa²naUyXUKVkWô¼Èaz°JXUVÇV_JVz@nb"],
					encodeOffsets: [
						[109137, 34392]
					]
				}
			}, {
				type: "Feature",
				id: "6109",
				properties: {
					name: "安康市",
					cp: [109.1162, 32.7722],
					childNum: 10
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@bĊaƨèwôô¼b°aXVÞVUÞ@aXm¥kImx¯¯V@anU@UÇéğL@¯¥V£m@ÝÈbKX°wČÿb@xÈblxÈ¯ĊmÆUVnÈ@ƨÜLĢ¥Źn°VnnKaô_ÈwUaXmnW¯klLXÇō¦ÝaÅVmbğUn¥±wÅéVan¥U»°am¥£Ý@wVw¥nUÑUmmVwmķIÅaóVWxkblb@ból@ğÒĉ¤ċX¯XxkÇ@óÆÅx@xķ_kmÝÇ£kblb@`¯²@bk@k¼ÆUČÆÞÇÞU@U¼¯°±bVlnm¦kVVxnJVz@lÒXW°nVlx@¦ôÜVUlÝXèm@è"],
					encodeOffsets: [
						[110644, 34521]
					]
				}
			}, {
				type: "Feature",
				id: "6110",
				properties: {
					name: "商洛市",
					cp: [109.8083, 33.761],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@²nlôb°aVwnKÞI`°wXôw°VĊ°@ÅÞÆVzÞK@x@aLÅ@b@nLl@lnmnLVwabVVnbU¼V°blbÈ@ĶŦb@nÇ@amIyUI@ĠVmôUVwkwlanJ¯lwó¥@an°J_@nóƒó@£l¥UwmaÑ@Um±V_J£JUW¥¯@_k¯¼mUVUè¯b@wmL»ğVmağI¯¤ċIUWXKĵ¦ķaJUbIlUóVmk@WÅÅÇ@mUÅVnĉÇ°kwÇa@waċĀ¯xWLÇa@ÞnU¤°¦@ĠKÈê@VmV@bU°°nwlJn¦WbÝ@V"],
					encodeOffsets: [
						[111454, 34628]
					]
				}
			}, {
				type: "Feature",
				id: "6103",
				properties: {
					name: "宝鸡市",
					cp: [107.1826, 34.3433],
					childNum: 10
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@£@°Ib@¯°ynŹaUlU£Umĵĉ@@ylUÞ@@£kWU¯WaU£¯ÇV¥@kb¯wn¥ÇkUÇnU@¯±kULm@m±_kónUxlbaÇLkUaÇkW@Kĉ¦km@ŁUaķxlw¯aXak@mmakL@mÛ@¼m@lXV`nKU°°@²¤UÈ@VxmôxKlVV²aVwXlaVlx@UVnÇnk°VVLlkIJÇk¯V@knÆn@lznmlVkzVVVx@Uxz@x±¼VxxUlkb@¼ČkVXlĠkôV²wLUKlwJ@aIV¥Þn¯Ün@nkl²kÆ@°aVbnI@Ťn"],
					encodeOffsets: [
						[110408, 35815]
					]
				}
			}, {
				type: "Feature",
				id: "6105",
				properties: {
					name: "渭南市",
					cp: [109.7864, 35.0299],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@ÈôLxU°Þ@mÈnl¤nUôLwX`@ÞÝLUmLôôbVbnºlnÞ@ôx°LanVwÞ@Vxnwnlw²¤b°°bVnlXbó@bĠ@xb¦ŤVXġ£W¥ƽɽó@ýóƝÝ»£XmƅĊkU@ókťaĵÇ@aka¯UV»maUUabUxmKnkm@kmK@xó@¯n¯KÇ¦@ôÅèlxkx°nƾ¯KU¯WķL@VÝIUbyWbX¼Ç°"],
					encodeOffsets: [
						[111589, 35657]
					]
				}
			}, {
				type: "Feature",
				id: "6104",
				properties: {
					name: "咸阳市",
					cp: [108.4131, 34.8706],
					childNum: 14
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@IXyĊwlýKlXIVaķ»a£¯aVU@awÈōaL²»VUln°WÈ¯W»XazVaÞJ@U»@¯Ýbğwly@£kÑţ±WÑ@kaIUn@¯ómţUbU¯lÇIÝb@¤Ý@kV@zĊ@ĶnVV¤kVbmź¯z@°a¯J@¤@bUxb@`xUÔ±ºVXWUnUJLĢ¯ÈKlblmÈXŎ°U°LlkÞK@Èxl_°ĶUÒkbl"],
					encodeOffsets: [
						[111229, 36394]
					]
				}
			}, {
				type: "Feature",
				id: "6101",
				properties: {
					name: "西安市",
					cp: [109.1162, 34.2004],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@°²@mVVÈÈl¦m°xla@U¦°ÈV¤XbV°lXÞaÈJ°kVaŤVôn°@mVJlb@XÒŤ²lÒ@¤kzĠxÞa@°¼ĸK°XV°Lƽ¯mlwkwÆç@óÈ¥°L°mô@w@aÆK@b@wÝLyÅUÝÆ@ĉ¯¯UóxW¯x_ÝJmLUx¯bóak±mÝUUW¯ba»óóxƧçĉbaĉxIUV¯¥ō±wl"],
					encodeOffsets: [
						[110206, 34532]
					]
				}
			}, {
				type: "Feature",
				id: "6102",
				properties: {
					name: "铜川市",
					cp: [109.0393, 35.1947],
					childNum: 2
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ÆxĸƨKlxÈXK@VWƨIlmV@wVUmUnmUalk@kVaUaóaónKVÞK@ÝW_xóKmVk£ÇmnÝ@¯VwóK@Ç¯XkmVU±¼KbÇŎx@bUV°b¤b¼ĸUb"],
					encodeOffsets: [
						[111477, 36192]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/shan_xi_2_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "1409",
				properties: {
					name: "忻州市",
					cp: [112.4561, 38.8971],
					childNum: 14
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Vx@lnbn¦WlnnUm°²VVVVVnUnºlz@l@J@kXWVXl@La@KULlbnKlLnKLnKÆXn°bVV@bUVl°Un@LnaVJUbW@UX²l@ČwlVVIWnkÆa°anVKn°UW¯@aVUVk@Un@aV@ValwUanmWUk@WVUUanaVwnLVl°@nk@mVU@UVK@wLVKVU@K@UUKVUV@@bnLaVaôlIXmlKX_°KVV@bVV@zV`kblIVUlL@bnV@VĊllVlIXW@kaU²blKVnIlJalbXXlWVn°JnnL@l@XlJlaX@XW²@l_VmnKUblU@mnkVK¯@U@ma@kX¥VmakkLa@a@WIUUVXWWnk@a°a@kkm@kUUmJm@WUUUIk`m@VkaWWkXKmXk¯@WKLkak@±bw@aa@aka@ma¯@LKÇÅkKWbkmġ±ÅULUKVVkm¯LUVVbUwUW¯bmULxWJ@klmkUm@@KnwVkVK@akw@@a¯bKknVUIb¯mmbk@UbmKUL@xUU@klmLUlVXIVVVUVUU`mLXVWbXnW`Å²°xmxU@mĉwU@mbU@UmbkVW¦kJ@X@`¯Im@UlUVVnb@bWJXnmbJUUUUa@UamIkax@@x@b"],
					encodeOffsets: [
						[113614, 39657]
					]
				}
			}, {
				type: "Feature",
				id: "1411",
				properties: {
					name: "吕梁市",
					cp: [111.3574, 37.7325],
					childNum: 13
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@a@w@wlbnJVb@VbVVVInaWmXI@aaUmVUVkn@°J@_W@lIX¥lUnaVV@naV@xĊnV@wn¯wÆ±X_WmXaWUnKV_VVUUUUWJkUVnKlk¯@@kmKUaÅ±KkU@WmI@WUIlUUmVwXw@UlUVwV@LnbW@anU@UaVkô@l»n@naJnUÈLVaÆUUVmVKV²L@mU_lK@UVWkUa@a@U¯aUaÑóÑUbKk@@ak¯mVaUwVÑkWUmK@UUKmXUWÝwUaLUU@aWJUUU@UaÝU@WL@VKVaVI@WnU@alIVK@kImIkJ@m@@@_K@x@kaW@U@Vmn@UK@mIJUXV¤XXWlkKkkK@XmJVakImJU@ó¯LWKUV@nUVLkxmKkLma@kXKmmLabLmK@V@mXVÆUxX@`nLaV@@VmLUVnLlLb@°²nx@bVUxlb@V¯bUV@zVXVĊXVx@lVn@VnnmU@LlJXVz¯VWVXbV@bmnVUVkÇþÅ@XVxmbUlVUlnW@Xl@VLXÒ@bÞJ°¦Lò@nUb@°X@XbmVUVnb@xx"],
					encodeOffsets: [
						[113614, 39657]
					]
				}
			}, {
				type: "Feature",
				id: "1410",
				properties: {
					name: "临汾市",
					cp: [111.4783, 36.1615],
					childNum: 17
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nW@@UnLKabKnnWL@lnblKnLlwKVU@mVUXL°KôV@nIlJUbnI@WlLllLXkWWU£VWInJ@VL@nm@UVX@lb@@wL@`@n@V@lw@nVmVXWmwnUla@_lKwVlUn°xVKVXXWlUVVI@K@Kn°KwlVlU@kna@V_WnmUVm@kXml_@mLlKXw°m@_ôJVUV@Xl@UaV@Va°Ilk»VwUkVmwUmmVn@V¯@KUwmK@U¯wUVÝ@mJUnWK@@UnKVa_lykUmKÛnm@x@UUlwVkXW@a@U@@K@kIVnammVakUl@wX@@k¯@VVbml@°UbULmlVbnbÅK±VKVXUJWa@ULWaUU@@U@aWK@UkxUKLUUUJ±UkL@V±kk@kam@UV@l@LWl@n@VVUxLlUUx@VUVU@aIUlL@°mLUbkUUaWUUaUU@aWKLWJ@bUL@VUVVbU@m@a@kmKmnĉlUKXWUblbxmIkU@xWb@lkVxLXmzVV@bklVVUzm@bk@Vx@xlU@lUbVnl@Wxnl@n@UbVmLmb@`X@lUX@@xlnkLWaUJnnWVVn@l@bULVV@lV@XnJVX"],
					encodeOffsets: [
						[113063, 37784]
					]
				}
			}, {
				type: "Feature",
				id: "1407",
				properties: {
					name: "晋中市",
					cp: [112.7747, 37.37],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@lInJlJ@ULkJ@bmV@XUJUbL@UXKV@ÞVbV@VVXI@bVVKVbÞxVXnWVL@VnLVlXÒUVxUb°nl@bl@LVaôÒÒVb°b@VnLnnV@lmn@lbUV@JUVVXkl@lUzmJ@xXklbUnJVUbnUlbV@nlLX@lakV`Ub°@XVJnUL²KlxnI@KV@lbUbVVKnVl@zlm@U@nI@WUaVl@@mVU@XkW@nkVKV_Vwy@knwVa@XalU@Vnml@X@VLKVaÞbnnlJImVKnVVVInVlU@m@mXK@UmyUI@mWUUakamw@wUwmLkakwVmKw@wUam£y@am_W@UU@knmmamU@WUa@knw@UUUUV@nJm@mVUkKVUUUkKmwKULKUImV@lUnnm@mbUK@°bUnmbUmkkWUb@am@UXkK@a±@V@ĉÅVUXVxUVkLWl¯@@bULUlm@@nm`XlWakIkmVUbUL@Vm@kI@@Km@VaXI@W@aU@kUVU_KbJkkÇb@nkKmLwÅW@kVUUVU@WUIJmIXmma@_kyVaUUlkUm@kUx¯Lm@L@LUJUkVWXUWUL¯wVmUkxkL@`bkmVnxXUWUnm@kxU@"],
					encodeOffsets: [
						[114087, 37682]
					]
				}
			}, {
				type: "Feature",
				id: "1408",
				properties: {
					name: "运城市",
					cp: [111.1487, 35.2002],
					childNum: 13
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VlnJwkaVaXWVLĊknmnLl@@bnV@UaVU@UVK@aXIKXL@bVVVbXVVblVaVnK@¯KVkJ@bVVU@UVwkVKVwUUm@@Xk@K@kVUn@lbl@²l@UlK²VVIVVKVLlw@VXL@b@VV@VXbVK@XbVIUWLU²ÆLmaUankVKVa¯@nkUaU°@n@@kWaUVaXUW@IXKVw@UWU@W@@UUU@mn@`m@UUULkUmJIU@@UK@U@anak_@wmKUwmakVkmKVk¯bw`kwUIÇx¯»ÇaÅmn@@mmUkV@wkKW@kxmLUkĉLÝkxÝw¯lóVUmV@ĀVVX¦W¤kz@`Vx°²ĸ@Ul@xêĸǊ°¤VVlXLWnXxmV@nUl@"],
					encodeOffsets: [
						[113232, 36597]
					]
				}
			}, {
				type: "Feature",
				id: "1402",
				properties: {
					name: "大同市",
					cp: [113.7854, 39.8035],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@²£yl@ČĖ@bĸĢbĸXaKŤnn@ŎôllÈxnVnÞÇV@bnXllL°KbVb@J@b@UxlKXLlKlXk@UlkJlkUVKXUÇVIVm@_nÇLalwVnU@UUwma@aaÝaLmUk@@W@U@@XwVWÝUUUk@@VmLKV»nwUwaUL@`mzJUIVUaUwKUaVIlJôanÑlLVUn@a@VV@@UUwVK°Vn_lJÆLéW@UUUÅ@»lm@aÞIVwXWUUkkm@U@aU@mwU£VWU_kWmXwW_°yUkkK@UÇK@kkUVymóKU@KWIbUak@mJ@bkbmLkUmkVUW¦@lnb@@V°ULml@nkVaVmLUnk`±@XWW@kbÇ¦X¯WxI@xmbmxXlWV@bÅUz@Jb@bÞbU@Wbk@xk@WX¯VÛWÝbÝUkVUU@alI@a@akLWam@U¯UUmÇL@K@aU@¯VUkKmX@`@kJ@nVUb@lbVÆXVWULU`VbkLUV@XWl@bXJ@VbV@Vl"],
					encodeOffsets: [
						[115335, 41209]
					]
				}
			}, {
				type: "Feature",
				id: "1404",
				properties: {
					name: "长治市",
					cp: [112.8625, 36.4746],
					childNum: 12
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@UkLky@IJVa@mÞaWy@_W@_WXVlUVw@nw°K@mUVamVkU@mmmnLVUmKXaU@IlKVUnK@UmWkX@WV_V@akU@aKWIXyIUVmUnUa@WaXUVKVmkUWVkULU@@VbKbIUm@mbVLxWUUkn±V¯wbÅJUbmLkbmKÅKbVnUbVKUbKUbmLKmbaKkUm@UnnVnxUVlUxl¼k¯JUbU@Vbk@WU@UVóI@`¯nWxkLK@nk`Wn@lUnVnmXU`@mb@lkV@VnklVVUblz@`nbWnnJIVJ@XUVVUV@lÆXxnKlL@maÈllIaLV`UlVV@@b@XJWUb@n@L@lJn@@UVKVaUlnlJXbkWn_@mn@VkVK@a°@XklKVUUwVWUĊÆ@U²@@blLVWn@@bVaXllVnnaVma@¯VLnan@mVm@knUVJ"],
					encodeOffsets: [
						[116269, 37637]
					]
				}
			}, {
				type: "Feature",
				id: "1406",
				properties: {
					name: "朔州市",
					cp: [113.0713, 39.6991],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XXWVXVWnnlnn@èÆ¼@xlVnblVÈUVl@blnLÜĊmUkU@Ua@WI@aXk@WVUlKUaV_VKXWUUÅka@VaU@mlI@@_nWLVl°UV@@b@LÈKVn°V@VnXblK@b@bkJ@bVVlUÞVÞaXÜ°UXWl@wl@XaV@Ýa@aa@IVyÆ@aXUWknwna@wJXw°WÈ¥kI@W@kmKm¯IUmkXWWkabkImJUkL±aVb@lWXkJUkĉk@UmU@aKkVUkJlaU_y@UU@aUU¯LW`kLWnkJóbUbmK@aU@UVVL@VL@UVULK@xUL@VUV@nml¯@UkmKUxmbVbUV@XlXVmnVbkxUbU@bm@@VUlUVb°@VX¯m"],
					encodeOffsets: [
						[114615, 40562]
					]
				}
			}, {
				type: "Feature",
				id: "1405",
				properties: {
					name: "晋城市",
					cp: [112.7856, 35.6342],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lVLbanLnKVaLVaLUVaUmaÆLnLlanKVaÆIa°x²UlmVVXwUKna@VnJaLa@UV@@alUkKVKnkmmVwUkw@@kxWUXW@@mk@aUa@a¯aLkKmwkUm@kL@K@aWIXmVXWkUVakL@UVKw@aUK@UUKmLU@¯nKUwVUIWJUWmka@UXJk@UkmW@kLWKVx@bmI@VUaVU@a¯@UUmVKmX@±`kÝKVxUL±akL@VbLkKmV@XWVUbVXb@lm@@lW@@xklVUbnnmbUlJ@@L@@Vb@WXUlkxVV@wn@ÜmnLlVkz`UbmL@V@XLmVnIÞ@VU°x@VnLxV@LU°"],
					encodeOffsets: [
						[115223, 36895]
					]
				}
			}, {
				type: "Feature",
				id: "1401",
				properties: {
					name: "太原市",
					cp: [112.3352, 37.9413],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@VV@wVKnLVal@na°naVJUlmL°a@b@lx@bULUlmx@Ln@lVknl@XIwKVn°aVXVxUaVU°KnUlUVLKÆV²ĢlnXalLÈÆLKUaVkUanmWUa@WwkUWU¯y¯Ñ@anIl@@aVUmIymULUUVakaU@@LmJkw±LKmVUI@W¯VaU_lkbW@kK@mUkaVmVaUIVmalkW@wnIVy@klkWUUVI@UVkam@knU@mmmK@bblVUX@VkLV`@n±KUULUnVVÅUbÇKmVImbm@k¼ó@Ulb@VmV@bXmaK@UUxkVV@xWUxVnkVVJ@XnJ@XlV²LÆVbnL@l@°"],
					encodeOffsets: [
						[114503, 39134]
					]
				}
			}, {
				type: "Feature",
				id: "1403",
				properties: {
					name: "阳泉市",
					cp: [113.4778, 38.0951],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@°@nb@lb@bbb@x²al@lbKXU@mkUWkkmUUVwV@XUW@naVklKXblKnLnLVanImaXKlLaV@U@KUKWalXK@£WKXUV@VUUUVW_V@W@@K@UIWmXUmULnJkImmÝaUbLK@UWk@mnU@kVWb@Ubmx@lzUx`UULml@XWl@UV@nk@UVb@XJm@@Vknyk@zJnUV@bk@mJ@b°Ò°zXVlVXx@bXVmnVbUlVb"],
					encodeOffsets: [
						[115864, 39336]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/si_chuan_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "5133",
				properties: {
					name: "甘孜藏族自治州",
					cp: [99.9207, 31.0803],
					childNum: 18
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@aXam¯wm@±°wUwV@UaVw²KU@UU¥a@£ÞôxKnkmX¥IUÝUwlk°V@ÈKUwlkUyV¹mx²XllÑW»lw°UŎnJl¯°V@wôIVÇnnUllLVÇLô¼XW£@±@¥k_ÇJkUékwXa@Llw²Vxbm¼ÈxlLÈVWÞn¯mÇÑUÝlÛkwlĉmULmwUJç@wkm@ÑlUXÑôġVaUÑ¯@wķÓkbVmnU@@y¯IķKV@¹aé@kmÞU°¥@a¯@anKlblU¥@óğç@Çw@wklaçÝ±k¯±@ğÝUÛmÝ¯w@kb±¯akXWÜkXUÆÇU¤X_ƐwV@¤XUbUIUlÇUkġ@aXČmlUlèUV@mVk¦Vx@¦±¯¯¯anlW¯nÅw@w°KVak£m@klKknÇU»óKīlaUaV£@¯@ÆUVÛÝÇXÇlÓlŹ»WUğJ¯£mxLĵôºXVlUll²bllxónn°ÝU¼mJU¯nV@êĉ°Uĸw@m@¯kmXamÑ¯aUwÝKU¥mÅn¥Wmn¹n±ƑƆÇôXê±ǊnUôlĖkȂVÒ¯¼VnȮ¯ĀnƆĢ@k°V°¯ĢVlkVxm¼X²Ŏ@VxknWÜ°U¯nÆÝ@`ôÝ²ÒÇznmX@xè°K°ÅUČĬóĖÝó¼ÅêÒbmk@V@Òl@nĉÜêx@ĖmlÅJ¯¦óxȭ°Ým¯LĵèĀ@Æl°żX@xmkV@z@°blnÞ°J@bn@Æ¼UVUóóL°X°ÝLxUn°Ĭn@lnL@Æ@nKÆxnUnVInĬmÆnxŎ¼ĊIĢóÞ@ĊƨbUmV¥lkwnLmÅÆ¥XwU@wwUÞ@alUUÅUVkkm°aU°Ó°w°Ub°a²K¯ĕ@ÈbÞĊa»XVm°InĬk¼VbaJô£VĊankůnÜU@anKnĮbÈmÆ»nIé£Ġ"],
					encodeOffsets: [
						[103073, 33295]
					]
				}
			}, {
				type: "Feature",
				id: "5132",
				properties: {
					name: "阿坝藏族羌族自治州",
					cp: [102.4805, 32.4536],
					childNum: 13
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@l@@þ²I@lVL°wnJ°UĸŎèIlwV°¤nĮ¤ÝlèL@@xlè²ôĊ_ĊġVÈôJżīlbXÆÈVkxÇVn°¦Üb@è@nn@@°UÈ¥WÇ_Uala¯¯UÇk»mVwk»k²°VxlL@¤_@x`ÈĖöb@l²alXa@bnK°¦VK@nnWmx@nUnl@@llĉk°l°UXkmW@Un`kÇLWÛÈVxVVlVk@lIXb@ylXÈWĮWŤzy@mI²J@n°@VJ°aÅ@ŎkVÇkaUwKVwV@nkm@±ôkôĊJ¼InÑm±nIÞXÈĊxĊUÈbÜyÈ£Vkw@kVUVm@a»ÜbÈmUXwÝxUn¥@°ġÅaJVkaW¯Û@W¥UŏĶ@¯kUŃ@aI@mmanwÞW@mw°»Uřk¹±WxVx¯¦U°zţWw@°ÇVÑk¯@y°a£@mnl¼aÝÝakwU±aĉImlĵn@m@kkV¯Ñmĸ°xl@XVÞmlÛÝĉUÅ¥mwÅ¥VaUwXġċaVůÛŹlwU¯Uó±xÛV±¯¯n¯mċLmnĊm@_kJWaXmwUĉK»@mwXÝUÇkKÇw»naUw±kxK@WbxlVêlÈIl`@¦@²X¤Wó»KUÈKkkmVmUÈóJ@x¯Uk°Imō¯VxkX¼Òkk±WwnUºVzklVxLÇ@¯UklVxÞVJW¦nmlLówÝ@¤b¦V@VV±LUxVbU@Vx¯x@²n°xnWbb"],
					encodeOffsets: [
						[103073, 33295]
					]
				}
			}, {
				type: "Feature",
				id: "5134",
				properties: {
					name: "凉山彝族自治州",
					cp: [101.9641, 27.6746],
					childNum: 17
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ĶóKnw°¤ĠIXV¼kźÔkÈWÞÈÜUVÅ°@@U¤VbkbĬôL¼ÈVlmLlkn@l¤Ub¯L@xÆx°mXmk°b°°²@¥Uwl¥nU@VUkçVnkWċbĢ@lÈVVkJVaVW@£UƏxW`£ÈVVÅlWXÛlW°b²la@°xnÞVÜĠÞ²@l°Þ²èkbl@xÈx@Ġènal£nUÇ²@ÞKnn¤@¼°U¼nVXUbnĠUVbUlV°LX@lVèÜUnK@_yXVyUwmIU»VkÇ¥ÿkkV¯m±n@n¯ÜanVVÆz@bwÜbm@wa@kmk»@a@VUUów@nb°mXmnVbÞVôanwJak£lwLÅnÝ@wl¥IÇÓ@UL¼kVÇÅó¯kVmmw@n_Vn»°LÅ»@éÇçŹīVÇÝ@ÝğUaVÝ¯ķlŭġl@óÞÛċ@¯nkUÓm±IVġUwóKUn±¯Kw»KÝVnl@óxUwţ£ĉUmÅÇÝKÝUlmK£UV@ÞÈW¦Ò@Ĭnny@nÒmV¼@°Vbl@VlnUUwl°a@@llnk°lbnKWĀnUVxU²Åm¦ÛÇÅaUVb@¦m`móXUmmxÅ@±Þnè²U¯»mVm@wU@wÝÝmLa@VÇUkl°¯VlkV¦UmxaULUèVx@kIUxmWV¼¯VmÈ¯UnlÈ@m»ÅVWxÅbÅğW@km@kVV¦mlnn@ōl¦ÅÆxk"],
					encodeOffsets: [
						[102466, 28756]
					]
				}
			}, {
				type: "Feature",
				id: "5107",
				properties: {
					name: "绵阳市",
					cp: [104.7327, 31.8713],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ńlV°@ŐĵVX»ÆUĊÑJw@È»m»£°Kk@ÇnÑÆ@w°JUwnw@wbVb@VlźLUwa»aUklyUUVakwWXwWUxkLmn¥mwkUXlJw@aIk°X¥W²l¥aUIlmkklÈL@m°nlWUaW@V@UaV¥@ak@Çk¹K@aK@kKkÇX@VU@kx±VèkIWwUVUkkKÇ@a@wkml¯@kUWn£WaaVwnaVÝw¯@UaWxnJÅUxUma@L@mbUU±VVnkxUÆVm@kkKW°X@¤ÇUkÆÇnU¦¯kmLVwÅK@UóbÇÆV¦L@±êX¦mVÞkÜÝnWU@k¯wķn°ÒUlln@@ĶmnkĊJ²bVlxÞbÞbk»mn@¤¯bz@l°UÒ¯È@xŤXyV¯°¥Uww²XlºVŚ¯¼nx@XÝmxnb@nJ@b"],
					encodeOffsets: [
						[106448, 33694]
					]
				}
			}, {
				type: "Feature",
				id: "5117",
				properties: {
					name: "达州市",
					cp: [107.6111, 31.333],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Uxn°bnlUnÒÆnn@n¤LnxlUV@Ælx°XXxl`XVWLè±nÈb°b@²x°KÜ¼°ĉV¦lJnU@¦ÞJÞğmLÞ»xUlbVÆannalVÆX@lnŎVmUmaÅXa@aWm@£@wĉJVkkkkmnk@mna@alKJ@ÞwmÅÅ@ambkU@KUġKU@mak¯±a@aĉÑÅaVwXlw±V¥l@@ak@@£mĉÝónWV@nÝÇÇxUmbaVkkk@m@m°ÝýXmakÅī@@mb@@xmnb@mxkWL@¯b@WUXmWWKkbm@kxXmm@LUlxlêóKnUallLlLó°m¯JVUK@xK²Āô¦l°"],
					encodeOffsets: [
						[109519, 31917]
					]
				}
			}, {
				type: "Feature",
				id: "5108",
				properties: {
					name: "广元市",
					cp: [105.6885, 32.2284],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ÆLĊx°»Ŧ¦WLÈ@xÞKÜ°ÞnVxÅĀlÒnJ°a@wV¯l@XWknKnwVÈ°XXalX°VI°bWna¥@w°n@yÆ@nkÞ@°¯lJn°IÈlUlXÅ@ķlUV¥VUUÝÞUU@UwJUkĉm@ýlkWUwVwWJk@VUKlUkaVUmLkm@@UIk`@UmlUkV¯ÇXKÝ_mm¯@U`kwml¼±KV¯¯Vk±Vk±kzmaKUnÇ±bk¦±X¦¯WlJ@bxkIWVlxnm¦nlKVwXWxXlxUbVVkzVlb¼bVxŹKUk@Uaa@xmxVx¯Ix@ÅmÒ@Èl¯L¤n¼"],
					encodeOffsets: [
						[107146, 33452]
					]
				}
			}, {
				type: "Feature",
				id: "5118",
				properties: {
					name: "雅安市",
					cp: [102.6672, 29.8938],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ln@xèVInxVKnĊklxkÜVÞÒnÈm°nx@¼ĊLVnxWXblI`@nmĉnKČôÅlUÑmUK²¹@ÇÅVÓÅ¯VýÞWUVmXÆbnwKUÿ@UmmIUb¯¥Uw¯ÇmçmanUm»UUlk¤a¯bVU_WĕmÇÅ±ĢUlUlÛVçkU@W¯KUVkUağVmaVWUmV»¯@»m£mÝL±@ÈmVk¤mb@ô¦kVkamL@b°@b¯¦ÝVn@lêb@ºUĸL°J@zV@nmUlaĸÔ@x°VÒUbóĢÒWkV@Ò"],
					encodeOffsets: [
						[104727, 30797]
					]
				}
			}, {
				type: "Feature",
				id: "5115",
				properties: {
					name: "宜宾市",
					cp: [104.6558, 28.548],
					childNum: 10
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VlÈnlXnWLX`m²nV@b°xĢçlnVmnn@@°UzlV°nÞÒkxlw`UnVbmL@albÞKÈÛmÜ¼°@XÇ@wmW@ÅKĊLlVLVŎçÞL²±ğkw@Uy@¹lKXlKVa@wČ@w@aÇU¯n@@wġakaōK@Å»VakUWmķwkbğ¥mLak@ġÞ°¯xVVÞ@VxVVWxXlxU@k²WVÅULmèULVĊklĠVJVx±nÅ¯¦mwğ@mlğkkl±@kUk@¯±ÇKkxl¤bImx"],
					encodeOffsets: [
						[106099, 29279]
					]
				}
			}, {
				type: "Feature",
				id: "5111",
				properties: {
					name: "乐山市",
					cp: [103.5791, 29.1742],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@kVkÆkV²UlºÈIlxLXèÜlUXUmkbVèx°@@¼°Knnn@mÆIUbnJ@bVI°b°±@nK@mVakkKl¯nbmĸèl@VnÈlUUwwmwnm°¥LlLnU@VaImbkmKnk@mbLVJVUUVnkVmb@a¯JUaÆkk¥IW¥KlwÑmÝU¯kVy¯@@mmnUkmġè¯w@aU±mnW_XKWmkÇmUkóbUÝUanmW¯nma@xVôUV@b@l¼n@lb@xnÛaxa@yUÅmUÛbm°@mn²U°llĀÈ¦lUV¼nJVxUzWz@`mL"],
					encodeOffsets: [
						[105480, 29993]
					]
				}
			}, {
				type: "Feature",
				id: "5113",
				properties: {
					name: "南充市",
					cp: [106.2048, 31.1517],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@È²VmLnblyl²²UUl°U°²L»knlx_V°@nnÞ`WL°ÈUVlnkV@l_JV@n@lnKV£ÇUV¯m@laXUUbVx@VkôJU°Jn@wUk°wnUV_nJmknmm¯Vwk¯ó¥±ÿL@wLVUkUbX¯mykI@a±Kk¦ULmaXVm¯Kz±klUIVbÇJkL¯lUÿUlUkJUmUUkVVklKk@@aU@J²x¦kĬ@¼±ºXnWbxU@xx@lL@bLlº@Èl@bU¦Vb@U@XbVkX¯m@nÇKkllknJV"],
					encodeOffsets: [
						[107989, 32282]
					]
				}
			}, {
				type: "Feature",
				id: "5119",
				properties: {
					name: "巴中市",
					cp: [107.0618, 31.9977],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VUlbkVVLUl@XIUxVxXkl@þĊnVlIVx@VVÝVÞUVU¦kV@ĸWÆô²@VÞn@Vaôb²W@K@XUmÑUW°¯°Ina@y_lWn¼lLUbô¼Kla@nkUyôÆx°@n£Ý@¥mVkIU¥Ċ¯Û»¯L±w@¯aÇa²mçKXUWk_Ww¯WwÅk@UkVmwK£@mmmÅmÑkVmamnnlmIU`Vm¯xVlx@m¯IVóIUl@UwVaVWkb@nU°VÈU¤"],
					encodeOffsets: [
						[108957, 32569]
					]
				}
			}, {
				type: "Feature",
				id: "5105",
				properties: {
					name: "泸州市",
					cp: [105.4578, 28.493],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VVXwVKnwnVnl@b¯xmKUbVn°°X°@blLènV@Vnl@ULnmmUnaVV_ĶV@wnJl@@kkKVólaUwnJmwUlm@aUaôKVnJWbÞ@VwVLX¥VV_Þ`wWÞŹmmnIn¥W@kWV¯@°kILk¼Ç@k¤±XknmÝ¯UlÅÛKWV¯klUwkLÓ@U@w@ġXVWX@UbVbV_kÇVlU°lnwŎ¦ÞaÆ¯nmm¯Um¥nkVmkl_ó¥¯UÇl¯@Lk`¯ķLUy¯@mw¼ķ°ġ_ÅU°mlnÇVUÞ@_JUnVUXblĢb@x@mV°Èb@xċ@@xUbkLWkL@ºzV@lxĠ±²"],
					encodeOffsets: [
						[107674, 29639]
					]
				}
			}, {
				type: "Feature",
				id: "5101",
				properties: {
					name: "成都市",
					cp: [103.9526, 30.7617],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@°n°m²°ÜUw²ôV°VkxÜźUŰČbĢlaÈL»@kwVÇ@nÛÆ»ÈUÝ°Kl_V°U`Vbn@VbÈLaVU@ƨ»VnIlUUa±lIk±@VnKmÅ@WaK¦lVōkKÝ@maXÇmw¯IU@kVwUmVIçÿU±Å@¯È@xK@wLUbÇKÅ@mÝ£@yóUóóUxkI@WlIUabaVĀLmxÅaWUnVÝXUþÆ°UÔÈÆ@±ºLnVVÒkóÆ"],
					encodeOffsets: [
						[105492, 31534]
					]
				}
			}, {
				type: "Feature",
				id: "5120",
				properties: {
					name: "资阳市",
					cp: [104.9744, 30.1575],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@èUJVnxU@lV°JnxWÈnbÞ@lLŎUk¥LXbÆ@nmLU@zlbXmlnVynLçJVbUnómUnamUan¥lKV_²aValWôn@nbVK°¯VblW@kklUnlV£°W@wUXk°KVwmVkwVyVI@wkmVÅ_Umm@Uÿmbk£xUaVw±V¼V¤kLWxU@UkbyXóm°V@@zÝÒkKn±U@@_VVkÇaVwnLWalm@@kkVVl¦kIV`±n@wKk²aVUUV¤nkxmUkVWVnLUbVb`kUUmLUmX@`ÅbÇXbWLXn"],
					encodeOffsets: [
						[106695, 31062]
					]
				}
			}, {
				type: "Feature",
				id: "5104",
				properties: {
					name: "攀枝花市",
					cp: [101.6895, 26.7133],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@bKÞnÞ@xV@xnUn°¼V±mç²ÝÆ@wnnVWnôn_@¥UaVbÆÈÜn¥Æ±VUwVmXÿmLkal¯km@k@¯bkVxmVUkk@Ua@¯»UnmÑ@mzm@īÑX¥Ç@ÝxU¦ÅÇUkx@lbUWVXmV@xĵĖ±@@¯xUÆLnÆmx@nXL±lUUVwKWak@WxkbÞĉbUn@@@xó¦Ŏ"],
					encodeOffsets: [
						[103602, 27816]
					]
				}
			}, {
				type: "Feature",
				id: "5114",
				properties: {
					name: "眉山市",
					cp: [103.8098, 30.0146],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Vx°¦VanJVn@baVbkJ@XlJVwôôôV@zÞ¤@nÆÈLVaK@xL@w°ÇÆ@²VĀmWXKWaÈÆa@_nWVnKVlV_UaVamKXUWwnmmwÑm£@ynUkWĉUkWVkkV±çkJmkKK¯¦mnnxxVxVÇkUmk@çķnmak°LllUb@nmL@¯²¯aUJ@amIVaÅJnm@mm¯L@»¯@wUçanlVWVÛkWçKkwÇJk¹±VUÅlġV²ÈÆnXĖV`U°ab£lkVVn¼mVnbèÈn°"],
					encodeOffsets: [
						[105683, 30685]
					]
				}
			}, {
				type: "Feature",
				id: "5116",
				properties: {
					name: "广安市",
					cp: [106.6333, 30.4376],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VlIVkVĀVk°lKÈIUaVJlk²yLn°UWnbVKl¥²L@blJnzW°alV°Inô¯KkKkkbVmôLkéwVk@KnnWlwn@laXLnXVW@X°a@XKlnw@man@w@na@@wĕġġwUkUWb@mk@¦¥mUÛb±yÅn@bml@kV@lknVbmVnlmbÇk¯bWyk@V_UamJ@I@WaVXamIVWkUkbVaUUx@VnkVU¼bkKUxmK@WxnV@n"],
					encodeOffsets: [
						[108518, 31208]
					]
				}
			}, {
				type: "Feature",
				id: "5106",
				properties: {
					name: "德阳市",
					cp: [104.48, 31.1133],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nUW¥²é@K¥UÈÅôa@VÆLUxnKl°V¥ÈmlÅÈV@£WX¯lLln@UVÅlwUm²UVVna@@KnbVVwÆImXwWkIVwÝĕVUaIèmKUzkmWnka@y@l²kJ²VbVkmJUƧ¼@UVbÇKUam@Ua_¯VUk`¯LVÞÇÅ¼mÜ@UÈx@l¼ÇKkbWVxUbÆ¦nxÆ¦ĊV"],
					encodeOffsets: [
						[106594, 32457]
					]
				}
			}, {
				type: "Feature",
				id: "5110",
				properties: {
					name: "内江市",
					cp: [104.8535, 29.6136],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@²èlUUllXĊVXlmV@zn¤ÒnxmnXxlUnVlwmU£VVUbl±L@x²mU_lJ¥UklU@ln@kXbmKUxÈblUU@`V@²mlLÞÑ@yU@¯ônWzaVlV@XwlKU£»aVaUwm@mwUVUwklVÇ²LlKVm_@ykUm@mUçkKmxkIUÝ@LUJ@n±kºLXb¼@mmIXa@mamnkWKUx_U`UklwUwmUbV²akbmkn@`UmÒVxUbI`UaÝÈ"],
					encodeOffsets: [
						[106774, 30342]
					]
				}
			}, {
				type: "Feature",
				id: "5109",
				properties: {
					name: "遂宁市",
					cp: [105.5347, 30.6683],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ÞĖUxlJXVb°@xUÞmbUxbXbm¤VX@lk°ln@xbÈ@lLVlVUXxlJç²UlwV@@UÈWlLw@wVwXaWm²¹@»lī¥w±I@V@bl@kLUllUVVn@mmUwXċbVb@VUkbmamW@ka@k@laUa@¯b@mmwó@@lkXUa¯°LUamm@ókXUb±bU`kLm¦bnVmbnVmô"],
					encodeOffsets: [
						[107595, 31270]
					]
				}
			}, {
				type: "Feature",
				id: "5103",
				properties: {
					name: "自贡市",
					cp: [104.6667, 29.2786],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lIÞÇbV_JVaUwnÑV@_lmnlab±UVanVxkxVlV_`wVLlXnmnb@WbnJ@n»WaKl¹²@mVI@KÞVlJnw@aW¯¯¯UmVanL°w@akmmUxmULWxUUÝKōèUKUkĉKL@ÆnX@xWÈ¯@Û»nÇÜÝLka@bKnUaVm_xkLX¦Jl¦ÅlVb°I@bnaUmlUVUVIUKa@nmlnLlnaJUbV@"],
					encodeOffsets: [
						[106752, 30347]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/tai_wan_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "7100",
				properties: {
					name: "台湾",
					cp: [121.0295, 23.6082],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@\\s@pS}aekgKSuSsMß`¡CqZ·be@Q^o@gieMp]}}Ľc_Kk{ùA¡r[uom@ÑĥJiq©mŉq¯Bq]ÙYgSåk_gwUisTEĕiqiUEkue_OSsZaWKo¡qycY£w}ĩĕS§Z©SN¥SyLÑ¡±Ks^IYPdY[UoFp}´\\¬\\j]eÜò¤¡ā a\\bnUãº¹Ìs¼j®[cíȈEĝĆ`ļf¶®K|VØDdKGpVnUFjpHF`B[pMºxÖjbpÎxp¬|ÎŸÜÒC²®ÜApZG~dÞàV¨|¸`|²tx~\\~|dFf^zGĄŚhdL\\hĸ¼OªP®lV`p\\]Xpllæ¤CpQ|oF}fMRiNSon_²qämMNM\\"],
					encodeOffsets: [
						[124853, 25650]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/tian_jin_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "120225",
				properties: {
					name: "蓟县",
					cp: [117.4672, 40.004],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@EUDAEI@WNMNCBFAHFFNACDJDPBD@@GD@DIFFHEFGDBDEQOFG@EI_KG@OcJQM]RMEKBGPG@[LaCIICBWKCEEG@WBQHCDFD@HSLEJI@IHWECFGAAEKCGDBFCBSBIDCKKHEADMJMFABKOKEQAA@IEEG@GIQAEK@OZEESMOLlu@SLUTYFQCMG@@SQUAYKAACA@IB@BDB@B@DC@@BGAEFAA@BEGKJCC@AGAIHA@@JC@QEIP@@A@EGIDC@O@C@@@@CJCWKABFLBBEBSQGBAAMIEM@AKBcJEN@BEBCFMAEFEF@J@BG@BFABECKFG@AFQ@@F@BEB@@A@@AAAKAE@GFGDECEFEECBKIKDELDFEDYH@EIACDCHKBEB@BAAC@ADBHABKJIAIJICEDGDCD@@A@A@DHCHJHDFEFGBKRKBGIK@GIMHSBCH_BOJECCJCFKKMD@DNJEDEGC@OJCJHRUL@HRJ@H[DCNKDZHCTFDHCFFKR`TANVDFZRDLFARB@HPAPG`ILAR@TERNDFNHDLCLDDCXDYbHF@FEB@LDDVE@JPNfXPINCVDJJD@NJPAJHLXHDNANHhB@DPNLRMTBFRBHHr@`NBFEBOCCBIAQJDHCHLHFA@HSDCRLFTB@HEFLNF@PELBDJALFLTC@EPFLLP@tUHQJDfIHGTB^JTCPDLKAIBATFPADIEGECEMJ@JIAIHGECFEAGDI\\SPOXAFCL@BQTQBBTMZECYGAHA@GJAE@HCAEME@IECFKJADDBABLTHHG@ILEAMNDJCDHEBF@@JNFJELDFKTOT@JETBFFHBHEHKI@@IJEJ@XKEOUMS@AF@CEB"],
					encodeOffsets: [
						[120575, 41009]
					]
				}
			}, {
				type: "Feature",
				id: "120114",
				properties: {
					name: "武清区",
					cp: [117.0621, 39.4121],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@FWôµ@IFCLIB@EHNBp]AGEAKAEDMGZKFGBGME@ILGP@HEFB@BXMEAHUGC@IHCLOD@X[NWHWPKAEF[@EKIOL@EKGBNMJ@EIEHKBIC@BAKMIACCFQZCF]DB@ERAKADIHGEIBCGIIECFaGLZO@EFCNGAGDGAKL@BMG@IE@ADSDEH[JGC@CGA@BMDeK@EIACFE@@GG@FIAMM@CCGC@EM@ADE@CFMAAGHBDKIEAJG@DOGCDEKAGIS@KFCHKAEHIE]BeKNO[IFIOELC@A]GMBKVYCDDgGAICARc@MW@AQE@DGI@@AQ@@BKBAIQQYEFW@CEADIGGBCEIiMEMF_LGEKMBBDWEBGRC@E_CHYGCH_IAED@FFBQh@FGJaJ}AHRAREF@bE\\C@CT`FHC@\\BBF@BID@HGDDJ@@FAHKBARECKDAZBJIVNHCTA@EREAMLHDAFFBVFFC@RNRETHD@FOJMACH@CAB@P@DF@@FGDWE@FFSIEMKQDYCCHKb^JADOCIDGNDBdBCFJB@EC\\A@BJEA@JAAAD@HHD@LFBCFF@BERDHNhZQHMBGHOACCEBWEGD@PSJKCGEUD@CINLFGHE@AJK@HDABBHTB@F`DBFLBBHEDARCFG@ABJBAPVFE^FBGLGCFG_BMLEXGAAFE@@JNRVJHFALFBEHQJCTbNDHCF@PlFLJSXCHFHfVBTNJ\\BPJXC^FAVNFCHFB@FFH@JF@\\ABCFD\\BDMCAAJKQBGAILOEGHILECQLWFENJHADC@QxNHFJNLDFA@CBA@DUÂmR@FBL@BD"],
					encodeOffsets: [
						[119959, 40574]
					]
				}
			}, {
				type: "Feature",
				id: "120115",
				properties: {
					name: "宝坻区",
					cp: [117.4274, 39.5913],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@TZbB@JHD@DODCLM@AP@LL@BNH@ETFN@`E@DNG@CHLBCJA@AICFKDDBKA@\\N@AFNAGRBFjFFFL@DHLBLFQPcXAZMJ]GAVHAIZJFNE@JpDRRDCLFDGXA@EFF@CFFPDfEBDB@DCHCFCJDJIJBLI@I@CB@@ADBB@FALADGDC@@H@BB@FZGFCCE@@FMLALJDAFFFEFDFCB@@AHCF@L@@BBB@BB@FC@E@@R@BEL@HEFD@G@AH@AIB@@@FEFEBALDDEFAFO^IF@JCBBFPNJJ@D@PRDCEKBAXL@BIFD@T@JE@BHHJORFDI@@B@JGH@@B@BDDLIFFHCD@D@DEE@BAAAB@DAF@B@H@NGLJLMRDNMfGIEPMI@GDAKK@KIDIJ@GE@CFDN@FE@GFEPGV@TCDFKHBBF@RW@DD@@ID@TJFKIKLI@EP@IGBCLAEKLEN@KSHIGYACSD@SEAMBBMGEBMQBCMIGKFB[D@HDLPHDBC@IFITDLG@IIIFGVBNJDLN@VIRI@YIAIHIC@CLKZCBEE@JECEIHEAKGDGECBGEEM@@DA@CCCBBEGA[GEDBBoNAAH]MKiIAWKQoIIPMFQAEEDMH@FMSUYIeF@EK@BIOEKJEBICFKaKPFAFSE@LWCCFMHDDEKESBOGBKIEIODLG@CCDEQCEDWEMDIEIB@EHGEEDAEAa@@HqDEJGF[AECCFa@WCEIKAAEQB@FCAE^YDERDDJBLNABD@AJGLJF@FNIAMLH@FPKLJ@FE\\BFOLGXMXW\\C@KPGD@JHDGVFBWN@AEAGFO@KH@JNFAHEHYLNHFCLBFBBHo^MAFGA@KJED@Jó¶EX"],
					encodeOffsets: [
						[119959, 40574]
					]
				}
			}, {
				type: "Feature",
				id: "120223",
				properties: {
					name: "静海县",
					cp: [116.9824, 38.8312],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@NGFMDATCNDR@CCbINEHNJA@C\\EEGVE@IhE[wepc¢·²^QEKIEKIgiQDkehY£uSDBMkUDOJDHC@GF@CAFBFEN@CQ@BeP@@G@HD@@MHQKi@[IGCOCESE@GMA_OcCGDu`a@VZzKDkJBLNXGDqKEWE@cFEFA@ISIi@@KMABJGBcMuFEzGVH\\ATSEUBeALCEMG@CEBUHUCGXaBPtUBBFIBFTDFF@DDKBFNGBJPHXDDMDCLJ^mBIHIL@LR\\@LCR[@@z@NFD@LLBNb@RHDBNTPT\\F@BJF@BXCFBHHBDLFB@HODADE@@JHVXCPDHCFTLBBFNCDCCCU@@GAABEHHZHBCAEdEjFDD@GfD@DXFCHF@ERFDLBH@"],
					encodeOffsets: [
						[119688, 40010]
					]
				}
			}, {
				type: "Feature",
				id: "120221",
				properties: {
					name: "宁河县",
					cp: [117.6801, 39.3853],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@BFLBFJXDb@DEFD\\BHEFIrC@Gb@FBCBFFGH@FJAJFNCXFFCRDCFDDH@CKJPJFALPHTALFCFGCENDDKXF@ETEBObLELJDFALIPFAJL@@FfEZJTVENG@CNFFRBNEJOpJLRBXjJNLG^BBpMAAFC\\HHBAFDADDB@@CN@FFAHFDCHLHFBJGFCFUNKJJTD\\XUXF\\^F@DDDQXXBRLRCBDFEVCDLVDpUl@LEDJHAPRFGL@CETGPBTCDDVI@CFF@GFDCCVGLKEK[Y@MECISG@BKNSCGCKWEAaEBEKNGFSECO@GGM@GYI@DÅCMLHPTF@DJHAVVNKEGDETJ^[TJNNd@NOAMFYJ@@GFANDPEJB^aOadSTQSI@MHBDIEOKCG@EEFCKCqXO@@DMFENCDDHCCGJ]AKFoDaGGHYFDHKJiCMFGC@EQ@AEHGAC@IEAATKOHGIC@IXIFEoGE[JCFCDHNmRADFZMF[EEBMO{GU@AOW@@]ZeHBDEHBKEfQkuIWBs@EC@d[@[^EDMTKCEEcI@cDAB@FCBCACmOCG{PYHeBgPwPFDDALFFFCHQGSD@BHFAR[TaFYXMASUiGFL@DQNCJI@@D@PLDN`ETEFIGMCGBCE~CAIFDPEHGEQPHJADFJGHCJLB"],
					encodeOffsets: [
						[120145, 40295]
					]
				}
			}, {
				type: "Feature",
				id: "120109",
				properties: {
					name: "大港区",
					cp: [117.3875, 38.757],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@JFFL°_`ONJKDDFIFZN xlb~yFVNRrdJGzDPVFBCTNND\\UR@E`F@@Ip@IWGUoawOEE@ÏDgK{İEEMFëCb@KwOCDHHKBDJCDEEEAGHOABFABMCgDLSQ@CFEBMgYIDQINE@AUSwSAdYEHQMEyK[KI@GRMLE@@OqOoBOnpJ@BmEAFHL^FDB[C@BBDVFAHFJENB@sNEjQAMYsUgCSBGDJH@\\LjGR@NC@@G@HO@AfR@DM@EFEADBE@@HGDICCPlVANTC¤vgZlfRChjLJ"],
					encodeOffsets: [
						[120065, 39771]
					]
				}
			}, {
				type: "Feature",
				id: "120107",
				properties: {
					name: "塘沽区",
					cp: [117.6801, 38.9987],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@|ODHnPBDADEDA@CB@ddJFFLDNSFC\\]\\@@cFD@nACOMW@M@ITURBRZNHNWRQoOj½fcqAqeiDÿÍyÓįFL|Ch@ÐFFxPpbHVJXo@@JCTR^BPABQA]^MB@bE@@FQBFVJRH@FXtPNZSBAja@@NDTLJrQTHFXZFB`"],
					encodeOffsets: [
						[120391, 40118]
					]
				}
			}, {
				type: "Feature",
				id: "120111",
				properties: {
					name: "西青区",
					cp: [117.1829, 39.0022],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@LHAHRHATh`LHNHDG`HDGZ`D@FQDAHXFACNAFLVRTBFOfHDCVBFQH@HSXHEPFB@LDBF[bDbLFKJBFLADBDjLvCPEI]FGEIGCBEUSjcFiBIVWfaHCjN^HtwBBFGPBJGjFBEGECGDONMFAP]TDHQOWCMGAMHKIJEIGQ]aDlUG]VGEGDC{PEbBZmE@@GH@BCA@FMQCFMYMJECELCMI_P¯`]R±¡¸odfx\\gF@JUFFH[F@DIBGMMFaJDDQ@MCSDCBENMH"],
					encodeOffsets: [
						[119688, 40010]
					]
				}
			}, {
				type: "Feature",
				id: "120113",
				properties: {
					name: "北辰区",
					cp: [117.1761, 39.2548],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ROHFFGCOJEDB}DFHANDJHFEFSM_KC@O@CJ@DIRM@CEKKALFKACHoLSJSIBETDJaEIIE]E]K[MYUYQILC@GF[MGNKEK@A@BCWECAIFEFYAGFOMI[OFuDiKACBCEKIAELaKaCE\\CA@KEAFOWGGTG@ERUACDeGEPSAUQKHE`FNjNFJADHHCJFB@DEXZFRRBJLA@AR@@BJ@CHF@BRX@@NQdDBBJhHCCZDLUNA^H@BKDPFEJ\\JMPfL^AJFFGLBDGLET@HJLBCFHDCPH@BIJFCLGABHNBDEF@BCN@@FHDDDN@BNEJH@@HF@DEJB@FfLNC@AHB@DHD\\IFGTCBCF@@JNH@ALKHBHCHBDMFEP@KYbHDEJF"],
					encodeOffsets: [
						[120139, 40273]
					]
				}
			}, {
				type: "Feature",
				id: "120110",
				properties: {
					name: "东丽区",
					cp: [117.4013, 39.1223],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ZV\\N^L^FJFFJIbSCAFTJTIpKDGLBEKLBjHTVNBZWbE\\SBQGE@ATCRHDGEEKECBECxOhOfAZGA_YEEWSGqRKISC@Mb@BiTAMYsOEWG@IQEURA@EF@@acUOXQRYCUDCHDTEF[SUEgAYDcVGJM`iAWDWLQRMHUHgDsDBLHJFCFDFGHBFFVEAGHCJN@RJFPIhBD\\FENCPWA@LFBAFHBEJUEARCDIAEDQBRNa^"],
					encodeOffsets: [
						[120048, 40134]
					]
				}
			}, {
				type: "Feature",
				id: "120108",
				properties: {
					name: "汉沽区",
					cp: [117.8888, 39.2191],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@LMEI\\MTABKN@FCDMH@COAcH[AoēAM¡Wa[MeqpQRMXMGQYQASV@J@NNXDPmBAtJXlveRLFGACFGAYf@^X@BPV@|HNPFA\\FNEEYBCnQGMDCDE\\IHFpEFWJ@JJDGHLPBSFB@JBDGHBFR@@FHDNEjDLICGZEHGbHpCLE^BHIDDCGDCFMNE@CP@rWLDEDFFH@"],
					encodeOffsets: [
						[120859, 40235]
					]
				}
			}, {
				type: "Feature",
				id: "120112",
				properties: {
					name: "津南区",
					cp: [117.3958, 38.9603],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@TLv@CNHFFBHGZFETNPhCVGNGRQXKXCjBN_HIdUZChBVF\\TFECSDGVCZDRQPWdVNA^]RBBAAOQ]DSE@F_Q@[VMCSMADUECOHycIqMQEU}zkawENRDENB@ADG@@HF@YnaAOF|CDFHUHH^kVbCR^JHIFLJNGHBDNPXGRSCO^EBMNCPDHHFAFiEIHOAEH"],
					encodeOffsets: [
						[120045, 39982]
					]
				}
			}, {
				type: "Feature",
				id: "120103",
				properties: {
					name: "河西区",
					cp: [117.2365, 39.0804],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@d@hZNFdcLYXKRCtCMOFSYEGHEAGEDMu@SKAAsx]GMTGt"],
					encodeOffsets: [
						[119992, 40041]
					]
				}
			}, {
				type: "Feature",
				id: "120102",
				properties: {
					name: "河东区",
					cp: [117.2571, 39.1209],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ZBVFFIGABEEA@KXBDOFM[EACJgOIE@QIMGDBHUFEEGAEHECEDGIAKQDWLKZcdQPEP@FOFBJTJ@HNORJf@DBCN"],
					encodeOffsets: [
						[120063, 40098]
					]
				}
			}, {
				type: "Feature",
				id: "120104",
				properties: {
					name: "南开区",
					cp: [117.1527, 39.1065],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@NMVDCG\\E^B@HlB@YEDS@CHsNSiMGDebUXAJEjidVTAFHDFJ"],
					encodeOffsets: [
						[119940, 40093]
					]
				}
			}, {
				type: "Feature",
				id: "120105",
				properties: {
					name: "河北区",
					cp: [117.2145, 39.1615],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@DBXFADB@L@LFHM\\NHED@JKZRb]QMRAFCJBDCBQYADMCAe@QIMP@GSIAIPE@E[EGH@ZEF]^HJAXK@KF"],
					encodeOffsets: [
						[119980, 40125]
					]
				}
			}, {
				type: "Feature",
				id: "120106",
				properties: {
					name: "红桥区",
					cp: [117.1596, 39.1663],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@J\\PNHEZBFEJELEL@BWGI^]FEkA@G]A[FDHUCMNEHJ^"],
					encodeOffsets: [
						[119942, 40112]
					]
				}
			}, {
				type: "Feature",
				id: "120101",
				properties: {
					name: "和平区",
					cp: [117.2008, 39.1189],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@DT@FCHG\\FFOROMEgYc@"],
					encodeOffsets: [
						[119992, 40041]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/world_geo", [], function() {
		return {
			type: "FeatureCollection",
			offset: {
				x: 170,
				y: 90
			},
			features: [{
				type: "Feature",
				id: "AFG",
				properties: {
					name: "Afghanistan"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ࡪ͇وŐǬϠڐŶӂʮǚڦ۾ǌƀ̚ІɣʪҴMوǯʲĹ،˒˰ǋ˖ϪԈiżŬĘͺβ̈Ҕȏĝʱʪ¡ý۷ͪ˟̊ǰώĊԼϖׂ×ࢀAƬʋӧĥяƹ७ĭࣗǭӫλȤΣĪллΛ͑ɳ̡ߛͦ։՗ɅΥԕ²ԋ͡ɿ̳þٝŋğɻسDҵӇ܍થΓבôǝȁԇņ࠿űටіހހåզُƚßՔ˟ڢάҢιŮɲؒ΂ਸ"],
					encodeOffsets: [
						[62680, 36506]
					]
				}
			}, {
				type: "Feature",
				id: "AGO",
				properties: {
					name: "Angola"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@ȸصʌԋȘ˕͐ѯ֊æˤŠҬşŲɀɂӨԶ®ƤіHñ̡৴RfՉǞ͕ūԑÖԫ˪̷ৃȼüκsԴŴϦ¹ĘʹĩСƨϿů̿î́ყZᦵ֤ۋպԽ໳΁᎝Š׋Ж₭ŵÏԃϞկ~ԉƝЙǅÿՈŜ݊̂ޒªΰ˚ݶȨΆӘռːϐĘج«ӊʣ̜ɡԚȵԎ®Ǩʶͬʭ߼ǣ֚сՐĄǎΌŔʒg̎ĸៜ["],
						["@@ɉėɣلͼδʪƘ̀˽̩ǯƍɍλ"]
					],
					encodeOffsets: [
						[
							[16719, -6018]
						],
						[
							[12736, -5820]
						]
					]
				}
			}, {
				type: "Feature",
				id: "ALB",
				properties: {
					name: "Albania"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Ń˷ŢέΒȳiə˗ŧ»˙ϷСƛÐgȂү˰ñАîֶŖʼƗƂÉˌθаÂƿɨôǴɥȪďȨ̂"],
					encodeOffsets: [
						[21085, 42860]
					]
				}
			}, {
				type: "Feature",
				id: "ARE",
				properties: {
					name: "United Arab Emirates"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Ƭ¤ɱڂƂ۞uԖ{ֺ֪ظՠՎԮǆ˹ŖڑѕGçճƪŝϝǑE΅ʓΏuͷǝǱᡋъ͏࡚Ț"],
					encodeOffsets: [
						[52818, 24828]
					]
				}
			}, {
				type: "Feature",
				id: "ARG",
				properties: {
					name: "Argentina"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@ߗ§ѓ̔ԑx࣑@Aሞ͒ϵрؿનԋ୲ȿϙп"],
						["@@Ӵ؇͠ڰॠƊǷ໶ോۊŷਆاࡾ͡Ŧχࠡ౧ࡒɭ़ŷڔƈނ٢Ǝݐжǈфӝiڣۻҩ֟΁ॅࠃ૭ଧȽڥɣࡹT࠷ǽȇÝիËѫ੨ܙŗ׃Հν§Ч߯ઁఛ҉။ǩउĎǰԅǣػƺщԋ̏ࡱř̪͕߱ɗŜ࠳֨ʧҠˆʢѧޛʻڭԹūࡋȣ҇ߏEڃљʋؿؙࠞߦǝ˿ݭ঳Ӄձটލͧ΅Ͽ˔ࢍ֔ӡΟ¨ީƀ᎓ŒΑӪhؾ֓Ą̃̏óࢺ٤φˈՒĭьѾܔ̬૘ěӲξǄę̈́ϵǚˢΜϛ͈ȝॺ͸Ǣƙ਀ȠࡲɤݢԊ̨ʭࠐEޚَոo۰ӒࠎDޜɓƶϭฐԬࡺÿࠀ̜ބռ߂צԺʥ͢Ǭ˔ඔࣶд̀ࢎĹɂ۬ݺશȱ"]
					],
					encodeOffsets: [
						[
							[-67072, -56524]
						],
						[
							[-66524, -22605]
						]
					]
				}
			}, {
				type: "Feature",
				id: "ARM",
				properties: {
					name: "Armenia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@୞ƀǨə͌ƣǛɁ҄˽ʁˋΦɫϘƏl׋̣}΃ӢHżχCʝɤǩuͧʖرȼĄФƛ̒"],
					encodeOffsets: [
						[44629, 42079]
					]
				}
			}, {
				type: "Feature",
				id: "ATF",
				properties: {
					name: "French Southern and Antarctic Lands"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ը˃ߐĿǅɽϣಇÃq҂ŮΎÊǢ"],
					encodeOffsets: [
						[70590, -49792]
					]
				}
			}, {
				type: "Feature",
				id: "AUS",
				properties: {
					name: "Australia"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@ߺ́ҜŘپǊԎÉÐঽ˽́ēگ̉ɰ׍בǧ®ԫԭܘŗֈӝܸtϬռõ"],
						["@@̢ڇբ̈́˦ΡЖ͟đϋǴܛŸнɄĹɬܕąѥ˖֭࣬ѭצЋ֞λŋȯӔՃࣧ͜ͲȂ;ηȴźƢࢹ׬ԩϸ͋ڀڹʀڭtӏËԳА܋µݓơϵɩݡjӕǕ׻χއثЭ̫ٱ˫гʝܧ͕нɅػŉׁªˇӕ̇वޡ·ϫ͙ԕέ۟ψԥƪżѬҝǃ݁؉ܩɪӉƄӑÔ߿ʐիԮƻْțьЭ;߱ĸˢРȯزЧ׉ݝƷѮҬŶӞ͘ЬãجہܑԿ˽͏ڛٽΊ~ҀԿ،ѹ̀ǂȘઃԚןz߯Цຓāછ̝ख़˫ߡÈࢻљܯȗǉѱ̳Ϳ܉qՅõݑƶ׿ğֽԁ҃ʕуʁЗˋؕ֛Bࢽ՜ҋǄlӖкŘƚȒ̠ĺאģӼѻࡖƏӒӎͭնsʚϋͰĽڄӓڔřΪτε˳ެиʑʞ͗aјеڎă˄țʦĠӠǢȸŘрęӮΎÚٕ΢׀ۀˬЦΪٜ̰ϤàɴĻڎ̺ԚĤŶȀɞüҬoࢨʖҚώɊ҆ӲѐͲvҘט܎ΠܩΦǚ̗Ј˂ТψǻĸٖҠаȮͨцƜ`ɼτĭdɂτŦОŔبϫҲӽՂMՖÿǱҦДڪϜɘſȾκӒԘ̒јıۺǂeі؛ˢ҂Ū֎ȻҀ·ۼɋʈĐԶʵӬʊ͂ñȠǊϬеɡ͉҇ͻ˿Įͱʙп̗ЭÔʁڜҫ٨ˏѠ́؈ӻʂBѰɍŶʷߤ˵ֈ˼ǐҊǠόľҤʰڞŝОÔʔīӔŌنǈǠŽˬȮѾǆҦtʈ̸̾ʂЩÎՃȾķΛ̨ёÚӇ̥"]
					],
					encodeOffsets: [
						[
							[148888, -41771]
						],
						[
							[147008, -14093]
						]
					]
				}
			}, {
				type: "Feature",
				id: "AUT",
				properties: {
					name: "Austria"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Û΃ӁCǎǻ˧էǇƗܽsщȏۛÞயɐȉ̊ࠧƣĭǅԗŢѕxϝƶźȴƬʪ²ьɹŤɜݎ׸ƮЖ}ˀǣþƜšո̠ń̒ϰز˓ӀΆ̐ÚٶʱЂªϰǁãŃČ̅"],
					encodeOffsets: [
						[17388, 49279]
					]
				}
			}, {
				type: "Feature",
				id: "AZE",
				properties: {
					name: "Azerbaijan"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@ʞɣψDGŻ΄ӡֽŒщϰƃ͆Ǫv"],
						["@@ϊËƞɈԈͺѴѵђ׭ϺʸɧۗãƣٵƟ̭̍ȝvзȽ¥ԻѲ̂дʝʚ̿×যإk׌ϗƐΥɬʂˌ҃˾ǜɂ͋ƤǧɚȶƎضʍҐ¹ŘĲбҔɔŚʀ׀ԙ"]
					],
					encodeOffsets: [
						[
							[46083, 40694]
						],
						[
							[48511, 42210]
						]
					]
				}
			}, {
				type: "Feature",
				id: "BDI",
				properties: {
					name: "Burundi"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Á০ɃϢԜßʲӎҀÅ¸ͧǸȏT˗ȹǭ͛ѫ̧̥΍"],
					encodeOffsets: [
						[30045, -4607]
					]
				}
			}, {
				type: "Feature",
				id: "BEL",
				properties: {
					name: "Belgium"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@؜áުǪՐοҦȝħ֧ɕĝһܿϦћßדІϷͶϷ`ũ̒ڪǔ"],
					encodeOffsets: [
						[3395, 52579]
					]
				}
			}, {
				type: "Feature",
				id: "BEN",
				properties: {
					name: "Benin"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ۛįȹ׆ኞǛǦЮ̇̌ʱʞņѶ̀ĨǠξЪĀȀʤˮʘ̠F٘ә˩ȎӽǓͷĘɧСԳʵʳǁՉt՗µണ"],
					encodeOffsets: [
						[2757, 6410]
					]
				}
			}, {
				type: "Feature",
				id: "BFA",
				properties: {
					name: "Burkina Faso"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ֹɐϽ̍Ƀϗǰƥ˦ϙǾÅӦɮΤo˴ښۢŬּɲȴОœΚǢŘɎٴϖǆˀ޼ΒҦŢɀǇՠJáСŔϣӀչНॺȏmֻǿʣЩÿǟν˿ħ݁lϳâ˓ƉωÖร¡qӉŘم"],
					encodeOffsets: [
						[-2895, 9874]
					]
				}
			}, {
				type: "Feature",
				id: "BGD",
				properties: {
					name: "Bangladesh"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@i׽̉ŶÆگʉѬµєǅКΕӨޟü΋˃ҳΧǠũƵʃĠ͗øŽۖ̅لƜԒԫɤȆ̪Հ̼؅Ѽ֮̔ږεВ£ô׏ߞřު^Ӟƛϯ܅ϕµʷӍҢѥƎ՞ɶFѶ೯"],
					encodeOffsets: [
						[94897, 22571]
					]
				}
			}, {
				type: "Feature",
				id: "BGR",
				properties: {
					name: "Bulgaria"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ʎΉ͚Ö٦ſ௾«иɌবȜ̩ؒӴĕѥΏ̫׹˔ӏܣŒࡥ˃Uлޅÿס̊ڧɱة|Ñ֊сːƒŢĝĴƘˌ͌ˀСδ÷̬ȸȐ"],
					encodeOffsets: [
						[23201, 45297]
					]
				}
			}, {
				type: "Feature",
				id: "BHS",
				properties: {
					name: "The Bahamas"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@ȵ£ɇӜ̿ʐǾՔʨۣ̎Jӥ"],
						["@@ࣷƅÏ̴Ђäֈ{~ɕ"],
						["@@ƟׯƷņ`ѮϓͪCĪڐϗ"]
					],
					encodeOffsets: [
						[
							[-79395, 24330]
						],
						[
							[-79687, 27218]
						],
						[
							[-78848, 27229]
						]
					]
				}
			}, {
				type: "Feature",
				id: "BIH",
				properties: {
					name: "Bosnia and Herzegovina"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@̦FȿσМ͓ūЃȡƽû˙țūҥݓ͈ͅΘ͋Ȅϭ̾ǻʺЩϾǬΒ̞ȕǼǨϾnܠƓ׈\\Ϟȅ"],
					encodeOffsets: [
						[19462, 45937]
					]
				}
			}, {
				type: "Feature",
				id: "BLR",
				properties: {
					name: "Belarus"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@߼Mࣰ̈́ȚӄېːÿϔԜƚ͖ࣘࢮɁŢȻѲĴࠒȧĊЁǷɧՄս΂Ƴ»Ʊ֦Ʃʎɡ͝ǿڳǉÿȠ˧ȸ՝ܝ¹ʵȁÃхͭĆݷ¡əȞ̿ƥ́ŨڍjफȬࡕàٱmҡɩГeϐʷϴԌǢLͰɷ͌ϊ"],
					encodeOffsets: [
						[24048, 55207]
					]
				}
			}, {
				type: "Feature",
				id: "BLZ",
				properties: {
					name: "Belize"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@OŮĸƴı̞ԔǄZHūǄGaɭƋεôŻĕ̝ÀăīщǓɟƱǓ̅ʣ@àॆPژ"],
					encodeOffsets: [
						[-91282, 18236]
					]
				}
			}, {
				type: "Feature",
				id: "BMU",
				properties: {
					name: "Bermuda"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@OEMA]NOGNG\\Q^McMOI_OK@CQSGa@WNLVWHFLJXVFGJ`ZRTDLeeWKIHGIK@@[MQNi`]VDTBHCJAPBJLVFjT^LV\\RJZRn^RH`TfJjZHHOTTFJP_NOX[EYQQKMEJOLANJH@HQHAARF@ZEPS[U_IcRQXE@EEKKOCGGCQCOGISKYGUC"],
					encodeOffsets: [
						[-66334, 33083]
					]
				}
			}, {
				type: "Feature",
				id: "BOL",
				properties: {
					name: "Bolivia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@य़͟گӳ؈વȲ۫ݹ؅ŗ͡୆ҋऺˆ߾ѳ΢ŏ؆ЫֲՌ࣢αۺȖ˰ƭ̶͠рh܎¤נǸ˶ܩഠزíѠnȈʪ݀;Ѷ͂સƚęؽļ͓ãࣰ֛ݫऴƑ̻ͦ֨ǕΐʑՈTӦʟӟǐʕZγʓa͒এྖūӟĜͧҞɽȤԹƫڋɯρĄӏʿǥaʶ޳јޭ^ัʓЕ݋sҋͥ৕ƉǸ"],
					encodeOffsets: [
						[-64354, -22563]
					]
				}
			}, {
				type: "Feature",
				id: "BRA",
				properties: {
					name: "Brazil"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@૮ନॆࠄ֠΂ۼҪjڤуӞеǇǒӜŖӼBҦ̡ƴ̿Ƌ̻į͔ýޔƿʤ֥ɪ΃ǏࢱǈÈଜʝҴˀǦăӐɰςƬڌȣԺҝɾěͨŬӠྕ͑ঐʔbYδǏʖӠӥʠՇSΏʒ֧ǖ̼ͥळƒ࣯ݬä֜Ļ͔Ěؾષƙѵ́ܿͽȇʩџmرîӃƟϡĪÈ౨ۏӷݏv҄ͅ֏¶ǲΰұԞΓݴɜƶA΢ԖʎċҔɊ̈Ôϼ०ֲێǊŔŴݴϚᘰpθſӔύ̬LؐӀƒǚē͐ӯĔYՀ࿖k˦̂ɸˉǐӷǂļҨѻٸÆǌʲشȞΊƐĮΤ׸ʆ¯Ǯ܅ðśՊ֞ϓɒǀþجŅڜȿʐȤžल̮͎̾ŏʂѪȜȗŉσ̀ŵȖϷɷ̏ƅɌыÔϳԬϿЮ¥ĢǒˆϠƦ˚ɢҬíȲҚçøǢƗǘĎʐͺõЈĒӔǱξǥʺɪȊŘɿДÒ͒͊ʴؤӼޒ˺¢ȺҫҼ฽҈Ƒxׅمەʾʩ๤Ɓࡃٔր੐̟ඊԡШӱƏҫ঎ʶ࿐ѹఴఔ੸व٪ʏܖ̦˅˸੭Ɣԗͯ൹ёշஅୡՙोثܯȿgɻءÒ༽ɹಓęօˇͧƫ૱࡛઱ƛࢁڹηȟԋ࣯Fೕ͓סύवʗ঩ڝ܅࠯ũطƔҫƽࡓȏЧחҥट๕݉ڗ֯Ͻϥߛ։ӑɷӈψЊӟֲڇҬࡹՠ̹{ࡅٰձę"],
					encodeOffsets: [
						[-59008, -30941]
					]
				}
			}, {
				type: "Feature",
				id: "BRN",
				properties: {
					name: "Brunei"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ͬ̾܎ҢЯ·՛Бǭ˹ϥѦ"],
					encodeOffsets: [
						[116945, 4635]
					]
				}
			}, {
				type: "Feature",
				id: "BTN",
				properties: {
					name: "Bhutan"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@΂ˍÏԩۇ{ۿÈՇſޅ͊kǚ֌زҒɈ׸șѺqπɥ"],
					encodeOffsets: [
						[93898, 28439]
					]
				}
			}, {
				type: "Feature",
				id: "BWA",
				properties: {
					name: "Botswana"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ǜƭ˄ӡॎइήĝD̑ʚՑٰŹ՚ϝ஑أݭع˩֓ʧ́ҙãƧГďʽ՝țہ¤БɾΟĸХșȵГЉʧпϑ׻đȇ̐üԠӽߚɧŲAរࠤ|Ჾشಖ͎̎΍՜ͤʮDӂȎưÙ͔ڣ"],
					encodeOffsets: [
						[26265, -18980]
					]
				}
			}, {
				type: "Feature",
				id: "CAF",
				properties: {
					name: "Central African Republic"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ۜÚƺɎƔgȾȏ੔͐Τ͠Ѭ̌ĉ̐ʂüߺ½߆ϴ؊ࣺю;ՐƜĪΫӜԿF΃ƋΓÄʻ̆ʍٖοҢͻT˗֠ѫΖεɆԋغͩƊˉˣęաpكĘ̹ïųȱ˕}ͧǲधнϥĎŗÝʥԕطǐؙĊ՗̴ۓ˸҉˓͛яùדգ²֩ƘԅѻѯޱėʐϦϧ˔̳Ѡï̠ЇѮæʢċΞÞٴȬƴц࡜"],
					encodeOffsets: [
						[15647, 7601]
					]
				}
			}, {
				type: "Feature",
				id: "CAN",
				properties: {
					name: "Canada"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@؎œުxЯ΅̵Å੥Φȿˬ͆ʸ̎С"],
						["@@Хcઝ˂ޯІ̄î૆Ɂ࡮Η|Ʒ"],
						["@@хŝൡϢʥ̘ݩ̌Ưʈࡻư͕ҜðȚࢨǿԨŵ߄ė˺̃дЋ࠼΍Όҩ"],
						["@@։ܿո˴֠ǵ̏̉ݚɱϰȴ࠼ʵʹ؛טƞņѿʼԷΝ݉ϝփǂǾیɻńইܯԅצЂ߫Ȳࣙ¹࿅~ŹʠԼ̐λɬ۸Ԓࢄ೾Զӎܲ̂϶ǋɫ҅Չ"],
						["@@@@@@@@߰äʥ॓ܶگͯDԑϪ̵ϮчʾƻτºˎЂŋ"],
						["@@͡ѳχîəʢ Î͖ʦΆkɈǣ"],
						["@@ঝҧץnǿɪزϲ଼SiǍ"],
						["@@ƼυјżӨɗं˽४ʽöЍؤÞ׶˥ݙ˃ಳȬҽϚ࠭ҁ஡ѣ˿Ӯଗăܴдņڌ˺ޔ؈å"],
						["@@ष¥ȿЪΦҼޖŜپɷXέħřձʛ"],
						["@@Է̍ଉʬۃğଫϘ݊ʼטζࢼʃԎƯʦǅԠ͍"],
						["@@G࡭૰ڄ৐եʡح߾֥࢚؈ؖܨ°ईஞÝఔūૼй¼зس҃פ҇ŃУ࿩חୡŻࢃʨʣуߵ۽ʓοই֩ளÇڏΡÇձ঍Ŀਉڻ࣭ु͙ڏ±উంƕϜ޻ϼّ୲ǔ༞εࡀ͋׺Ѕ੆ɳࢸΟ൶µࣴąƍܫʼࡋ،ळనߗ٨˚ҔࡺѭೢףѶഎЀ॒לҮהç֭֘܌৷لলࢤνݾ˫ಾגȘ෸ɫࡸć۠ɚ޴˵ਚӣʮ͙ຄÛ}۷˪ਜ਼ގſ،ӵ௖Ұߦऔ֌ϸٺݣબੳघ৙͵Յ૤Ӂݰӓംɏբˍͬ܃ټŏͶͅÖऻ؍́׽̏൯̗੏ۑ෇ƋᅛǮుPࢇÍ۱׽ੳω௉૗ॵޡ܌Ɛഘૄᄈ۪సČݔЫߍ֟ˊࣟ˜هતп൸ŨࡆीÎ؍ժ̥ਣսᇷԁ࠯ͽयٓÖ܆ฤ۞഍णĹջӆBନύʐ֛ƛ˧ɚٙىʱٹ̕ϡΥŽˏ¥čȹ໽A౥MϛƷࢵĿßˍ͝ޗBࠛGϛƅƊǑøʯeďષлࡽſউ҅Ɂ@˷ƂĥŦnĔȂ̎ЂҦʘӺǙܴǵނ࢕ЂľƬūĺɳ@ǛƆ¥ȤǍēɥ¾ĊȡĊćɚٵːڹ˪ࠑ͘߁̨ݧʃ˝Sਕɔڻŉࠁʺ࡫Ɔו¾ʻƜƫҤ˳IE͓჏BᮝA᭯@ᡃ@ᠿ@៙@ᢡ@ࠛ@᠁@ᛷ@őF྽ࠜ׵δຽΐҳݖŤԨ੻ΨƧڴ৭؎iѠҲКwՌෙ՘࡭ॠՁ׾ޑϚ֣ΈѿѢࡇ˕ࠇҹݛւדπࠋɸࠟ|JⷎNᷲ༬ȭ೘Й࢘û݆ΖৰˀఢĹ఼τ൘Ⱦ־ΑظȠȊЄ׈ęෆݫ૦֬ŖّਔƐ͆ʖৰ·౼Λዸ̭ୄƛࠖÄଊэ஁зຶǷᗘĲܒƦࣆԋࣴьࡩΦժ˼৾ڦĎڴȩࡊҗरä๢ϛಬƄ௬oĭԺݞƦದ˵KߑՖڠڰuϞࡊ࣑԰কͺäघশ؎ૌƇࡘχଞॅݗЭ༠ǝ"],
						["@@нϿሎʬୠщॊіސ˟یࠛфΒ׭ࡰ݊Ŭ࠲Ƈश͹ՆࠉʼץථеະЉĝσൡã՚͓˱ູ̯Ƃฃɪঋ»ཅ˷ᒃű๻āҕІଫɮݙģਛږ֔ĚಘƜஈરƦྷȞᅗã஗jѷ̴ዎͲಗ[ืɚ۶ـגͮᖬԠ࡬ǋ"],
						["@@݉ևಹך˸Ş૸ٔȁ"],
						["@@öɵࢿ|ࣟjࣿőʑ¼ऍѾ̠ИÈነěชң"],
						["@@ڎԽޤڴᒆΈ෺ࢅůջဒʒߒͮሀыୄЏŊν༚Ȑ࢘՗᎐ܸͩ͹ߐ޻໯ϹጘչೲȁீޙೖÇʽכ้ঋਗά೓߲ઙĿŁӕࢪӥଜϯΌɟմࠩ́׿੕ɪᑏڨஎܣ࢔ԕƎ̉ᗱͲᅩӤ৳Ц̌ʂయќ௥Т`ʑᝡƅ܃˾ֆؤ཈dႸņ˫̜̊оચࠊɳϊ͕˾౿Рၳ˺՞ɆࢷԺ݋´ڏ˸҇ʛ຿ŅᵝȈᄫʚഹŴۥ̐࢞Ϧ஝Hˉ࡚٦ݨࡺ΄ᓪɢأի"],
						["@@৊ǯຄńɖʑ޷Е౜αƱݳ൝͗߳ê׉͎ᐡٮjˎ႖ĽएռসР"],
						["@@࣓عय़Խ݆`кѮΨ࠰ɮცྈȱళݟ৉Ǎ"],
						["@@ᕍЙѷςኹѺήΤ׌ؘܰւࠑԦᭊƀ஬ǧᒰ±ࠄʑࣖΝ੍ɃᏝןਫי@ν"],
						["@@ҙ͙௝Øৱɖ҂Ϛீɨܼ̬̍ˇ"],
						["@@ٞϵљϣس൱đࣗƈjӬ൝ÝÁٮࣜౌ˺ஂµÜŎ"],
						["@@̙͢ݠƘࢢƪЩԝЋ᭗Žᑯη౩mŅ˜პϊ④ĳ୯Ʈପࠐ߈ɾᛄ˳๶ӻฺÛறߨޔ̪ࢄĭ˲Џ"],
						["@@ढ˓ကFܨˡȑ́८ȍՔȧଊ௬ë೸ǼႊðീÏ࣒ͅȊ΍ԽɟభǷ੽ĸᜱŻႫcഫļᖁ˔̃ҦĹжࡇξ჋ĺঅʼ͂ΈႾÁ"],
						["@@ŗ٣٩̇޹£༝Ϋ഍ŹଗǼ@@ුؼႮծಆ[ସŬ"],
						["@@ϣy༽Âɡɼၜ]מƻĵĩ"],
						["@@༩ʋఝ˔ڼˎ௮Đஈſ˩ʥ"],
						["@@৽ǏඉBbŤࡴʦҌદǝ"],
						["@@కǥۃȚέ͂áΎજӪÅ৐̇ɫ̣"],
						["@@͜Ε൏Ĥ൩˘ሏߺʠ৫ȮÕ͐࿶ŕᗢ̫ٞЍ"],
						["@@০˕ଽʟ༇ك๥Óდņࣗ΄^̦ڔɢ໡Oए˨ՑϠ׌ώ׊ʲࡴÎοȖዜ¨੶҅මǵ൞ǃڒև"],
						["@@ᖢßᅮŅ໤ɫɡᏅη᎙ǟݻȉᆬJጡԙേʃ෯ۇႿƓՙǡᡷěୈĿׇƭ۞бߙ˽ಛʃЋ͡୫ʣŞȏ෬lȳᖟԋᔧɴឿŻధĸཟªĿЖ༊Ȑб؆ԢÐᖤγ଩բഹǈڼ͘๰Ȩʄ̊஋͠ΥѠᘞڒĝ಼̪ቃĬ᰽Á๣˸۩ͼগʘȁ˺దǈঘ࿲ƌం̺ਬ©ࣤɽٔҒૐƈບĢᢲҀĝ᝚ƚᆔÁᆒÁ"]
					],
					encodeOffsets: [
						[
							[-65192, 47668]
						],
						[
							[-63289, 50284]
						],
						[
							[-126474, 49675]
						],
						[
							[-57481, 51904]
						],
						[
							[-135895, 55337]
						],
						[
							[-81168, 63651]
						],
						[
							[-83863, 64216]
						],
						[
							[-87205, 67234]
						],
						[
							[-77686, 68761]
						],
						[
							[-97943, 70767]
						],
						[
							[-92720, 71166]
						],
						[
							[-116907, 74877]
						],
						[
							[-107008, 75183]
						],
						[
							[-78172, 74858]
						],
						[
							[-88639, 74914]
						],
						[
							[-102764, 75617]
						],
						[
							[-95433, 74519]
						],
						[
							[-123351, 73097]
						],
						[
							[-95859, 76780]
						],
						[
							[-100864, 78562]
						],
						[
							[-110808, 78031]
						],
						[
							[-96956, 78949]
						],
						[
							[-118987, 79509]
						],
						[
							[-96092, 79381]
						],
						[
							[-112831, 79562]
						],
						[
							[-112295, 80489]
						],
						[
							[-98130, 79931]
						],
						[
							[-102461, 80205]
						],
						[
							[-89108, 81572]
						],
						[
							[-70144, 85101]
						]
					]
				}
			}, {
				type: "Feature",
				id: "CHE",
				properties: {
					name: "Switzerland"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ƫŹȳϞƵіwá΅χƙةŀǻ͹ЏơƄһ˵Л¡αǶ˽ςБſ^ϠؚҾɈϤûɲƞ܎MǦǼ࣒ʱ"],
					encodeOffsets: [
						[9825, 48666]
					]
				}
			}, {
				type: "Feature",
				id: "CHL",
				properties: {
					name: "Chile"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@Bም࣒@Ԓw˧ͻܛʻЭӻä؏ʨ࢟ŨੑҸ࡫Ҏୃशۘǭ୼֗૜̟ѢϬ˘ֺޠΎװı"],
						["@@͢୅؆ŘĺɁ˿ࢍࣵгඓǫ˓ʦ͡ץԹջ߁̛ރĀ߿ԫࡹϮฏɔƵCޛӑࠍpۯٍշFޙʮࠏԉ̧ɣݡȟࡱƚ৿ͷǡȞॹϜ͇ˡΛ϶ǙĚ̓νǃĜӱ̫૗ѽܓĮыˇՑ٣υôࢹ̧̐֔ÄgؽΒө᎔őުſݝPЙȷݷ̣Ɖ޹Σoॅ˚१ג@@ਲ਼ӔˁՒʄӰх֒Ņ෤Φ߰ࢴٰౣʔߞݒ˸ඊत̏Ѯგ֝ɠʿ਻ՉŠ˂ல˺༒ϮָʍࠎéूΠԨപ׈എΤబȗ఼ʤۚĵਞӮਆưྺ˒ნˀሤÕ൘ǩ஄ќɌɦњЬֱŐ؅ѴΡ˅߽Ҍह"]
					],
					encodeOffsets: [
						[
							[-70281, -53899]
						],
						[
							[-69857, -22010]
						]
					]
				}
			}, {
				type: "Feature",
				id: "CHN",
				properties: {
					name: "China"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@ԑഓΫۏѷ܂ĩخӶࠜڦَϨʡƣԓ", "@@ܩЗۏʺyܢаϠࣾɾӚoȊ͍σσșӟ"],
						["@@ฬˍ঺ׯͼ߃౨Cܰͨ൸ʜѳݱ͙̭˽ः֡ࠇ৵ƪܝ̑ɜܙť঳ѕwLяթӺͯһಙαƀѹܩЍ˂ֽ׭ऑҋۃա୭ʑأϽࣝɭ҂ϴǭ͞ږ֠ѹѲܷ̓ॉ׏ԫթ࠙¡ѓϻѸ֩یƏϕڔʕस׶ݚ͝լuƌѱஓɻϻҏࠇућיࣜҥͦࠝԞޓ֮٥_دՅɯȪ҃ӶʻŻۃɇڗҷ÷ؗࣧڹિޭোିޡୟۻृĩԣύ̃˘Ӈй୭сࢵŹ˻ࢱҭ·ə؎Ȧ͘ૻːЇƍࡍɔЏ΀ƄӜޏƶЙܑ̀҃ࠇīڡJ҉ȳѥūŶ॥҃x÷Ȣ}Ύ؝ʓεƸر͂ʔۤՏǎȧޜࢱƓĴাߔۮۚ{٠νȨ˭ӶӭÙࣟŲ˴ΜϿԺ׳Ν۵ȸॷ՗އسڳĿοɦѹr׷Țґɇ֋رëڌԟǭওĈोȖڿτٵǔ˯ЖҽŦࡓոکʴΑȩଢ଼טࠛՒɽऐ׾őіͭјĐۆࣙঠ൧ͼʝ٦ةϼƫʌųӎ͜ԛȔ˟ďɇިʈȔśȠߤЈ׈ǐࢸő͆՜ંĲͮ̚೜ҔŠȐãӐּɔݱฦဘͲјȈ؆ຒဠˡҲϞ¢ࡆۦĀٖ֔͢èɚו۸ѽப̿׆ڱ͕ঙ̢ηূƝଆŝ৪ԻԲġϤޟӲӿऒnჄȉ૤Ŝࠦůఔԛ৮BόʽঐҌബ̈ాঘ̒׾҈ך˰Ƌˤˍ͔ѴըӀùࡺǝ࠸Ѿ౲͚؞֊נʆ௠ŐڐĥĠ̘ݿזګː٥̳ࠣžӇŃɏΆר࠾Цو৚̓ஆՎQτݸࢾҲːWҪңȦۜмਰƲ૜vసʡ݈̱԰ࡏ̀α̊ԩ̶ࠕ"]
					],
					encodeOffsets: [
						[
							[124701, 24980],
							[112988, 19127]
						],
						[
							[130722, 50955]
						]
					]
				}
			}, {
				type: "Feature",
				id: "CIV",
				properties: {
					name: "Ivory Coast"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ϣUוǒ՟Wহƥ׍ʍ̯ࠫǋvÞۖĄŀ}ͨΣΚˉÈʕɲǾώčО ʔƄB¸ξÝǌĄŜ̸ĶȹڨȗΎæ˸ǘÞŊúɸųٮOƸʖƢgʎĦžΫȞłΌŰϚǽƦ˥Ϙǯ̎ɄϾֺɏɠ஡Ο۷ɕेθܣͧ"],
					encodeOffsets: [
						[-2924, 5115]
					]
				}
			}, {
				type: "Feature",
				id: "CMR",
				properties: {
					name: "Cameroon"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Ľ°ӻŇԝŒЋÅ൅nŬڒ͟֊ϧƚǟϖɋŦXɶɎתЎ߸ʒRԄӮ͈bҾΉ־˲ĀΔȌͺžь҆ΊǞךǲȊŢѨɜ՚۾ٲ¬˨ĠƲͫͰˌʂ¶ͮ՟Ê֏֏ҜޅҷTʁÏϥČǻЅӸөμƛŠΏˆ׃ſɩх࡛ȫƳÝٳČΝåʡЈѭð̴̟џϨ˓ϥĘʏÓґڛȤڷɜ੗"],
					encodeOffsets: [
						[13390, 2322]
					]
				}
			}, {
				type: "Feature",
				id: "COD",
				properties: {
					name: "Democratic Republic of the Congo"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@»ঙͶŕˑ̗͓ɟ͍ѫǯϷ±ګț͍OهʍɹԃŗÝýҟɄϡÂ৥ưޝċѧǘӣӤҹҒ੕ͥĒ૿ƙɣĵʇՙȊχƫষĻࡇɨƫט͝ɲƴìٟࣟR·Ҧ̳ΨٟŠȋѰԣ˅ڧŞ˫ϢՕüϽqµʾ́rϥºԳųιtȻû®ৄ˩̸ÕԬŬԒǝ͖eՊ৳Qò̢ѕGƣԵɁӧűȿҫŠˣş։å͏Ѱȗ˖ʋԌȷض៛\\̍ķʑh΋œşʼɊĘμƎɎ̪ǰɚđ˼͐ҜSÄʃ̼ƩӶՄӨШɆː۔θࠆϬўքМĪˌt̰Ǝ̆«ӊŀݖǐԾʦ҈¸Ԕúה͜ѐҊ˔۔˷՘ؚ̳ĉظǏʦԖŘÞϦčनоͨǱ˖~ŴȲ̺ðلėբoˤĚԘۙϘķɤƖϲÅҶǲȦΫ݊֏"],
					encodeOffsets: [
						[31574, 3594]
					]
				}
			}, {
				type: "Feature",
				id: "COG",
				properties: {
					name: "Republic of the Congo"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@̿˾ʩƗͻγۏࢸٖҪ̓֌˾ɂ֦ĺäό҆ЗݐʴЈł֒ĝڀЉӺζ঄ȽǘسçɻѢÔξ੘ڸɛڜȣÔҒѰ޲ԆѼ֪Ɨդ±·ԓʥ҇ǏԽĿݕ¬Ӊƍ̅s̯ĩˋփЛϫѝηࠅۓɅˏӧЧӵՃ̻ƪÃʄқT˻͏əĒ"],
					encodeOffsets: [
						[13308, -4895]
					]
				}
			}, {
				type: "Feature",
				id: "COL",
				properties: {
					name: "Colombia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ΫȤЭ˨ʅƅ܉Ŝȱΰƽ_࠿Ӓŕʺ̼ÚтȢ̦иÊΞՆ͐Ѵ̳ȦǄӦȏސǸɚƃ܄ͻ҄ņТ˔ÑǂʠțӶĺŬѢـהΌĚT˦ƺ܂ӖϸՊfäǪڂéڌъ͞ȊОК̖»ɚɛǍ˱գƕɇп͗ʋʓ̷Ĺ׵ɷӭѢÇņϭȄȁâ͹ĳ̵ǫȸéȨ̉ઊĄӦŃעܡͼĚӐĪ̔ƟƱҍȇ˯ß׻ǜ֑ʆʟȉэл̨ȃɠ̋ʰ࠹ǁĻǏӸɷˊ˥́࿕lZԿӰē͏ǙĔҿƑK؏ώ̫ƀӓoηϙᘯп҂ʣpժࡤٟϾԍị̈ƤҧɝصŀӵࢤϳɐˍІ֑Њɡā"],
					encodeOffsets: [
						[-77182, -155]
					]
				}
			}, {
				type: "Feature",
				id: "CRI",
				properties: {
					name: "Costa Rica"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@җȆǟǮĬƤȄɷȪͥǔ́ņÅʖəƮÄʑǗȩȓɸˑĊŗǞLʮŎˆʁŠȖǌŴňֆɝȖŊˊéƔǥʜÇȪǲɈҙ͖ͷЂΩ͗õLͷǪűűıƱëǟ©Ǖ"],
					encodeOffsets: [
						[-84956, 8423]
					]
				}
			}, {
				type: "Feature",
				id: "CUB",
				properties: {
					name: "Cuba"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ܨÑڊW߄˹̭ͮ޺Ĩ̔ȡ܈ԳԺϛˢ\\ԆǟÕʁئٌ΅ıȟ֑Ń֡¥׃âளą֜Ҷ΁ɔէÈ̃ʐȥӎӃ޵ɦʥǬભž̋ǐ̀ɀࠗ¨׿ѧΏ[ťȳеğΫĂѺʸǼ̤ϞȈіǎَĄȰĢ"],
					encodeOffsets: [
						[-84242, 23746]
					]
				}
			}, {
				type: "Feature",
				id: "-99",
				properties: {
					name: "Northern Cyprus"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ÐJŨȮYކʢ֧ΧÔƿęǇÙűj¥iĎÑ¾ǋVɫïƿ¬"],
					encodeOffsets: [
						[33518, 35984]
					]
				}
			}, {
				type: "Feature",
				id: "CYP",
				properties: {
					name: "Cyprus"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ãࡱͿЩŊȟͶЎǀ«ɬðǌUÒ½jč¦ŲiǈÚĚ"],
					encodeOffsets: [
						[34789, 35900]
					]
				}
			}, {
				type: "Feature",
				id: "CZE",
				properties: {
					name: "Czech Republic"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ϯǂЁ©ٵʲ̏Ùҿ΅ر˔ӃΰѕȬėΠƧʠؒǾ̸Ⱦ׾ǎɂǆɜīϒĖЊ˓ؼñ¿ɳҘǧŲɒּĥĄʿز»ϮЯʡCŽƯȕÅȑǇ¡wý˹ēϋbšȁ"],
					encodeOffsets: [
						[17368, 49764]
					]
				}
			}, {
				type: "Feature",
				id: "DEU",
				properties: {
					name: "Germany"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@d͗ࡔțS̗ࡢǂҾɰॊͧІˋȞёɹɣ̨̙Ⱥ҅ß́Έ՛ϑĕɛĬɁǅ׽Ǎ̷ȽؑǽƨʟĘΟіȫӄί̑ϯ̟ŃŢշýƛʿǤЕ~׷ƭݍţɛыɺʩ±࣑ʲǥǻ܍Nń״ьֺ௅ƸЇɘ´ςǗȐĨ֨ƗࢢԎ@Ɉ͂Ⱦޔƿ˴ǐǲ۰°Ƽȃ֮вȓ̀ӈٌōՠŸ"],
					encodeOffsets: [
						[10161, 56303]
					]
				}
			}, {
				type: "Feature",
				id: "DJI",
				properties: {
					name: "Djibouti"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ȤʹΑӏȩήɯ̱҇ȅƬȭÏҷb_ʮßɶ˴Ѐ̐ϊήñʪȴ"],
					encodeOffsets: [
						[44116, 13005]
					]
				}
			}, {
				type: "Feature",
				id: "DNK",
				properties: {
					name: "Denmark"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@ԋڹ࢟ӄŝΒ௼˨ˎу"],
						["@@ȵ̓ʡĞɮХ՟ŷًŎͽҲ}࡬Ɣɪʌʦ݌À̐ɴڮʂѝʟ˙ĶɽҘŵ"]
					],
					encodeOffsets: [
						[
							[12995, 56945]
						],
						[
							[11175, 57814]
						]
					]
				}
			}, {
				type: "Feature",
				id: "DOM",
				properties: {
					name: "Dominican Republic"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ŀƞپIӾɏɜtƴ̕ҠhʡϐЮ̷̯ͿЍǼϫˡ¢ƱƵ͑½ŷȲˣťͳֻɏƆ§ʎjɬɍʦȲƚÞ͒óҜ"],
					encodeOffsets: [
						[-73433, 20188]
					]
				}
			}, {
				type: "Feature",
				id: "DZA",
				properties: {
					name: "Algeria"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ᮩཽᝩ࿷இϑटćU՘ϵƌԹʊȧЀᬻᆴᬻᆴṕᎠfǌ@ÊQ঺ബب࠼Ÿێɦ͎тচͪجӢòϞ̶સƚƸ͜ɛǲ̃ࢲ¹Ԟ́ՠ߰ҠࣦƢՌΎ߶ʰ෎Ƭർæшůߊͨ࣌P΀ȝֺ¾ǟћƄߟȡۙԭҵôمۊԃRȯԮ͹Ϊຝ˖ݏ°ϵƧۇÔϥŃҟòՇͫΗӺؓέ̘ҵϼƸڒϷςՃ"],
					encodeOffsets: [
						[12288, 24035]
					]
				}
			}, {
				type: "Feature",
				id: "ECU",
				properties: {
					name: "Ecuador"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@҂غǻξ͍ϵԉςǞʀƙބ̎ŴƺԼ͆զÍ΄ҢǸ׀Ͱࡀӑƾ`Ȳί܊śʆƆЮ˧άȣŞٓʽճࣷ࢟য়ͧԥܵǃ֣Ӆ΋ΙъͻĞ΍áw̮ʈȨıΔ"],
					encodeOffsets: [
						[-82229, -3486]
					]
				}
			}, {
				type: "Feature",
				id: "EGY",
				properties: {
					name: "Egypt"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ɽͷǹىɫѩȝƥ˩˔ϛϒ׵ஸđùΐࢯԪࡋٌವ̴ҙ˒ӃݮछǗƣճ঒ݭƨǣΏ@Ὁ@⁩@@ᶶ@Ჴʥڲɐ԰Żά̤Ж૦b߲ɝ࠲ʛϴſ٨ˊΌʊݎêװŃɮеȜ˜ڨȣټ³аɄւ෽"],
					encodeOffsets: [
						[35761, 30210]
					]
				}
			}, {
				type: "Feature",
				id: "ERI",
				properties: {
					name: "Eritrea"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@˻˖ΉӰϋ˒ɏܷ̄ͶֻXȭǬӯȡԛϢʽط঑ǬęʹβఀĊ֒ˆʴؤƐьӒӦঃɴޗҢУବߏҲӍҖӝˀ˿аʧʩȳέò"],
					encodeOffsets: [
						[43368, 12844]
					]
				}
			}, {
				type: "Feature",
				id: "ESP",
				properties: {
					name: "Spain"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@¦״΃θஒ؆ਊƱ૾NࣂƝۦªമͰ͛໺ϡ̨ǺीϝআŊ®ӥߓ֓ઁǯõ˱ԩү͕ہ͞ӑӟϑǹճىǗש٥੧_ߟhՃ͍̓ͅЩê̵˴ʃӚ޷žé˦̶̀Śɬ̃ʢɶրͳԌδèЈƎŬZپϲɪɻфөƝŁӹCɁЬ΃ū̥ɇ"],
					encodeOffsets: [
						[-9251, 42886]
					]
				}
			}, {
				type: "Feature",
				id: "EST",
				properties: {
					name: "Estonia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ĮӸ̱ŁՓ̘ñӘਫ਼ɼ੔Ũ࣮Ƒࢂ|Ŵƣׯӝʞ޵ΫˉۙDܡ̸ρļƩ"],
					encodeOffsets: [
						[24897, 59181]
					]
				}
			}, {
				type: "Feature",
				id: "ETH",
				properties: {
					name: "Ethiopia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ԜϡӰȢȮǫּWܸ͵ɐ̃όˑΊӯ˼˕̏ω˳Ͽàɵ`ʭҸaȮÐȆƫǽ̴̕ҧ̴Й̛͎ᩨঽۺNᛛᡃફݟףաeɯ˅ַB͹˴ލΙʝΓ֕àȃĬȟwˇT੟܌ב@˹ˢ@ҾѧƘӻࣴϥȚƧʹэЦԧÒ˸ӐҀrŲʰ[ݲʞࢠЊɾĎ΄ήٜԔи΀ࠠƆܠ঒ǫʾظ"],
					encodeOffsets: [
						[38816, 15319]
					]
				}
			}, {
				type: "Feature",
				id: "FIN",
				properties: {
					name: "Finland"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ūיಀ֓ޡى঎ख़֡ܛݴس΅յఘֻ́ѓޭӟᅡੵໃá๑̯ൃǯӡҞ߿ˠȈࠢСݶАӪނՆ኎࣮֖Ǭē΢ୟЈ˳͜uಒ಻ֲ૩ЪԊɞतѻલ¦ࣘȭߠϊЬ؞ಬ˶઄ͯΡכ"],
					encodeOffsets: [
						[29279, 70723]
					]
				}
			}, {
				type: "Feature",
				id: "FJI",
				properties: {
					name: "Fiji"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@̂ʍƓѭԳŗҩļąτ͖̀ϤĻȼƐ"],
						["@@՛ǯŅ̼оǤˊ°Ӱˀ@ЧՕȷ"],
						["@@é@ШǨĽЗ"]
					],
					encodeOffsets: [
						[
							[182655, -17756]
						],
						[
							[183669, -17204]
						],
						[
							[-184235, -16897]
						]
					]
				}
			}, {
				type: "Feature",
				id: "FLK",
				properties: {
					name: "Falkland Islands"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@৘Ԍ܎ȿԌʹڦϙʥ̋ଋʥϙ̌܋ϙпϚ"],
					encodeOffsets: [
						[-62668, -53094]
					]
				}
			}, {
				type: "Feature",
				id: "FRA",
				properties: {
					name: "France"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@ˣ٭ϡǠș֢ǜ̺ը͎Ɯܛ"],
						["@@הЅќà݀ϥȊñʎjЈɗெƷыֹŃ׳ɱƝϣüɇؙҽ]ϟВƀ˾ρʁʚ̿̅ʯɐٱҖŃĩηݿӅစɬ௧˗ĩԑঅŉिϞ̧ǹ໹Ϣͯ͜ѢԎǆူࢁࢤإю౹͒čؖઠǾථɏˇॎߌέዠپʨێܾǞŪ̑ϸ_ϸ͵"]
					],
					encodeOffsets: [
						[
							[9790, 43165]
						],
						[
							[3675, 51589]
						]
					]
				}
			}, {
				type: "Feature",
				id: "GAB",
				properties: {
					name: "Gabon"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ࡹࡔ։ۚԙࢄ˨ǾˎȲؔǜخ˴¶௢SOৠЌÆԞőӼňľ¯ÓνɼѡشèȾǗεঃЊӹĞٿŁ֑ʳЇݏ҅Иãϋ֥Ĺ˽Ɂ̈́֋ٕҩ"],
					encodeOffsets: [
						[11361, -4074]
					]
				}
			}, {
				type: "Feature",
				id: "GBR",
				properties: {
					name: "United Kingdom"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@҉ֽًǦԱ[ǦҊǥ҈۴ࣔԳ"],
						["@@࣋ࣧࡦŘऄIɕۅݯݩࢄÃäĕݠ঱ֺƇԬढ़ʈͧৰǅķ՝ѓʗͲѣݱѯ૳Rෝɱϻǒ։ϿޥĪם͍ҁǘ௼ࢨݪǺOBಽƔʃͰ࢜ʺҡҐǆռఢ÷D@ŮӤ֛Ԯ_\\৵ƨȧɬ̨ϒˡɴҍЇ·߶щє̨ࢆٶھڤá০ì"]
					],
					encodeOffsets: [
						[
							[-5797, 55864]
						],
						[
							[-3077, 60043]
						]
					]
				}
			}, {
				type: "Feature",
				id: "GEO",
				properties: {
					name: "Georgia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Ųάȿִӟ̲ҭĬ̯ʴĺĲ܄ƝఆƋଦЕƦƻԚƂ޶ǭʴ·Նșɓřвғŗıҏºصʎȵƍଢ଼ſ߳Юࣅ¡"],
					encodeOffsets: [
						[42552, 42533]
					]
				}
			}, {
				type: "Feature",
				id: "GHA",
				properties: {
					name: "Ghana"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@೉ӯҳ˽ݳʑݡʆͨηܤɖैΠ۸ɟ஢ŗنrӊฤ¢ϊÕ˔ƊϴáÕʿΖџC؍Ąڍɂ̫ȅݳäйɢՓȈ̍"],
					encodeOffsets: [
						[1086, 6072]
					]
				}
			}, {
				type: "Feature",
				id: "GIN",
				properties: {
					name: "Guinea"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ʃtǡͷʁJǏǴÈͶΗԨɕħǵmɳ³V̮ƇɘʔǻΜɹ̜ڥDțǁɵoƝǷīɹ҅σρӼ͛͢ɋŊȿǖħϊūȂʓƐώЦʮeɖƘȄDƄŎï˨ĢĖd˶МUȱȄlÚĤҜáŨ´¶̭ƆBɖŒƔɸɇάãɲǺ˖ŒȬŠǚuȈȁĴɳΆΙǣɏ˙ǴĊŀį«ʡʲʍǗÝå˷Ș΍Ⱥڧ̷ĵăśÞǋ·νƃA"],
					encodeOffsets: [
						[-8641, 7871]
					]
				}
			}, {
				type: "Feature",
				id: "GMB",
				properties: {
					name: "Gambia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ņόࣶzȎȦˊ`ͨȷʼIˢƚǞʏεȋιdέǰ̷ȗƭQȫŝއl"],
					encodeOffsets: [
						[-17245, 13468]
					]
				}
			}, {
				type: "Feature",
				id: "GNB",
				properties: {
					name: "Guinea Bissau"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@҅ΘΝÈȕʀLŸʯǴÁǶѼƌ˦ɦĨ༈c˵ġĕð˧ƃōȃCɕƗʭfύХ"],
					encodeOffsets: [
						[-15493, 11306]
					]
				}
			}, {
				type: "Feature",
				id: "GNQ",
				properties: {
					name: "Equatorial Guinea"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ƿŴ़̀െmPয়௡T˳µ"],
					encodeOffsets: [
						[9721, 1035]
					]
				}
			}, {
				type: "Feature",
				id: "GRC",
				properties: {
					name: "Greece"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@Ҡ˱ٺ¶شÑqƣҜĶĿʛ௃íTƒਁǎƺΦ"],
						["@@ʹՁȥĥԟ|ѫĀৱɓ׌ҿяƋҳAѻўƿȁȊԅрЁ̓ǿҴϯжʑ^ӅޥɠʜѕՓĕ͈ݏ֏Yۍμ̿ڦƧ֒͝ϮљӐÉʆϸТ¼˚˘Ũjɚռö͌ȀҖgƒƦǆت{ڨɲע̉ކĀVмЦɝ"]
					],
					encodeOffsets: [
						[
							[24269, 36562]
						],
						[
							[27243, 42560]
						]
					]
				}
			}, {
				type: "Feature",
				id: "GRL",
				properties: {
					name: "Greenland"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ᬜԆ᱒ੴ̴ᲈĄ䀦Ŀ㉊ڗ༅͕ộ⭏ćшƫᲐĠᡚ́࿈ʴۦ̝इӧᒞ̺✘͚ᠼǋҾΫ⃝ױӃȕ᧑ơወ¡ছؕگկध৚շಽ൧ˇ༂ѽȢ܋࣍ýઞܡህÑঈ΁˟̑இŽ୥E੆֩\\Ϗပΐћɣଌȿ઼ԣ͈ڱກǉ٫͖ਣӘ˼֭উѵᕖ୆¯ᖯܵᗿڏឧ́ओIࢅ͓ୟࢱᅵכׅ૧ȷ஽ȝܛԱ[כыտോڧͺٿϗљࠍஅ½఍ۈဿLࠁҢ֕ࠐฝਲэոŗݮ୓ޢ̢ئ֗̒ࠪচొ̺ͨΘǬڀॡ̕қůݯţਏ˜Éְ͢҂ެ\\႔ɟ෿Քݩ˾࠷ş۫ȼम޴ԝ̺ڗ׈ৡࢼ੯͚XΚᖷӮᄻÖᖟᏅ×ইˌวՈᕂ˄ၚ¬≹ɖ቉΄Ś͜ẊИᶎИ̪͘ᗗ̠ܺͰ᯲ז௢ĚΓϘጲɜᣚƂᣖRࣺʽᕺҨፘ̽୺áპ˙ፅҐŘή"],
					encodeOffsets: [
						[-47886, 84612]
					]
				}
			}, {
				type: "Feature",
				id: "GTM",
				properties: {
					name: "Guatemala"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ћƦԻfϩǖҍΌrʖĮȠšƾКۆ઄Ft˸Ƌ¾ġǺ̵Ț̹ˬϜDBӂ޸BަUOڗßॅʤ@˚ƱòŰʘŃϥ͍ЉɻÏǉâǑǧɇȟ½¬ıƿġ˽Ƀ}ŭ"],
					encodeOffsets: [
						[-92257, 14065]
					]
				}
			}, {
				type: "Feature",
				id: "GUF",
				properties: {
					name: "French Guiana"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@͉͑ГÑŗʀȉʹɩνǦɈΪòϤƢή͛ӸáֺѪܠ˸ğؤȥࢸۿƔ·ӻޑʳأ"],
					encodeOffsets: [
						[-53817, 2565]
					]
				}
			}, {
				type: "Feature",
				id: "GUY",
				properties: {
					name: "Guyana"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ր̯Դյzџ̈́o҈Чͪ̇Ƈݱԛɕ°ȣƹџϊ؏ːAŎӃԢܳȱҫî˙ɡϟƥ˅ġǑЭ¦ԫЀÓϴɋьƆܐɸ̐ȕϸ˿ŶŊτțȘѩْ֩ɬɲiϲԬƊȾƾ˽̸ô̬ږӲ"],
					encodeOffsets: [
						[-61192, 8568]
					]
				}
			}, {
				type: "Feature",
				id: "HND",
				properties: {
					name: "Honduras"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ơˀʭòÐʹŗĞǣÒσĳŔʩƈǷǚʛìǨɈáǒÐǊЊɼϦ͎ĔȂƨʊ\\þåž¦ϸùϲv˒ĢİĦˎ©ȪÉɘnǖòϨśƄkʲƿʐį̏Źɜɳ˽jśŕ̇ŋɃAȅŃǙƛźĕ{ŇȩăRaǥ̉ɳƹıđĽʛǞǹɣǫPȟqlЭūQĿȓʽ"],
					encodeOffsets: [
						[-89412, 13297]
					]
				}
			}, {
				type: "Feature",
				id: "HRV",
				properties: {
					name: "Croatia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Ȳ͗ˊʇ͓̓ϝȆׇ[ܟƔϽmǻǧ̝ȖǫΑЪϽǼʹϮ̽͌ȃ͆Ηݔ͇ġƛ߃̶ӣ̢ޑʠ۹ؤǞØϥΞe˲եƄʱγʝˮn̆bגƸƚ˸ƍͤgGɼ̈ĒĈͺڞɠˊĻؼέۜǉ̼Ų"],
					encodeOffsets: [
						[19282, 47011]
					]
				}
			}, {
				type: "Feature",
				id: "HTI",
				properties: {
					name: "Haiti"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ԢܰƁôқÝ͑ȱƙɎʥiɫ֏ƜЅÍԡÔϽƿ҉ʾö˔ޜśيã̢ȈϧθP͎ՋžȌɶ"],
					encodeOffsets: [
						[-74946, 20394]
					]
				}
			}, {
				type: "Feature",
				id: "HUN",
				properties: {
					name: "Hungary"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@˨ըǍǼӂDÜ΄ђɋ̲ğ۸ļäǚͮ~ЦžĜÃЂŀȠȢˠ¼࣒ʭǴĒҲɭÎɣԡǭЉ֫ԕ֭کǁԽ١ə̻űۛǊػήˉļǍ˴ƗV"],
					encodeOffsets: [
						[16592, 47977]
					]
				}
			}, {
				type: "Feature",
				id: "IDN",
				properties: {
					name: "Indonesia"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@Λe૝ך޴ǒѴʭ̎ʭ»ɩ"],
						["@@ܙȁĳĶø˸ΰԢࠨͬĐǓfʫշع"],
						["@@̢ɣԲèȼΥॿǛ׉őҍP̀ӚҤPɤ̖"],
						["@@ūұ౅ʅૣľE̬ښǪՂʥ֔Üݬ̮"],
						["@@ྔċȂΌ༘З̪կీƵਐӿय़͋ऍ͸ݻwࢍØ޻ưঅ͎؝ČΓŁ໕ΌƣΰޑØּߤ৶·ڴ͡ΒÛŘ̗"],
						["@@ѝֱćنƬ̠Ǭ˴ȒʗCЏ"],
						["@@̿˥ׅƸǏΰࡘ¢Ⱦˣ"],
						["@@̨ٝۿΌۯìӃÅׇȦҦਠऎʕ"],
						["@@ɼയ࢈ԉ۰ࢼ८ԔݜBܘ̉خ̛ࣘǇbᩑbᩑݟې࡟ǜȷʇ੡}ΦۂՈɺɕࣲЕ۸࿃܆ۗêృަʛУ͑óȏ̮GκٛЮ̢ࣞ״gëɠ௵DͩԄݥƺΡдଈȰњ˜ഘ·Ƃ̹"],
						["@@ڭ࠭كǉ߱ǐඓ¥ܽŧţٍݪݛҒϠ༪˸çϯλŪιӯ͙݉ߒ੿Ƶ˿ݲॻQտ҅ʙ̐͡Мی࠙͗ȻɶŊ͖؅ӲØࠌ֕ʭîওறՓũίʚʌޜŽ߸ΛPʻֺΎվŤښф౎ǮΎ܎ذپʛ੖śॴࠨ؎Ʀȉ"],
						["@@©ܽџĈŷԝΌѷɽĵ͹Ւʟ੺ǚڤ˨̨ÔҝӸóĀ΃"],
						["@@सާহį˫ֵݿַ߱u࠷͕౻ŭ̚ॕϙͫԤ׳´лːৃ̟̩Оս¯ۗĬŹૺнɺЕܘŝ݀ĮުԂ֐Ɩָ֗ӅըǠ՜ÑӪъЖôߒɽۆǶњୠ͔̈̆क़ॲ@ܰƙӍݷآߓơϭ"],
						["@@छkۻ۰અۊέԚٍۄзؾٕ୴۪݅ʙܠ̳ڀݵՊѭܘمҺࢗऒóђզಢǋݔࠓٮ֫ҪΓߔࣙࡢ_ۺֹӠ۳٘ϥͳۉӖ̞̅sƜו̊ҵؠõФՏɁ਱ಟ"]
					],
					encodeOffsets: [
						[
							[123613, -10485]
						],
						[
							[127423, -10383]
						],
						[
							[120730, -8289]
						],
						[
							[125854, -8288]
						],
						[
							[111231, -6940]
						],
						[
							[137959, -6363]
						],
						[
							[130304, -3542]
						],
						[
							[133603, -3168]
						],
						[
							[137363, -1179]
						],
						[
							[128247, 1454]
						],
						[
							[131777, 1160]
						],
						[
							[120705, 1872]
						],
						[
							[108358, -5992]
						]
					]
				}
			}, {
				type: "Feature",
				id: "IND",
				properties: {
					name: "India"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ࣚটďۅͮїѕ׽ŒɾएࠜՑ୞חՑϟ͛޻ࠀͅߊЭરһସŉӜёٮāৠȝ۪bĪͪŋՖÞβԠǮìڋlǙކ͉Ոƀ܀Çۈ|ÐԪ΁ˎڴŀވشॸ՘۶ȷ״ΞЀԹ˳Λ࣠űÜ͇̍Ʒèԫ׷Ʋછׅ~ӓҩ۵§ХϏۗځȒࢇȏ˹ĚΣгȥѵ೰ɵEƍ՝ҡѦʸӎϖ¶ϰ܆ӝƜީ]ߝŚóאБ¤ڕζ֭̓؆ѻԿ̻ȅ̩Ԭɣƛԑ̆كžەţֱ̫Zਛǩ´ك҃ӻ௃֡ळ঩كՋ࠷ջCϭлȹݳ̝Ͻ«ʥٙǪધ®ۡΣߙI෗ѣ¡ϣٙʰˣދʃ˱֯͵ʍߑ޸ϳ୴͑ࡒ̍Јѿ߰ȻੂơՀޅ଼Α࿀ʣ੾HৰǍ޾௣ԉףĶ઱৲И̤ʝͤড܊֖֔ᇜCǗܞҽюĩ٨ջϘऒࢢঊÙ࢞ࢢՄ࡞ࠄࡈ_״ܒӠڳд֪݂̇̕Ьβ౤ȱपŰߺ۸"],
					encodeOffsets: [
						[79706, 36346]
					]
				}
			}, {
				type: "Feature",
				id: "IRL",
				properties: {
					name: "Ireland"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ƒ׷ًݣ๯ӹ஑Ŷڼ࢚ѭࡢତڄٌϼǦ҇ǥ҉Բ\\ٌǥ"],
					encodeOffsets: [
						[-6346, 55161]
					]
				}
			}, {
				type: "Feature",
				id: "IRN",
				properties: {
					name: "Iran"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@݈ǌװӔ֚{τƾװýघэڤğ।ݓظòۻ΁਷ɱؑκŭΫҡˠڡàՓِƙæեݿݿжѵ͸ԓߦυx݉ДƋêϯ௉ѡ̓উཌྷʪࣷȖेŊΧਐЕƪ٣ƭࡑНਇ˦ࡑ٦߳ʈ֗ߘا૪ҍƋՕ˦̻͝ҭѴS҂ˍ@Ɛ،ѝٔ਍Ң׉ߜȜپц̂ÙӬտʨխ৊ҟڨǐʼʿ६ּʈƄͅъϯ־ő̤~রئ̀Øʞʙ́гԼѱȾ¦ˈإߖǩ׎у஠ƟಾɞĄȞ"],
					encodeOffsets: [
						[55216, 38092]
					]
				}
			}, {
				type: "Feature",
				id: "IRQ",
				properties: {
					name: "Iraq"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@րʧÚӫх́țٽ׊ߛ਎ҡўٓƏ؋ˎ@TҁҮѳӿ¤֟ê؝߭༟äᛍၖఫךৡɪ͹৾ᇶ࢔͆৬āؘҢȺјԾΰž঎Ň̐ɉЖƚծ৉"],
					encodeOffsets: [
						[46511, 36842]
					]
				}
			}, {
				type: "Feature",
				id: "ISL",
				properties: {
					name: "Iceland"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@șիॊֵથٙᝓֹܣƵૉŮᚑˈࠠψᆧЪ๪ǎʘᄋȜ֨նౠŰಸ֭౨Ҝ੒ʃൌ҄ආÑ"],
					encodeOffsets: [
						[-14856, 68051]
					]
				}
			}, {
				type: "Feature",
				id: "ISR",
				properties: {
					name: "Israel"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ƥ˅̣Ŝǫ֓ɂĥɋřɛЄŖp͛нഉց෾ʔˢË¶ɞϼǠيŤɆzVˬCþƦɤ\\`·ŕŵhM"],
					encodeOffsets: [
						[36578, 33495]
					]
				}
			}, {
				type: "Feature",
				id: "ITA",
				properties: {
					name: "Italy"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@̟ڋŲʹǭѝٝ̈́ёĞ୩ѐŞќজûࡪĠْò"],
						["@@Ԍ׭ş૕ϣÂ΁˫͇ɞ২ȓӒҨ¥рʼ"],
						["@@ரɏĝЯȬΧڝŪہ̗²зĻʇˠё߀чцۛदڱچLȲȃɽǗݪ̥ؠʩܜѫĔƿƽ̛үϼܳƐΝի؈̷ıѫΗ¹҅ܛΕÝHʲǢҊǼǶ͝ӤʱшΑŀʛδգƴεͶثÆٿϜޑմ֯ӜʿࠪйĮہˤϯŕӝϵΓÕĪθҕńɏٲ̆ʰʙ̀ʂβǵМ¢Ҽ˶ƢƃАǼͺتĿψƚâΆԘšĮǆࠨƤȊ̉"]
					],
					encodeOffsets: [
						[
							[15893, 39149]
						],
						[
							[9432, 42200]
						],
						[
							[12674, 47890]
						]
					]
				}
			}, {
				type: "Feature",
				id: "JAM",
				properties: {
					name: "Jamaica"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@֢÷ҀȫƔɯןeʭƗҹƊӑ̪ĶȔΜÎȒ"],
					encodeOffsets: [
						[-79431, 18935]
					]
				}
			}, {
				type: "Feature",
				id: "JOR",
				properties: {
					name: "Jordan"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Ʀˆपͫ࿪ࣆͺ৽ǅų၅у࠸࠿ˣƛƑ˭ٙřȩ̡εʵधƆŨоഊo͜Ůʚ@Ԥ"],
					encodeOffsets: [
						[36399, 33172]
					]
				}
			}, {
				type: "Feature",
				id: "JPN",
				properties: {
					name: "Japan"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@ņ˽ҿԕΉːљțɝӭշʈRЊҬԆӌīΊΜؠǹ"],
						["@@́ڡƤсѩף੹Ѓ๏½ணॡ͔֡غษȃষЃঝe࡞أ֗෗իΝН͜ȶݶՏʒͿ־ߐʶѲՈࡌѢ؞ָာʤ࣎ǣࢠ๺֔Б௾ࡀӌ͜ՈਈƟा΢ՎࣀƸҞୗ}ڻޥࡍbࢁ"],
						["@@נǵרΤȈहఝɯ݁࠱೓ָқँण]ř࠴д٨࣌²ʖ୐ʜټন࢓٤˯"]
					],
					encodeOffsets: [
						[
							[137870, 34969]
						],
						[
							[144360, 38034]
						],
						[
							[147365, 45235]
						]
					]
				}
			}, {
				type: "Feature",
				id: "KAZ",
				properties: {
					name: "Kazakhstan"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ӕƹ્דο׹̹KɱЊ੫ǡێХNÚࡆ৓ؘ෷ßডũߣݶۋ͆ಥ׼ƽðᓗӹᶽљ£יچ֧ɼॕǩχ˧±ȲȶΖǅ̊অ˺ϛݮҩɆ˜ࠊāؘ܎ƎܼűƲࠎƭԲ࠿£܍ȴঃσ޵ǭяƌĐўՙ֘دw܉֬ӞِʕǢڢऊࡺӣŀؘჄࣴಾtᇢ׉঺ͻࢼΠ೰j੺ѥʔʠ୼ɂЊഷ׀߮Цƿɮ߮ɔ؅ֺϬ˼Ḯ̈ШȺᑆ̴ݰΒຢǹ˄ࢉ࢚Ȳઆ˹éҝ߮´ᑌߎ̭ˁ੶٭ሠᒑ҄ѰୄӛீɎҪƯКӟטǋΨΥ઎ŒѾԣٕ֓ۥÿ¡ࡅұϝဟˢ؅ຑїȇဗͱݲลֻɓäӏԭŬу̠ఝĖඃx̧ġ஥ΞӉǧŽӹ൩̂փşȉρ"],
					encodeOffsets: [
						[72666, 43281]
					]
				}
			}, {
				type: "Feature",
				id: "KEN",
				properties: {
					name: "Kenya"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ӾۙיͱȹΕ̿Õšףˑ͹Ǐ֑ͷ˥஻ࡀËӤᵁႌƙĢSࢺʊ;а֌̨ؔσ॰įтЉ׎ԬԈ֬ֆѨƗ@ҽ˺ˡג@੠܋ˈSȠxȄī֖ßʞΔގΚͺ˳ָAܽ॑Xᵣ"],
					encodeOffsets: [
						[41977, -878]
					]
				}
			}, {
				type: "Feature",
				id: "KGZ",
				properties: {
					name: "Kyrgyzstan"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ȊςքŠ൪́žӺӊǨ஦Ν̨Ģ඄wఞĕф̟Ԯūşȏ೛ғ̙ͭઁıͅ՛ࢷŒׇǏߣЇŜȟʇȓཟŵਡ˘࣫ÝĂӜࣴƕ̮ʸٖĉ੾঻ѸױȽإ͂۶ծʟĊ"],
					encodeOffsets: [
						[72666, 43281]
					]
				}
			}, {
				type: "Feature",
				id: "KHM",
				properties: {
					name: "Cambodia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@΁Ѭыࢄȣ২ՠۨઘǆ߀ťۚ͡Ϟׄݖ̱Ȝ֕Ļ৕ඳ٧τԙࢥÓܫͷ۱Ū"],
					encodeOffsets: [
						[105982, 10888]
					]
				}
			}, {
				type: "Feature",
				id: "KOR",
				properties: {
					name: "South Korea"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ܨযȺխPॷ̓ҥݽǉڥΏݳïĥҚƼـχ࢔ذƚֻܘÂúϒ͞Ϝצ¢ΨÈŨȮ"],
					encodeOffsets: [
						[131431, 39539]
					]
				}
			}, {
				type: "Feature",
				id: "CS-KM",
				properties: {
					name: "Kosovo"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ǣŃPĘ́ȩĐǳɦƾȌȪÒŜ˨ư²Ţşƾ¿ŌƅƒǎƻŢLĥȳĳĳ×ȉӹŻ"],
					encodeOffsets: [
						[21261, 43062]
					]
				}
			}, {
				type: "Feature",
				id: "KWT",
				properties: {
					name: "Kuwait"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Ǭχõȓ˔هשuȽАݟĆ؞߮֠é"],
					encodeOffsets: [
						[49126, 30696]
					]
				}
			}, {
				type: "Feature",
				id: "LAO",
				properties: {
					name: "Laos"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@˚Ϝ܆ڹܸ¿ٕࠦھٍÎǛ̉ӯyʣƨࢯԅoݬȸࢮ֧³ԎηʸǴ̲ܐնøȡ҄wŵ०ѦŬӮڏϖޅਚO͚ܹ՝ɗʉ̟৔ԉۦ঳Ռ݋َ׏ɄץƵ࠿ݕ̲ϝ׃ۙ͢"],
					encodeOffsets: [
						[107745, 14616]
					]
				}
			}, {
				type: "Feature",
				id: "LBN",
				properties: {
					name: "Lebanon"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ɣ[ýƥ˫D̘ۄмעfϘ§Ɛͣқ̓ȷҟ"],
					encodeOffsets: [
						[36681, 34077]
					]
				}
			}, {
				type: "Feature",
				id: "LBR",
				properties: {
					name: "Liberia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ɗQࡽАޅٖҢ֣ըȪː¬ʔϜҘϺϺǶnɖĨΘԧÇ͵ǐǳʂIǢ͸ʄsʓĎНǽύʖɱˊÇΤΙ~ͧăĿÝە"],
					encodeOffsets: [
						[-7897, 4470]
					]
				}
			}, {
				type: "Feature",
				id: "LBY",
				properties: {
					name: "Libya"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ק̷ҿҤ೧βρՄڑϸϻƷ̗ҶήӹؔͬΘñՈńҠÓϦƨۈ¯϶˕ݐШȜðΠėΒ־͔ʶːЦʌ´٦দ́ΜðۮƓ૞ϓЀݛݮǍஆΙࣆйЦɔЖϮț٠˂ФЀׂŘ଒ǣ˺ϑ̺Iˌƛ࠴ıȲˣ̣ЕżΫɏԯʦڱ@Ჳ@ᶵ@့ॱGYΙ‧ྐ‧ྒࡓҟ"],
					encodeOffsets: [
						[15208, 23412]
					]
				}
			}, {
				type: "Feature",
				id: "LKA",
				properties: {
					name: "Sri Lanka"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ų࢓ΙʇܵȓЍڜƫீϠ഼׆ұϺסО࢓"],
					encodeOffsets: [
						[83751, 7704]
					]
				}
			}, {
				type: "Feature",
				id: "LSO",
				properties: {
					name: "Lesotho"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@̆ʩʳУƛ˛ҳſƹˍ̛ċؿ٨҄ՐҖ͢ϼǠξʵ"],
					encodeOffsets: [
						[29674, -29650]
					]
				}
			}, {
				type: "Feature",
				id: "LTU",
				properties: {
					name: "Lithuania"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ãɊĚɲχƄࢡƨǱ۸२ʴඬÁࠜĊŞǩ҂Ã߲СĀϓۏˏșӃ࣯̓߻NȫʶљĜ"],
					encodeOffsets: [
						[23277, 55632]
					]
				}
			}, {
				type: "Feature",
				id: "LUX",
				properties: {
					name: "Luxembourg"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ǘȏ³ρʍiȉòĞҼɖ"],
					encodeOffsets: [
						[6189, 51332]
					]
				}
			}, {
				type: "Feature",
				id: "LVA",
				properties: {
					name: "Latvia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@نЮՆߊ˼ڜعڪhǊ٤ܐƪςĻܢ̷ۚCКȕîС˒ӷ͕ࣗԛƙ߱ТҁÄŝǪࠛĉණÂ१ʳ"],
					encodeOffsets: [
						[21562, 57376]
					]
				}
			}, {
				type: "Feature",
				id: "MAR",
				properties: {
					name: "Morocco"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ԒΥߜÎࢊȃκU͂՟ºԝ̄ࢱɜǱƷ͛ષƙϝ̵ӡñثঙ͍ͩсۍɥ࠻ŷഫاRহŷ@@@p҉Ա˓ȑϡ@̥Ŋ۹ě˛ٻʿÕЁ੕ୟ࣡ˣୋ΅ϗĵ̡ቅãaD ϶͒ɮ˞ѪÃ˶̀פҴՖ˲ƊɞӬp҂̤Բ̪֔Ւ࡬f\\ц͔ްĢڎָтɠۮۮȿਸ਼͊ܢŔѶդ֨ࡈϦخΐ֘࢈˄ԪؤI"],
					encodeOffsets: [
						[-5318, 36614]
					]
				}
			}, {
				type: "Feature",
				id: "MDA",
				properties: {
					name: "Moldova"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ȨŮ֒ĊؤʽΊϞɥÑ˵̪ƏŨΗ̊ɇÏűƾčɝ×ӷ|ĉŜǫãÒƭɱˍƥ˽ɁĝƯϦĘΪςӝԂˉΠʹʠʯĈ"],
					encodeOffsets: [
						[27259, 49379]
					]
				}
			}, {
				type: "Feature",
				id: "MDG",
				properties: {
					name: "Madagascar"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ɠΥȺ։Ɗঢ়ɒϽĉЗƩʙ˷ӰǁʝǈثõΥɵȗ¿܅ͧওб୅ԯཧ͑ୟϛইہȣܻΡӛɊڙ̜ɳѺÇݘ̑ڠùƮϰƢD˪Дِø՚șЈǃՌãޠ̊ҺŔՒмҶǤ̶Ʋτ\\ӐӎۖԮʦцŗάΦĵҪ׎fԐ˦ϔ̊ί"],
					encodeOffsets: [
						[50733, -12769]
					]
				}
			}, {
				type: "Feature",
				id: "MEX",
				properties: {
					name: "Mexico"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@͙݅ƥÕ૷ąЧƤқʺЧǚٳ֎سȞӏ͢бࢾɝΐΙ݄ɾٚĎؼưՊƠՖ΂ȨӬè۸Ƣʖ֬ɚࢶȚݔԚîȬǱЙҋԁȥԝƸƥűγɁٽɅɎǭcǃY̝ԓƳĲķPŭޥV޷AAӁϛC̺˫̶șĢǹƌ½s˷ઃEЙۅŢƽĭȟqʕ्ࣞџ˘ۇɖҷÓګ́чĉץɜؿǄ޹ϬؿŠ्ϸ۱ВɃɤҹº࡯ˈΓϦࣗӊсՌȧЦ˪ĈđʈȖɔJ̄˱Ϙùͮ˭ъ݋࠴ࡋڀУԼܝ΄ƷȴŸԲѓȞӹФȽהҍæӣѸϿФˀҍو̓٠^͔؇ͬ˫ӑɴƇͿƔЕĆف̀΋خׁƒȡŸÓŎ˽Ƭ\\ǜթʮɇǴ̕Նё˨ޯʠρɸϿ²ѷКͶϡ̨ϑqƭΝ̱ƫJɛԞջӎРїɈؚŵҖЏʺֿϒŏŇɃɖԭȰӷӦÖÚΊ³̸̼Ϝ٩׶ӱɶ̱Հ̷վϳڦͿݲॖÞ੪ĞÿǑ౔СኀףဪPژ@DΌผ@̪̕јˇԀσ˨ѭȾҥѢʩۤʥՊڒۊhפͱфֹ̄ӯӸӏȂחɾЃپʹ׮ȁ͞|"],
					encodeOffsets: [
						[-99471, 26491]
					]
				}
			}, {
				type: "Feature",
				id: "MKD",
				properties: {
					name: "Macedonia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ńOǤӺżȊ˺¶ϴbтˏÒ։ǅƑƥҕh͋ǿջõΑȴšήń˸"],
					encodeOffsets: [
						[21085, 42860]
					]
				}
			}, {
				type: "Feature",
				id: "MLI",
				properties: {
					name: "Mali"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@˰ƶƘӶˊpזɻӄǖ͖ÇŴȈ⁚^ȈךƣļЛ⋈Л⋆౾dᬼᆳᬼᆳȨϿԺʉ϶ƋV՗ठĈFካҟ֗íԭݛƃ଩ï̳̗ա՟Iȿǈҥš޻ΑǅʿٳϕŗɍΙǡНŔɱȳūֻڙۡp˳ɭΣÆӥ΋ůȝŁŽάʍĥơhƷʕ٭PɷŴŉùʱʎ¬ʢĿİǳĉ˚Ǥɐ΅ΚĳɴȇȂǙvȫş˕őɱǹΫäɷɈƓɕőƅAµ̮ʾí̽͘ʀǓӔԺ"],
					encodeOffsets: [
						[-12462, 14968]
					]
				}
			}, {
				type: "Feature",
				id: "MMR",
				properties: {
					name: "Myanmar"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ӫηץϥࣥΟƳО݅ՔؗΈօ̭ܵ̃ƹȪу֖ڙĪҷ_ϵ͠ދң޵Сࡷăذʴ٠˯ӼæࣸͽѤ˛৔Ʊਗ਼εۢօуॕ׳ҽöԳȠ̂ਪǫ޾څॺļ̢ӭņ׭ۆÅڰ̊ŵj׾дȦęΤȐ˺࢈ڂȑϐۘ¨ЦҪ۶}Ӕજ׆׸ƱçԬ̎ƸÛ͈ӮÚˮӵξȧ|ٟۙߓۭĳঽࢲƔȨޛՐǍʓۣز́ζƷ؞ʔ~΍յǳ̱ӓȗ"],
					encodeOffsets: [
						[101933, 20672]
					]
				}
			}, {
				type: "Feature",
				id: "MNE",
				properties: {
					name: "Montenegro"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ÁǀηЯÊˋǫÞɽ˞εǖĢƜŬҦ˚ȜƾüɠƟŬśˠě͌ǧçïƽȋɧó"],
					encodeOffsets: [
						[20277, 43521]
					]
				}
			}, {
				type: "Feature",
				id: "MNG",
				properties: {
					name: "Mongolia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ࢮƢ྄ܤ౬Єܴʳ࢚]֘Ͻ࠼ௐɁࠈגͿӶࢊࢊश΍ނįনɍǈؿஜΛߐƺਫ਼ŌࡆōࠖЗԚѕެT੒Ƌޜȼૈƒ௸פԌĝѰ˭ৌêХهק࠽ɐ΅ӈńࠤŽ٦̴ڬˏހוğ̗ڏĦ௟ŏןʅ؝։౱͙࠷ѽࡹǞҿúѳէˎ͓ƌˣי˯׽҇গ̑ఽഫ̇এҋϋʾ৭AఓԜࠥŰૣśჃȊऑmӱԀϣޠԱĢ৩ԼଅŞুƞ̡θ͖চׅڲன̀۷Ѿəז"],
					encodeOffsets: [
						[89858, 50481]
					]
				}
			}, {
				type: "Feature",
				id: "MOZ",
				properties: {
					name: "Mozambique"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@لæ৞ʁɖńגt̚ʦԌaऀ͜ڞӤƊϕ࠷ľ݅ಿƨЫʣ׷͙׍՗Եޏ͉ृСॉ͓ࣕƵוׯ΋ȗí׳ЌُǔӱZʣƪ¦{ࠗƋϷȤƝűΓΗ̗ۗ˳য়ҕρ̳ðΟɊÉíѵّRïϊůϖí̠ƬपɓװГஂࢬ॔ɜ؆ŶúĨӶƉʞغǐ׌E੠ѥ˒ЏÔǹȼϳǰ۫gÅ̼āװᢈۘӚЕɴüͨɅ¸͵ǯϷØסոԱʲ׌ζǰíઊΙ؈̣˖̅]ɽદɾٔ"],
					encodeOffsets: [
						[35390, -11796]
					]
				}
			}, {
				type: "Feature",
				id: "MRT",
				properties: {
					name: "Mauritania"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@և־ԗؤ֍ɞГʚҵUЧǽйð˽ˏïҐɺаŀߊģࠨĵкČмɑЎѵδǾˬᾔMǃ௎ȴќ߀øᒸ᪂©F౞Ṗ᎟౽cМ⋅М⋇ƤĻȇי⁙]ųȇ͕ÈӃǕוɼˉoƗӵ˯Ƶ"],
					encodeOffsets: [
						[-12462, 14968]
					]
				}
			}, {
				type: "Feature",
				id: "MWI",
				properties: {
					name: "Malawi"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ɽٓɾથ̆^̤˕Κ؇îઉεǯʱ׋շԲ×עǰϸ·ͶͧɆɳûәЖѵɔʮޮ˄̈Ǉۢǚڼƞɪɉ܌Ѕϐ࠘ƽǜɵ˶Ϲɾଡ"],
					encodeOffsets: [
						[35390, -11796]
					]
				}
			}, {
				type: "Feature",
				id: "MYS",
				properties: {
					name: "Malaysia"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@àћֈĶ˞ΈȘýӸԓΜ֛¶֣ęϡĆ˿Öӻ̒ɵͤݑe˳׫Éߑخ঵ښįђӟ֚ś̡۠ҜĠؔȃΤƤƮۈρ"],
						["@@أ˹ܯƚॱ@̅ॗ͓̇љୟۅǵߑɾЕóөщ՛Òէǟַӆƕ֘؜˽ٮǀǜ܆άǂ৖Ǻ׾ڔЬՐϦѥǮ˺В¸՜а٪אшڀͼHќыιֆɻ۬ʧÑ֝͡¥ƮЧ"]
					],
					encodeOffsets: [
						[
							[103502, 6354]
						],
						[
							[121466, 4586]
						]
					]
				}
			}, {
				type: "Feature",
				id: "NAM",
				properties: {
					name: "Namibia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@رٌؖ͡ȃࠊȷ،˯ಒm৒ŅҞ͛Όѡۜѳ৘ǽՆۃࠐ»٢КǆԊƞհ}ԄϝŶÐ₮׌Е᎞ş໴΂یȒհµͨȍPéӁȍʭC՛͍ͣΎಕ̍س{ᲽࠣBយA᷋ݣѕҋÕՇǄϗÔƗάͩɰГг"],
					encodeOffsets: [
						[16738, -29262]
					]
				}
			}, {
				type: "Feature",
				id: "NCL",
				properties: {
					name: "New Caledonia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ېԵѨϭ͉ȫҥɪ׹ϚէѼ։פś˶β[Һ˹φ˷ˎɻ"],
					encodeOffsets: [
						[169759, -21585]
					]
				}
			}, {
				type: "Feature",
				id: "NER",
				properties: {
					name: "Niger"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nּॹȐОҿպœϤâТբ̴̘ପðݜƄîԮҠ֘Eኬஈϒᝪ࿸᮪ཾ೨αӀңר̸ȸಯ̾ɓ`ˋΔ˽ǻί͕ၻ«ધੳߋγૉΔ̵CեբmčЃʁµˋƻm֩ंȟځҷٱʔҍ¸ʏşӯ~ӷΧѓq৯ѢЉȵѓb̿͆ࡅ̼ࣗıɕǻşӗʋ͹ÍݣٗӚ̟E˭ʗ"],
					encodeOffsets: [
						[2207, 12227]
					]
				}
			}, {
				type: "Feature",
				id: "NGA",
				properties: {
					name: "Nigeria"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ࢍ̡͉¬͓ȉڥl҇Ղˡ؊שֆكYݍB¶തs՘ǂՊʶʴТԴėɨǔ͸ȍӾ˪ÎݤʌͺŠӘɖǼࣘĲࡆ̻̀ͅєaЊȶৰѡєrӸΨӰ}ʐŠҎ·ٲʓڂҸȠ֪ँƼnͬͯğƱ«˧۽ٱɛՙšѧǱȉǝי҅ΉŽыȋ͹ÿΓֽ˱ҽΊ͇aԃӭʑQЍ߷ɍש"],
					encodeOffsets: [
						[8705, 4887]
					]
				}
			}, {
				type: "Feature",
				id: "NIC",
				properties: {
					name: "Nicaragua"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@̃ˆϽͺȁ˲Ο˄сϜĤžƒŵÚÒʾŀȔŬRkЮȠrǬOǺɤʜǝĒľƺĲ̊ɴbǦĄQňȪĖ|ƜŹǚȆńɄB̈ŌŜŖ˾iïă§ȉĐ̫ȗ˹ěͷυ®ɏtϙŹĉýΫÌɛǣɋ ɩźƏȩǱʛÈƓǦˉêȕŉօɞųŇ"],
					encodeOffsets: [
						[-87769, 11355]
					]
				}
			}, {
				type: "Feature",
				id: "NLD",
				properties: {
					name: "Netherlands"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ۦyǀ˳Ƚޓɇ́ԍ@ƘࢡҥȞՏπީǩ؛âѠɲ݀ఆଲΘ"],
					encodeOffsets: [
						[6220, 54795]
					]
				}
			}, {
				type: "Feature",
				id: "NOR",
				properties: {
					name: "Norway"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@᥆ؙઍɣऄՅෛ͵ڵû΢לઃͰಫ˵Ы؝ߟωࣗȮ઱¥णѼԉɝԷūփནƊɝҵ߭Hևױ࠿झಫ஁̨˹̇ͫ࠯bձ޿¾૟՞э˥ধֻۧυӛ֝Ԫဋঁ૫ȟ୏є̛ࣚˇ኶ޞզᕠ۶ဌࢂ໤୦፺ྴඦلᘼ੊ᇎπ൪౮ۢ໖ພǘ"],
						["@@ም΅๝Ȝ׆ɐԕˎეǚͮ̿ொȍ"],
						["@@᪖صᑟͥұأ݅ǁЍۡৣᅵԢނ̘ఽʐ࿕܂ٷڄᘎ̜Ң̋஦\\͊˼௾੖̋"],
						["@@࿮̏ఝҍ᝱ı៙ƖƫɴஹdँϬᣴɼ௞ȫࡘʤᑺȽ"]
					],
					encodeOffsets: [
						[
							[28842, 72894]
						],
						[
							[25318, 79723]
						],
						[
							[18690, 81615]
						],
						[
							[26059, 82338]
						]
					]
				}
			}, {
				type: "Feature",
				id: "NPL",
				properties: {
					name: "Nepal"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ÝαŌՕĩͩ۩aয়Ȟ٭ĂӛђଷŊયҼ߉Ю߿͆͜޼ՒϠΒȪڪʳࡔշҾť˰ЕٶǓۀσौȕঔć"],
					encodeOffsets: [
						[90236, 28546]
					]
				}
			}, {
				type: "Feature",
				id: "NZL",
				properties: {
					name: "New Zealand"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@Ȓ΋װ;ʐΡBΝ̹ϳչإїͷ̴З٭Yܗ̓ɣջӋࡗڇϓнʇޝlխˢࣱÐƗ̰Ҍذ੐ࠦժǀ׾͌ܜѰԎѦώظ͈ɆŰҶלϴȆΧ"],
						["@@،ࢫlָϜɯŲًڰ˛֨ãӒ͎юĭȯݗʯӫٛjɡʭþαūƻͅҏзֹ٭ͯƟɘΕŨӞ۔˟ҨࣛͲz̦؈̌ƚ٨լͻ֜vƪБΎڋݔΗת̸àҚұٺɑʂݡ"]
					],
					encodeOffsets: [
						[
							[177173, -41901]
						],
						[
							[178803, -37024]
						]
					]
				}
			}, {
				type: "Feature",
				id: "OMN",
				properties: {
					name: "Oman"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@ֹ̻ϟªǩȧƉэļ֗ÿĻϯFԽ̻ćХȓǯԹP͡ɃJͻПɷҩĂ֗˳ϱ³˝טٿ൴ᠾ࠾֖၂ϩתv͸ʔΐFΆϞǒƩŞèմіHϖֵҸ̧؞ŋӼƳϜӕɨ˧̞ŃCȉ̩ԃƅɽΟˏ"],
						["@@ŉƳǅ˺ʔ˺ľñā΍"]
					],
					encodeOffsets: [
						[
							[60274, 21621]
						],
						[
							[57745, 26518]
						]
					]
				}
			}, {
				type: "Feature",
				id: "PAK",
				properties: {
					name: "Pakistan"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@تϻʞ٥൨ͻ߹۷ऩůౣȲЫα̖݁̈֩ڴгܑӟ`׳ࠃࡇՃ࡝࢝ࢡউÚऑࢡռϗĪ٧ҾэǘܝᇛD֓֕؛Ɇʣ٭٘໻ǁിeஃŝ̈́ঊொѢéϰГƌw݊ߥφͷԔеѶඨѕࡀŲԈŅǞȂגóદΔ܎ҶӈشCĠɼٞŌ̴ý͢ʀ±ԌΦԖ՘Ɇͥ֊ߜɴ̢͒мΜĩмȣΤӬμࣘǮ८ĮѐƺӨĦ"],
					encodeOffsets: [
						[76962, 38025]
					]
				}
			}, {
				type: "Feature",
				id: "PAN",
				properties: {
					name: "Panama"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@˫ʎǵҒȺɢɅÎƿˤлɸοÁǝ̇ͻɁǽĉǩВҗɯŅŧŭϷ©ơԈŋƛˡ¸ǝ͸·ÈɓİέCǻĩŶªǖìǠƲŲĲǩŲK͸͘ö̠̝iǱͲĀæɴȵЮÔΨɄԜǞ˺ʤҬ·ĉҶώơ˜ʧ̈́ɵĹūȜӵǁʟ˓ÒŅС"],
					encodeOffsets: [
						[-79750, 7398]
					]
				}
			}, {
				type: "Feature",
				id: "PER",
				properties: {
					name: "Peru"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ɥљћɋࡅӘñΈရࡊທࣾ٫԰ΏۜƐʎ܅ાࠣ༄ߍီ΅Ϥ˃ؤٷպױͼ˖ϒПߢʼךڢՎĲΓʇȧx̭ΎâͼĝΚщӆΌǄ֤ԦܶৠͨࣸࢠʾմŝٔɢĂ֒ЉˎЅϴɏӶࢣضĿҨɞ̤ƣԎð٠Ͻթࡣʤoрҁݳ œųۍǉ॥ֱÓϻɉ̇ČғԕʍBΡɛƵΔݳҲԝǱί֐µ͆҃ݐuېӸÇ౧ϢĩӄƠܪടǷ˵£ןg܍͟пƮ̵ȕ˯β۹Ջ࣡"],
					encodeOffsets: [
						[-71260, -18001]
					]
				}
			}, {
				type: "Feature",
				id: "PHL",
				properties: {
					name: "Philippines"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@Đ֏ºҽ˹ޑ̫ࡨϽэˎإʉϿ঩Ӧɿ؊ʰЎՑЈˁΑЃثҵƑʖ͢۾ՌʀҜ̈́̔ϝٔɰƎϒרv·ٰڼЋêхÐ̱"],
						["@@̟ˡˁՍ˃ʝԫ׈ǦɤɂɾĢԸҨ¸Ɖ֣جߺāߡ"],
						["@@ૣߕЬט؈԰Ԏ׊Ѱ࠲Ʈۅևҧѳֿ"],
						["@@Ԏʹ՘BgΗϳΣՕʧϸÒєŽА"],
						["@@ʀभ٫ɞj˭ȶԯЍȋעʧªƁԘӶãY͈ԣٜ߮mɴ̻"],
						["@@ɟܩέоѓ٘ܚ̡̈"],
						["@@ԮʉʶɖüɇƍΑ˼׻ɛۥӷ˥ƁڳȊڝѾġϊĲਾүăҙ˜ȫēϯٻЮ̵Ѵɍ̯՗ԊރůлȆ¨ΎˀɊʣȘŇ̡бӚűμߨͺˡĔೄ˜ހԘA"]
					],
					encodeOffsets: [
						[
							[129410, 8617]
						],
						[
							[126959, 10526]
						],
						[
							[121349, 9540]
						],
						[
							[124809, 12178]
						],
						[
							[128515, 12455]
						],
						[
							[124445, 13384]
						],
						[
							[124234, 18949]
						]
					]
				}
			}, {
				type: "Feature",
				id: "PNG",
				properties: {
					name: "Papua New Guinea"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@ɽčε͔ρՔǷ٘ŜĆĜʡʬȏРՑЈ˵ŝɽ"],
						["@@ѯçƃɽҟȱћȟѽBۏʔӑɺêʺݬũҠàŶЖŦrĆѽӐÜʂ˼Ҹ̚ġӸԌfǜƏgү˯ԡ"],
						["@@ݤտղࢻӖω٬ƛʥǁࣀΝġʏ֋ÏȷɔܟĦࡕŴٷ՚ӉҦѧ݀ભπ܇ʇԡˣńإڇ˿һƖࢅaᩒaᩒภ׃༊ӓׄїҴхŸӵඔԱȲѽޛěȄ֕"],
						["@@ʿɡǁӸȝ͘ϝ˞ӍΪ؇ʚɺȮҒɻ˸ȁΜȫʹΛ͊ˏĶѧ"]
					],
					encodeOffsets: [
						[
							[159622, -6983]
						],
						[
							[155631, -5609]
						],
						[
							[150725, -7565]
						],
						[
							[156816, -4607]
						]
					]
				}
			}, {
				type: "Feature",
				id: "POL",
				properties: {
					name: "Poland"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@·՜à̂ȹ̧҆̚ɺɤȝђָʘ಼ϴ੒˴࠼ƙÚȱ߸Yਚħ໶^њěȬʵωɸ͋KͯԋǡʸϳfϏцܻěɽзįރۥɒϗǿ¶ߙ͔šЇĒӹǵч̖Ήŕ³¼ϭаر¼ăˀֻĦűɑҗǨÀɴػòЉ˔"],
					encodeOffsets: [
						[15378, 52334]
					]
				}
			}, {
				type: "Feature",
				id: "PRI",
				properties: {
					name: "Puerto Rico"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@јõưǕɋɃمLӫ·άŢŬیK"],
					encodeOffsets: [
						[-67873, 18960]
					]
				}
			}, {
				type: "Feature",
				id: "PRK",
				properties: {
					name: "North Korea"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Şƥ͉ºη˵ʣ˷׽ѣȅƫƧ̓ʝ֓ƏηɥηįġͰƋӈσŧȭΧÇץ¡͝ϛϑÁùСǆĵƿʙéǀɑüɥƆɰφȤİõƶɆҒÅƎөĠЇɤۄբऒҌ־׮ЎˁܪſѺಚβͰҼժӹ"],
					encodeOffsets: [
						[133776, 43413]
					]
				}
			}, {
				type: "Feature",
				id: "PRT",
				properties: {
					name: "Portugal"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@̦Ɉ΄ŬɂЫӺDƞłӪɼуϱɩYٽƍūЇγçʹԋɵտ̄ʡřɫ̵̿ê˥ͷɓѷŠџġŸڂÿԬϓþȩ͈äռͰ̨ÒͼǪԎkΤǙ̠˲"],
					encodeOffsets: [
						[-9251, 42886]
					]
				}
			}, {
				type: "Feature",
				id: "PRY",
				properties: {
					name: "Paraguay"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ͦ৖tҌЖ݌าʔޮ]޴їbʵʞҳÇଛࢲǇ΄ǐ֦ɩǀʣþޓİ͓̼̀ƌ̢ƳAҥŕӻǑӛƍݏށ١ړƇऻŸࡑɮࠢ౨ťψࡽ͢ਅبۉŸ໵ൌ"],
					encodeOffsets: [
						[-64189, -22783]
					]
				}
			}, {
				type: "Feature",
				id: "QAT",
				properties: {
					name: "Qatar"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ÇؔɨѲɰĜʬˁdӯǽӳɵÑʫǖ"],
					encodeOffsets: [
						[52030, 25349]
					]
				}
			}, {
				type: "Feature",
				id: "ROU",
				properties: {
					name: "Romania"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@δǶԴġՠGϸȳ˺źبĄɄȠΠ@ʰćʺʟˊΟӞԁρėΩưϥϒƹЂƊϠƟpɏПǹʯĀɻ৥ӳĖ̪ؑফțзɋ௽¬٥ƀ͙ÕʍΊƵƦȚƘȷŀ˃ȋөʔßΌԟȢĥˌҕͤڪǂԖ֮Њ֬ԢǮ"],
					encodeOffsets: [
						[23256, 49032]
					]
				}
			}, {
				type: "Feature",
				id: "RUS",
				properties: {
					name: "Russia"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@ࡌ๫కˤԫ்ࠌࡳyוُԒսٱƻ۸Ĥࠊħ࣢Țٌ૴ӯࠜôରަϮͭϴϐŠɔ։̆ߵuࠟΎࡑ"],
						["@@໵]ਙĨȒτ୊˚ࢢƧψƃęɱäɉ"],
						["@@֦Ƚțؐᗸű࿨޻࠭λ൛ēsࠑͳǩ޽~ٗ̊ૣʖȉθ࡟Ǝॗŉҗ̎Ǽ̸৓ȥϚЃӉΣ@„Ꮪٛᔺ࠳ïԷ"],
						["@@ः©ƭˌੲΖ@ַ"],
						["@@ળ»@ָň܈E௒ʉïŗࡽȩ"],
						["@@ౡMႣĤƧ¬ߘͪੀþஞ͏ĸə"],
						["@@ॿͩഉø༛ͨȪ˖༨ųᑔɗ"],
						["@@ډرᶽzඃȣမղҎ׀૎ǂᕞᴬѽ"],
						["@@ӹóᩣŊɟώູɦūҒ࡮ǶҞသܒޙĺ፨݆ɩϢሤѺ᪪բ᫠ǀ෴̸࿐Ŋאͩ֟ʻᲗз᢭Џᤙߝఫࠍ೉߱Ǡۥྎۏ"],
						["@@ɨгސȲឤYቈЧڬ̿ȽѧङʝᕅүفʟਬşఖɃݴǄєաτɔഊƂ᧪ƑȴϽ↲ů´ٜᄼƥഄLബѷϮ՝ӹΙੌڋ೔Ϳ߸ࢦഖϙ෢ɦྼʵؤʀൖş؅ޮૐζ䢀ձܐӿᔲٛ₎ǄာƑ۪΍Ĺؙਜʇ૴Ǥ๰vཚǑཪĢะݛਪˎڷ՞ϐώᧆɻფºᝂБ୲ν@”MKઇσઝÖݶҁԄەϲɧĮΏɑɝ༧Ǿ᚝مݛĭ౽ן௛ԧ̱ϣய׊ᔗڇϣ̸ߵΫ૱Ř˓ց৙߽ͻड़ȋő௣ޭΫ۱Δα฽ѕ̅ॡభȳʥ࡟ே޳ׂ̳έ௬ҵለИ୘܀ԆªϾರȊຊ੒คࡺຢڢڮஆ৷ëԍۗᒉइۍਖᓧ˷ᑃටۚԧሙɕಝēÔ؊ಯŶ਩ЭᢵƠ᪏ʟᨩ࿛ủጝ೚ŁаՃࠄȅ՞оईÃௌऍ܍ځ࠽ë্ϛഉ్௓˯ׇଙ঑ଇॻթӹ૩ӱՉYՇФૻؙſ˩ŝƦKѐіxŦ঴ɛܚܞ̒৶Ʃ֢ࠈ˾ऄ͚̮Ѵݲ൷ʛܯͧ౧Dͻ߄হװหˎ̵ࠖ̉Ԫ̿βԯࡐ̲݇షʢ૛uਯƱۛлҤȥXҩұˑݷࢻRσஅՍ৙̈́োéѯˮԋĞ௷ףેƑޛȻੑƌޫSԙіࠕИࡅŎ੝ŋߏƹ஛ΜǇـধɎށİवΎࢉࢉ΀ӵࠇב௏ɂ࠻֗Ͼ࢙^ܳʴ౫Ѓྃܣࢭơ͡çѽԤઍőΧΦחǌЙӠҩưிɍୃӜ҃ѯሟᒒੵٮ̮˂ᑋߍ߭³êҞઅ˺࢙ȱ˃ࢊມǺݯΑᑅ̳Чȹḭ̇ϫ˻؆ֹ߭ɓǀɭ߭ХസֿɁЉ୻ʓʟ੹Ѧ೯iࢻΟহͼᇡ׊ಽsჃࣳĿؗࡹӤڡउʖǡӝُ܊֫ذx՚֗ďѝѐƋϥӽ߿Ƒ࠳ࢁކߕĉ֣ࣼফԇ͹ƝɇωÌֿԚɿՅȚʳΈ޵ǮԙƁƥƼଥЖఅƌ܃ƞĹıੱ܂य़̈́ܩӴؒƈۤ۰ҹͪఌ΄uȀݯƉώѠɼ߼ÖƄ˪ȅҪ΀ѰWʚఉ˚ӭUԯЀ١ƃ੩̐lǒ̗θڟ¤éʼɀǞ՝ӈࢋąʭ¦Ƀȑ̽ȷ՞ȟ˨ǊĀڴ͞Ȁʍɢ֥ƪ¼Ʋ΁ƴՃվǸɨĉЂࠑȨѱĳšȼࢭɂˑӸíТЙȖάˊʝ޶װӞųƤक़ҬࢡЎᅢ੶ޮӠ͂єగּΆնݳش֢ܜ঍ग़ޢي౿֔ŬךڶüොͶࢀ̈൦ԕᘨȧṺो٤ЋÆ֓टѳ൏ɡ⏷ٔ؟Ńൌ؛ÂϵÆ࡫ઌʯڂɓňРԑΰ՘͈᎖Թ۾Ȳ֣؜ዦࠖޢµ޸̋Ӫ׀۫ԄЪԊءԶᚠˑӔҹ੡ĻNҳڌ˽ಜǼȶ՚ჶАᰪܞي£ࠣԙਬĕ׼˼༾xఢΐफ़ԏॖ֌ࢡӢѪˤ២ʫ୒ʿᴾॣ֚ѰࡡѺ{ǴৣĈˢЌ҅ټ}ː༄ݾրކزǒᕮɛǬұߕڽԺˋ˒חȏଵऒԧέ֕࿫஝०ŭ̢ͮऎɎɞжܮЎөӌϼֈࣿêȫҲڢࡈણۆຒ֦șװмnѴүͧ߷࣐Ƶϥඤͦლ¬༈ӏݛ۪ċࣆศǞ፾ᆘŌہѮংւॲx࿎иᕠŐ˪ɲᕂþیȋሴҀ໲aɶδߤΨጤΈ෸˗ଥȷበŹ"],
						["@@ⵙ͕ໞીےĦقÃᒈӋʟͿ"],
						["@@૽ōݱÛśƏঙƑ࣫ȦӐʾል~࿞ƶ౨XǢɧӘȬߊƐఞǿ͗ŷ"],
						["@@ᆳĿᚉʎඅ͎٣׾଩ǔᔆָᆎȎ࿌чኬ߻ȹݯ"]
					],
					encodeOffsets: [
						[
							[147096, 51966]
						],
						[
							[23277, 55632]
						],
						[
							[-179214, 68183]
						],
						[
							[184320, 72533]
						],
						[
							[-182982, 72595]
						],
						[
							[147051, 74970]
						],
						[
							[154350, 76887]
						],
						[
							[148569, 77377]
						],
						[
							[58917, 72418]
						],
						[
							[109538, 78822]
						],
						[
							[107598, 80187]
						],
						[
							[52364, 82481]
						],
						[
							[102339, 80775]
						]
					]
				}
			}, {
				type: "Feature",
				id: "RWA",
				properties: {
					name: "Rwanda"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ͬӃµӵʏŁѿÆʱӍԛàþҠŘÞԄʎɺȰďԈʸ"],
					encodeOffsets: [
						[31150, -1161]
					]
				}
			}, {
				type: "Feature",
				id: "ESH",
				properties: {
					name: "Western Sahara"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@oҊŸ@@ÉeǋEౝ᪁ªᒷ޿÷ȳћǄ்ᾓNǽ˫΢bCቆäĶ̢ΆϘˤୌୠ࣢Ђ੖ˀÖ˜ټۺĜ̦ŉϢ@˔ȒԲ"],
					encodeOffsets: [
						[-9005, 27772]
					]
				}
			}, {
				type: "Feature",
				id: "SAU",
				properties: {
					name: "Saudi Arabia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ŉΪʩʨÝͲѡ̞҃۴ʁۆׇ׀ϑƐ֋ߠīאӾӕञϿ͠ґǨˡӖ°ȎɹѦʕȊ͝زԟڴѓ־лIžҦ̌ļͲनƅζʶȪ̢ٚŚƒˮˤƜ࠷ࡀ၆фǆŴৢɩబיᛎၕ༠ãݠąȾЏתv͠ܥаȓƠִ̏Λ¼΍ċ˩ł˯ʎɽŐ˟ŲȵʬǕɶÒǆ͍ș࡙͐ᡌщǞǲϪש֕၁ᠽ࠽ᝑ͑޷ϙ׻ࢥϹƕɁˬ͏§߻ĎƷČॹmɫùΉɔɝЭĒΟρˋ"],
					encodeOffsets: [
						[43807, 16741]
					]
				}
			}, {
				type: "Feature",
				id: "SDN",
				properties: {
					name: "Sudan"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@śhdмĵ̀џͨĵĶبϳÌÍȇԍ©Ȭʕðԍңңл؅џđ۹Ӫͅǥđʓџǃǥ࠵@řǦ̡ƝɳîѝӬƟɲŗɱϵɏݣ˿ǁʳğå ̅ʎÃʼƌΔE΄ӛՀĩάZȰ̱ʜUӦǭ͖̍µĎ̰ɒΖħΐˢʴǫȞɞ԰ϨئܦÏ¥ ZΚॲH@း@Ὂ@ῼ@˔ࠗȁƳŪࡻ্̰͌ȷҠ̳ыӑأƏ˅ʳĉ֑α௿ĚͳƅܟͿࠟԓзέٛč΃Љɽʝ࢟Dĳ"],
					encodeOffsets: [
						[34779, 9692]
					]
				}
			}, {
				type: "Feature",
				id: "SDS",
				properties: {
					name: "South Sudan"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Xٽűʯѿq˷ӏԨÑюХƨͳϦșӼࣳ֫օԫԇԫϭסFگȟՕȊ΋ɭ݉֐ȥάҵǱϱÆɣƕϗĸԗۚƉˊعͪɅԌΕζ֟ѬS˘ҡͼ֯͠ʴĠ̀ǂɐݤɲ϶ŘƠɱўӫɴí̢ƞŚǥ࠶@ǦѠǄĒʔ͆ǦۺөѠĒм؆ҤҤïԎȫʖԎªÎȈϴËĵاĶѠͧĶ˿cлŜg"],
					encodeOffsets: [
						[34779, 9692]
					]
				}
			}, {
				type: "Feature",
				id: "SEN",
				properties: {
					name: "Senegal"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@΍ٺн̚φǄРמȦќ˾ːкïШǾҶVДʙ֎ɝԘأֈֽԹǔӓ̾ɿî͗ʽŧ³қâÙģȃk׿ȲЛV༇ɥħ˥ѻƋƏ٢ވkȬŞƮR̸ȘήǯκcζȌǝʐˡƙʻJͧȸˉ_ȍȥࣵy"],
					encodeOffsets: [
						[-17114, 13922]
					]
				}
			}, {
				type: "Feature",
				id: "SLB",
				properties: {
					name: "Solomon Islands"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@ɾ˿חN͉ԬԈȯǜ"],
						["@@͝mԧĎǫżÀͮֈƁ˜ǭƎə"],
						["@@ųƹحܰǫԈ˺@̠ڥʹЗ"],
						["@@ǛڅΦҟ̠̿˪ŰĐϮȫېϭȢˉ"],
						["@@Ǘ³οȒ·Ί¨ƖԈΡͰ˛"]
					],
					encodeOffsets: [
						[
							[166010, -10734]
						],
						[
							[164713, -10109]
						],
						[
							[165561, -9830]
						],
						[
							[163713, -8537]
						],
						[
							[161320, -7524]
						]
					]
				}
			}, {
				type: "Feature",
				id: "SLE",
				properties: {
					name: "Sierra Leone"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ɧØͺѩ҈Ƨ̬Ĺت҆τĬɺƞǸɶpȜǂڦCɺ̛ǼΛʓƈɗṶɴ´ϹϹϛҗ«ʓȩˏ"],
					encodeOffsets: [
						[-11713, 6949]
					]
				}
			}, {
				type: "Feature",
				id: "SLV",
				properties: {
					name: "El Salvador"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ġȡӡ^̡Ą΍ǘұÀʃǶ~Ů˾ɄǀĢ«ĲȠ¾ʜëǸǙʪƇœτĴǤÑŘĝÏͳ"],
					encodeOffsets: [
						[-89900, 13706]
					]
				}
			}, {
				type: "Feature",
				id: "-99",
				properties: {
					name: "Somaliland"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ϛԩד۫۹Mᩧা͍̜̳К̳ҨǾ̖̲҈˚ƹǒΏϜΗкGߊɌࣴĴ݌ʼиÆ̚ƶӎKaE΋Aࡑ@ѫ"],
					encodeOffsets: [
						[50113, 9679]
					]
				}
			}, {
				type: "Feature",
				id: "SOM",
				properties: {
					name: "Somalia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ѼĎЊ˾͈FpɵýӧHѳǯ̣ʁࣥЙयԱ੷ܝ௷ܓवধ଩ࡁڹష࠯޳ٕँৱȗѷȍȣӽۚWᵤܾ॒ɰˆբfݠפબᛜᡄה۬ϜԪ@ѬBࡒFΌLbːhϰŰ"],
					encodeOffsets: [
						[50923, 11857]
					]
				}
			}, {
				type: "Feature",
				id: "SRB",
				properties: {
					name: "Republic of Serbia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Ԡȡà΋Ӫʓ˄ȌȸĿșƗƶƥȷȏø̫Тγ͋ʿƗˋĞĳƑšϳa˹µØĴĴĦȴšKǍƼƑ ŋƆƽÀšŠƯ±ś˧ȩÑèð͋Ǩ˟ĜūŜɟƠȢŬЄЛ͔ɀτ̥Ë͔́ˉʈȱ͘٢ɚԾҖͣĦˋ"],
					encodeOffsets: [
						[21376, 46507]
					]
				}
			}, {
				type: "Feature",
				id: "SUR",
				properties: {
					name: "Suriname"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@৔ǙĞưڶÔࣚɥѩܟâֹͤӽƥίóϩɉΛӓǲЇđ͹öčʏƘǗ÷ǡҙèԡܴōӄˏBωؐƺѠ¯ȤԜɖƈݲ"],
					encodeOffsets: [
						[-58518, 6117]
					]
				}
			}, {
				type: "Feature",
				id: "SVK",
				properties: {
					name: "Slovakia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@´»ΊŖш̕ӺǶЈđŢߚ͓ɷɓǏ͹ǳđ࣑ʮ˟»ȟȡЁĿěÄХŽͭ}ãǙ۷Ļ̱ĠёɌċ̆äńŢȂόa˺Ĕxþǈ¢ÆȒȖžưʢD"],
					encodeOffsets: [
						[19306, 50685]
					]
				}
			}, {
				type: "Feature",
				id: "SVN",
				properties: {
					name: "Slovenia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ۜÝъȐܾtǈƘƘUǎ˳ڝɟć͹̇đHɻͣh˷ƎƷƙבȈúȫΨĞа"],
					encodeOffsets: [
						[14138, 47626]
					]
				}
			}, {
				type: "Feature",
				id: "SWE",
				properties: {
					name: "Sweden"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ࠁוƀԥ೹ڭྱܡؓஃײףߦүޗॅ࢑ȝ͍තӋ޿৳ĆӅڗঃˉߐ۳॔ٓஐφӜּۨ˦ন՝ю½ૠղ߀࠰ä̧ͬ˺ಬஂࡀञֈײ߮GɞҶཔƉŬքԸ૪Щ಼ֱv಑˴͛ฃʃ"],
					encodeOffsets: [
						[22716, 67302]
					]
				}
			}, {
				type: "Feature",
				id: "SWZ",
				properties: {
					name: "Swaziland"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ǡύӭěԅҖS̄ɰ̀ĂʔʐÒшƵŰϕðω"],
					encodeOffsets: [
						[32842, -27375]
					]
				}
			}, {
				type: "Feature",
				id: "SYR",
				properties: {
					name: "Syria"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@࿩ࣅऩͬgNŖŶ_ΈȸҠҜ̈́Əͤϗ¨ÿٞȶΌɤȀɤȀ°Ҹ˞Ǐऎɺ҂ƿۖFॴ̀Ґaक़žїԽҡȹĂؗͅ৫ᇵ࢓"],
					encodeOffsets: [
						[39724, 34180]
					]
				}
			}, {
				type: "Feature",
				id: "TCD",
				properties: {
					name: "Chad"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ĎЄաnDզΓ̶δ૊ੴߌ¬ન͖ၼǼΰΓ˾_ˌ̽ɔȷರࡔҠ…ྑ…ྏ¦ ܥÐϧإɝԯǬȝˡʳĨΏɑΕč̯̎¶Ǯ͕Vӥ̲ʛYȯՏƛэͽ؉ࣹ߅ϳ߹¾ʁûĊ̏ѫ̋Σ͟੓͏ȽȐƓhƹɍۛÙƀɪ˅ׄşΐλƜӷӪǼІϦċʂÐҸSқކ֐É֐ͭՠ"],
					encodeOffsets: [
						[14844, 13169]
					]
				}
			}, {
				type: "Feature",
				id: "TGO",
				properties: {
					name: "Togo"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ڱǳȇ̎ɡՔãкȆݴɁ̬ăڎD؎ΕѠÖˀ݂kŅѵʲʝ̈̋ЭǜǥኝȺׅ"],
					encodeOffsets: [
						[1911, 6290]
					]
				}
			}, {
				type: "Feature",
				id: "THA",
				properties: {
					name: "Thailand"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ݭϬܗeŬڈ݉Káऋґ௯˙ݏÌ؋ն΀ދưܭҶӓԚĭѤѧ˝·ևĵßќۇςƣƭͧ͒ƝжҁӄПЌƏӳǃҲĠԾʚ߬ТࡸҤ޶͟ތ`϶ĩҸ֕ښȩф̄ƺ̮ܶ·ֆՓؘН݆ΠƴϦࣦצӬθӔȘθʷ´ԍ֨ȷࢭpݫࢰԆʤƧӰzǜَ̊ÍٖڽÀࠥںܷ܅˙ϛ޿Ŧગǅ՟ۧȤ১"],
					encodeOffsets: [
						[105047, 12480]
					]
				}
			}, {
				type: "Feature",
				id: "TJK",
				properties: {
					name: "Tajikistan"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@̭ʷࣳƖāӛ࣬Þਢ˗འŶɈާˠĐԜȓ͛ŴӍࡿBׁØԻϕύĉ̉ǯͩˠþ۸ʩ¢ĞʲғȐα̇ė͹Żūԇj˕ϩ˯ǌ؋ˑʱĺӀࡘǹض؟ȨɔφۮЌҬˌբ૲ȜǩϵŤɹΎv"],
					encodeOffsets: [
						[72719, 41211]
					]
				}
			}, {
				type: "Feature",
				id: "TKM",
				properties: {
					name: "Turkmenistan"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ñۼطॣݔڣĠगюׯþσƽ֙|ׯӓ݇ǋƻרŪ࢞ٽ˶Ɏֺ֏¸Ȇ۾ߊȵ݈ˎؓԎʉӔڱɋď؛ʿհψ˨ॖǪ֨ɻךڅњ¤ॆ\\Əцܖ̂۾ӦଆѹĜڡ͐ǣࣦˮƳаࡽ०ׇոЃ࢞Щ૤ΫwԥʩЅɤſ̙۽ǋǙڥӁʭڏŵǫϟهŏࡩ͈"],
					encodeOffsets: [
						[62680, 36506]
					]
				}
			}, {
				type: "Feature",
				id: "TLS",
				properties: {
					name: "East Timor"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ĲȤܢȌזˀŀ͆Ľ̯ɫ࢕ο۳ʋeʬďǔ"],
					encodeOffsets: [
						[127968, -9106]
					]
				}
			}, {
				type: "Feature",
				id: "TTO",
				properties: {
					name: "Trinidad and Tobago"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ӚŊǮصۭġƯúʒɲiͪ"],
					encodeOffsets: [
						[-63160, 11019]
					]
				}
			}, {
				type: "Feature",
				id: "TUN",
				properties: {
					name: "Tunisia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ΩພԭͺQȰۉԄóنԮҶȢۚƃߠǠќࣶͺךĵ}ы܊̲ÒǉпЫMϱ̆ȽōܫփхǄқѤaɄЍ͊ſ³٥Хʋʵˏֽ͓ĘΑïΟЧț"],
					encodeOffsets: [
						[9710, 31035]
					]
				}
			}, {
				type: "Feature",
				id: "TUR",
				properties: {
					name: "Turkey"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@஺͗ঐżܤõলѬࣆ¢ߴЭƜ̑ăУزȻͨʕֻʇˀ५ǏʻҠڧЕƙ̏Ɋ঍ňίŽॗŽҏbॳ̿ەEҁǀऍɹ˝ǐ¯ҷɣǿɣǿ̱Ϡ͈͂ԟí۱ȖֿәౣĥڹҊࣟȗΑׇĳ߻҄ࣻeӽ࠶ؗҰЦٸՓВठߨಒΜྀٔŏ৞հ঒ʄർlุף"],
						["@@۫ҏ˃Ϻ\\ǦȦĦʺՂХɞࡦ˄ܤőĴ͓ܼ˓Ƶȵি±Ωʷ"]
					],
					encodeOffsets: [
						[
							[37800, 42328]
						],
						[
							[27845, 41668]
						]
					]
				}
			}, {
				type: "Feature",
				id: "TZA",
				properties: {
					name: "United Republic of Tanzania"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ƚġᵂႋÌӣ஼࠿ϱਙ¸Ӊՠ̩~ɓɳԓ¶ʭÇГ̌Ճΐ̰ࠡǿڝӣࣿ͛ԋb̙ʥבsɕŃঢ়ʂكåɽଢ˵ϺǛɶࠗƾӉʨՕƘͯƘΗɈґ੖ӣҺǗӤČѨƯޞΎ ̨̦͜ѬȺǮS˘ǷȐ·ͨʐł¶Ӷͫӄ̎Ķऄ[ႎà"],
					encodeOffsets: [
						[34718, -972]
					]
				}
			}, {
				type: "Feature",
				id: "UGA",
				properties: {
					name: "Uganda"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ः\\̍ĵԇʷȯĐPوȜ͎²ڬǰϸ͎Ѭ͔ɠ˒̘͵Ŗ¼চΌɮՖȉڰȠעEԬϮЊ׍İсτ९̧ؓЯ֋ʉͽTࢹႍß"],
					encodeOffsets: [
						[32631, -1052]
					]
				}
			}, {
				type: "Feature",
				id: "UKR",
				properties: {
					name: "Ukraine"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@̾ɄȒʮ¥ࢌĆ՞Ӈȿǝêʻڠ£̘ηkǑ੪̏٢Ƅ԰ϿӮVఊ˙XʙͿѯȆҩƃ˩߻Õџɻύڡã֑˕޽«ܣ̻¸ԹЪȭࡨ¼Ǐ̛ँơଛӟұǠȄЂࣽʘƨǈߪ˪ʑȔಯɆË̼ީĻ̷ҧٱةϟƠЁƉϑƺɂĞƦ˾ɲˎÑƮǬäĊśӸ{ɞØƽĎÐŲ̉ɈŧΘ̩ƐÒ˶ϝɦΉأʾ֑ĉȧŭΟ@Ƀȟاă˹ŹϷȴ՟HԳĢγǵÍɤұɮǐͺɸɔȀµɑϘބۦиİĜɾхܼДҢɪٲnࡖßबȫڎi͂ŧ̀Ʀɚȝݸ¢ͮąÄцʶȂܞº"],
					encodeOffsets: [
						[32549, 53353]
					]
				}
			}, {
				type: "Feature",
				id: "URY",
				properties: {
					name: "Uruguay"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ղĚࡆٯ̺|ࡺ՟ڈҫӠֱχЉɸӇεՇॉұاǚғěޥΰ֫ԟҬÞլǾȈS࠸ɤࡺȾڦ"],
					encodeOffsets: [
						[-59008, -30941]
					]
				}
			}, {
				type: "Feature",
				id: "USA",
				properties: {
					name: "United States of America"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@ũƕȽŤ|ɾƓ̨¦ĤƤƎÍǔ¸þÜe͐ƙƬñƌőɊ̍q¯͟ǵˏſ"],
						["@@˭ÑƟǮīèQÀĈî̘āɘŹëĵ"],
						["@@ĝ҉|Úĸа"],
						["@@µÓŻŃȒɤŚêÃʐ˥"],
						["@@ıĉ˱ƴªÖŸĈȘijȝ"],
						["@@Ƭңʼƛז½࡬ƅࠂʹڼŊਖɓ˞Tݨʄ߂̧ࠒ͗ں˩ٶˏĈəȢĉ½ĉɦǎĔ¦ȣǜƅɴ@ŬĹĽƫ࢖ЁǶށǚܳʗӹЁҥȁ̍mēĦť˸Ɓɂ@ঊ҆ࡾƀસмfĐ÷ʰƉǒϜƆࠜHޘAˎ͞ŀàࢶϜƸ౦N໾BĎȺː¦Φž̖Ϣʲٺٚي˨ə֜ƜώʏAଧռӅƢ˝࣋Пࡷ̃ࢱʝѻӿƛȋSѽˤѽΒsė̬ʦȇãʇ֥ƋЗhةƥλ¥ӥ¥۫ʏఀǂʠǃ୳ʥ՗C|ĺʭɷʚǹ׽ؑ٧×Ɏȁª˟ɀǪҍȼƭ^ͅˏ͛ҿڡûʺֲѕ͎įۦǉεǴՑևƀׂ˓ߛʊÍĖ̃ŠࡁՕدࢇʝցӱнÁэ̱ţ˭इձӁЍЅӽŻׯƪ׍ˬܗώשLεЊঅ֥͛ȿԡʣŃЯĺƁς͋ȖѻܢϹٞű͢Ǥ֐ɽҦٻ۲͟źࡑϡƭ¦СϼՃȺोŁݗĤٙÍΏſƲɟaͽǴǓǇō̵Ů́ǃ؍طѺܻĿ؏ȚԹÏۻȝއح࠳γҝБȕϗUׅ¨ЕǄ˹͝{׭ȂٽʺɽЄȁטӷӐ̃ӰуֺףͲۉgՉڑۣʦѡʪȽҦ˧Ѯӿτїˈ̩̖ป@C΋ڗ@ဩOቿפ౓ТĀǒ੩ĝॕÝƙіխӚϻĴğʌһ¦̝ɪޭĊɉƌĹҢࠁࡊ۩ୠȚχˤٯ۴řۆ҃ҞȀۢܜˍ٢͠ߊĸނĺނƱૼˇܘʓ϶ĸǐ௒˷҂ߋȺɜƇې˷ێᛸ@᠂@ࠜ@ᢢ@៚@ᡀ@ᡄ@᭰@ᮞBაAF͔˴J"],
						["@@࠽͋ѕɐŽЀބ̘҆Ÿ֐ÉΤʻܫЍ"],
						["@@ԧŽսƾԛɮࠦƞښùĂ͑"],
						["@@԰ǅԾĒڸɛ࠲őéĝُǱٕǾ͋Ʋݍµȧôº̈́"],
						["@@؊ϛώǌහ»¹ȕ౾ƛࡨČᄚ˅ྤā٨ŉ૦Ǝౢʧࣲŝ@@MᷱIⷍࠠ{ࠌɵהρݜցࠈҺࡈ˖Ҁѡ֤·ޒϙՂ׽࡮य़ේ՗xՋұЙҥ͂ݍˌʃܺએںҍߎ߯Ä೷rটʌ჉ࢎߩǄ฽̜୑í࿻ϬৃΨटǯǦ׏ҫÁঁǫ݉˱झǳťӶϚࠚࣀʶɱɂੱҵֵ֑௅ױؚСߏ׿ࣗΗࡁʱȻωಽѡ˅ϿছΫֽÞ޷ɻ࡝˹ۧ˫෹ʉſƘऀϾࠔʸࣆҠਬĨвΈ୘ԊȈǚب̒ƢْђӸॹʫ˓Ơҕ̧շюɧ̝̽м࠿ͳԩBïԄƲ̮ե̚થǇ܁ЀַȬIӈ٩Ϊ͘ӘۆҸ̚њںÖ־ƇڴМ؎ï٘ʼƻϨҹưج͖ԩWࢻǽʯȃڏȄஏĥ௷ȬΛ͸੟Ӧ୾ΘመШ۔@ŕнᄢڽԶਕ͌ױр߫ΨଽˈҺѲ๰ਗ਼ϦȨФ࡬ЎࠊĪཪώޜÉಐ҄ౚǭ"]
					],
					encodeOffsets: [
						[
							[-159275, 19542]
						],
						[
							[-159825, 21140]
						],
						[
							[-160520, 21686]
						],
						[
							[-161436, 21834]
						],
						[
							[-163169, 22510]
						],
						[
							[-97093, 50575]
						],
						[
							[-156678, 58487]
						],
						[
							[-169553, 61348]
						],
						[
							[-175853, 65314]
						],
						[
							[-158789, 72856]
						]
					]
				}
			}, {
				type: "Feature",
				id: "UZB",
				properties: {
					name: "Uzbekistan"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@xԦૣά࢝ЪշЄ॥׈Яࡾ˭ƴࣥ͏ǤěڢଅѺ۽ӥܕ́Ɛхॅ[ᶾᓘӺƾïದ׻یͅߤݵঢŪ෸à৔ؗÙࡅЦMǢۍ੬ɲЉ̺Lπ׺૎הӖƺʠĉ۵խئ́ײȾ়ѷ੽ٕĊ΍uţɺǪ϶૱țˋաЋҫۭ ɓυؠȧǺصҿࡗهǰҳN"],
					encodeOffsets: [
						[68116, 38260]
					]
				}
			}, {
				type: "Feature",
				id: "VEN",
				properties: {
					name: "Venezuela"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@yȣӱĭ˜ϡYѭυӥ͆ڙδÆȌ؈ʻ̒§َਸ਼΀řІ̎ˆ̞ןל_մҵ˧ݮQ࣌ĔӖϕٞĻҼʾXɄਨ¼৖\\܉ʛ˼Їڦ×ِЯƆڧѬn͢ȣڕӱó̫˾̷ȽƽԫƉjϱɫɱّ֪Őʁ̭͍ऱ̽׿Žʏȣڛɀثņƿýϔɑ֝ŜՉ܆ï°ǭ׷ʅĭΣΉƏسȝǋʱٷÅҧѼʯ࠺ɟ̧̌ȄюмȊʅʠǛ֒à׼Ȉ˰ƲҎ̓Ơӏĩ®ͻęסܢӥńઉăȧ̊ȷêǬĴ̶áͺȃȂŅϮѡÈɸӮĺ׶ʔ̸͘ʌɈрդƖ"],
					encodeOffsets: [
						[-73043, 12059]
					]
				}
			}, {
				type: "Feature",
				id: "VNM",
				properties: {
					name: "Vietnam"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@૭ܗ۫ߍȁ׍٠ࢭ޺ળނԱԞګϪ།ŕ๓۫փ१եۇ۫਷ޱ̧ՠʀ֬دӌܬ͸ࢦÔσԚප٨ļ৖ț֖ƶࡀɃצٍאՋ݌ۥ঴৓Ԋʊ̠՞ɘ͙ܺਙPϕކӭڐҊȴڢIࠈĬܒ҄К̿ސƵƃӛАͿࡎɓ"],
					encodeOffsets: [
						[110644, 22070]
					]
				}
			}, {
				type: "Feature",
				id: "VUT",
				properties: {
					name: "Vanuatu"
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@ˣō˭ςɤՆӗ"],
						["@@ƌڱɥŀǩťɴi٢Дʵ"]
					],
					encodeOffsets: [
						[
							[171874, -16861]
						],
						[
							[171119, -15292]
						]
					]
				}
			}, {
				type: "Feature",
				id: "PSE",
				properties: {
					name: "West Bank"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@ԣŭʙЃŕɜɌŚɁĦǬ̤֔ś"],
					encodeOffsets: [
						[36399, 33172]
					]
				}
			}, {
				type: "Feature",
				id: "YEM",
				properties: {
					name: "Yemen"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@؉ɥǋύo˹࠷Οഇϻݩףυ±ʥºӭΑ՗ǉ۷©ɃµǿɛəÕŻɇеlˍœ׉¨ɓӬzҠƍʜǑتʋΊǚ¤đϨĸǊξςˌđΠɞЮΊɓɬúॺnƸċ߼č͐¨ɂ˫ϺƖ׼ࢦ޸Ϛᝒ͒ڀ൳˞ח"],
					encodeOffsets: [
						[54384, 17051]
					]
				}
			}, {
				type: "Feature",
				id: "ZAF",
				properties: {
					name: "South Africa"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ǏŧΣяɻћӇ׻ोࢁףԋًϣ࢛͙ѓ«ŇɷԛŰеǅ࣫ǊԙĹΏ¬ࡿͩܓƃԱͅϡoΣ̚˳fαϒśŏɦLӰ˙֞˔ƴs٤ս޼х܈AF׽તДдͪɯƘΫϘÓՈǃҌÖݤіB᷌ɨűӾߙûԟȈ̏׼ĒрϒЊʨȶДЦȚΠķВɽۂ£՞ȜĐʾƨДҚäʨ͂˪֔ݮغஒؤ΂UОƛ˲Ķ҂ċД஁ɔׯƫऩî̟чƶʏÑāʓɯ̿T̃ԆҕӮĜǢώْQȿؑıۥɑϛֵщ", "@@νʶϻǟҕ҃͡Տـ٧̜ČƺˎҴƀƜ˜ʴФ̅ʪ"],
					encodeOffsets: [
						[32278, -29959],
						[29674, -29650]
					]
				}
			}, {
				type: "Feature",
				id: "ZMB",
				properties: {
					name: "Zambia"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ІϏɊ܋ƝɩǙڻǈۡ˃̇ʭޭѶɓᢇۗĂׯٍřӍͯĹ̛̅ßܵۓҭխ˳o˗ĬऱĠƯÚOêͧȎկ¶ۋȑչԾ֣یᦶშYí̂Ű̀ƧЀĪТėʺ̂q¶ʽϾrՖûˬϡڨŝԤˆȌѯ٠ş̴ΧΈҥ٠Që࣠ɱƳח͞ɧƬļࡈƬসȉψʈ՚ɤĶ଀ƚͦđΘɇͰƗՖƗӊʧ"],
					encodeOffsets: [
						[33546, -9452]
					]
				}
			}, {
				type: "Feature",
				id: "ZWE",
				properties: {
					name: "Zimbabwe"
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ҁČ˱ĵНƜ΁VՙϞٯźʙՒC̒έĞ्ई˃ӢǛƮ͓ڤलğ˘ī˴pҮծܶ۔̜àĺ̆ӎͰَŚÆ̻۬hϴǯǺȻАÓѦˑF੟Ǐ׋عƊʝħӵŵùɛ؅ࢫ॓"],
					encodeOffsets: [
						[31941, -22785]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/xiang_gang_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "8100",
				properties: {
					name: "香港",
					cp: [114.2784, 22.3057],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@}ScTʟ@cWuJÁ]l¦RLj¼BĄà H@TOHCTDDDHDNAT@PEHDDNJLX@BABALHFF@DKHADBBLDHHFBLEJB@GDBBFBADDB@@KFAFBBJJA@BB@@FFDDADFF@FADDDBJC@AFBD@@DDD@DAA@D@DB@DHHBFJBBFEHDFAN@DGDC@DLCBDDCFDlAFBFCBEF@BC@GDAB@FD@DZJX´HĐMja@Ý`p_PCZ@lLnRGSDMFK|a\\Y}§Mën"],
					encodeOffsets: [
						[117078, 22678]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/xin_jiang_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "6528",
				properties: {
					name: "巴音郭楞蒙古自治州",
					cp: [88.1653, 39.6002],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@ÈÒĊanwŎVȮ¦ͪŃĢÜōȂçČéƐżLɆóĊĊaʊŁ±¯²Um»ˌmÈ»VʠţWÑÅ¯ǓéôƑƒğÆīŎī@Ƿwô˺LÞ¯ƨVǪÑƒĢȘV°wĢôk°¯ƒ»΀@Ȃ»ĸǔ@΀͔ôôLɆó̐ÝɜLɲōͪƨóŤK@ī@IU܃ÛmȻţǩÝ˹ÛǉťǓǫō@Ɲ²¯VçōKͿŁΗÇţ»ƽɅƑLÓŏÅÅɱV@ÝĊU¯ÑĊĭÞLÞŎJ±̃XȣˌōlUÈ¯ŎKÆƅ°XÑÜ±nŗġV¯óaUƧUōŁÑ±çɲ¥lĉkğ°k¥nğţL¯ÝÝUƽĬ΁lķ°@ōXÿÝ¯V»ŹLʉÞɱŤĉó°ÝJ¦ÝKÝ£ţÜÈĉ@xǩUċƑ@ky͓¹`U²ĉVġ»ğa¯¥ť@ĉó@ŻÛÛJw¯nó¯ġWƽʩķÝɛwĉĕÝ¼ȭÞķō@ó£Å΀Ƒ¯ôȯÞ¯ȰÆōèĉXÇ¼ó@ÝnºĸÞVƜĸȚUʶõˀĵĖɱŎÝĖVࢰӒѢ°˘nϚVˌÈmɼĵŦW¤öʊõʔ@°ÈXVènŎȁb¯ǫĉ±Èğ`ġwōÔğ»mVVÝ¥ó@ĸķô@bXĶmV²²`Þ_ɴbͪÈ°ÞWĸÈŌmÞkɲÈUÆ»n¼ǬVķĸźô¯°n¦ɄÇÈ"],
					encodeOffsets: [
						[86986, 44534]
					]
				}
			}, {
				type: "Feature",
				id: "6532",
				properties: {
					name: "和田地区",
					cp: [81.167, 36.9855],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ƨ¥èź٨ΘƑᩄbUࢯÞĕɲōĶĕöʿVʵķșUƛÝķm¹Þô@È»ĊWŎçÅ°ȯȰÝ°óƒÆͿĉ»̽çnmɱĵƧºóUƽ@±wóL¯°̻L±Æ¯Vƴķb¯VÇ¥ğ²Ǖbk¥ÇKlÅɱġ@ÑóK@ÇaÝXğţxĉČǫķê¯K@ÑaŹƑK¼¯VóaónġwóÞéUġbóĉğÇl¹aUóğKWVÅ¯nÇŋƑķnʇ»óxĉwçÇ°Åw°ċXób±kÈÇJm²ţx@ÒÝŦÇºnó¼n°ÇbUÒ±¼XĸĠłƽXmwĉºzÈÜmnxmx²ĖmÒbnƧêUºĊêÆVóĖóUĉ¼ÅĬƑ°ɆƆŻŚlłÞL¼nĠ¼@ÞÞź@ŎÞ°VɄɴжϼِ͈Ŏ"],
					encodeOffsets: [
						[81293, 39764]
					]
				}
			}, {
				type: "Feature",
				id: "6522",
				properties: {
					name: "哈密地区",
					cp: [93.7793, 42.9236],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@WnŐÆĶLĢ¦ţºźlxÅĸƽŚɄĮè@ô²ÞUĔƐńV°¯ĸX¦Ɛm̐bƒ»Ɇa΀ĢƐLˤȘÑnІǉĸÿn¯ĶaŎ¯ĢĕȘ¯°΂la¯¥ǕǔwˤӱlťО̻nŻmɃĕċţUw°WUóƨÅţķ°ýV±óÅǓéʉ¯ƽŁéōǖȁÝƏůǕw˹ǫȗǓƧǕVýé@ĬţLƧôͩɱŎɛK̏ÞɅôóK@²@°ōŘ¼lŦ¯ŰóƜÛlV¼ķ¼°kȰŰĠǬŚÝŎmĖ`@ÇÜn"],
					encodeOffsets: [
						[93387, 44539]
					]
				}
			}, {
				type: "Feature",
				id: "6529",
				properties: {
					name: "阿克苏地区",
					cp: [82.9797, 41.0229],
					childNum: 10
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VÆxˌŎÞŎ°nȂÒ°²VĊ¯VğƾˍǬƨÞÞKÈÞĊVźôɆÞĢèŌôWČ²ŤVÞĸʶbl¯ôn_VÆĸlmÞnVź_ĸ¼ȮmǖéĸW°°ĸJkʠ¼Æw°¤ÈlxɆzČºĶI²ÆǔU°ô@Þ¦UnUĠ¼ŎÓĢxĠ_²ÇĊǬ°ȂamōçUÇW@¯öʓõʉX£ĶťnɻÇUˋmϙ¯˗ӑѡᩃaΗƒɜ°xWƴUxɃÒˣ¤ɅwğʉōóÝŹ±°ȗ@¯Æƒ²¼", "@@ōгwȁ¥Ƨ°ŹÑķV¼ÞêĊ»lĵm¦ÅW@ĀôÈźaɜxÈbÞÆĶIОŘnIÇŃÛÝĊÑĠƏ"],
					encodeOffsets: [
						[80022, 41294],
						[83914, 41474]
					]
				}
			}, {
				type: "Feature",
				id: "6543",
				properties: {
					name: "阿勒泰地区",
					cp: [88.2971, 47.0929],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ɲˣĊIÈ¥ÅU±Ċýkō°ĉƽó»ĶƽXóʵʵȯƑÅȁɅ¯ĉ@ÇሗK֛@@ˤV֜ʵрƒǬVĸƑŎ@ƆϯÑóķ@ʇ»ķ¦έmlÈĸĊX¼WźÛÞÝѸĢČþĀĊôάVö¼ĊUƨ°°èŎČUÜÆóôVôô²êȘlˌç°`n²ǬĊaÛ°±kğmm»@°ÝɆÛÅÇVaÝVm͔ğôÝÈb@n¯ÜUĢÑĊ@źīżWŤÈǖWôŁÆI²ÓƨL@ĊXmmÑÆ»ȰÑkĶō@ý°m¯"],
					encodeOffsets: [
						[92656, 48460]
					]
				}
			}, {
				type: "Feature",
				id: "6531",
				properties: {
					name: "喀什地区",
					cp: [77.168, 37.8534],
					childNum: 13
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Č@°ĠôÓô@Ŏĉ@Ƴĸ@Ť£ĢlVôWVóřXĉŤêÞ@ƐÒĢÑlèÈV@ĠIk°ÆŘ@ÈÈĀ@ǶťÒğ@@ÒĉlŻ_@ƧĖÅĬōÆ@bźÞnƒlVÝĬWÆ¼ʇÝÅ@ÇÅÈwWóĉ±ğzĬČƨÆÝIĉÝ¯bÇÑĉ¯ʈV°xUŰĊ¤ƪ_ôÓɚI@lȚXȮŎlɴȘ՘¦ɲÆʈ_ɴźôÞʊŎĠɆxˤ£ɄÑVwXƳ¯wɛŹ٧çƧ¦ōُ͇еϻɃɳUÝ¯@ōÝŹ@Ý»mğ»ÝKkŁżřɅƅƒ¯ÆīĊ»ôVôĕÅUĉéV¹ƨémanÑ±ĕnwmwnÇÛyĉ¹ŹlŏkĵèķmōÞġKñÔċKÅèĉzômxȗÿƿI@þÅČÝKÝ°@¼ÈVº@ÅĢÆUċłnÝÆǕČĵJm£ÝJ¦@ĊxV°ƏLċ¼ǩ@m@ÅĢómÇÆğ¹ÇÆĖÞKxwô¦ÆÑÆL²ÆƾU±ŚÅŻĖ@ĬŤÈñ@ǔÇxÈÇƒ", "@@VÇţ°ğUĠ¯mk¯ó¥ķIġÿƏbĉa±ÒĸĀlKU_m»nwm@ÈŤ¦ĉbÞ°±Þżł̦°ĢŁVé"],
					encodeOffsets: [
						[76624, 39196],
						[81507, 40877]
					]
				}
			}, {
				type: "Feature",
				id: "6542",
				properties: {
					name: "塔城地区",
					cp: [86.6272, 45.8514],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ήnĸ¥ʈ¼ĸ@ôϰÒ@ƅƒōUķƑǫʶпU֛܃LګK@΋ĸ@Æ£ÞġÅĠċLVÝ»@Å»Ýnm¯»nŻĊ@nķŃ@¯ómóÛÝǟ¯aÝóȭ¥ōUmxĉbÇÑ@bUº¯X¯ÆƧbVÒĉnǕw¯°ƑVÇ@kx±UɱnÅK¯ƒĠǠU°ɜL@°xnĬĀŋŎÇLğϱÞέƜkôÅĀǕłĸĊŤUŰĢ°¦ȂϰÜɨ°x@°żǠÆƈČVĠ»ČL°ÇbĊÑ̐óÞlĶwÞɆVÞwǬxǪţÈ¼ÜLŐĶˢ@", "@@óKĵĀV͈ĉłƾǊÆŤzXl°ÆL²¼źôÈĢǔ¦lô°ɜÞʊĠğÅm»ʵƳƑʝȗīV¥¯ĉ°Ñ@ŃÅI»ĉmğnaċƨbVğwġ¯@UōaĉÝJğÑÆŎkŎÞĀlź¦"],
					encodeOffsets: [
						[87593, 48184],
						[86884, 45760]
					]
				}
			}, {
				type: "Feature",
				id: "6523",
				properties: {
					name: "昌吉回族自治州",
					cp: [89.6814, 44.4507],
					childNum: 7
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@መL@È°ĊȂɆƒÆĊ£ťôWÓɆbĢÅŎÆ¦ČÑW¥°ķU¯ƏŃVē±Ý@óçĭɃƾřÆķkwŹŤ¹ġ¥ĵKŏÅXmˍщwǓ¤Ƒ@wóōVķ£ɱġôÛa±ÒȁóèţIVƽ¼k¤ó¹ġJmx»ÝU²@ÅÆĸǫŎĊmŎǬ՘"],
						["@@Þô°bÞǠôÜôn@°ĸńǶkł¼UÞKğČÆÝĢÅ¤ķ@@ΌڬL܄K@ˣȂ˭lĉÅW¥ĵVÆý@ŃÞēUŃȗƅ@ŹƩǕĉ»k»ÇVğóřXŻKƏċêȁèÛŎġͩń"]
					],
					encodeOffsets: [
						[
							[90113, 46080]
						],
						[
							[87638, 44579]
						]
					]
				}
			}, {
				type: "Feature",
				id: "6530",
				properties: {
					name: "克孜勒苏柯尔克孜自治州",
					cp: [74.6301, 39.5233],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ˎǫĠƽ°UUĉ¯±ȁÑm¯ÝōˋōwUÅ±»ÅƑ°Ș@²¯ɳʇ`ɱÅ¥՗ɳȗōkȭșW@kəJóÔƩ`ĉ£Vů¯wU°ʇĊÈÒ°aĊÞÞJÅċƧīĠyĊ²XôÇxÈÆÆ@ÞʈÅ»XÞīUƑkmŹÝ@aŎÅÆīƨĕ@ż`Ċk@ÑĠ@ŦÑ@ǵÇÿ@ÇÅŗl¯ğJ@ÇUkçġÒƏÑÝ@ţéWĊôŚUóXUġkţ¤ķ@@ƴōĊó@óÔğ¯ċ@@Ò¤kôˣŰ͓k»KX¯ċwƧôğɐÒôIVÆ¯UķǬķn¼ôb°ÒȰVVÈÞ°ĸó¤V¼°V°²êlĢÒUƨ¦ôȰƴĊVV¼ǖIċĊÞɜénČW˸ǸařÈw±īçĸ¤ĊôwĸUĢ¦éǖĬĀô¼lÞkÒ°x°ƆÞxÆV²ǔ»b°wÞȘ¥°nŎV@°ʠèŰȂb"],
					encodeOffsets: [
						[80269, 42396]
					]
				}
			}, {
				type: "Feature",
				id: "6521",
				properties: {
					name: "吐鲁番地区",
					cp: [89.6375, 42.4127],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ôKĉǪa²¼lÜô@ʠê°ĬôȂ²ÑÜbĢóɲĸ¤ŎUô@xƒǔ£ъxˎmÈÛ@_nĕÞōřǫğůlȯ¯ĸ»U»Ükôƛ°ůkť»Ŏŗ@¯@±͓óͿǓ@ķȁ¼Ϳ@Ƒ¼¯°ólġ¯xȗUġƑǩÒƧUÝ°˹Kóx@ǸōĬÅĬƑĠóƒǔêÆ°XÒʟŤUÇ¼ˋnn¼±V²°ȂUŌÝbʟǔɅô@żǬaҎÈ"],
					encodeOffsets: [
						[90248, 44371]
					]
				}
			}, {
				type: "Feature",
				id: "6540",
				properties: {
					name: "伊犁哈萨克自治州",
					cp: [82.5513, 43.5498],
					childNum: 10
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@ĉÆŘȁ̐mÞ¯ĀX°±¼@ƾ¯ƴ°ŎÝþŋ¦WÜÞbȂĉźUÇmwVUȂóô@ȰÝ΀nÆJnƾʠŌLČóǪ¯¥ǔaǖŌaôÝĢLxÆLɲm²VlwÈ@Uƒ°¯ǖxĊmUÑƨa°Å°WV¹aÇɃÈm¥°¯ŹóĸķǫUm»Å¼ÇVɱlÝŋnķÇÝX¯ͩÇɳaÝ`±_U±ĵnWa@ĸóķ¯ǓV±ÅĵJċ¹ɅykwÇ¯£Åxʟ»lķI¯X¯ķêǕȭnķ»Ź`±kÞ@Ýô@Þ°xŤŎIƨÆUxō¯²ǔĬǬlUŚ"],
						["@@ÞĀlź¦¯ĸŤKÞċƨbVğwġ¯@ţƽJ"]
					],
					encodeOffsets: [
						[
							[82722, 44337]
						],
						[
							[86817, 45456]
						]
					]
				}
			}, {
				type: "Feature",
				id: "6527",
				properties: {
					name: "博尔塔拉蒙古自治州",
					cp: [81.8481, 44.6979],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ήƛϲÝĠÈKŌōÿmīw@¯ɛKV¯ğǟ°ƑwġKóÞŋbǕǓb¦ǩ°ċôŋKʟƽmÅImͿȯÞó@ȁôUVnxÈŹVȁĊÝabŻ£¯°lóxȂŤĸkĊÞyĊêĊmĢxVƨÈĠXΘÆĠÔźɆţ°LXƾŤŤb"],
					encodeOffsets: [
						[84555, 46311]
					]
				}
			}, {
				type: "Feature",
				id: "6501",
				properties: {
					name: "乌鲁木齐市",
					cp: [87.9236, 43.5883],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@WôŚUĠÈl¼Ċ¼ƪǖ@źȘƆ@ýlÜXVŘÞ¦V¼kĖóÒèkĊȁˮ֜@ǫ՗nōĉǬōķÆÅ@±ÞV¼nwĢIôºl£ƾ»UŤJôçó¯īʟéó@kÛ±»ǩbĊóLҍÇǫb@ŻɆóʠǓaŋÞȁVʉłĉbĉɅô"],
					encodeOffsets: [
						[88887, 44146]
					]
				}
			}, {
				type: "Feature",
				id: "6502",
				properties: {
					name: "克拉玛依市",
					cp: [85.2869, 45.5054],
					childNum: 2
				},
				geometry: {
					type: "MultiPolygon",
					coordinates: [
						["@@ɜÞʊĊýVaÅm»ʵƳƑʝȗīV¥¯ĉ°Ñ@ŃÅI»ĉmğnaÝţL°ķóKĵĀV͈ĉłƾǊÆŤzXl°ÆL²¼źôÈĢǔ¦lô°"],
						["@@ƾIŤ@UUwōaĉÝJğÑÆŎkŎ"]
					],
					encodeOffsets: [
						[
							[87424, 47245]
						],
						[
							[86817, 45456]
						]
					]
				}
			}, {
				type: "Feature",
				id: "659002",
				properties: {
					name: "阿拉尔市",
					cp: [81.2769, 40.6549],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nIÇŃÛÝĊÑĠƏōгwȁ¥Ƨ°ŹÑķV¼ÞêĊ»lĵm¦ÅW@ĀôÈźaɜxÈbÞÆĶIОŘ"],
					encodeOffsets: [
						[83824, 41929]
					]
				}
			}, {
				type: "Feature",
				id: "659003",
				properties: {
					name: "图木舒克市",
					cp: [79.1345, 39.8749],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VéVÇţ°ğUĠ¯mk¯ó¥ķIġÿƏbĉa±ÒĸĀlKU_m»nwm@ÈŤ¦ĉbÞ°±Þżł̦°ĢŁ"],
					encodeOffsets: [
						[81496, 40962]
					]
				}
			}, {
				type: "Feature",
				id: "659004",
				properties: {
					name: "五家渠市",
					cp: [87.5391, 44.3024],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@çôÑlĕU»¥ÝUŗWkÛ@þVńÝĔ@ńÅþĶUX¦Æ"],
					encodeOffsets: [
						[89674, 45636]
					]
				}
			}, {
				type: "Feature",
				id: "659001",
				properties: {
					name: "石河子市",
					cp: [86.0229, 44.2914],
					childNum: 1
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lŁǵmĉ@mż¼n°ÞmÆ¼@"],
					encodeOffsets: [
						[88178, 45529]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/xi_zang_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "5424",
				properties: {
					name: "那曲地区",
					cp: [88.1982, 33.3215],
					childNum: 10
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ƨʔĸbÜºÞwnxźbÞ°ô@ĶĸIÈ¼ĊJŎÈôUÝƒ¤ǔLÞŎ@ĢȘblôLÇźçÈ¤ôL¥ÞIÞ¯ĶxʊťƨƿÑĉXVķŦ¯ȂKÇǕÑ¯IU£¯Óƿ£VĕÅÞÿÆwƑ£ǖxÞĕ±ÇÝaUÑÈU¯UōÈÝwWŁĵ±ÝóĢÿ°IÞ±mÅĢ¯mÿ¥°UnÑŤĢĕĶwǬŻͪwŎ¼źÇĢĠĕˎŁ°óƨ¼Èam@¥°wǔǖ°ƨÇŤġƨŎŃôbÈÛŎĊ°@Ġw²ÑÞJÆÆb²°êĊUÞlÈ²VÈKĊÒĸĉ»ÅôťUÅÇk¯@ÇÑklÇÅlĢVÑó@°@ÛĸV¯ÇĊn¯Uĕƽ¯m¯bÈ@Ò°Ĭbĵ¼kxķýÇJk£ÝaUÑÅóĶǟkÓʉnĉÝ¼Ƒó»Þmn£mČ¯@ȮÿV¯ĸk@Ýów»ğġ±ǓLōV¼Əèķĉè±b@ÒţUÑóakl£Ó@¯L@ÇlUóȁ¯aġÈÅĕÝLķ¯Ė¯@WĬxÒÈnW°ţôU²ǓÓġ²V°¯ôǔÝLċk»Ý»Ý¯ÞVwÛÝÇōͩÈĉċ»ĉm¯£W¥ţKkóġƏW@¯±kōÈb@ÒÇaÆ¯akóÛÇ¦Ýa¯Ýĉ@Ç»ÛmǓxķƛ¯lVĀÅÞġbÇJUÅVĖƑWzō»ōWn@è¯ÞóVkwƩnkźÇÞÒÞ¯ýğÇUxÆÈnè±bĉÝ»ÈŃwwÞ@m»ÈV@ýÇ°ķxaÝ¯Xċ¥ÈóW@ôkxlnxVÈóĊkŤġ¼@°¯ŰƑL̻Ű±ŎÝVÞVÇÞÅÇakƞ@èğŎĸżƾ°ÒLÞôĠKȰĖźVÈÒĠ¤VôUÈþťL@ôǬÞlÜÈnÇÒUŚ@ĊƨW°°X@ČÇþƴĉÒķ¦@ĢôWĀôłUÞĢǬź°¼@ôV°bUÆnzm¤ƽĸÈ"],
					encodeOffsets: [
						[88133, 36721]
					]
				}
			}, {
				type: "Feature",
				id: "5425",
				properties: {
					name: "阿里地区",
					cp: [82.3645, 32.7667],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Çƾķn£myVÅaU¯ó@¯»ŹġǫVÝóŁXÿġó@ĸ¥ĊÑƳÈý@ċW¯X¯ĉƧ@VřÈÑÇmkÛǫÝ@óŦKÇýVUó£ğÇÑŹUȯĕğLÝóK¯ÑƽķŻĠō@çlƝÈbÆÈÝUÝÞU²ō̼ůƒK°ů@¯UK±ĊƧbōÇmçÈġóÅóbźó¥kīÆ¯ólçKôĵUÅVŃķ¥nÅŏm¯¹Å»@ÑÇóxÝkʇȤU¤ķb@ƒ¯ĊÇx¯ĸĉKm°Āk¦lKnĬȀƾÛ¦WÆÅmǊĉ°ōUţ¤UŎ°ŎKÞłÆǓ¦Þř¯bmUÝl¯Umğl¯£șwÅǫaÝnĉĶk@¯Kō»ĉnaÞ»ťnkmlĸ¥UÅŻkÑťĉVôó°LôīĠUÿĉǕÅz±K¤²ō¤¯Ė¯UÝ¥VĵóÈťÝwķÈÑk¤óWýĵĕVĠVóǓķ°k±VU±ţ¦UǟÝÅJVÑ¥XUċUÅlÛƆǕÆȗƆ¯wŏÞÅ@ĉlÝóÒnUôÅlxólÝôÛ±LÛôÝL@ġ¯X¯ÇUÅ¼óaó¤¼XÒġŎóLk¦ôÅ¼ĸĠ¼KġƆô¦ÆƑÔĉĶ¯ImÒ°¦n°¯ÞlÝČnƒÒKĠÞĕklýƾťôIĖŤÒnƜm¼¯lnżóÞ@Ůó¦ôƽĖċŚn°Ý°ôÈUƜblÞó@ǖô°UÈƆ°XþôôlѢ²Ėm¦°@¤XĊblÜzkºƒĖmXŎWVóÞn°lĠxȚa°»żLźb@Æ°XĠÝȚxĊĕŤaȚ°È@@èŤ¦Ü¼WÞkÈ@V°lŤkŎ±²¦ƐUǉ°aÈÑŎbĢŎbÆ¥ÞIȘlôVÈUbkɲĶnmnXb̼òƾĖŎ@ĢȂÑôÓĠĖʊĊÔ"],
					encodeOffsets: [
						[88133, 36721]
					]
				}
			}, {
				type: "Feature",
				id: "5423",
				properties: {
					name: "日喀则地区",
					cp: [86.2427, 29.5093],
					childNum: 18
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ĶĖXþôl£ÒĸÇÞxÇŦôUĶÞ¦°V°ĕŎ£±£²LÆyĊǖĀğVóĬ¯KóôUĊŦlÒżVÆķ¦klnŦmÝ¼bĊmŎ¼L@°lĊĵÞmǬbÆȚx°¤Ġkn°VÞkVn°aŚÝǔ¥ÅÝŁōL¯ōVŤ£ŎVĊ¯nǉÆXÅÜ¥ǿƽmīLkl¥ÿn¯ĊL°ķÈw°ĉ@ƑĸaV£ʈȣÞlôwÈ@Ò¼Æ°ºŐnmÆĸ¦UńÆVóĶLèôkÅ°lĬ¦ŹôôaÆôÇĢnèŎÈƨaĉ²VLĢ»lţôĉUÇwkmlw@óôXÇČ¦°WÞbwĸÈ¯@þÇUn¼Ý@xxÇńÞ¼Ċ²amçÅÇVwĠÈþ°ÝÑÈÝlŹƪmlxôU°Ý@çmXŎŎ¼yƒXĕÆUVÈIĢaÆÝUÿ°kĸƜǔwnÜÈ¼Ċ@Þ°ÞbÈ¥Üôl°bÅÈb@ÑaÇ¯UU¯Vġ»¯aV¯Ç°ÅmnÑŤçǬVǬ±ĉ¯¥Vĕ¯Ýk£ōw@±ġÛ°ÇVÑ@Ûa@ČLƳÇa¯¤ÝIĵ¼U¥ƿōķÅţŻókÝóĕ¥¯U»Æ£X¯ġŃÛkÝ°V°ó¼¯èWôÞĖȎkĀƧĀówm¥¯JÅ¹ÝJÝōVVÅaÝƑ@ğŭÇ¯_ĵVnxÅónĵxÇĖĉVÝÈğVÒó¯±Żĉ£ķÆÅLǈĉýţÛ¯VnV¤ÝÈ@°ÅÞÝ¤ŰğŁm¦ÝxóK¥ɱÈUĠôêVôÛ¼ÇWÝçĵaō¦óĖƧlÇĢƑnŎÇV¼¼ºÛ@m¦ƽĉmm¯ÝKÛç¯bŏłĬb¼ÅLmxť°ÅUÝXkÝmĉ¦W¯KÒknÝaVÝè¯KɅńÝKnÞ¯¼"],
					encodeOffsets: [
						[84117, 30927]
					]
				}
			}, {
				type: "Feature",
				id: "5426",
				properties: {
					name: "林芝地区",
					cp: [95.4602, 29.1138],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VÈłVôÈk@°K@Ôk¤lôbVÒŤ@Ñ²açĸĊƐçU»ŎǔKĢ²Ġ¼ôx@ÞlƨĬUl¯ÈLVÞJ°ÜnʊwÜbXêVÞ¯°anaU°wÆ¼ɴÑWÑ°mÈýÈam¥Þ£Ť@¥ôblÞĢź¥ôxÈÅmÝĕÅV»ĉōŤōnó»ÈīķIUĠÑ°ġĸLÞ¯VÒÆ@Āb¼WôÈ@V¼ôóŤKÈÑU»wVǫżnWÒÈx¼lŦ£ĊōŤx²¯@ÆU¯çÆ@¤°£é°k°lůÈó@¯ŤÇÈĉkkÿó¥ÝXķÑÜ@ÒóŚÝ¯°ĉówÇ±¦ÅJUÒĉĀķw¯°mĖ¯±akxÝÅn»lÑK@¯lU¯UVÑ¯óĊ¯mōğVǓƅÞWÝÈÛ@ƿô¯ÜġzÅþ¯ólmôʇġĊÅUͿřŏȁˋŁóÇˡōƧÇbw°Ķôk¦ÒnUþġÒÔkǔķèó@²@ŘōńĵyzġaÝ¤ÅI¤Ƀť¦ğÑ¯¤ķbó¯ó±U²°¤ČÜVnÈÆŚŎ°ôĢþÆzèVĀÇĀÇXŹÑ¯¤ówċķk¦łUÒġzÇ@ÆÝx@²Þ@Æ¤Uô¦U°xU"],
					encodeOffsets: [
						[94737, 30809]
					]
				}
			}, {
				type: "Feature",
				id: "5421",
				properties: {
					name: "昌都地区",
					cp: [97.0203, 30.7068],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@VĖm°ĉÈU°ķÜ¯@@ôUÒġkÆkÈlÒ@Èl°ÈVÆóŦÆ¼aÅĢɄwnōw@¥Ŏ¦°ŹÞmV°wnÿwwÝw@¯mÞŗ°wĠĸkÞğlĔ²¦°@ĕĸwVóal@nĢÇĊn°@¦źUXçǔůĸVÆKÈÝĠ²ÅĔô@lÈ_mzǖlaU¼ôwV°¯¦ĬÈal@ČÇ¼nIxô»ɜ@ƨ¥ɆŁŃǪȁkƛƨȍʊȡóĭ@ÈÇVůÞĸƅmēƨťÅÈʉVǵ°ġVŭÅɧ°ÿnɛ£mķ²ŃóÑUĉ°mÇ»¯@mxUĀ¯èţ°ȁÝçġU¯ÆÇţÈ@°ÇôŰ¯k¯lê¯¤£Å@èV°Å@±°ţwĉŎť¤k»ÇwXÑŻmUǬxV¼ÇÒţLóôU»Ç@Xó»a@ÿÅUÑÝ°ķK¯ĢğÒVĸJÇĬ¼môţŎĊŎU¼ÆĖnÞÇÆówŹ¦ġkÝóa¦ţ@Ý¤n¦ÇbÇþ¯nXÒɳÒÅ»¯xVmbb¯Ý°UWéÛaxʉÛm¯ÝIUÇKk°VƧīķU°ȭĀ@ċ°nm¤Ýnô¼ƒÞ»ĊʊmlÔĵǠÆôVÒÞbl¤ÈIĸþlw»Ķa¯ī@ÑÇ°anƾ°"],
					encodeOffsets: [
						[97302, 31917]
					]
				}
			}, {
				type: "Feature",
				id: "5422",
				properties: {
					name: "山南地区",
					cp: [92.2083, 28.3392],
					childNum: 12
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@°ÞUĖ°¦²ĊôÇÜLǖĀɜȘŰÞLĸźêÞ@UÜUŤ°ɞ¯Ü°WŦĀmŎ¦ĢyVÑŁl¥Čĸôx°£źÒWÈÿÈUÿçÅyýóġō¯řÅmÇÛUċ¯£V±²°ôôĸa°£ĠÒŦ¥Ʉ£ÆJÞ£ĢbyĶzŎŃ@ŗ±ô@ĸçlǓÓĢÑVýmÑl¥ĵó¯̻̥ƛǫÝһÇƧĉyţ¼ҍēVĶĉŎ°ĸmÞVÝĸÒÛaċóŹĖèÈÈl¼k¤ÝX@`Þŏ¼Æō¼ÇçĉKUÝÝ£ğ¤@¦ġl¯Òġĉ¯ómóxÝÞğVƴċK@b@ÜUÒ¯ÈĢÜ@²xŎl¤"],
					encodeOffsets: [
						[92363, 29672]
					]
				}
			}, {
				type: "Feature",
				id: "5401",
				properties: {
					name: "拉萨市",
					cp: [91.1865, 30.1465],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Ŏ²l@°XĢƐlôŤLX¦°¤ĊnČ¼ÇĊŎͪÞÈÜxU°ÝÞÞ¼¼lČÞKǓ°óU¯Ģ±ǔÔV±ŤóX¯ÇmÑwXī°@°ĕĸÞKÆĖĢÇ°bȂÇŁUV¯wVó¥VÅ£Ý@@±ÞwÅÈ@¥nōťÿ¯XÛɝ°ţ¯ÛVVÝ@ŹéķÝKȗůɛǕÿÛKóÈǫǫUţèmÒn¯Æ°ÈU°b¼UĢV°°V"],
					encodeOffsets: [
						[92059, 30696]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/yun_nan_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "5308",
				properties: {
					name: "普洱市",
					cp: [100.7446, 23.4229],
					childNum: 10
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Uô²a@²²Ķ¥V°Ķ²bl¤kVxl@°Ś²@y@ô¦¯@xxVxUVbVÜm¼ŎĢmºXXWÆ@ĀmmXU°ÅÒm¼Þx°w@°XêĠ°»nV°Ul@k@V±ôī@£ČŃÆ£KÞý@¥k@ya@nWVUVwm£Jknm@wmknXX¥mUUlUnb¯°nkVInlIUw°nmk@@mlanXlanmk@wVWUw_@éĠanmUaÜ£mX¥¯@@óUmÝ¯¯ÞÝlKnxô£»»ĠJ°aVUÝÿV¥ÛbI@wmón¯yÛL@WkÅmÈ`IWa¯K@¯mUnmaXmbmak¯ĢÒÝm¯mV¯KÇb¯KÛWWX@aVknċLUWVkXóW@ka@ób¯Uwmb¥UUlaU¥U£maķKXkmÝ@kwmÑ¯k±ċbUUVakaġ¦kL@`a¯xmÅLUW@ċnÅUV°LkL@b°°@¤²nôôkl°kèÒÈzV¤ÈWôônV@¦@¼Ux"],
					encodeOffsets: [
						[101903, 23637]
					]
				}
			}, {
				type: "Feature",
				id: "5325",
				properties: {
					name: "红河哈尼族彝族自治州",
					cp: [103.0408, 23.6041],
					childNum: 13
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@°°nÞôV@°@¦WnÛ¤Vbmnğb@ê`VxUX@xÆÞUnnWÞĸĢÈ@Çè@zÛÜWÅêl²KnV¯ĖĊx@bk@@°JÆ£Èblnnm°nlUkVUUwVmKnnVÞxVLX¥laX@@xl@VzÈVmk@b°ÈĸmV¦`WXbUbbX¼°x@aVVkn@lþnXUlVxŤÅyIUkaIŎĊ@lXx@bz@ô¥_V@ln@ôy@al_l`nmÈ»@kmXwWKU¯»aÅ@wmUÝKUaUUwW@w²»@kÆV£mm£VKkÑV@@»nw¥@kÆnllIVlnLVakalknJWmnaUaVÑVVÞn¥m@¯Uÿl@VçaXaV¯UyVLVk@nJlXLlkxlbla²Òl@nVJVkxKlkUaVķÝÑU@Åm¯@±Uó°ğńķĠmUÑ@Ç¯¯Å¼@nml@°¯¯`@w£@¯Çk@»nmċ¯U»I¯LÇĶÛn@bó°Uwm¯UmÇ¯aI@ykIVU¯bIğ¼¼ó¤mwkLÝÞ"],
					encodeOffsets: [
						[104243, 23429]
					]
				}
			}, {
				type: "Feature",
				id: "5326",
				properties: {
					name: "文山壮族苗族自治州",
					cp: [104.8865, 23.5712],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@wô@²¯maUmôUÆx@XbÞInlVUVwJVaUK°¥xmÞXnlKlnna°@ĊČÆwUmnkl@°£nyn@VV@Vak@@kÞÝbmx°Vnw°klÞInĖÞVlKl@Xa°KlVU@JnxU@ÈĢbUKlm@ak_wanWUk°l»k@Wk@lwU_@UalóU¥ÇnkJW@mVXx±bK@nV±a@Åa£ÝK²WknamKknÇk¯aVV¯ĀUÒ¥I@mm¯¯xÅW@@`k@ó»UU¯lm£ÅWlĵw@mmwÅmWU@y±UxmwU¯U¥Ý¥¯£m@kÇVUV°VbklLwUlUImk@±ÑkbkalwkWKkmI@UlUKVzU°WbbUè@kVĀ°@nm¦ÝUUUÒVbmbXnmIkllbUbmKUkkJmkÅ@l¦mx@¼U@lÒULn¤nU¤Å@l±¼@xXxVVVbÞLVn@xÆb°¼V"],
					encodeOffsets: [
						[106504, 25037]
					]
				}
			}, {
				type: "Feature",
				id: "5303",
				properties: {
					name: "曲靖市",
					cp: [103.9417, 25.7025],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@È¦lKÞĕUV¯Um¯ÇVUnVVUĉnĊÇƾLn°°ÈJÆw@lbÞa¦VXJ°¯W¯aÞJVkUa@lKnÅmWUk¯a¯»@m±@ÑkkbWWX_WÓU»_lkÑm@U»m@l@IWċn¯l@VanVUVUVwVxKÈVmUē@n@VÝÆLwVVwnVlmkUVÑÇ°ka@kÿÝaÞUl£ċĕX±±ĉa@UnVnalónk@wlUVmkÝJaW@ÅwóVVnnb±°@óxXLWxn@lÇ¼nmk_k`@bózm@kU@`¦ó@nW@ÜÅXWw@yb¦@ÒlnUb@xlÜk@²Ç@U¯bmy@kV@bb¦U`lLVx@bLl¼Þ¤@°VVÞU@WÞUbJ@nn@lnnmxUUUbK@ÇwklkUVWakn@lbU@@ULVxkKUn°¯Ò@¼km¦m@klȰ@lUl¦@Vl°wnnþĊUÆbUxbVĖU°annaVal@@b"],
					encodeOffsets: [
						[106099, 27653]
					]
				}
			}, {
				type: "Feature",
				id: "5323",
				properties: {
					name: "楚雄彝族自治州",
					cp: [101.6016, 25.3619],
					childNum: 10
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@mÒXU`Wn@Xl±¦Uxnbl°knmKUxxVôUx°¼ôÒÈ°JlnÞKĠW°¦Vx²JVw_°¥@UV@@wnymknK¯I@²b°£V¥wUV¤nLkÆJÈwôô°l»Č¯ġVUU@@°ÝXl@U»°Å@U¯@w±¯VmUUlm@mÑnIVyUwmak£Vwm±@Çw@n@UxkwlÇnLmkÅ@±kka@kóJV¯Ç»U£lw¯Xalbl¥¯UX@aUaÈL@ÇVIVkaU¯mmakLWkUJ¯Umxn@kUx¯xmWÅīÝkkbŤbkxWmXwWk¯wKkLÅ¤ċń@¤óĬU²@@lk¯VmU¯¼@xV@k°l°kbU°nmVnU@°UVèÞÆbUÒÞnU¦V¼lô@Vl"],
					encodeOffsets: [
						[103433, 26196]
					]
				}
			}, {
				type: "Feature",
				id: "5329",
				properties: {
					name: "大理白族自治州",
					cp: [99.9536, 25.6805],
					childNum: 12
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lbKVIUa@²m@bxôÒÜxXLmbnl@K°¼kUôxôlV¦nJUÆnm@xÆwbXÆôôLUVwôK@wlmaVw@WknmIUmlnJla@_@kÝmKUaÑm¯Xw°aUaVl»²JVbÆJkôĶĀ²VVkmbVwUówVwnLlmk¯maVw²¥Wk@XmV_WnÑUk@kó»UV¥ÝmVÑÅaÝUçV@¯VUmn¯mVlak¯l¯U@@wğWé¯@¯xÝw¯¯Jċa¯U¥mLU¤bÞȤbÇLWUwmIUVW¼kb`UVb¯L±ĊÛkÿÝKkwKţêUĉþÈV¯ÞVbU°KVk²ÝmImV@kmUkVxm¯KXÈķJU¦V°ULWxL@môb@bkx±LnVUVLnkÜWnwlLÅƒmW@kkJU_VWĊÞ"],
					encodeOffsets: [
						[101408, 26770]
					]
				}
			}, {
				type: "Feature",
				id: "5309",
				properties: {
					name: "临沧市",
					cp: [99.613, 24.0546],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@xĢl`²X°Vx@x°Þ°KXağUÑWbnIl`X²°bxl°V@xVxk¦mbl@xXVÆzX¤Æk°kx@lźêlaX»VUnJVxXÈKaÝȣaV£nKV¦°Čb°I°n»ÆÑV¯nWn@ÿXÅWWn¹ġōn»ÛUaUVUww@w°ó¥@z±@ř¯@kUwlk£±aĵ¯Uĵ¦±±@bó±VÝ@ó¤w¯I@mÅóm±X¯IólK@°UllbzkKlln@@ÔºUmVk²ôÒxŎUVóLbmÈnmbnlax@z@Æ¦k"],
					encodeOffsets: [
						[101251, 24734]
					]
				}
			}, {
				type: "Feature",
				id: "5334",
				properties: {
					name: "迪庆藏族自治州",
					cp: [99.4592, 27.9327],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@WXw@akk@yk°īX¥Uóķ¯w@n»UaVaUÛ¯mV¼kÞċô@n¯xÛÒmV¯Ô@x@kwmÅa@UaÝ¯VÅyVa@ÿn»ÝVmankmmÞÅô@n£±ğzÇmU¦VmnÜmbn@°nV@xmzÅ@mºV¦k°ln¤¼õôn@xkÆIUxU@Ť¦VmVkmkXW¤XzVx@Æx¼Þ¯b@lVĸÞVm¼Xm¦VÞ@Æ¹Vón¥ÆKnKX¯x@èĊÈ±łXaÆxnlV@UÛlȻkğV¥m²ǉmÅÞĕƒƛm°ÆmX¤mznÆV¦ÞVVb°bnÞWbn°l@VÈ@VĵĊ±@óInxÆw¥@£ÞW¯ĸ£UUKk±akkkbmWmÈķaÆÇUÈÆW@wmknmU¯"],
					encodeOffsets: [
						[102702, 28401]
					]
				}
			}, {
				type: "Feature",
				id: "5306",
				properties: {
					name: "昭通市",
					cp: [104.0955, 27.6031],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@mnK@wmUÅ¥móXǓŏmX@VmL@xţnk@mlUŻÒğŋ@L@mmLkm@bXÅW¼ka¯lÇŹ¯aÇ»ÝÝ_@m@@a@UklwUm@ak@bUmbmbV¯ĕUaVwÅaĉVmým¯xUk@k¥VUX¤VÈm`@ńÇÜ@ĀknĔkƞÆĠÞUVôƆÞI@UxÆ¦nl@ĊĊnxUÒ°¦Vb¯WUnWIml@xnUbô¤¼ÈxlI»KV@ÈÔJkUĖ±ÆVb@nVÜVUVLwĠlknĠ@nx°¥Æ²mUw@mmÅUl¯UÑÑUmLllIl±@VkwW@w°@U»kUóI°»ĢÑL`nUĠ²lmbôV@nJUxÆ¦X¦l@ŎUV@lVKVÅV£UaÞUnW@¯VU@ó"],
					encodeOffsets: [
						[107787, 28244]
					]
				}
			}, {
				type: "Feature",
				id: "5301",
				properties: {
					name: "昆明市",
					cp: [102.9199, 25.4663],
					childNum: 11
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@n@VkVUn²°@x°V@¯ÆV¼k@WÞ¯@@VVUĢċ°k¼VĊx¤Ōx°mVkÑÈL°x°X°VmĊLVxUĖ°bX¦VW@kȯlkn@¥ln@»°Ñ¯VmlLUwVK@V@ka@lmXbUlVlkÈx@LVaVVwnmm@km@mIVaÝ@XVUÝ¯U@Ý£k»K@aUwkKV_¥a@alU@nz°aVÈ@@±lÛk@wVakm@Ñ¥az@XxÆW@ÛX@m@y@aWw@kōĉJlbVJzţÆUwVkmWkým@UlU@b¯wVºUVUêĠXUaUbVĊUWXUmkKWnUUUVVVÝ@kk±¯Lk±WkXlVkl@wXbmLVUIVmk@Ubma@kkaVKUkmlXLWnJ¯ÒĊ°@zkºlLUŤn@@nô@lÆnmKkÈlxVw@@mÈx@n²Uxl¤nbVxUzmJÒn"],
					encodeOffsets: [
						[104828, 25999]
					]
				}
			}, {
				type: "Feature",
				id: "5307",
				properties: {
					name: "丽江市",
					cp: [100.448, 26.955],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@l@@w°ÓUnÜÑ°w@mČóÝlU»n°VÜUbVbm¼@°xôĸVW¦¯Ĭl@zll@bWxXaX@ÆĠÆaXwl@XaÆ¦n¼Jn@mnKW¯È»V¯°akVanXVwl@VyUĕVUbÈīlaUk°k¯l²VUkƛô@I@mVwĊaVakaÆbUVLaXIWKUwaWÑÅKUaVk°@Uw¯¥XğÝLkm¯IÇóÑ¯»anUl±UĵÿlóÅIaU±Ik¼UVb¯bWxn°ÒVbnLlÞ@@`kbmIkVnJmnXl@Uxbkn@xóLUxVKóóÅWaÅxw@nÅmVôXLlVU¤b¦m¼@ĀbUzUÆ°ÞVb@Æbnx"],
					encodeOffsets: [
						[101937, 28227]
					]
				}
			}, {
				type: "Feature",
				id: "5328",
				properties: {
					name: "西双版纳傣族自治州",
					cp: [100.8984, 21.8628],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@l²°nÒlxÞ@nWlLĸnbV¤V¦kbVV¦nax°Vôa@b@lôXlWUVXČKlmU@bWXXÜ°LÈa°LnU°ÞnÑġ°lnba¯¯KWó@kmK@UĉV@k°VV¹a@y_ċl_nÓlL@anI@óWl£VUlkĕlKVwU@kVam¯ÅL@bÝk@VnUbÇbÝwÅ@ċ¥¯lk¼ÅÒ°b@¦nlUn@ÇVmÆbWôU@ÝÅōm¯aUmkWWw@±n¯UèaL¯mLkwl@°mnÈÒ¯ów@VxĀU¤°Į°Xl"],
					encodeOffsets: [
						[102376, 22579]
					]
				}
			}, {
				type: "Feature",
				id: "5305",
				properties: {
					name: "保山市",
					cp: [99.0637, 24.9884],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@X°Il@¦È¼m¼ÞaÞÅlÈxV¼lVôÈÆlLÞ£ÈºlkUUw¯UĕVwĊ@n¦mlnVĸIWÇ°LnUwlVn@lnUnJÞl±U¯LVUa°ÝUÇĊýVŤéLlxÞLĀÜl²ĉ°KUaV_Źé@klw¯lÅW£ÅyUW@wknal¥Uw@wUk¯w¯aW±k_mJaXVÒĠWb¯L¯Ý@wwU¯±Wk_ġwwōKmb@¤bk°lĖôUJVnÅlťU¯°VbnbWxXmÞWUĀLyWzÛKmbUxVKknÝkVĀċ¤Ux@¯m@¦"],
					encodeOffsets: [
						[100440, 25943]
					]
				}
			}, {
				type: "Feature",
				id: "5304",
				properties: {
					name: "玉溪市",
					cp: [101.9312, 23.8898],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lL°xXlWxXnlwaţlaÞlÆĬnX°wVwl@mnw°VVIXllKbnnV°lbUUJ@ÈÇKVb@bW°Vk¦kaWb°kxV¤È¼U°ôI@llbl²@@ó@mm@VţkKl¹@yĉ¯°ÑIXmWKnklVULlb@lnbVal@UnVJUnKWax@lkkUlW²XlK°l²@lÞUUUVVVXmlLVnXWVUĉVaVbWğVéUVU¹W»aVaaWX_U¥nÇķ¯@alUnÇUyk@@wW@kbW¦UKÝwUmmLUnVxUVVlk¯mmnmkÇaÅ¤¯I@l@@aĉw°ĕmUL±kÆéXÜÛ@yÈç@ÇġÝķXmmÝVÅlmnkbmWkb@nl@nm¯VxkJmUJml¯°makVVnV¦WWmnl@xmnlI¤nxUVUmX@b@zl@¦Ýþ"],
					encodeOffsets: [
						[103703, 24874]
					]
				}
			}, {
				type: "Feature",
				id: "5333",
				properties: {
					name: "怒江傈僳族自治州",
					cp: [99.1516, 26.5594],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@WyX£lWlnnUU¥@ţVVwJlÅ@wmöó»£kml¯U¥n¹Æ@ny@wmU@¯mnamÛnUV¥ÈnĠy²m¤@ÆónÝnmlnbÞU¥aV£kUKWómIU¥ókwVól»¯Lk@mnaWKÛwóÑw@a±n@VbUJLkaÝXĉUV`lI@lnXÆƑkKmxÛXmlUKVmU²Klw@aaó@nKXwVKU¯V¥mUnkm¥ĉ@UxVĖ°VxVklmÞkKWĀkVWnl°Lnm@°UxlV@nk¦JVÈ°VÒ@nX°@ÆlUômlnô²nxmłnVV¯x@Èm°XblVUl°@xkXU¤WXXWXÆmkÅJmÞw±bxUīkKmÅVUĖÝèVkx@lXlnk¤LkĖk¦xUL°¯Ė@LnK@b°xVI¥Ua°Ñ@»nm@¹KŎÞÈWln²n"],
					encodeOffsets: [
						[101071, 28891]
					]
				}
			}, {
				type: "Feature",
				id: "5331",
				properties: {
					name: "德宏傣族景颇族自治州",
					cp: [98.1299, 24.5874],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@¥n@°@VwČ£ÿUlÞlmULVwnaÜLXyzKVÿXÝnWXwmaUa°¯VŦÆkUmVIókĕl¯a@£nama@¯m¯ó@óyţbġkÅm±ÛammVkLwU`Wk@VkUmÅlUUKmbkkUVUw¦ó°¼bn°ô¦lºz@x¯@U°nU¤ţU°VƆ@ÈmlnzÞl°¦ÆaxUxLkxWƒn@²ŰW@°ÈXl°Llx"],
					encodeOffsets: [
						[100440, 25943]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/util/mapData/geoJson/zhe_jiang_geo", [], function() {
		return {
			type: "FeatureCollection",
			features: [{
				type: "Feature",
				id: "3311",
				properties: {
					name: "丽水市",
					cp: [119.5642, 28.1854],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@VbVl@XnUXKV@¦nxlUXVnKVmnLUV@bn¤lLXK²`nnlJXIVJIVnn°KnnVll@VLXWV@UkVaVKzV@VVaUK@U»VUl@@WnUU@wVLn@Vwl@XW°LVbn@VU@Xl`@XnKVbkl@XVJlUnlVxlL@lnXl@VUnV°°@aUVLXblWVXn@VVUV@L¤VLVUVbnalLUUVX_laVaWVzXKV@@a@KUmImmXama@kU@yVIUKaVa@kXK@aWU@VIUmW@kkVmU@VwUa@K@k@U`@kUKVk@UV@VaUm²Vy@klUUWUkVmUa@_KVaXaXmU@mUlWkaUX@mmkL@wJnVVÅbWKXa@@I@aJUUÇ@VULW@akLmb@K@aXXw@mVmUVkUy@£@aU@@VkUWm@kUKXUWU_mW@wkkmJUUkLWWUXW@IkJ@k@mW_kÓ_UlLm@I@aUa¯m@ka¯LUJ@mVVxUba@LUKkXbm@Uak@@a@Um`IUbUJ@nUVW@@LnVV@lUbVlUX@`@blXklWUmXlm¦U@@V¯bml@@nUb@llnn@VbX@lV@UVULmU@JVnbVbkbVWxU@@nUVk@"],
					encodeOffsets: [
						[121546, 28992]
					]
				}
			}, {
				type: "Feature",
				id: "3301",
				properties: {
					name: "杭州市",
					cp: [119.5313, 29.8773],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@X@l°KXXlWb@²`bIX`l@@bWl@n@VnLUV@V@°¦@l@XVlU@@xVbUb@Vkb@@XVJVzJ@LÞ@VmLUxUJ@LUVxbxXUl@VaÈwbaÞa@Vl@XUVx@V@VLlbnVal@lbVnnLnKnL@VlbVJXalIb@KUU@mVInJUVl@xUVLnU@UÞaV@lkV@UanKL@UlKVUnbÆmn@@nUlVnVJl@@UXUL@WVIVJVxVLXV@IÜKnbn@V¥V@@I@y°b@UUwnk°ÆƨVlUçXm£aÇIkV@WV@@aWIUWUIkb@WW@UnK@UU@kaWVkVIVVnU@UWVUV@VmVkKkWIkVWaULU`UImJUImmU@wmwUVIUWVkUamaU@mVkb@KVU@aVU@anKULVJU@kÛUJUVkkVakU@aVwkW@UWkXmWaULUaUK@XJUUmVU@UVUkJ@ImwmKU@k@lUW@@akKmkamIkWl_UwVm@UkaVUUa@UamakbWlkL@aUalU@mkL@U@UlmK@XkKm@Ýakb@xnXb`nUUU@U@wU@@mKkkV¯U@lULUbVbUb@Va@LºÝb@bLmKx@VUL@bk@mxULWl"],
					encodeOffsets: [
						[121185, 30184]
					]
				}
			}, {
				type: "Feature",
				id: "3303",
				properties: {
					name: "温州市",
					cp: [120.498, 27.8119],
					childNum: 9
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@ll@xnXV`VXWVL@lXnlV@UV@@b@¤VzUlnVU@nWxW@b@LnalK@bXVKUÈ@VVI@b@J@WbXLÆaUUmI@xlKnn@VWlbkXV@nVWnWbUbL@`VbUnVlVXkV@lUz±VnUbU@@VUlVL@l_@V@l@LVbV@XLV`VÈlxn@lU@aaVVk@XJ@nl@@LU`°LVbL°a@aUVy@anI@aanV@²wÜJX@VVV°kna@WVkaWwU@m@kaUĕÝÝŤnÈaaóI»@±XWkUķ@kV±kwUkWwUÝ»ÛkɳlImaUaWóXÿǬkUnWVmmkKţnŏÞğlUlUx@XWbV@JkX°mb@VULVxUVk@@LWWk@WIkUkJmUkVmI@y@UakLmU@mUUUkaVk@mK@UlUU@UmKmbUUUJ@n@KVLUL@VkJWXX`mnULWlkL@JVLVb@°kxkU@LVV@VLV`UL@VUX"],
					encodeOffsets: [
						[122502, 28334]
					]
				}
			}, {
				type: "Feature",
				id: "3302",
				properties: {
					name: "宁波市",
					cp: [121.5967, 29.6466],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@Ċ¦ĸĀ°nXÞVKkƨƑźÿ°»n@wô¥ÜbU°ÆXÞWóçĉÝ±IUÈ¥@U°wÆ»²mm_@aXVKÞVlk@akk̅@£X»VwÆXWa¯aȗbKƽŰĊxLók@@¯nKUL@xkLÑkWULUUmJUXVU@mUX¯@V`mbXbV@@nn¤WXx@kJ@nVVUVl²UbÝVUVk@Wx@V@VXzmlaL@VlLU`XUVVVUnl@VbnJlnUVVnlUKkbmnnVxlJnxmbU@UL@KUVX@xmb@lk@mnVVUè"],
					encodeOffsets: [
						[123784, 30977]
					]
				}
			}, {
				type: "Feature",
				id: "3309",
				properties: {
					name: "舟山市",
					cp: [122.2559, 30.2234],
					childNum: 3
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@l΢ƒʠþÆVĢLĊǬXĊÜXôVÑÆwlƏÈóVĭVǓ@ĉwɛkmK@ĉXīWaĉUĵÝm¯ĉwĉ±±nÅ¼¯x@VÇ¦V²JĊÞôèÝXÅW¯VÛaó¦@xm¯¼ŹĀ"],
					encodeOffsets: [
						[124437, 30983]
					]
				}
			}, {
				type: "Feature",
				id: "3310",
				properties: {
					name: "台州市",
					cp: [121.1353, 28.6688],
					childNum: 7
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@lVIVWVz@bXJl@Xal@°nLll@nVxnVK@UJVb¦°k`UIWJXnÆ@bUJXl@lbWn@UzVV@bVVmVnnJVXnabKUKnUVVUnVLlKVLXaJm£@mU@WanaU_°@VWnV@UVWnIVVVKlXÒlK@wVKL°m@l@ôKwĉƾůUl£@»UVkm@ƅUaÛIŏmUk@mw@a£Wk@ţIm±@ankôUlaUUw¯ōabÇbţmÞÞVĖbl@@nVXxbUl@Xmb¯lUUUW@ÛI±xU@mb@bmJ@bUzV@b¯bKUa¯KV_@Kk@@mWI@lUUb@bkVm@kwUÇU_WKU@Ux@VUnllX@VnJ@UXV@bWL@lUbbVLUJ@zV@lnbWbnnnJV@L"],
					encodeOffsets: [
						[123312, 29526]
					]
				}
			}, {
				type: "Feature",
				id: "3307",
				properties: {
					name: "金华市",
					cp: [120.0037, 29.1028],
					childNum: 8
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@nbVb@VbUVlb@VUnVxk`lXnJlbnlL@bX@V@klV@nLnx@JlIVU@VUVnVVI@WVLVbVKXbWnXl@VlXUxb@lVUbllVUIÜVnalKX@@bV@@aUUlUwUw@naWWUVaUUaVbLlxXJVk°UlkU¥@ka@LVlXLVlVWznVn@lxJl_@WX_@mVaa@alU@kVVnaKVLlKb@UUaVabnUWmXU@k@yVI@aÅWmXIVJl_¯¥UaVI@LmUUw@mkkmK¯k@Wbk@WI@aUyUXJkU@bU@WLUyXUbkbW`UVVkKmbUaVUUK£@KVUUUm@UWkXWaUKV@b¯¯mUV@UkmW@kkKwUmkkVUI@WlkUamL@Wk_W@UVm@Ua¯KWXk@Uxm@UK@xVmV@Xk@UVV¼@VLUbUU@yULUbVlU@@XlVUVVbU@lXXVW@XUVl@@VUVÈn@VVU@lVa@UmL@`X@`WL@VUX@lUL@xlx"],
					encodeOffsets: [
						[122119, 29948]
					]
				}
			}, {
				type: "Feature",
				id: "3308",
				properties: {
					name: "衢州市",
					cp: [118.6853, 28.8666],
					childNum: 5
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@XkVKnwl@@aVK@UwnLK@aÞa¹@Kb@UVaUaVaVK@k°VUllnL@V@xV@V@VVm_Wam@wlaÞbn@lL@WnLk@V@VlK@nkVVb@blKXklakw@wVK@kVW@UXK@_W@_nKV@Ub@kVUUm@ÇVU@Uk@VU@WUXWW@kVUaVUkU@WWXUKk@Ukmm¯LmmUJUIWJkImm_±WLkKm£@aVUmKUnLmWUkVmw@¥ULVWm@WUka@UmmLmm@@bUX@@WUIm@UVUK@UVUUUVVJmb@bXnmV¼nnn¦mJUVLV@VW@UzUlVnUbl`UnVl@XU@kl@bmÈUxVk@@J@¼W@ÅaVVnzmV@WJk@kWJ@lXbWbXxmVnlLXb@°lKVXnWbWVXmbV@XlbI@Kn@@x@VLlm"],
					encodeOffsets: [
						[121185, 30184]
					]
				}
			}, {
				type: "Feature",
				id: "3306",
				properties: {
					name: "绍兴市",
					cp: [120.564, 29.7565],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@x@VnnVJnIVJV_VKXblUXJllLUUnU@UVVX@mVUUUJlXUlbV@@VLVmX@@XlaVJVXXJ@b@XU@lUJÈb¤ŌJçVUUnml@@kna@wWVU@LVKV@namwkIUwmnmlaVLkUmVUkmmIUak@VmUUVUWV_kK@UKbnkWyU@@UXwl@VUÞUVak±VUUU@mlI@wXWIWbUKkLUKVmUUmVVLLambUWmIUmnUU@aUUVym@Xkak@W@z@lWVXnmVaUbVb@VakLUKLmbUU@lkV@bbUb@nW`@Xk`Ikwm@mUXyUUkWKUk@Kb@lV¦klV¯UlWIkwKUabVVUbVXXmb@VxxkVVV@bU@@aW@kLmb@lVUIVKmL@bUV@bUV@LalnUV@nbVbUlVXJVUnx"],
					encodeOffsets: [
						[122997, 30561]
					]
				}
			}, {
				type: "Feature",
				id: "3304",
				properties: {
					name: "嘉兴市",
					cp: [120.9155, 30.6354],
					childNum: 6
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@@blIX@@VÜVUnn@lklKnI°Þl`²LVKVbnbVaVLUVn@W¦@VkVVb@VI`@blLnLaX@VVb@U@XlVa@@kVaUKV»U_lWXU@albk@VllnLVKn@@UVIUw@y°IVVXU@VV@lwm@wVkƾaJLkΡƧƒlLÝUmW¯ķÿĉ¥IŋWnèkVƧU¯ÅmlVx@V¯az@@JU@U¦m@@nVmn@VLV"],
					encodeOffsets: [
						[123233, 31382]
					]
				}
			}, {
				type: "Feature",
				id: "3305",
				properties: {
					name: "湖州市",
					cp: [119.8608, 30.7782],
					childNum: 4
				},
				geometry: {
					type: "Polygon",
					coordinates: ["@@kLlkm@VmÛU@UW@kJ@aUK@UnmmU@maÛL@JWUUKUwUIUJ@XKWV@Vk@UIUmVk@mm@ÅnmaUVkL@VKmLVbU@klU@ÝbV@mVUKV@wUkVmIUJ@nVV@LakJWbUIka@UmKmLKmmUUVk@@nmLX`WXUV@@nUlkmlU@UbxVVIlVnn@@nUÒ@°n@@xmb@VbnV@@b@`@L@L@x@blVklVbnnV@aXb°VlU@Wb°ULXWVUVVwÈwÜ»ĸaĠnUVw²X@V@lVU@wlaUUVm@knUV"],
					encodeOffsets: [
						[123379, 31500]
					]
				}
			}],
			UTF8Encoding: !0
		}
	}), h("echarts/chart/gauge", ["require", "./base", "../util/shape/GaugePointer", "zrender/shape/Text", "zrender/shape/Line", "zrender/shape/Rectangle", "zrender/shape/Circle", "zrender/shape/Sector", "../config", "../util/ecData", "../util/accMath", "zrender/tool/util", "../chart"], function(z) {
		function B(r, n, m, l, s) {
			p.call(this, r, n, m, l, s), this.refresh(l)
		}
		var p = z("./base"),
			x = z("../util/shape/GaugePointer"),
			A = z("zrender/shape/Text"),
			k = z("zrender/shape/Line"),
			j = z("zrender/shape/Rectangle"),
			C = z("zrender/shape/Circle"),
			w = z("zrender/shape/Sector"),
			y = z("../config");
		y.gauge = {
			zlevel: 0,
			z: 2,
			center: ["50%", "50%"],
			clickable: !0,
			legendHoverLink: !0,
			radius: "75%",
			startAngle: 225,
			endAngle: -45,
			min: 0,
			max: 100,
			precision: 0,
			splitNumber: 10,
			axisLine: {
				show: !0,
				lineStyle: {
					color: [
						[0.2, "#228b22"],
						[0.8, "#48b"],
						[1, "#ff4500"]
					],
					width: 30
				}
			},
			axisTick: {
				show: !0,
				splitNumber: 5,
				length: 8,
				lineStyle: {
					color: "#eee",
					width: 1,
					type: "solid"
				}
			},
			axisLabel: {
				show: !0,
				textStyle: {
					color: "auto"
				}
			},
			splitLine: {
				show: !0,
				length: 30,
				lineStyle: {
					color: "#eee",
					width: 2,
					type: "solid"
				}
			},
			pointer: {
				show: !0,
				length: "80%",
				width: 8,
				color: "auto"
			},
			title: {
				show: !0,
				offsetCenter: [0, "-40%"],
				textStyle: {
					color: "#333",
					fontSize: 15
				}
			},
			detail: {
				show: !0,
				backgroundColor: "rgba(0,0,0,0)",
				borderWidth: 0,
				borderColor: "#ccc",
				width: 100,
				height: 40,
				offsetCenter: [0, "40%"],
				textStyle: {
					color: "auto",
					fontSize: 30
				}
			}
		};
		var u = z("../util/ecData"),
			q = z("../util/accMath"),
			v = z("zrender/tool/util");
		return B.prototype = {
			type: y.CHART_TYPE_GAUGE,
			_buildShape: function() {
				var i = this.series;
				this._paramsMap = {};
				for (var a = 0, l = i.length; l > a; a++) {
					i[a].type === y.CHART_TYPE_GAUGE && (i[a] = this.reformOption(i[a]), this.legendHoverLink = i[a].legendHoverLink || this.legendHoverLink, this._buildSingleGauge(a), this.buildMark(a))
				}
				this.addShapeList()
			},
			_buildSingleGauge: function(i) {
				var a = this.series[i];
				this._paramsMap[i] = {
					center: this.parseCenter(this.zr, a.center),
					radius: this.parseRadius(this.zr, a.radius),
					startAngle: a.startAngle.toFixed(2) - 0,
					endAngle: a.endAngle.toFixed(2) - 0
				}, this._paramsMap[i].totalAngle = this._paramsMap[i].startAngle - this._paramsMap[i].endAngle, this._colorMap(i), this._buildAxisLine(i), this._buildSplitLine(i), this._buildAxisTick(i), this._buildAxisLabel(i), this._buildPointer(i), this._buildTitle(i), this._buildDetail(i)
			},
			_buildAxisLine: function(Q) {
				var G = this.series[Q];
				if (G.axisLine.show) {
					for (var L, N, T = G.min, K = G.max - T, I = this._paramsMap[Q], H = I.center, M = I.startAngle, O = I.totalAngle, m = I.colorArray, D = G.axisLine.lineStyle, R = this.parsePercent(D.width, I.radius[1]), J = I.radius[1], S = J - R, F = M, E = 0, P = m.length; P > E; E++) {
						N = M - O * (m[E][0] - T) / K, L = this._getSector(H, S, J, N, F, m[E][1], D), F = N, L._animationAdd = "r", u.set(L, "seriesIndex", Q), u.set(L, "dataIndex", E), this.shapeList.push(L)
					}
				}
			},
			_buildSplitLine: function(Q) {
				var G = this.series[Q];
				if (G.splitLine.show) {
					for (var K, N, W, I = this._paramsMap[Q], H = G.splitNumber, M = G.min, O = G.max - M, L = G.splitLine, o = this.parsePercent(L.length, I.radius[1]), D = L.lineStyle, R = D.color, J = I.center, S = I.startAngle * Math.PI / 180, F = I.totalAngle * Math.PI / 180, E = I.radius[1], P = E - o, T = 0; H >= T; T++) {
						K = S - F / H * T, N = Math.sin(K), W = Math.cos(K), this.shapeList.push(new k({
							zlevel: this.getZlevelBase(),
							z: this.getZBase() + 1,
							hoverable: !1,
							style: {
								xStart: J[0] + W * E,
								yStart: J[1] - N * E,
								xEnd: J[0] + W * P,
								yEnd: J[1] - N * P,
								strokeColor: "auto" === R ? this._getColor(Q, M + O / H * T) : R,
								lineType: D.type,
								lineWidth: D.width,
								shadowColor: D.shadowColor,
								shadowBlur: D.shadowBlur,
								shadowOffsetX: D.shadowOffsetX,
								shadowOffsetY: D.shadowOffsetY
							}
						}))
					}
				}
			},
			_buildAxisTick: function(S) {
				var G = this.series[S];
				if (G.axisTick.show) {
					for (var K, O, Y, I = this._paramsMap[S], H = G.splitNumber, M = G.min, P = G.max - M, L = G.axisTick, o = L.splitNumber, D = this.parsePercent(L.length, I.radius[1]), T = L.lineStyle, J = T.color, W = I.center, F = I.startAngle * Math.PI / 180, E = I.totalAngle * Math.PI / 180, Q = I.radius[1], X = Q - D, R = 0, N = H * o; N >= R; R++) {
						R % o !== 0 && (K = F - E / N * R, O = Math.sin(K), Y = Math.cos(K), this.shapeList.push(new k({
							zlevel: this.getZlevelBase(),
							z: this.getZBase() + 1,
							hoverable: !1,
							style: {
								xStart: W[0] + Y * Q,
								yStart: W[1] - O * Q,
								xEnd: W[0] + Y * X,
								yEnd: W[1] - O * X,
								strokeColor: "auto" === J ? this._getColor(S, M + P / N * R) : J,
								lineType: T.type,
								lineWidth: T.width,
								shadowColor: T.shadowColor,
								shadowBlur: T.shadowBlur,
								shadowOffsetX: T.shadowOffsetX,
								shadowOffsetY: T.shadowOffsetY
							}
						})))
					}
				}
			},
			_buildAxisLabel: function(Q) {
				var F = this.series[Q];
				if (F.axisLabel.show) {
					for (var K, N, J, H, G = F.splitNumber, M = F.min, O = F.max - M, L = F.axisLabel.textStyle, a = this.getFont(L), R = L.color, I = this._paramsMap[Q], S = I.center, E = I.startAngle, D = I.totalAngle, P = I.radius[1] - this.parsePercent(F.splitLine.length, I.radius[1]) - 5, T = 0; G >= T; T++) {
						H = q.accAdd(M, q.accMul(q.accDiv(O, G), T)), K = E - D / G * T, N = Math.sin(K * Math.PI / 180), J = Math.cos(K * Math.PI / 180), K = (K + 360) % 360, this.shapeList.push(new A({
							zlevel: this.getZlevelBase(),
							z: this.getZBase() + 1,
							hoverable: !1,
							style: {
								x: S[0] + J * P,
								y: S[1] - N * P,
								color: "auto" === R ? this._getColor(Q, H) : R,
								text: this._getLabelText(F.axisLabel.formatter, H),
								textAlign: K >= 110 && 250 >= K ? "left" : 70 >= K || K >= 290 ? "right" : "center",
								textBaseline: K >= 10 && 170 >= K ? "top" : K >= 190 && 350 >= K ? "bottom" : "middle",
								textFont: a,
								shadowColor: L.shadowColor,
								shadowBlur: L.shadowBlur,
								shadowOffsetX: L.shadowOffsetX,
								shadowOffsetY: L.shadowOffsetY
							}
						}))
					}
				}
			},
			_buildPointer: function(I) {
				var L = this.series[I];
				if (L.pointer.show) {
					var D = L.max - L.min,
						K = L.pointer,
						s = this._paramsMap[I],
						i = this.parsePercent(K.length, s.radius[1]),
						G = this.parsePercent(K.width, s.radius[1]),
						H = s.center,
						E = this._getValue(I);
					E = E < L.max ? E : L.max;
					var F = (s.startAngle - s.totalAngle / D * (E - L.min)) * Math.PI / 180,
						J = "auto" === K.color ? this._getColor(I, E) : K.color,
						m = new x({
							zlevel: this.getZlevelBase(),
							z: this.getZBase() + 1,
							clickable: this.query(L, "clickable"),
							style: {
								x: H[0],
								y: H[1],
								r: i,
								startAngle: s.startAngle * Math.PI / 180,
								angle: F,
								color: J,
								width: G,
								shadowColor: K.shadowColor,
								shadowBlur: K.shadowBlur,
								shadowOffsetX: K.shadowOffsetX,
								shadowOffsetY: K.shadowOffsetY
							},
							highlightStyle: {
								brushType: "fill",
								width: G > 2 ? 2 : G / 2,
								color: "#fff"
							}
						});
					u.pack(m, this.series[I], I, this.series[I].data[0], 0, this.series[I].data[0].name, E), this.shapeList.push(m), this.shapeList.push(new C({
						zlevel: this.getZlevelBase(),
						z: this.getZBase() + 2,
						hoverable: !1,
						style: {
							x: H[0],
							y: H[1],
							r: K.width / 2.5,
							color: "#fff"
						}
					}))
				}
			},
			_buildTitle: function(K) {
				var L = this.series[K];
				if (L.title.show) {
					var E = L.data[0],
						I = null != E.name ? E.name : "";
					if ("" !== I) {
						var D = L.title,
							a = D.offsetCenter,
							M = D.textStyle,
							H = M.color,
							J = this._paramsMap[K],
							G = J.center[0] + this.parsePercent(a[0], J.radius[1]),
							F = J.center[1] + this.parsePercent(a[1], J.radius[1]);
						this.shapeList.push(new A({
							zlevel: this.getZlevelBase(),
							z: this.getZBase() + (Math.abs(G - J.center[0]) + Math.abs(F - J.center[1]) < 2 * M.fontSize ? 2 : 1),
							hoverable: !1,
							style: {
								x: G,
								y: F,
								color: "auto" === H ? this._getColor(K) : H,
								text: I,
								textAlign: "center",
								textFont: this.getFont(M),
								shadowColor: M.shadowColor,
								shadowBlur: M.shadowBlur,
								shadowOffsetX: M.shadowOffsetX,
								shadowOffsetY: M.shadowOffsetY
							}
						}))
					}
				}
			},
			_buildDetail: function(J) {
				var L = this.series[J];
				if (L.detail.show) {
					var D = L.detail,
						H = D.offsetCenter,
						K = D.backgroundColor,
						r = D.textStyle,
						M = r.color,
						G = this._paramsMap[J],
						I = this._getValue(J),
						F = G.center[0] - D.width / 2 + this.parsePercent(H[0], G.radius[1]),
						E = G.center[1] + this.parsePercent(H[1], G.radius[1]);
					this.shapeList.push(new j({
						zlevel: this.getZlevelBase(),
						z: this.getZBase() + (Math.abs(F + D.width / 2 - G.center[0]) + Math.abs(E + D.height / 2 - G.center[1]) < r.fontSize ? 2 : 1),
						hoverable: !1,
						style: {
							x: F,
							y: E,
							width: D.width,
							height: D.height,
							brushType: "both",
							color: "auto" === K ? this._getColor(J, I) : K,
							lineWidth: D.borderWidth,
							strokeColor: D.borderColor,
							shadowColor: D.shadowColor,
							shadowBlur: D.shadowBlur,
							shadowOffsetX: D.shadowOffsetX,
							shadowOffsetY: D.shadowOffsetY,
							text: this._getLabelText(D.formatter, I),
							textFont: this.getFont(r),
							textPosition: "inside",
							textColor: "auto" === M ? this._getColor(J, I) : M
						}
					}))
				}
			},
			_getValue: function(a) {
				return this.getDataFromOption(this.series[a].data[0])
			},
			_colorMap: function(G) {
				var D = this.series[G],
					I = D.min,
					m = D.max - I,
					l = D.axisLine.lineStyle.color;
				l instanceof Array || (l = [
					[1, l]
				]);
				for (var H = [], F = 0, E = l.length; E > F; F++) {
					H.push([l[F][0] * m + I, l[F][1]])
				}
				this._paramsMap[G].colorArray = H
			},
			_getColor: function(r, o) {
				null == o && (o = this._getValue(r));
				for (var s = this._paramsMap[r].colorArray, m = 0, l = s.length; l > m; m++) {
					if (s[m][0] >= o) {
						return s[m][1]
					}
				}
				return s[s.length - 1][1]
			},
			_getSector: function(E, s, G, m, l, F, D) {
				return new w({
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					hoverable: !1,
					style: {
						x: E[0],
						y: E[1],
						r0: s,
						r: G,
						startAngle: m,
						endAngle: l,
						brushType: "fill",
						color: F,
						shadowColor: D.shadowColor,
						shadowBlur: D.shadowBlur,
						shadowOffsetX: D.shadowOffsetX,
						shadowOffsetY: D.shadowOffsetY
					}
				})
			},
			_getLabelText: function(i, a) {
				if (i) {
					if ("function" == typeof i) {
						return i.call(this.myChart, a)
					}
					if ("string" == typeof i) {
						return i.replace("{value}", a)
					}
				}
				return a
			},
			refresh: function(a) {
				a && (this.option = a, this.series = a.series), this.backupShapeList(), this._buildShape()
			}
		}, v.inherits(B, p), z("../chart").define("gauge", B), B
	}), h("echarts/util/shape/GaugePointer", ["require", "zrender/shape/Base", "zrender/tool/util", "./normalIsCover"], function(k) {
		function j(i) {
			l.call(this, i)
		}
		var l = k("zrender/shape/Base"),
			a = k("zrender/tool/util");
		return j.prototype = {
			type: "gauge-pointer",
			buildPath: function(u, q) {
				var w = q.r,
					p = q.width,
					m = q.angle,
					v = q.x - Math.cos(m) * p * (p >= w / 3 ? 1 : 2),
					s = q.y + Math.sin(m) * p * (p >= w / 3 ? 1 : 2);
				m = q.angle - Math.PI / 2, u.moveTo(v, s), u.lineTo(q.x + Math.cos(m) * p, q.y - Math.sin(m) * p), u.lineTo(q.x + Math.cos(q.angle) * w, q.y - Math.sin(q.angle) * w), u.lineTo(q.x - Math.cos(m) * p, q.y + Math.sin(m) * p), u.lineTo(v, s)
			},
			getRect: function(r) {
				if (r.__rect) {
					return r.__rect
				}
				var q = 2 * r.width,
					u = r.x,
					p = r.y,
					m = u + Math.cos(r.angle) * r.r,
					s = p - Math.sin(r.angle) * r.r;
				return r.__rect = {
					x: Math.min(u, m) - q,
					y: Math.min(p, s) - q,
					width: Math.abs(u - m) + q,
					height: Math.abs(p - s) + q
				}, r.__rect
			},
			isCover: k("./normalIsCover")
		}, a.inherits(j, l), j
	}), h("echarts/chart/funnel", ["require", "./base", "zrender/shape/Text", "zrender/shape/Line", "zrender/shape/Polygon", "../config", "../util/ecData", "../util/number", "zrender/tool/util", "zrender/tool/color", "zrender/tool/area", "../chart"], function(y) {
		function A(r, n, m, l, s) {
			p.call(this, r, n, m, l, s), this.refresh(l)
		}
		var p = y("./base"),
			w = y("zrender/shape/Text"),
			z = y("zrender/shape/Line"),
			k = y("zrender/shape/Polygon"),
			j = y("../config");
		j.funnel = {
			zlevel: 0,
			z: 2,
			clickable: !0,
			legendHoverLink: !0,
			x: 80,
			y: 60,
			x2: 80,
			y2: 60,
			min: 0,
			max: 100,
			minSize: "0%",
			maxSize: "100%",
			sort: "descending",
			gap: 0,
			funnelAlign: "center",
			itemStyle: {
				normal: {
					borderColor: "#fff",
					borderWidth: 1,
					label: {
						show: !0,
						position: "outer"
					},
					labelLine: {
						show: !0,
						length: 10,
						lineStyle: {
							width: 1,
							type: "solid"
						}
					}
				},
				emphasis: {
					borderColor: "rgba(0,0,0,0)",
					borderWidth: 1,
					label: {
						show: !0
					},
					labelLine: {
						show: !0
					}
				}
			}
		};
		var B = y("../util/ecData"),
			v = y("../util/number"),
			x = y("zrender/tool/util"),
			u = y("zrender/tool/color"),
			q = y("zrender/tool/area");
		return A.prototype = {
			type: j.CHART_TYPE_FUNNEL,
			_buildShape: function() {
				var r = this.series,
					o = this.component.legend;
				this._paramsMap = {}, this._selected = {}, this.selectedMap = {};
				for (var s, m = 0, l = r.length; l > m; m++) {
					if (r[m].type === j.CHART_TYPE_FUNNEL) {
						if (r[m] = this.reformOption(r[m]), this.legendHoverLink = r[m].legendHoverLink || this.legendHoverLink, s = r[m].name || "", this.selectedMap[s] = o ? o.isSelected(s) : !0, !this.selectedMap[s]) {
							continue
						}
						this._buildSingleFunnel(m), this.buildMark(m)
					}
				}
				this.addShapeList()
			},
			_buildSingleFunnel: function(S) {
				var G = this.component.legend,
					L = this.series[S],
					O = this._mapData(S),
					Y = this._getLocation(S);
				this._paramsMap[S] = {
					location: Y,
					data: O
				};
				for (var K, I = 0, H = [], P = 0, M = O.length; M > P; P++) {
					K = O[P].name, this.selectedMap[K] = G ? G.isSelected(K) : !0, this.selectedMap[K] && !isNaN(O[P].value) && (H.push(O[P]), I++)
				}
				if (0 !== I) {
					for (var l, C, T, J, W = this._buildFunnelCase(S), F = L.funnelAlign, D = L.gap, Q = I > 1 ? (Y.height - (I - 1) * D) / I : Y.height, X = Y.y, R = "descending" === L.sort ? this._getItemWidth(S, H[0].value) : v.parsePercent(L.minSize, Y.width), N = "descending" === L.sort ? 1 : 0, E = Y.centerX, Z = [], P = 0, M = H.length; M > P; P++) {
						if (K = H[P].name, this.selectedMap[K] && !isNaN(H[P].value)) {
							switch (l = M - 2 >= P ? this._getItemWidth(S, H[P + N].value) : "descending" === L.sort ? v.parsePercent(L.minSize, Y.width) : v.parsePercent(L.maxSize, Y.width), F) {
								case "left":
									C = Y.x;
									break;
								case "right":
									C = Y.x + Y.width - R;
									break;
								default:
									C = E - R / 2
							}
							T = this._buildItem(S, H[P]._index, G ? G.getColor(K) : this.zr.getColor(H[P]._index), C, X, R, l, Q, F), X += Q + D, J = T.style.pointList, Z.unshift([J[0][0] - 10, J[0][1]]), Z.push([J[1][0] + 10, J[1][1]]), 0 === P && (0 === R ? (J = Z.pop(), "center" == F && (Z[0][0] += 10), "right" == F && (Z[0][0] = J[0]), Z[0][1] -= "center" == F ? 10 : 15, 1 == M && (J = T.style.pointList)) : (Z[Z.length - 1][1] -= 5, Z[0][1] -= 5)), R = l
						}
					}
					W && (Z.unshift([J[3][0] - 10, J[3][1]]), Z.push([J[2][0] + 10, J[2][1]]), 0 === R ? (J = Z.pop(), "center" == F && (Z[0][0] += 10), "right" == F && (Z[0][0] = J[0]), Z[0][1] += "center" == F ? 10 : 15) : (Z[Z.length - 1][1] += 5, Z[0][1] += 5), W.style.pointList = Z)
				}
			},
			_buildFunnelCase: function(r) {
				var o = this.series[r];
				if (this.deepQuery([o, this.option], "calculable")) {
					var s = this._paramsMap[r].location,
						m = 10,
						l = {
							hoverable: !1,
							style: {
								pointListd: [
									[s.x - m, s.y - m],
									[s.x + s.width + m, s.y - m],
									[s.x + s.width + m, s.y + s.height + m],
									[s.x - m, s.y + s.height + m]
								],
								brushType: "stroke",
								lineWidth: 1,
								strokeColor: o.calculableHolderColor || this.ecTheme.calculableHolderColor || j.calculableHolderColor
							}
						};
					return B.pack(l, o, r, void 0, -1), this.setCalculable(l), l = new k(l), this.shapeList.push(l), l
				}
			},
			_getLocation: function(D) {
				var s = this.series[D],
					F = this.zr.getWidth(),
					m = this.zr.getHeight(),
					l = this.parsePercent(s.x, F),
					E = this.parsePercent(s.y, m),
					C = null == s.width ? F - l - this.parsePercent(s.x2, F) : this.parsePercent(s.width, F);
				return {
					x: l,
					y: E,
					width: C,
					height: null == s.height ? m - E - this.parsePercent(s.y2, m) : this.parsePercent(s.height, m),
					centerX: l + C / 2
				}
			},
			_mapData: function(D) {
				function s(i, a) {
					return "-" === i.value ? 1 : "-" === a.value ? -1 : a.value - i.value
				}

				function F(a, i) {
					return -s(a, i)
				}
				for (var m = this.series[D], l = x.clone(m.data), E = 0, C = l.length; C > E; E++) {
					l[E]._index = E
				}
				return "none" != m.sort && l.sort("descending" === m.sort ? s : F), l
			},
			_buildItem: function(L, R, E, J, P, D, s, I, K) {
				var G = this.series,
					F = G[L],
					H = F.data[R],
					M = this.getPolygon(L, R, E, J, P, D, s, I, K);
				B.pack(M, G[L], L, G[L].data[R], R, G[L].data[R].name), this.shapeList.push(M);
				var C = this.getLabel(L, R, E, J, P, D, s, I, K);
				B.pack(C, G[L], L, G[L].data[R], R, G[L].data[R].name), this.shapeList.push(C), this._needLabel(F, H, !1) || (C.invisible = !0);
				var N = this.getLabelLine(L, R, E, J, P, D, s, I, K);
				this.shapeList.push(N), this._needLabelLine(F, H, !1) || (N.invisible = !0);
				var Q = [],
					O = [];
				return this._needLabelLine(F, H, !0) && (Q.push(N.id), O.push(N.id)), this._needLabel(F, H, !0) && (Q.push(C.id), O.push(M.id)), M.hoverConnect = Q, C.hoverConnect = O, M
			},
			_getItemWidth: function(F, C) {
				var H = this.series[F],
					m = this._paramsMap[F].location,
					l = H.min,
					G = H.max,
					E = v.parsePercent(H.minSize, m.width),
					D = v.parsePercent(H.maxSize, m.width);
				return C * (D - E) / (G - l)
			},
			getPolygon: function(N, E, I, K, R, G, F, J, L) {
				var m, o = this.series[N],
					O = o.data[E],
					H = [O, o],
					P = this.deepMerge(H, "itemStyle.normal") || {},
					D = this.deepMerge(H, "itemStyle.emphasis") || {},
					C = this.getItemStyleColor(P.color, N, E, O) || I,
					M = this.getItemStyleColor(D.color, N, E, O) || ("string" == typeof C ? u.lift(C, -0.2) : C);
				switch (L) {
					case "left":
						m = K;
						break;
					case "right":
						m = K + (G - F);
						break;
					default:
						m = K + (G - F) / 2
				}
				var Q = {
					zlevel: this.getZlevelBase(),
					z: this.getZBase(),
					clickable: this.deepQuery(H, "clickable"),
					style: {
						pointList: [
							[K, R],
							[K + G, R],
							[m + F, R + J],
							[m, R + J]
						],
						brushType: "both",
						color: C,
						lineWidth: P.borderWidth,
						strokeColor: P.borderColor
					},
					highlightStyle: {
						color: M,
						lineWidth: D.borderWidth,
						strokeColor: D.borderColor
					}
				};
				return this.deepQuery([O, o, this.option], "calculable") && (this.setCalculable(Q), Q.draggable = !0), new k(Q)
			},
			getLabel: function(R, G, M, X, K, I, H, N, m) {
				var S, J = this.series[R],
					T = J.data[G],
					F = this._paramsMap[R].location,
					D = x.merge(x.clone(T.itemStyle) || {}, J.itemStyle),
					P = "normal",
					V = D[P].label,
					Q = V.textStyle || {},
					O = D[P].labelLine.length,
					E = this.getLabelText(R, G, P),
					Y = this.getFont(Q),
					C = M;
				V.position = V.position || D.normal.label.position, "inner" === V.position || "inside" === V.position || "center" === V.position ? (S = m, C = Math.max(I, H) / 2 > q.getTextWidth(E, Y) ? "#fff" : u.reverse(M)) : S = "left" === V.position ? "right" : "left";
				var i = {
					zlevel: this.getZlevelBase(),
					z: this.getZBase() + 1,
					style: {
						x: this._getLabelPoint(V.position, X, F, I, H, O, m),
						y: K + N / 2,
						color: Q.color || C,
						text: E,
						textAlign: Q.align || S,
						textBaseline: Q.baseline || "middle",
						textFont: Y
					}
				};
				return P = "emphasis", V = D[P].label || V, Q = V.textStyle || Q, O = D[P].labelLine.length || O, V.position = V.position || D.normal.label.position, E = this.getLabelText(R, G, P), Y = this.getFont(Q), C = M, "inner" === V.position || "inside" === V.position || "center" === V.position ? (S = m, C = Math.max(I, H) / 2 > q.getTextWidth(E, Y) ? "#fff" : u.reverse(M)) : S = "left" === V.position ? "right" : "left", i.highlightStyle = {
					x: this._getLabelPoint(V.position, X, F, I, H, O, m),
					color: Q.color || C,
					text: E,
					textAlign: Q.align || S,
					textFont: Y,
					brushType: "fill"
				}, new w(i)
			},
			getLabelText: function(D, s, F) {
				var m = this.series,
					l = m[D],
					E = l.data[s],
					C = this.deepQuery([E, l], "itemStyle." + F + ".label.formatter");
				return C ? "function" == typeof C ? C.call(this.myChart, {
					seriesIndex: D,
					seriesName: l.name || "",
					series: l,
					dataIndex: s,
					data: E,
					name: E.name,
					value: E.value
				}) : "string" == typeof C ? C = C.replace("{a}", "{a0}").replace("{b}", "{b0}").replace("{c}", "{c0}").replace("{a0}", l.name).replace("{b0}", E.name).replace("{c0}", E.value) : void 0 : E.name
			},
			getLabelLine: function(Q, F, K, N, J, H, G, M, L) {
				var a = this.series[Q],
					C = a.data[F],
					R = this._paramsMap[Q].location,
					I = x.merge(x.clone(C.itemStyle) || {}, a.itemStyle),
					S = "normal",
					E = I[S].labelLine,
					D = I[S].labelLine.length,
					O = E.lineStyle || {},
					T = I[S].label;
				T.position = T.position || I.normal.label.position;
				var P = {
					zlevel: this.getZlevelBase(),
					z: this.getZBase() + 1,
					hoverable: !1,
					style: {
						xStart: this._getLabelLineStartPoint(N, R, H, G, L),
						yStart: J + M / 2,
						xEnd: this._getLabelPoint(T.position, N, R, H, G, D, L),
						yEnd: J + M / 2,
						strokeColor: O.color || K,
						lineType: O.type,
						lineWidth: O.width
					}
				};
				return S = "emphasis", E = I[S].labelLine || E, D = I[S].labelLine.length || D, O = E.lineStyle || O, T = I[S].label || T, T.position = T.position, P.highlightStyle = {
					xEnd: this._getLabelPoint(T.position, N, R, H, G, D, L),
					strokeColor: O.color || K,
					lineType: O.type,
					lineWidth: O.width
				}, new z(P)
			},
			_getLabelPoint: function(D, s, F, m, l, E, C) {
				switch (D = "inner" === D || "inside" === D ? "center" : D) {
					case "center":
						return "center" == C ? s + m / 2 : "left" == C ? s + 10 : s + m - 10;
					case "left":
						return "auto" === E ? F.x - 10 : "center" == C ? F.centerX - Math.max(m, l) / 2 - E : "right" == C ? s - (l > m ? l - m : 0) - E : F.x - E;
					default:
						return "auto" === E ? F.x + F.width + 10 : "center" == C ? F.centerX + Math.max(m, l) / 2 + E : "right" == C ? F.x + F.width + E : s + Math.max(m, l) + E
				}
			},
			_getLabelLineStartPoint: function(r, o, s, m, l) {
				return "center" == l ? o.centerX : m > s ? r + Math.min(s, m) / 2 : r + Math.max(s, m) / 2
			},
			_needLabel: function(i, a, l) {
				return this.deepQuery([a, i], "itemStyle." + (l ? "emphasis" : "normal") + ".label.show")
			},
			_needLabelLine: function(i, a, l) {
				return this.deepQuery([a, i], "itemStyle." + (l ? "emphasis" : "normal") + ".labelLine.show")
			},
			refresh: function(a) {
				a && (this.option = a, this.series = a.series), this.backupShapeList(), this._buildShape()
			}
		}, x.inherits(A, p), y("../chart").define("funnel", A), A
	}), h("echarts/chart/eventRiver", ["require", "./base", "../layout/eventRiver", "zrender/shape/Polygon", "../component/axis", "../component/grid", "../component/dataZoom", "../config", "../util/ecData", "../util/date", "zrender/tool/util", "zrender/tool/color", "../chart"], function(v) {
		function x(A, s, n, l, B) {
			m.call(this, A, s, n, l, B);
			var z = this;
			z._ondragend = function() {
				z.isDragend = !0
			}, this.refresh(l)
		}
		var m = v("./base"),
			q = v("../layout/eventRiver"),
			w = v("zrender/shape/Polygon");
		v("../component/axis"), v("../component/grid"), v("../component/dataZoom");
		var k = v("../config");
		k.eventRiver = {
			zlevel: 0,
			z: 2,
			clickable: !0,
			legendHoverLink: !0,
			itemStyle: {
				normal: {
					borderColor: "rgba(0,0,0,0)",
					borderWidth: 1,
					label: {
						show: !0,
						position: "inside",
						formatter: "{b}"
					}
				},
				emphasis: {
					borderColor: "rgba(0,0,0,0)",
					borderWidth: 1,
					label: {
						show: !0
					}
				}
			}
		};
		var j = v("../util/ecData"),
			y = v("../util/date"),
			p = v("zrender/tool/util"),
			u = v("zrender/tool/color");
		return x.prototype = {
			type: k.CHART_TYPE_EVENTRIVER,
			_buildShape: function() {
				var r = this.series;
				this.selectedMap = {}, this._dataPreprocessing();
				for (var l = this.component.legend, z = [], i = 0; i < r.length; i++) {
					if (r[i].type === this.type) {
						r[i] = this.reformOption(r[i]), this.legendHoverLink = r[i].legendHoverLink || this.legendHoverLink;
						var s = r[i].name || "";
						if (this.selectedMap[s] = l ? l.isSelected(s) : !0, !this.selectedMap[s]) {
							continue
						}
						this.buildMark(i), z.push(this.series[i])
					}
				}
				q(z, this._intervalX, this.component.grid.getArea()), this._drawEventRiver(), this.addShapeList()
			},
			_dataPreprocessing: function() {
				for (var E, G, A = this.series, C = 0, F = A.length; F > C; C++) {
					if (A[C].type === this.type) {
						E = this.component.xAxis.getAxis(A[C].xAxisIndex || 0);
						for (var z = 0, s = A[C].eventList.length; s > z; z++) {
							G = A[C].eventList[z].evolution;
							for (var B = 0, D = G.length; D > B; B++) {
								G[B].timeScale = E.getCoord(y.getNewDate(G[B].time) - 0), G[B].valueScale = Math.pow(G[B].value, 0.8)
							}
						}
					}
				}
				this._intervalX = Math.round(this.component.grid.getWidth() / 40)
			},
			_drawEventRiver: function() {
				for (var o = this.series, l = 0; l < o.length; l++) {
					var r = o[l].name || "";
					if (o[l].type === this.type && this.selectedMap[r]) {
						for (var a = 0; a < o[l].eventList.length; a++) {
							this._drawEventBubble(o[l].eventList[a], l, a)
						}
					}
				}
			},
			_drawEventBubble: function(G, L, z) {
				var E = this.series,
					r = E[L],
					M = r.name || "",
					D = r.eventList[z],
					B = [D, r],
					A = this.component.legend,
					C = A ? A.getColor(M) : this.zr.getColor(L),
					H = this.deepMerge(B, "itemStyle.normal") || {},
					a = this.deepMerge(B, "itemStyle.emphasis") || {},
					I = this.getItemStyleColor(H.color, L, z, D) || C,
					K = this.getItemStyleColor(a.color, L, z, D) || ("string" == typeof I ? u.lift(I, -0.2) : I),
					J = this._calculateControlPoints(G),
					F = {
						zlevel: this.getZlevelBase(),
						z: this.getZBase(),
						clickable: this.deepQuery(B, "clickable"),
						style: {
							pointList: J,
							smooth: "spline",
							brushType: "both",
							lineJoin: "round",
							color: I,
							lineWidth: H.borderWidth,
							strokeColor: H.borderColor
						},
						highlightStyle: {
							color: K,
							lineWidth: a.borderWidth,
							strokeColor: a.borderColor
						},
						draggable: "vertical",
						ondragend: this._ondragend
					};
				F = new w(F), this.addLabel(F, r, D, G.name), j.pack(F, E[L], L, E[L].eventList[z], z, E[L].eventList[z].name), this.shapeList.push(F)
			},
			_calculateControlPoints: function(E) {
				var G = this._intervalX,
					B = E.y,
					D = E.evolution,
					F = D.length;
				if (!(1 > F)) {
					for (var A = [], z = [], H = 0; F > H; H++) {
						A.push(D[H].timeScale), z.push(D[H].valueScale)
					}
					var C = [];
					C.push([A[0], B]);
					var H = 0;
					for (H = 0; F - 1 > H; H++) {
						C.push([(A[H] + A[H + 1]) / 2, z[H] / -2 + B])
					}
					for (C.push([(A[H] + (A[H] + G)) / 2, z[H] / -2 + B]), C.push([A[H] + G, B]), C.push([(A[H] + (A[H] + G)) / 2, z[H] / 2 + B]), H = F - 1; H > 0; H--) {
						C.push([(A[H] + A[H - 1]) / 2, z[H - 1] / 2 + B])
					}
					return C
				}
			},
			ondragend: function(i, a) {
				this.isDragend && i.target && (a.dragOut = !0, a.dragIn = !0, a.needRefresh = !1, this.isDragend = !1)
			},
			refresh: function(a) {
				a && (this.option = a, this.series = a.series), this.backupShapeList(), this._buildShape()
			}
		}, p.inherits(x, m), v("../chart").define("eventRiver", x), x
	}), h("echarts/layout/eventRiver", ["require"], function() {
		function m(H, A, w) {
			function v(s, r) {
				var u = s.importance,
					p = r.importance;
				return u > p ? -1 : p > u ? 1 : 0
			}

			function C(s, r) {
				if (s.indexOf) {
					return s.indexOf(r)
				}
				for (var u = 0, p = s.length; p > u; u++) {
					if (s[u] === r) {
						return u
					}
				}
				return -1
			}
			for (var E = 5, B = A, a = 0; a < H.length; a++) {
				for (var i = 0; i < H[a].eventList.length; i++) {
					null == H[a].eventList[i].weight && (H[a].eventList[i].weight = 1);
					for (var I = 0, z = 0; z < H[a].eventList[i].evolution.length; z++) {
						I += H[a].eventList[i].evolution[z].valueScale
					}
					H[a].eventList[i].importance = I * H[a].eventList[i].weight
				}
				H[a].eventList.sort(v)
			}
			for (var a = 0; a < H.length; a++) {
				null == H[a].weight && (H[a].weight = 1);
				for (var I = 0, i = 0; i < H[a].eventList.length; i++) {
					I += H[a].eventList[i].weight
				}
				H[a].importance = I * H[a].weight
			}
			H.sort(v);
			for (var J = Number.MAX_VALUE, t = 0, a = 0; a < H.length; a++) {
				for (var i = 0; i < H[a].eventList.length; i++) {
					for (var z = 0; z < H[a].eventList[i].evolution.length; z++) {
						var n = H[a].eventList[i].evolution[z].timeScale;
						J = Math.min(J, n), t = Math.max(t, n)
					}
				}
			}
			for (var F = o(Math.floor(J), Math.ceil(t)), K = 0, a = 0; a < H.length; a++) {
				for (var i = 0; i < H[a].eventList.length; i++) {
					var G = H[a].eventList[i];
					G.time = [], G.value = [];
					for (var z = 0; z < H[a].eventList[i].evolution.length; z++) {
						G.time.push(H[a].eventList[i].evolution[z].timeScale), G.value.push(H[a].eventList[i].evolution[z].valueScale)
					}
					var D = C(G.value, Math.max.apply(Math, G.value)),
						q = k(F, G.time[D], G.time[D + 1]),
						z = 0;
					for (G.y = q + G.value[D] / 2 + E, z = 0; z < G.time.length - 1; z++) {
						var L = k(F, G.time[z], G.time[z + 1]);
						G.y - G.value[z] / 2 - E < L && (G.y = L + G.value[z] / 2 + E)
					}
					var L = k(F, G.time[z], G.time[z] + B);
					for (G.y - G.value[z] / 2 - E < L && (G.y = L + G.value[z] / 2 + E), H[a].y = G.y, K = Math.max(K, G.y + G.value[D] / 2), z = 0; z < G.time.length - 1; z++) {
						j(F, G.time[z], G.time[z + 1], G.y + G.value[z] / 2)
					}
					j(F, G.time[z], G.time[z] + B, G.y + G.value[z] / 2)
				}
			}
			l(H, w, K, E)
		}

		function l(z, B, u, x) {
			for (var A = B.y, q = (B.height - x) / u, p = 0; p < z.length; p++) {
				z[p].y = z[p].y * q + A;
				for (var C = z[p].eventList, w = 0; w < C.length; w++) {
					C[w].y = C[w].y * q + A;
					for (var y = C[w].evolution, v = 0; v < y.length; v++) {
						y[v].valueScale *= 1 * q
					}
				}
			}
		}

		function o(r, q) {
			var p = {
				left: r,
				right: q,
				leftChild: null,
				rightChild: null,
				maxValue: 0
			};
			if (q > r + 1) {
				var n = Math.round((r + q) / 2);
				p.leftChild = o(r, n), p.rightChild = o(n, q)
			}
			return p
		}

		function k(v, p, x) {
			if (1 > x - p) {
				return 0
			}
			var i = Math.round((v.left + v.right) / 2),
				w = 0;
			if (p == v.left && x == v.right) {
				w = v.maxValue
			} else {
				if (i >= x && null != v.leftChild) {
					w = k(v.leftChild, p, x)
				} else {
					if (p >= i && null != v.rightChild) {
						w = k(v.rightChild, p, x)
					} else {
						var u = 0,
							q = 0;
						null != v.leftChild && (u = k(v.leftChild, p, i)), null != v.rightChild && (q = k(v.rightChild, i, x)), w = u > q ? u : q
					}
				}
			}
			return w
		}

		function j(q, p, s, a) {
			if (null != q) {
				var r = Math.round((q.left + q.right) / 2);
				q.maxValue = q.maxValue > a ? q.maxValue : a, (Math.floor(10 * p) != Math.floor(10 * q.left) || Math.floor(10 * s) != Math.floor(10 * q.right)) && (r >= s ? j(q.leftChild, p, s, a) : p >= r ? j(q.rightChild, p, s, a) : (j(q.leftChild, p, r, a), j(q.rightChild, r, s, a)))
			}
		}
		return m
	});
	var c = d("zrender");
	c.tool = {
		color: d("zrender/tool/color"),
		math: d("zrender/tool/math"),
		util: d("zrender/tool/util"),
		vector: d("zrender/tool/vector"),
		area: d("zrender/tool/area"),
		event: d("zrender/tool/event")
	}, c.animation = {
		Animation: d("zrender/animation/Animation"),
		Cip: d("zrender/animation/Clip"),
		easing: d("zrender/animation/easing")
	};
	var b = d("echarts");
	b.config = d("echarts/config"), b.util = {
		mapData: {
			params: d("echarts/util/mapData/params")
		}
	}, d("echarts/chart/line"), d("echarts/chart/bar"), d("echarts/chart/scatter"), d("echarts/chart/k"), d("echarts/chart/pie"), d("echarts/chart/radar"), d("echarts/chart/chord"), d("echarts/chart/force"), d("echarts/chart/map"), d("echarts/chart/gauge"), d("echarts/chart/funnel"), d("echarts/chart/eventRiver"), f.echarts = b, f.zrender = c
}(window);